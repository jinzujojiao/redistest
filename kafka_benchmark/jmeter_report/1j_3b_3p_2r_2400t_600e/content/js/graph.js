/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3711.0, "series": [{"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 8.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 12.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 14.0], [4.4, 14.0], [4.5, 14.0], [4.6, 14.0], [4.7, 14.0], [4.8, 15.0], [4.9, 15.0], [5.0, 15.0], [5.1, 15.0], [5.2, 15.0], [5.3, 16.0], [5.4, 16.0], [5.5, 16.0], [5.6, 16.0], [5.7, 16.0], [5.8, 16.0], [5.9, 17.0], [6.0, 17.0], [6.1, 17.0], [6.2, 17.0], [6.3, 17.0], [6.4, 18.0], [6.5, 18.0], [6.6, 18.0], [6.7, 18.0], [6.8, 18.0], [6.9, 18.0], [7.0, 19.0], [7.1, 19.0], [7.2, 19.0], [7.3, 19.0], [7.4, 19.0], [7.5, 19.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 20.0], [8.0, 20.0], [8.1, 21.0], [8.2, 21.0], [8.3, 21.0], [8.4, 21.0], [8.5, 21.0], [8.6, 21.0], [8.7, 22.0], [8.8, 22.0], [8.9, 22.0], [9.0, 22.0], [9.1, 22.0], [9.2, 22.0], [9.3, 23.0], [9.4, 23.0], [9.5, 23.0], [9.6, 23.0], [9.7, 23.0], [9.8, 23.0], [9.9, 23.0], [10.0, 24.0], [10.1, 24.0], [10.2, 24.0], [10.3, 24.0], [10.4, 24.0], [10.5, 24.0], [10.6, 25.0], [10.7, 25.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 25.0], [11.2, 25.0], [11.3, 26.0], [11.4, 26.0], [11.5, 26.0], [11.6, 26.0], [11.7, 26.0], [11.8, 26.0], [11.9, 27.0], [12.0, 27.0], [12.1, 27.0], [12.2, 27.0], [12.3, 27.0], [12.4, 27.0], [12.5, 27.0], [12.6, 28.0], [12.7, 28.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 28.0], [13.2, 28.0], [13.3, 29.0], [13.4, 29.0], [13.5, 29.0], [13.6, 29.0], [13.7, 29.0], [13.8, 29.0], [13.9, 29.0], [14.0, 30.0], [14.1, 30.0], [14.2, 30.0], [14.3, 30.0], [14.4, 30.0], [14.5, 30.0], [14.6, 30.0], [14.7, 31.0], [14.8, 31.0], [14.9, 31.0], [15.0, 31.0], [15.1, 31.0], [15.2, 31.0], [15.3, 31.0], [15.4, 31.0], [15.5, 32.0], [15.6, 32.0], [15.7, 32.0], [15.8, 32.0], [15.9, 32.0], [16.0, 32.0], [16.1, 32.0], [16.2, 33.0], [16.3, 33.0], [16.4, 33.0], [16.5, 33.0], [16.6, 33.0], [16.7, 33.0], [16.8, 33.0], [16.9, 34.0], [17.0, 34.0], [17.1, 34.0], [17.2, 34.0], [17.3, 34.0], [17.4, 34.0], [17.5, 34.0], [17.6, 34.0], [17.7, 35.0], [17.8, 35.0], [17.9, 35.0], [18.0, 35.0], [18.1, 35.0], [18.2, 35.0], [18.3, 35.0], [18.4, 36.0], [18.5, 36.0], [18.6, 36.0], [18.7, 36.0], [18.8, 36.0], [18.9, 36.0], [19.0, 36.0], [19.1, 36.0], [19.2, 37.0], [19.3, 37.0], [19.4, 37.0], [19.5, 37.0], [19.6, 37.0], [19.7, 37.0], [19.8, 37.0], [19.9, 37.0], [20.0, 38.0], [20.1, 38.0], [20.2, 38.0], [20.3, 38.0], [20.4, 38.0], [20.5, 38.0], [20.6, 38.0], [20.7, 39.0], [20.8, 39.0], [20.9, 39.0], [21.0, 39.0], [21.1, 39.0], [21.2, 39.0], [21.3, 39.0], [21.4, 39.0], [21.5, 40.0], [21.6, 40.0], [21.7, 40.0], [21.8, 40.0], [21.9, 40.0], [22.0, 40.0], [22.1, 40.0], [22.2, 40.0], [22.3, 41.0], [22.4, 41.0], [22.5, 41.0], [22.6, 41.0], [22.7, 41.0], [22.8, 41.0], [22.9, 41.0], [23.0, 41.0], [23.1, 42.0], [23.2, 42.0], [23.3, 42.0], [23.4, 42.0], [23.5, 42.0], [23.6, 42.0], [23.7, 42.0], [23.8, 42.0], [23.9, 43.0], [24.0, 43.0], [24.1, 43.0], [24.2, 43.0], [24.3, 43.0], [24.4, 43.0], [24.5, 43.0], [24.6, 43.0], [24.7, 44.0], [24.8, 44.0], [24.9, 44.0], [25.0, 44.0], [25.1, 44.0], [25.2, 44.0], [25.3, 44.0], [25.4, 44.0], [25.5, 45.0], [25.6, 45.0], [25.7, 45.0], [25.8, 45.0], [25.9, 45.0], [26.0, 45.0], [26.1, 45.0], [26.2, 45.0], [26.3, 46.0], [26.4, 46.0], [26.5, 46.0], [26.6, 46.0], [26.7, 46.0], [26.8, 46.0], [26.9, 46.0], [27.0, 46.0], [27.1, 47.0], [27.2, 47.0], [27.3, 47.0], [27.4, 47.0], [27.5, 47.0], [27.6, 47.0], [27.7, 47.0], [27.8, 47.0], [27.9, 48.0], [28.0, 48.0], [28.1, 48.0], [28.2, 48.0], [28.3, 48.0], [28.4, 48.0], [28.5, 48.0], [28.6, 48.0], [28.7, 49.0], [28.8, 49.0], [28.9, 49.0], [29.0, 49.0], [29.1, 49.0], [29.2, 49.0], [29.3, 49.0], [29.4, 49.0], [29.5, 50.0], [29.6, 50.0], [29.7, 50.0], [29.8, 50.0], [29.9, 50.0], [30.0, 50.0], [30.1, 50.0], [30.2, 50.0], [30.3, 51.0], [30.4, 51.0], [30.5, 51.0], [30.6, 51.0], [30.7, 51.0], [30.8, 51.0], [30.9, 51.0], [31.0, 51.0], [31.1, 52.0], [31.2, 52.0], [31.3, 52.0], [31.4, 52.0], [31.5, 52.0], [31.6, 52.0], [31.7, 52.0], [31.8, 52.0], [31.9, 53.0], [32.0, 53.0], [32.1, 53.0], [32.2, 53.0], [32.3, 53.0], [32.4, 53.0], [32.5, 53.0], [32.6, 53.0], [32.7, 54.0], [32.8, 54.0], [32.9, 54.0], [33.0, 54.0], [33.1, 54.0], [33.2, 54.0], [33.3, 54.0], [33.4, 54.0], [33.5, 54.0], [33.6, 55.0], [33.7, 55.0], [33.8, 55.0], [33.9, 55.0], [34.0, 55.0], [34.1, 55.0], [34.2, 55.0], [34.3, 55.0], [34.4, 56.0], [34.5, 56.0], [34.6, 56.0], [34.7, 56.0], [34.8, 56.0], [34.9, 56.0], [35.0, 56.0], [35.1, 56.0], [35.2, 57.0], [35.3, 57.0], [35.4, 57.0], [35.5, 57.0], [35.6, 57.0], [35.7, 57.0], [35.8, 57.0], [35.9, 57.0], [36.0, 58.0], [36.1, 58.0], [36.2, 58.0], [36.3, 58.0], [36.4, 58.0], [36.5, 58.0], [36.6, 58.0], [36.7, 58.0], [36.8, 58.0], [36.9, 59.0], [37.0, 59.0], [37.1, 59.0], [37.2, 59.0], [37.3, 59.0], [37.4, 59.0], [37.5, 59.0], [37.6, 59.0], [37.7, 60.0], [37.8, 60.0], [37.9, 60.0], [38.0, 60.0], [38.1, 60.0], [38.2, 60.0], [38.3, 60.0], [38.4, 60.0], [38.5, 61.0], [38.6, 61.0], [38.7, 61.0], [38.8, 61.0], [38.9, 61.0], [39.0, 61.0], [39.1, 61.0], [39.2, 61.0], [39.3, 61.0], [39.4, 62.0], [39.5, 62.0], [39.6, 62.0], [39.7, 62.0], [39.8, 62.0], [39.9, 62.0], [40.0, 62.0], [40.1, 62.0], [40.2, 63.0], [40.3, 63.0], [40.4, 63.0], [40.5, 63.0], [40.6, 63.0], [40.7, 63.0], [40.8, 63.0], [40.9, 63.0], [41.0, 63.0], [41.1, 64.0], [41.2, 64.0], [41.3, 64.0], [41.4, 64.0], [41.5, 64.0], [41.6, 64.0], [41.7, 64.0], [41.8, 64.0], [41.9, 64.0], [42.0, 65.0], [42.1, 65.0], [42.2, 65.0], [42.3, 65.0], [42.4, 65.0], [42.5, 65.0], [42.6, 65.0], [42.7, 65.0], [42.8, 66.0], [42.9, 66.0], [43.0, 66.0], [43.1, 66.0], [43.2, 66.0], [43.3, 66.0], [43.4, 66.0], [43.5, 66.0], [43.6, 66.0], [43.7, 67.0], [43.8, 67.0], [43.9, 67.0], [44.0, 67.0], [44.1, 67.0], [44.2, 67.0], [44.3, 67.0], [44.4, 67.0], [44.5, 67.0], [44.6, 68.0], [44.7, 68.0], [44.8, 68.0], [44.9, 68.0], [45.0, 68.0], [45.1, 68.0], [45.2, 68.0], [45.3, 68.0], [45.4, 69.0], [45.5, 69.0], [45.6, 69.0], [45.7, 69.0], [45.8, 69.0], [45.9, 69.0], [46.0, 69.0], [46.1, 69.0], [46.2, 69.0], [46.3, 70.0], [46.4, 70.0], [46.5, 70.0], [46.6, 70.0], [46.7, 70.0], [46.8, 70.0], [46.9, 70.0], [47.0, 70.0], [47.1, 70.0], [47.2, 71.0], [47.3, 71.0], [47.4, 71.0], [47.5, 71.0], [47.6, 71.0], [47.7, 71.0], [47.8, 71.0], [47.9, 71.0], [48.0, 71.0], [48.1, 72.0], [48.2, 72.0], [48.3, 72.0], [48.4, 72.0], [48.5, 72.0], [48.6, 72.0], [48.7, 72.0], [48.8, 72.0], [48.9, 72.0], [49.0, 73.0], [49.1, 73.0], [49.2, 73.0], [49.3, 73.0], [49.4, 73.0], [49.5, 73.0], [49.6, 73.0], [49.7, 73.0], [49.8, 73.0], [49.9, 74.0], [50.0, 74.0], [50.1, 74.0], [50.2, 74.0], [50.3, 74.0], [50.4, 74.0], [50.5, 74.0], [50.6, 74.0], [50.7, 74.0], [50.8, 75.0], [50.9, 75.0], [51.0, 75.0], [51.1, 75.0], [51.2, 75.0], [51.3, 75.0], [51.4, 75.0], [51.5, 75.0], [51.6, 75.0], [51.7, 76.0], [51.8, 76.0], [51.9, 76.0], [52.0, 76.0], [52.1, 76.0], [52.2, 76.0], [52.3, 76.0], [52.4, 76.0], [52.5, 76.0], [52.6, 77.0], [52.7, 77.0], [52.8, 77.0], [52.9, 77.0], [53.0, 77.0], [53.1, 77.0], [53.2, 77.0], [53.3, 77.0], [53.4, 77.0], [53.5, 78.0], [53.6, 78.0], [53.7, 78.0], [53.8, 78.0], [53.9, 78.0], [54.0, 78.0], [54.1, 78.0], [54.2, 78.0], [54.3, 78.0], [54.4, 79.0], [54.5, 79.0], [54.6, 79.0], [54.7, 79.0], [54.8, 79.0], [54.9, 79.0], [55.0, 79.0], [55.1, 79.0], [55.2, 79.0], [55.3, 80.0], [55.4, 80.0], [55.5, 80.0], [55.6, 80.0], [55.7, 80.0], [55.8, 80.0], [55.9, 80.0], [56.0, 80.0], [56.1, 81.0], [56.2, 81.0], [56.3, 81.0], [56.4, 81.0], [56.5, 81.0], [56.6, 81.0], [56.7, 81.0], [56.8, 81.0], [56.9, 81.0], [57.0, 82.0], [57.1, 82.0], [57.2, 82.0], [57.3, 82.0], [57.4, 82.0], [57.5, 82.0], [57.6, 82.0], [57.7, 82.0], [57.8, 82.0], [57.9, 83.0], [58.0, 83.0], [58.1, 83.0], [58.2, 83.0], [58.3, 83.0], [58.4, 83.0], [58.5, 83.0], [58.6, 83.0], [58.7, 83.0], [58.8, 84.0], [58.9, 84.0], [59.0, 84.0], [59.1, 84.0], [59.2, 84.0], [59.3, 84.0], [59.4, 84.0], [59.5, 84.0], [59.6, 84.0], [59.7, 85.0], [59.8, 85.0], [59.9, 85.0], [60.0, 85.0], [60.1, 85.0], [60.2, 85.0], [60.3, 85.0], [60.4, 85.0], [60.5, 86.0], [60.6, 86.0], [60.7, 86.0], [60.8, 86.0], [60.9, 86.0], [61.0, 86.0], [61.1, 86.0], [61.2, 86.0], [61.3, 86.0], [61.4, 87.0], [61.5, 87.0], [61.6, 87.0], [61.7, 87.0], [61.8, 87.0], [61.9, 87.0], [62.0, 87.0], [62.1, 87.0], [62.2, 87.0], [62.3, 88.0], [62.4, 88.0], [62.5, 88.0], [62.6, 88.0], [62.7, 88.0], [62.8, 88.0], [62.9, 88.0], [63.0, 88.0], [63.1, 89.0], [63.2, 89.0], [63.3, 89.0], [63.4, 89.0], [63.5, 89.0], [63.6, 89.0], [63.7, 89.0], [63.8, 89.0], [63.9, 89.0], [64.0, 90.0], [64.1, 90.0], [64.2, 90.0], [64.3, 90.0], [64.4, 90.0], [64.5, 90.0], [64.6, 90.0], [64.7, 90.0], [64.8, 91.0], [64.9, 91.0], [65.0, 91.0], [65.1, 91.0], [65.2, 91.0], [65.3, 91.0], [65.4, 91.0], [65.5, 91.0], [65.6, 91.0], [65.7, 92.0], [65.8, 92.0], [65.9, 92.0], [66.0, 92.0], [66.1, 92.0], [66.2, 92.0], [66.3, 92.0], [66.4, 92.0], [66.5, 93.0], [66.6, 93.0], [66.7, 93.0], [66.8, 93.0], [66.9, 93.0], [67.0, 93.0], [67.1, 93.0], [67.2, 93.0], [67.3, 94.0], [67.4, 94.0], [67.5, 94.0], [67.6, 94.0], [67.7, 94.0], [67.8, 94.0], [67.9, 94.0], [68.0, 94.0], [68.1, 95.0], [68.2, 95.0], [68.3, 95.0], [68.4, 95.0], [68.5, 95.0], [68.6, 95.0], [68.7, 95.0], [68.8, 95.0], [68.9, 96.0], [69.0, 96.0], [69.1, 96.0], [69.2, 96.0], [69.3, 96.0], [69.4, 96.0], [69.5, 96.0], [69.6, 97.0], [69.7, 97.0], [69.8, 97.0], [69.9, 97.0], [70.0, 97.0], [70.1, 97.0], [70.2, 97.0], [70.3, 97.0], [70.4, 98.0], [70.5, 98.0], [70.6, 98.0], [70.7, 98.0], [70.8, 98.0], [70.9, 98.0], [71.0, 98.0], [71.1, 99.0], [71.2, 99.0], [71.3, 99.0], [71.4, 99.0], [71.5, 99.0], [71.6, 99.0], [71.7, 99.0], [71.8, 99.0], [71.9, 100.0], [72.0, 100.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 101.0], [72.7, 101.0], [72.8, 101.0], [72.9, 101.0], [73.0, 101.0], [73.1, 101.0], [73.2, 101.0], [73.3, 102.0], [73.4, 102.0], [73.5, 102.0], [73.6, 102.0], [73.7, 102.0], [73.8, 102.0], [73.9, 103.0], [74.0, 103.0], [74.1, 103.0], [74.2, 103.0], [74.3, 103.0], [74.4, 103.0], [74.5, 103.0], [74.6, 104.0], [74.7, 104.0], [74.8, 104.0], [74.9, 104.0], [75.0, 104.0], [75.1, 104.0], [75.2, 105.0], [75.3, 105.0], [75.4, 105.0], [75.5, 105.0], [75.6, 105.0], [75.7, 105.0], [75.8, 106.0], [75.9, 106.0], [76.0, 106.0], [76.1, 106.0], [76.2, 106.0], [76.3, 106.0], [76.4, 107.0], [76.5, 107.0], [76.6, 107.0], [76.7, 107.0], [76.8, 107.0], [76.9, 107.0], [77.0, 108.0], [77.1, 108.0], [77.2, 108.0], [77.3, 108.0], [77.4, 108.0], [77.5, 108.0], [77.6, 109.0], [77.7, 109.0], [77.8, 109.0], [77.9, 109.0], [78.0, 109.0], [78.1, 110.0], [78.2, 110.0], [78.3, 110.0], [78.4, 110.0], [78.5, 110.0], [78.6, 111.0], [78.7, 111.0], [78.8, 111.0], [78.9, 111.0], [79.0, 111.0], [79.1, 111.0], [79.2, 112.0], [79.3, 112.0], [79.4, 112.0], [79.5, 112.0], [79.6, 112.0], [79.7, 113.0], [79.8, 113.0], [79.9, 113.0], [80.0, 113.0], [80.1, 114.0], [80.2, 114.0], [80.3, 114.0], [80.4, 114.0], [80.5, 114.0], [80.6, 115.0], [80.7, 115.0], [80.8, 115.0], [80.9, 115.0], [81.0, 115.0], [81.1, 116.0], [81.2, 116.0], [81.3, 116.0], [81.4, 116.0], [81.5, 117.0], [81.6, 117.0], [81.7, 117.0], [81.8, 117.0], [81.9, 118.0], [82.0, 118.0], [82.1, 118.0], [82.2, 118.0], [82.3, 119.0], [82.4, 119.0], [82.5, 119.0], [82.6, 119.0], [82.7, 120.0], [82.8, 120.0], [82.9, 120.0], [83.0, 120.0], [83.1, 121.0], [83.2, 121.0], [83.3, 121.0], [83.4, 121.0], [83.5, 122.0], [83.6, 122.0], [83.7, 122.0], [83.8, 123.0], [83.9, 123.0], [84.0, 123.0], [84.1, 123.0], [84.2, 124.0], [84.3, 124.0], [84.4, 124.0], [84.5, 125.0], [84.6, 125.0], [84.7, 125.0], [84.8, 126.0], [84.9, 126.0], [85.0, 126.0], [85.1, 127.0], [85.2, 127.0], [85.3, 127.0], [85.4, 127.0], [85.5, 128.0], [85.6, 128.0], [85.7, 129.0], [85.8, 129.0], [85.9, 129.0], [86.0, 130.0], [86.1, 130.0], [86.2, 130.0], [86.3, 131.0], [86.4, 131.0], [86.5, 131.0], [86.6, 132.0], [86.7, 132.0], [86.8, 133.0], [86.9, 133.0], [87.0, 133.0], [87.1, 134.0], [87.2, 134.0], [87.3, 135.0], [87.4, 135.0], [87.5, 136.0], [87.6, 136.0], [87.7, 137.0], [87.8, 137.0], [87.9, 137.0], [88.0, 138.0], [88.1, 138.0], [88.2, 139.0], [88.3, 139.0], [88.4, 140.0], [88.5, 140.0], [88.6, 141.0], [88.7, 141.0], [88.8, 142.0], [88.9, 143.0], [89.0, 143.0], [89.1, 144.0], [89.2, 144.0], [89.3, 145.0], [89.4, 145.0], [89.5, 146.0], [89.6, 147.0], [89.7, 147.0], [89.8, 148.0], [89.9, 149.0], [90.0, 149.0], [90.1, 150.0], [90.2, 151.0], [90.3, 151.0], [90.4, 152.0], [90.5, 153.0], [90.6, 153.0], [90.7, 154.0], [90.8, 155.0], [90.9, 156.0], [91.0, 157.0], [91.1, 157.0], [91.2, 158.0], [91.3, 159.0], [91.4, 160.0], [91.5, 161.0], [91.6, 162.0], [91.7, 163.0], [91.8, 164.0], [91.9, 165.0], [92.0, 166.0], [92.1, 167.0], [92.2, 168.0], [92.3, 169.0], [92.4, 170.0], [92.5, 171.0], [92.6, 172.0], [92.7, 173.0], [92.8, 174.0], [92.9, 176.0], [93.0, 177.0], [93.1, 178.0], [93.2, 179.0], [93.3, 181.0], [93.4, 182.0], [93.5, 183.0], [93.6, 185.0], [93.7, 186.0], [93.8, 188.0], [93.9, 189.0], [94.0, 191.0], [94.1, 192.0], [94.2, 194.0], [94.3, 196.0], [94.4, 197.0], [94.5, 199.0], [94.6, 201.0], [94.7, 203.0], [94.8, 205.0], [94.9, 207.0], [95.0, 209.0], [95.1, 211.0], [95.2, 214.0], [95.3, 216.0], [95.4, 219.0], [95.5, 221.0], [95.6, 224.0], [95.7, 226.0], [95.8, 229.0], [95.9, 232.0], [96.0, 235.0], [96.1, 238.0], [96.2, 242.0], [96.3, 245.0], [96.4, 249.0], [96.5, 253.0], [96.6, 257.0], [96.7, 262.0], [96.8, 266.0], [96.9, 271.0], [97.0, 276.0], [97.1, 280.0], [97.2, 285.0], [97.3, 289.0], [97.4, 293.0], [97.5, 297.0], [97.6, 300.0], [97.7, 304.0], [97.8, 307.0], [97.9, 311.0], [98.0, 314.0], [98.1, 317.0], [98.2, 321.0], [98.3, 324.0], [98.4, 328.0], [98.5, 332.0], [98.6, 336.0], [98.7, 340.0], [98.8, 345.0], [98.9, 351.0], [99.0, 357.0], [99.1, 363.0], [99.2, 371.0], [99.3, 381.0], [99.4, 394.0], [99.5, 411.0], [99.6, 435.0], [99.7, 470.0], [99.8, 545.0], [99.9, 692.0]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4913406.0, "series": [{"data": [[0.0, 4913406.0], [600.0, 4109.0], [700.0, 2720.0], [800.0, 799.0], [900.0, 532.0], [1000.0, 412.0], [1100.0, 581.0], [1200.0, 138.0], [1300.0, 88.0], [1400.0, 75.0], [1500.0, 85.0], [100.0, 1553764.0], [1600.0, 100.0], [1700.0, 89.0], [1800.0, 96.0], [1900.0, 112.0], [2000.0, 118.0], [2100.0, 38.0], [2200.0, 3.0], [2300.0, 1.0], [2400.0, 200.0], [2500.0, 3.0], [2700.0, 344.0], [2800.0, 67.0], [3000.0, 1.0], [200.0, 209172.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 1.0], [300.0, 127590.0], [400.0, 21589.0], [500.0, 6280.0]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1261.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6825604.0, "series": [{"data": [[0.0, 6825604.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 15651.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1261.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 731.554912735038, "minX": 1.62666486E12, "maxY": 2400.0, "series": [{"data": [[1.62666522E12, 880.7273163366926], [1.62666504E12, 2400.0], [1.6266651E12, 2400.0], [1.62666492E12, 2295.118942964975], [1.62666498E12, 2400.0], [1.62666486E12, 731.554912735038], [1.62666516E12, 1851.5456039319959]], "isOverall": false, "label": "role1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666522E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 2.0, "maxY": 1351.6494345718916, "series": [{"data": [[2.0, 3.0], [3.0, 2.0], [4.0, 1.0], [5.0, 2.0], [6.0, 2.5], [7.0, 4.0], [8.0, 2.25], [9.0, 7.0], [11.0, 2.6666666666666665], [14.0, 8.2], [17.0, 24.0], [18.0, 25.0], [19.0, 9.0], [20.0, 9.0], [21.0, 24.0], [22.0, 24.0], [23.0, 21.0], [24.0, 14.666666666666666], [25.0, 21.0], [27.0, 8.333333333333334], [29.0, 7.500000000000001], [30.0, 3.5], [31.0, 11.166666666666668], [32.0, 11.5], [35.0, 11.0], [34.0, 18.0], [37.0, 8.8], [39.0, 17.0], [38.0, 17.0], [41.0, 3.8333333333333335], [43.0, 16.0], [42.0, 16.0], [45.0, 7.5], [44.0, 14.5], [47.0, 14.0], [46.0, 14.0], [49.0, 13.0], [48.0, 12.0], [51.0, 11.0], [50.0, 11.75], [53.0, 15.0], [52.0, 11.333333333333334], [55.0, 5.333333333333333], [54.0, 9.5], [57.0, 5.0], [56.0, 5.8], [59.0, 5.0], [58.0, 5.5], [61.0, 6.0], [60.0, 6.0], [63.0, 6.5], [62.0, 7.272727272727273], [67.0, 11.0], [66.0, 9.833333333333334], [65.0, 10.0], [71.0, 13.0], [70.0, 12.5], [69.0, 12.5], [68.0, 14.0], [75.0, 14.0], [73.0, 13.5], [72.0, 14.25], [79.0, 12.714285714285714], [78.0, 13.0], [77.0, 13.285714285714286], [76.0, 12.8], [83.0, 11.066666666666666], [82.0, 10.857142857142858], [81.0, 11.142857142857144], [80.0, 14.0], [87.0, 5.0], [86.0, 5.0], [85.0, 5.0], [84.0, 5.8], [91.0, 6.8], [90.0, 5.8], [89.0, 5.0], [88.0, 5.799999999999998], [95.0, 6.0], [94.0, 8.923076923076923], [93.0, 8.5], [92.0, 7.000000000000001], [99.0, 7.125000000000001], [97.0, 6.75], [103.0, 5.222222222222221], [102.0, 5.875], [101.0, 8.0], [100.0, 4.6], [106.0, 12.333333333333332], [105.0, 10.136363636363638], [104.0, 7.0], [111.0, 20.142857142857142], [110.0, 18.875], [109.0, 10.125], [108.0, 9.0], [115.0, 26.2], [114.0, 26.8], [113.0, 12.5], [119.0, 27.0], [118.0, 26.88235294117647], [117.0, 26.75], [116.0, 27.0], [123.0, 21.4], [122.0, 23.555555555555557], [120.0, 27.0], [127.0, 11.620689655172416], [126.0, 17.694444444444446], [124.0, 20.333333333333332], [135.0, 10.444444444444445], [134.0, 10.5], [133.0, 9.0], [132.0, 8.714285714285715], [131.0, 8.0], [130.0, 7.222222222222221], [129.0, 6.625], [128.0, 9.210526315789474], [143.0, 11.0], [142.0, 12.0], [141.0, 10.666666666666666], [140.0, 9.8], [139.0, 10.6875], [138.0, 9.636363636363637], [137.0, 10.0], [136.0, 11.125], [150.0, 9.0], [149.0, 10.833333333333332], [148.0, 10.6], [147.0, 12.076923076923077], [146.0, 14.0], [145.0, 10.0], [144.0, 11.25], [159.0, 10.333333333333332], [157.0, 17.454545454545453], [155.0, 9.0], [154.0, 9.166666666666666], [153.0, 9.818181818181817], [152.0, 8.4], [167.0, 12.333333333333334], [166.0, 13.5], [165.0, 12.999999999999998], [164.0, 12.625], [163.0, 13.625], [162.0, 10.0], [161.0, 11.363636363636363], [160.0, 10.0], [175.0, 7.833333333333334], [174.0, 5.0], [173.0, 6.631578947368421], [172.0, 7.333333333333333], [171.0, 12.545454545454545], [170.0, 12.136363636363635], [169.0, 12.75], [168.0, 13.0], [183.0, 9.5], [182.0, 10.000000000000002], [180.0, 11.88888888888889], [179.0, 6.0], [178.0, 10.599999999999998], [177.0, 9.5], [176.0, 6.9], [191.0, 114.19083969465662], [190.0, 14.294117647058826], [189.0, 8.833333333333334], [188.0, 11.722222222222221], [187.0, 10.785714285714286], [186.0, 10.375], [185.0, 9.76923076923077], [184.0, 10.0], [195.0, 8.333333333333334], [196.0, 13.6], [197.0, 8.0], [198.0, 8.642857142857144], [199.0, 13.1], [194.0, 12.0], [193.0, 11.687500000000002], [192.0, 11.666666666666666], [200.0, 4.5], [203.0, 5.142857142857142], [204.0, 29.679999999999993], [206.0, 16.769230769230766], [207.0, 62.166666666666664], [205.0, 13.666666666666666], [202.0, 5.090909090909091], [201.0, 14.142857142857142], [210.0, 109.65517241379311], [214.0, 10.100000000000001], [215.0, 11.210526315789474], [213.0, 10.666666666666666], [212.0, 11.142857142857142], [211.0, 11.294117647058824], [209.0, 14.5], [208.0, 10.333333333333332], [216.0, 8.999999999999998], [220.0, 45.62499999999999], [223.0, 14.333333333333334], [222.0, 15.857142857142858], [221.0, 14.5], [219.0, 12.181818181818182], [217.0, 11.5], [228.0, 12.833333333333332], [230.0, 10.0], [231.0, 14.0], [229.0, 13.777777777777775], [227.0, 13.0], [226.0, 13.25], [225.0, 13.0], [224.0, 13.076923076923078], [232.0, 11.0], [234.0, 20.344827586206897], [236.0, 30.0], [237.0, 57.01290322580641], [239.0, 15.083333333333334], [235.0, 14.666666666666668], [241.0, 17.5], [243.0, 18.84375], [244.0, 23.0], [245.0, 22.733333333333334], [247.0, 12.735555555555559], [246.0, 15.25], [242.0, 15.187500000000002], [240.0, 15.5], [254.0, 54.28999999999998], [255.0, 34.36904761904759], [253.0, 77.02631578947367], [252.0, 15.333333333333334], [251.0, 15.0], [250.0, 14.703703703703702], [249.0, 14.8], [248.0, 15.11111111111111], [256.0, 8.296296296296296], [257.0, 12.68867924528302], [263.0, 25.809343434343436], [262.0, 32.07692307692308], [261.0, 28.21428571428571], [260.0, 37.99999999999999], [259.0, 36.699999999999996], [258.0, 33.107142857142854], [267.0, 19.23076923076923], [269.0, 15.309352517985609], [270.0, 11.223880597014926], [271.0, 12.581818181818186], [265.0, 14.2], [264.0, 16.0], [266.0, 33.099999999999994], [268.0, 12.055172413793098], [274.0, 9.160919540229884], [273.0, 16.5], [275.0, 9.872807017543854], [285.0, 29.22222222222222], [284.0, 36.32500000000001], [280.0, 307.4166666666667], [287.0, 73.27906976744185], [286.0, 24.363573407202203], [276.0, 5.11834319526627], [277.0, 12.685714285714287], [278.0, 19.21743991056459], [279.0, 46.15384615384615], [272.0, 20.466666666666665], [282.0, 31.330415754923436], [283.0, 21.875], [281.0, 22.333333333333336], [291.0, 8.0], [289.0, 38.942857142857136], [288.0, 43.56343283582089], [295.0, 14.687500000000002], [290.0, 40.41935483870967], [292.0, 13.749999999999998], [293.0, 26.5], [294.0, 6.482758620689655], [296.0, 10.804597701149426], [303.0, 25.714285714285715], [300.0, 37.68158436213997], [301.0, 26.0], [302.0, 47.28303964757709], [297.0, 16.058661778185137], [298.0, 18.364902506963784], [299.0, 34.25000000000001], [305.0, 39.712863070539385], [304.0, 16.230769230769234], [306.0, 22.311111111111114], [307.0, 20.575342465753423], [308.0, 30.86486486486486], [309.0, 44.38986556359876], [310.0, 45.99718309859151], [311.0, 9.747368421052618], [312.0, 8.75], [319.0, 61.40740740740739], [317.0, 47.062499999999986], [316.0, 146.33333333333331], [318.0, 122.94642857142861], [313.0, 21.8], [314.0, 15.300000000000002], [315.0, 26.25], [335.0, 24.5], [321.0, 30.1864512119329], [320.0, 23.48387096774198], [329.0, 25.52731092436977], [330.0, 17.27916666666666], [331.0, 31.0], [328.0, 34.386363636363626], [327.0, 28.222222222222218], [326.0, 21.90909090909091], [325.0, 30.0], [324.0, 31.0], [334.0, 395.79545454545445], [333.0, 227.49999999999997], [332.0, 629.7272727272726], [323.0, 32.0], [322.0, 30.499999999999996], [339.0, 34.172202166065084], [338.0, 29.319999999999997], [337.0, 32.07142857142858], [336.0, 32.0], [344.0, 29.590534241663715], [350.0, 21.9047619047619], [351.0, 74.77777777777777], [348.0, 51.933333333333344], [349.0, 55.27272727272728], [343.0, 38.81944444444444], [346.0, 26.003058103975548], [347.0, 40.809958190801964], [342.0, 40.74285714285714], [341.0, 29.479166666666654], [340.0, 26.77777777777778], [345.0, 17.09090909090909], [353.0, 47.07692307692307], [352.0, 75.23076923076921], [354.0, 49.2], [355.0, 48.93548387096773], [356.0, 43.55555555555555], [357.0, 68.58928571428572], [358.0, 67.9230769230769], [359.0, 97.3157894736842], [360.0, 52.71281296023566], [361.0, 28.0], [364.0, 39.258954302181934], [366.0, 38.58536585365854], [365.0, 20.3], [367.0, 24.612903225806452], [363.0, 22.57142857142857], [362.0, 17.833333333333332], [370.0, 21.4375], [372.0, 45.953488372093034], [373.0, 25.382712278558337], [371.0, 33.349999999999994], [381.0, 39.75], [380.0, 21.263157894736846], [382.0, 51.28768577494693], [383.0, 11.816326530612244], [369.0, 33.30000000000001], [368.0, 17.571428571428573], [375.0, 74.73076923076923], [374.0, 119.72916666666667], [376.0, 92.39999999999999], [377.0, 7.4], [378.0, 39.61401493394598], [379.0, 25.462568472306728], [385.0, 89.63636363636364], [384.0, 39.87196060326257], [386.0, 245.86363636363632], [387.0, 12.980392156862743], [388.0, 40.75], [389.0, 47.99905370238927], [390.0, 156.0869565217391], [391.0, 16.29787234042553], [392.0, 19.857142857142858], [398.0, 58.84895104895104], [399.0, 25.706387854482944], [396.0, 102.92592592592592], [397.0, 59.41176470588235], [393.0, 47.39426349052018], [394.0, 118.33333333333334], [395.0, 152.47826086956522], [413.0, 63.41304347826086], [415.0, 106.53846153846152], [412.0, 36.54545454545455], [403.0, 31.0], [402.0, 67.63636363636364], [401.0, 139.65853658536585], [400.0, 97.69230769230766], [411.0, 63.19999999999999], [410.0, 56.8], [409.0, 49.45901639344261], [408.0, 64.19999999999999], [407.0, 29.5], [406.0, 43.29310344827586], [405.0, 44.02631578947368], [404.0, 66.79069767441858], [417.0, 37.0715694561849], [416.0, 6.934931506849312], [424.0, 22.472539624032457], [423.0, 84.80645161290322], [422.0, 80.33766233766232], [421.0, 57.229729729729726], [425.0, 19.81644518272425], [427.0, 324.2739726027398], [426.0, 32.0], [420.0, 42.92307692307691], [419.0, 44.75438596491227], [431.0, 30.648055832502415], [430.0, 76.52777777777776], [429.0, 177.3846153846154], [428.0, 70.875], [418.0, 123.42424242424238], [433.0, 58.370192307692335], [434.0, 16.22500000000003], [435.0, 35.46666666666667], [432.0, 50.22222222222222], [439.0, 35.25247524752473], [438.0, 53.28449119373767], [437.0, 23.327568667344856], [436.0, 30.083333333333332], [442.0, 22.480978260869627], [443.0, 25.608620689655144], [444.0, 25.35904830569571], [441.0, 32.686567164179095], [440.0, 27.33620689655172], [445.0, 21.52030217186023], [446.0, 20.925045703839128], [447.0, 38.862842304060514], [456.0, 63.41379310344827], [459.0, 15.721259842519682], [458.0, 60.064102564102555], [461.0, 36.10999999999995], [460.0, 34.0], [462.0, 33.35897435897436], [463.0, 47.626724626724524], [457.0, 34.36363636363636], [455.0, 41.160000000000004], [453.0, 47.22535211267607], [454.0, 24.8], [452.0, 32.475247524752476], [451.0, 30.265700483091788], [450.0, 37.690476190476176], [449.0, 22.87434554973821], [448.0, 21.855805243445683], [465.0, 322.31428571428563], [473.0, 39.62525709584542], [475.0, 34.342465753424634], [474.0, 47.41269841269844], [472.0, 57.150000000000006], [471.0, 37.20224719101126], [470.0, 33.28358208955223], [469.0, 51.272727272727266], [468.0, 39.84285714285714], [466.0, 35.54430379746837], [467.0, 18.25], [477.0, 65.12195121951218], [476.0, 48.60576923076923], [479.0, 56.91176470588236], [478.0, 23.91525423728813], [464.0, 21.26315789473684], [492.0, 39.05882352941177], [494.0, 29.025137470542028], [480.0, 37.059692179700455], [495.0, 74.47142857142855], [493.0, 41.48344370860925], [481.0, 32.927927927927946], [483.0, 17.785714285714292], [482.0, 35.13793103448276], [491.0, 23.37560975609756], [490.0, 22.22680412371134], [489.0, 21.8], [488.0, 22.115384615384613], [487.0, 20.45283018867924], [484.0, 21.374999999999996], [485.0, 19.074074074074076], [486.0, 20.5], [497.0, 40.098509933774835], [496.0, 41.09907120743034], [498.0, 104.58549222797926], [499.0, 120.67894736842098], [503.0, 94.14953271028034], [504.0, 32.032152230971114], [508.0, 19.215231788079475], [509.0, 41.919117647058904], [511.0, 58.08928571428571], [510.0, 23.54385964912281], [507.0, 41.84037558685448], [506.0, 39.588235294117645], [505.0, 59.91803278688524], [502.0, 81.7904761904762], [501.0, 64.3680555555555], [500.0, 62.25925925925925], [518.0, 40.61507128309573], [512.0, 43.12188197120265], [514.0, 50.666666666666664], [516.0, 31.512367491166096], [530.0, 38.30039525691699], [528.0, 39.074626865671625], [540.0, 69.58536585365854], [538.0, 63.22857142857143], [536.0, 41.38297872340424], [542.0, 21.358974358974358], [532.0, 30.27713625866051], [534.0, 14.744680851063826], [520.0, 14.622911694510721], [522.0, 37.13333333333335], [526.0, 79.37333333333333], [524.0, 40.30769230769231], [550.0, 42.885714285714286], [546.0, 16.708333333333332], [548.0, 28.160930616740085], [544.0, 51.48235294117648], [568.0, 36.49019607843135], [570.0, 25.234567901234563], [572.0, 18.416515973478006], [574.0, 30.573643410852718], [560.0, 63.89237057220708], [562.0, 75.69886363636367], [566.0, 21.75850340136051], [564.0, 53.150000000000006], [552.0, 38.51891891891892], [554.0, 42.217307692307706], [556.0, 16.252190847127583], [558.0, 65.96734693877552], [602.0, 35.70161290322581], [576.0, 26.02641509433965], [582.0, 30.45967741935484], [604.0, 13.151409395973165], [606.0, 52.719557195571944], [592.0, 42.65240641711227], [600.0, 30.295454545454504], [594.0, 23.782881002087702], [596.0, 17.44230769230771], [598.0, 76.14973262032082], [580.0, 27.35938500960919], [584.0, 32.37441860465116], [578.0, 41.67088607594937], [586.0, 31.647816750178936], [588.0, 42.96703296703297], [590.0, 31.878048780487816], [610.0, 34.29739130434784], [608.0, 18.75936768149882], [622.0, 41.17827868852461], [620.0, 27.57313965341497], [612.0, 28.343065693430653], [614.0, 34.06991629739051], [624.0, 17.51315789473686], [632.0, 25.002186270223007], [634.0, 278.165991902834], [636.0, 49.06880733944953], [638.0, 93.17699115044248], [626.0, 45.22543352601156], [630.0, 31.814338235294077], [628.0, 37.618644067796595], [616.0, 27.368506493506512], [618.0, 24.20460453026366], [642.0, 13.18421052631579], [640.0, 32.68586387434556], [654.0, 35.5], [652.0, 37.95193288742763], [650.0, 40.500000000000014], [644.0, 16.261096605744132], [646.0, 33.25170068027215], [664.0, 27.99999999999998], [666.0, 28.018518518518523], [668.0, 26.10176446450552], [670.0, 6.349397590361446], [656.0, 55.72463768115939], [658.0, 39.250000000000014], [660.0, 37.2], [662.0, 58.333333333333336], [648.0, 19.32945990180032], [674.0, 44.02936630602785], [672.0, 46.92307692307693], [686.0, 56.03076923076924], [684.0, 44.375], [682.0, 22.243902439024378], [676.0, 30.833631484794296], [678.0, 60.96048632218842], [688.0, 18.354971664090634], [702.0, 26.451219512195124], [696.0, 68.77339901477832], [698.0, 8.043956043956044], [700.0, 49.0], [690.0, 31.08620689655173], [692.0, 46.43478260869571], [694.0, 42.36986301369857], [680.0, 10.797872340425531], [710.0, 44.791666666666664], [706.0, 4.7797202797202765], [704.0, 114.65975103734442], [708.0, 44.0555555555555], [728.0, 35.037707390648556], [730.0, 27.555505004549616], [732.0, 31.701433962264247], [734.0, 42.652173913043484], [720.0, 10.072580645161292], [722.0, 24.29381818181818], [726.0, 22.326576576576585], [724.0, 62.02173913043476], [718.0, 52.24770642201834], [716.0, 53.484375], [714.0, 48.56521739130435], [712.0, 39.12000000000001], [762.0, 23.374257425742556], [740.0, 45.83999999999998], [738.0, 70.72580645161291], [736.0, 61.53333333333333], [760.0, 12.87852760736196], [764.0, 31.489361702127656], [766.0, 24.946505098271068], [742.0, 59.41721854304634], [752.0, 18.58024691358024], [754.0, 86.44919786096254], [756.0, 150.86274509803928], [758.0, 48.2088969460325], [746.0, 47.57627118644069], [744.0, 59.34710743801652], [748.0, 22.953846153846154], [750.0, 24.21538461538461], [770.0, 168.21232123212343], [768.0, 40.527777777777764], [780.0, 24.575221238938045], [782.0, 36.1329243353783], [778.0, 18.472727272727266], [772.0, 7.388059701492537], [774.0, 15.438596491228068], [794.0, 28.369863013698644], [788.0, 31.963888888888903], [786.0, 55.64121338912129], [784.0, 43.36000000000001], [798.0, 35.70629370629371], [796.0, 35.61080657791691], [790.0, 42.39380530973455], [792.0, 26.80379746835444], [776.0, 29.555620098751085], [802.0, 153.12215909090907], [800.0, 51.071033210332146], [812.0, 48.49253731343282], [814.0, 40.635019171079115], [810.0, 9.523232323232332], [804.0, 16.87550200803213], [806.0, 88.75216138328537], [830.0, 12.416058394160592], [816.0, 49.71428571428571], [828.0, 66.2463768115942], [826.0, 45.0114503816794], [824.0, 33.26086956521739], [818.0, 25.790123456790116], [820.0, 32.95754716981131], [822.0, 33.52898550724638], [808.0, 63.039215686274474], [860.0, 53.038888888888906], [838.0, 46.1339285714286], [832.0, 40.70535714285714], [836.0, 49.74285714285714], [834.0, 45.372093023255815], [846.0, 34.844594594594604], [844.0, 38.757575757575744], [858.0, 44.935960591133075], [856.0, 37.49438202247191], [862.0, 53.47058823529411], [848.0, 68.1111111111111], [850.0, 33.828947368421055], [852.0, 42.237668161434975], [854.0, 40.29999999999998], [840.0, 44.26780779174461], [842.0, 34.118441358024675], [890.0, 31.107285429141722], [868.0, 69.41304347826089], [866.0, 84.23684210526316], [870.0, 11.705128205128204], [880.0, 45.974683544303794], [894.0, 17.47999999999999], [892.0, 25.162790697674424], [888.0, 23.453929539295387], [882.0, 49.82606882168915], [884.0, 24.313380281690133], [886.0, 15.918429003021146], [864.0, 72.56249999999999], [878.0, 34.88888888888889], [876.0, 51.0], [874.0, 31.163461538461533], [872.0, 73.32167832167833], [902.0, 26.204819277108427], [896.0, 41.39285714285714], [910.0, 37.96071428571429], [908.0, 40.32758620689655], [906.0, 45.850467289719624], [904.0, 46.92452830188681], [898.0, 45.349845201238395], [900.0, 37.333333333333336], [926.0, 39.411764705882355], [914.0, 49.218978102189766], [912.0, 42.66666666666667], [924.0, 14.392638036809812], [922.0, 65.625], [920.0, 65.20422535211273], [918.0, 26.88747616020344], [916.0, 101.74642857142862], [930.0, 49.71875], [928.0, 30.630434782608695], [942.0, 39.19396551724139], [940.0, 31.821192052980127], [938.0, 27.125], [944.0, 43.76217360621035], [958.0, 37.76041666666668], [956.0, 43.550000000000026], [954.0, 25.67187499999999], [952.0, 44.78175895765472], [946.0, 32.63247863247863], [948.0, 38.756949173528234], [950.0, 67.90656565656569], [934.0, 187.0], [936.0, 19.37864077669903], [932.0, 530.3759177679881], [988.0, 64.80611353711785], [990.0, 42.74767441860467], [986.0, 56.1764705882353], [984.0, 57.18532818532823], [982.0, 48.8036890645586], [980.0, 50.91735537190084], [978.0, 40.26639344262298], [976.0, 41.1590909090909], [974.0, 43.177777777777784], [962.0, 40.51335311572702], [960.0, 34.38888888888887], [966.0, 33.72115384615386], [964.0, 40.916666666666664], [972.0, 44.810810810810814], [970.0, 37.45977011494252], [968.0, 31.948979591836725], [996.0, 74.0655105973025], [1002.0, 92.9919839679359], [1000.0, 140.39999999999998], [1006.0, 48.30769230769231], [994.0, 44.661157024793425], [992.0, 51.24808184143224], [1004.0, 44.875], [1012.0, 44.16030534351143], [1010.0, 43.03012048192771], [1014.0, 41.09839816933637], [1008.0, 34.826302729528535], [1022.0, 15.142857142857144], [1020.0, 32.493055555555564], [1016.0, 50.93280282935458], [998.0, 57.78070175438597], [1018.0, 38.809977578475305], [1072.0, 55.00523959226446], [1076.0, 47.906250000000014], [1024.0, 24.962962962962962], [1044.0, 66.81123058542423], [1052.0, 52.167597765363105], [1048.0, 48.909090909090914], [1028.0, 14.848979591836741], [1036.0, 17.333333333333332], [1032.0, 22.606060606060613], [1080.0, 41.60851063829788], [1084.0, 41.85185185185184], [1056.0, 55.20481927710843], [1060.0, 66.46206896551726], [1068.0, 50.579365079365076], [1064.0, 52.285714285714285], [1040.0, 63.975000000000016], [1088.0, 47.96428571428571], [1092.0, 36.48113817633116], [1116.0, 20.828190158465365], [1112.0, 54.75116279069761], [1108.0, 30.400000000000006], [1104.0, 141.83333333333331], [1096.0, 20.545454545454543], [1100.0, 53.99999999999999], [1136.0, 110.10476190476194], [1140.0, 18.209606986899566], [1144.0, 49.956043956043956], [1120.0, 56.67289719626167], [1148.0, 35.33766233766238], [1124.0, 25.328554360812433], [1128.0, 61.83018867924529], [1132.0, 74.76966292134833], [1156.0, 42.85969738651994], [1152.0, 30.29289787454639], [1180.0, 17.758409785932717], [1176.0, 27.98947368421053], [1172.0, 41.3622448979592], [1160.0, 41.51904090267984], [1164.0, 48.59209645010044], [1188.0, 58.50000000000001], [1184.0, 82.66666666666666], [1212.0, 27.438095238095244], [1208.0, 40.09999999999999], [1204.0, 54.052631578947356], [1200.0, 46.02083333333333], [1192.0, 38.91891891891891], [1196.0, 48.72222222222221], [1168.0, 56.343511450381705], [1220.0, 27.299115044247795], [1216.0, 44.68789808917196], [1244.0, 39.28033707865176], [1240.0, 67.24137931034483], [1236.0, 30.18874773139748], [1224.0, 38.542929292929294], [1228.0, 64.48746867167914], [1248.0, 53.706848894348965], [1276.0, 46.18263473053894], [1272.0, 72.99082919373312], [1264.0, 67.68824940047966], [1268.0, 58.84764542936289], [1252.0, 61.47552447552448], [1256.0, 54.720886168196984], [1260.0, 67.67241379310346], [1232.0, 53.436427408242395], [1336.0, 36.99999999999999], [1284.0, 71.42903752039165], [1280.0, 84.53986264556592], [1308.0, 90.65714285714286], [1304.0, 68.33112231361116], [1300.0, 56.319148936170194], [1296.0, 89.02631578947366], [1288.0, 48.32], [1292.0, 54.966855295068655], [1340.0, 14.453333333333331], [1316.0, 61.34545454545454], [1312.0, 84.28089887640449], [1324.0, 66.05660377358488], [1320.0, 58.07065217391305], [1328.0, 70.9062226117444], [1332.0, 105.43529411764709], [1356.0, 228.17476555839747], [1348.0, 18.198198198198185], [1344.0, 19.750000000000004], [1372.0, 51.08928571428572], [1368.0, 9.625], [1352.0, 21.19047619047619], [1392.0, 47.56733828207849], [1396.0, 76.30612244897964], [1400.0, 20.944598337950136], [1404.0, 42.164113785558], [1376.0, 35.582995951417], [1380.0, 42.14575645756454], [1384.0, 45.847206385404775], [1388.0, 74.56737588652484], [1360.0, 906.5117187499999], [1364.0, 122.83333333333327], [1412.0, 55.29098196392784], [1408.0, 53.868055555555536], [1436.0, 46.728855721392996], [1432.0, 57.28169014084508], [1428.0, 51.33333333333332], [1416.0, 45.64414414414412], [1420.0, 66.85858585858583], [1440.0, 59.88505747126436], [1468.0, 39.53658536585367], [1464.0, 59.76785714285712], [1460.0, 51.043715846994516], [1456.0, 46.397471910112294], [1444.0, 60.97729422894996], [1448.0, 103.89456869009587], [1452.0, 106.50277777777778], [1424.0, 50.29305555555561], [1520.0, 78.47244094488194], [1480.0, 71.45205479452054], [1500.0, 21.211538461538463], [1476.0, 19.596491228070196], [1472.0, 36.22440944881887], [1484.0, 59.33333333333332], [1504.0, 82.86901763224174], [1532.0, 63.36666666666668], [1528.0, 70.45057034220535], [1524.0, 64.46382978723405], [1508.0, 36.0427046263345], [1512.0, 53.87845303867403], [1516.0, 65.43832528180351], [1488.0, 56.120218579235015], [1492.0, 62.81094527363184], [1496.0, 43.11538461538464], [1548.0, 50.045454545454554], [1540.0, 85.1491596638656], [1536.0, 69.1391509433962], [1564.0, 58.5888888888889], [1560.0, 83.63651050080772], [1544.0, 110.62400000000001], [1584.0, 76.54003021148043], [1592.0, 79.77999999999997], [1588.0, 60.3], [1596.0, 61.08266860043525], [1568.0, 76.93401015228429], [1572.0, 40.65201900237529], [1576.0, 53.96032934131735], [1580.0, 69.4280660377358], [1552.0, 40.56250000000001], [1556.0, 72.29446064139951], [1612.0, 22.249443207126923], [1604.0, 56.32959407887125], [1600.0, 106.5811688311689], [1608.0, 64.15833333333335], [1648.0, 39.11111111111111], [1652.0, 29.433628318584088], [1656.0, 23.931596091205204], [1660.0, 25.229885057471286], [1636.0, 168.68333333333337], [1632.0, 57.76620370370369], [1644.0, 66.55679553607027], [1640.0, 66.96871088861081], [1616.0, 55.45392491467575], [1620.0, 58.60428849902527], [1628.0, 68.2723272068342], [1624.0, 54.5511926192619], [1672.0, 29.731234866828107], [1664.0, 68.38051044083514], [1668.0, 64.09503355704693], [1688.0, 63.85000000000001], [1692.0, 71.76956097560974], [1676.0, 56.898184407262384], [1716.0, 80.52808988764048], [1712.0, 224.3022774327123], [1724.0, 87.09320695102687], [1720.0, 82.84532374100714], [1696.0, 121.73636363636362], [1704.0, 64.93949579831938], [1700.0, 76.90111176126392], [1708.0, 52.38058084091904], [1680.0, 240.91111111111118], [1684.0, 60.28282828282828], [1740.0, 74.26428571428575], [1732.0, 114.15384615384608], [1756.0, 79.36874236874233], [1728.0, 86.54545454545453], [1752.0, 68.10447761194031], [1748.0, 86.41882621951211], [1736.0, 80.55452127659579], [1776.0, 89.68344007319293], [1780.0, 85.53981712385685], [1784.0, 83.79694383259911], [1788.0, 34.650602409638566], [1760.0, 67.32258064516122], [1764.0, 105.72086840939295], [1768.0, 60.64700544464608], [1772.0, 73.22906927326814], [1744.0, 91.97687861271676], [1796.0, 49.673381294964024], [1792.0, 79.54366252710416], [1820.0, 87.47058823529407], [1816.0, 64.30973451327432], [1800.0, 41.24390243902443], [1804.0, 93.89114024632502], [1824.0, 87.46004319654429], [1852.0, 75.93220960058618], [1848.0, 58.48466257668712], [1840.0, 77.97328244274811], [1844.0, 80.65727916281932], [1828.0, 95.52972399150765], [1832.0, 58.820623258170876], [1836.0, 100.05467091295114], [1812.0, 74.5683348498635], [1808.0, 124.44444444444447], [1860.0, 79.05673192169397], [1856.0, 46.354838709677416], [1884.0, 83.56011163589503], [1880.0, 66.24531516183993], [1876.0, 37.382222222222204], [1864.0, 84.24912280701757], [1868.0, 67.7848360655738], [1888.0, 88.15838150289025], [1892.0, 62.203554119547654], [1904.0, 163.10675965665234], [1908.0, 151.4893617021276], [1916.0, 101.78947368421052], [1912.0, 129.52083333333337], [1896.0, 66.85585585585588], [1900.0, 58.60227272727273], [1872.0, 186.7619047619048], [1928.0, 81.10793650793643], [1948.0, 99.44285714285716], [1944.0, 101.96581196581197], [1940.0, 95.21505376344085], [1936.0, 72.75105683419415], [1932.0, 84.24715909090905], [1968.0, 90.10263537162822], [1972.0, 84.09532710280361], [1980.0, 20.81410256410256], [1976.0, 39.87272727272727], [1920.0, 83.62807752750138], [1924.0, 66.35000000000001], [1952.0, 24.214553638409566], [1956.0, 63.40378548895899], [1960.0, 83.93909555069307], [1964.0, 29.502369668246455], [2044.0, 89.13407821229052], [2036.0, 76.24113475177313], [2040.0, 82.44155844155848], [2008.0, 95.87449392712554], [2004.0, 94.11641791044762], [2000.0, 83.24456958970232], [2012.0, 94.3789072877012], [1988.0, 90.28571428571428], [1984.0, 75.5007270964614], [1992.0, 219.17757009345786], [2032.0, 112.80799999999999], [1996.0, 91.34126984126985], [2028.0, 97.12345679012346], [2024.0, 71.3861386138614], [2020.0, 79.93414634146349], [2016.0, 58.96026490066222], [2168.0, 39.22222222222222], [2144.0, 22.793269230769234], [2128.0, 17.5], [2136.0, 26.99185888738128], [2112.0, 91.47790339157241], [2120.0, 81.51732191514209], [2104.0, 69.06572769953051], [2088.0, 48.2043010752688], [2096.0, 97.03196347031951], [2080.0, 63.05223880597013], [2048.0, 82.74803149606296], [2056.0, 154.72674418604657], [2072.0, 99.95098039215691], [2064.0, 69.14127144298689], [2152.0, 6.454545454545454], [2280.0, 226.2], [2296.0, 258.75], [2288.0, 534.4], [2240.0, 11.5], [2272.0, 12.363636363636365], [2200.0, 31.120000000000005], [2192.0, 38.46153846153845], [2224.0, 16.0], [2256.0, 6.000000000000001], [2264.0, 4.0], [2248.0, 9.0], [2208.0, 19.0625], [2216.0, 21.333333333333332], [2184.0, 43.62753036437246], [2176.0, 31.3], [2232.0, 14.390243902439023], [2312.0, 407.0], [2384.0, 3.0], [2400.0, 97.01182642404068], [2368.0, 202.48895497026368], [2392.0, 2.5], [2360.0, 317.4], [2304.0, 349.6666666666667], [2320.0, 255.25000000000003], [2328.0, 398.25], [2352.0, 3.0], [2344.0, 315.5], [2336.0, 3.0], [2153.0, 3.9999999999999996], [2161.0, 3.0], [2169.0, 42.0], [2145.0, 20.16666666666666], [2073.0, 98.2258064516129], [2065.0, 74.94311377245505], [2057.0, 128.57124183006536], [2049.0, 156.74754901960793], [2137.0, 34.86407766990293], [2129.0, 20.060209424083755], [2121.0, 69.80338078291817], [2113.0, 79.03547008547037], [2105.0, 130.07335907335911], [2089.0, 37.14399999999999], [2097.0, 110.5344677137871], [2081.0, 60.03089887640451], [2297.0, 2.0], [2257.0, 3.0], [2273.0, 16.799999999999997], [2289.0, 541.5], [2185.0, 39.76470588235296], [2177.0, 41.72222222222223], [2201.0, 32.306122448979586], [2193.0, 35.5], [2233.0, 13.525], [2225.0, 20.532128514056236], [2217.0, 18.111111111111107], [2209.0, 21.567567567567565], [2265.0, 6.3999999999999995], [2249.0, 6.2], [2241.0, 13.375], [2369.0, 3.0], [2385.0, 4.0], [2393.0, 3.0], [2377.0, 4.0], [2329.0, 2.5], [2321.0, 244.11111111111114], [2313.0, 176.4], [2305.0, 418.0], [2361.0, 261.0], [2353.0, 3.25], [2345.0, 513.0], [1085.0, 31.295081967213115], [1077.0, 30.767123287671236], [1029.0, 16.363636363636363], [1053.0, 52.5], [1025.0, 30.61538461538462], [1049.0, 42.166666666666664], [1045.0, 46.14742451154527], [1041.0, 31.89139344262294], [1081.0, 38.21686746987952], [1073.0, 52.1304347826087], [1037.0, 16.0], [1033.0, 22.63157894736842], [1069.0, 40.977815699658755], [1065.0, 55.4], [1061.0, 55.723849372384976], [1057.0, 48.871287128712865], [1089.0, 42.34883720930232], [1117.0, 60.715909090909086], [1113.0, 93.67741935483869], [1109.0, 74.21739130434783], [1105.0, 403.3939393939396], [1093.0, 80.79220779220779], [1097.0, 21.44], [1101.0, 33.20689655172415], [1137.0, 47.324675324675304], [1141.0, 34.54285714285714], [1145.0, 34.53030303030303], [1149.0, 23.571040723981874], [1121.0, 47.41618497109828], [1125.0, 41.778725004701215], [1129.0, 67.62337662337666], [1133.0, 118.34883720930232], [1165.0, 93.6134453781512], [1157.0, 34.93023255813954], [1181.0, 28.548759623609918], [1153.0, 43.93069306930693], [1177.0, 51.64596273291925], [1173.0, 61.44067796610169], [1161.0, 44.72533711852357], [1201.0, 30.473684210526315], [1205.0, 40.47619047619046], [1209.0, 45.78448275862069], [1213.0, 47.0576923076923], [1185.0, 108.7042253521127], [1189.0, 98.79069767441862], [1193.0, 39.964285714285715], [1197.0, 52.86363636363637], [1169.0, 60.923339011925], [1225.0, 24.3], [1217.0, 41.80263157894737], [1245.0, 52.395604395604366], [1221.0, 31.07305936073059], [1229.0, 51.875], [1249.0, 48.355721393034855], [1277.0, 50.42173913043475], [1273.0, 53.433767510444774], [1265.0, 73.05882352941182], [1269.0, 45.80487804878049], [1253.0, 65.23655913978502], [1257.0, 40.4904761904762], [1261.0, 88.13562753036433], [1233.0, 46.199999999999996], [1237.0, 13.458912768647291], [1241.0, 46.83705357142862], [1293.0, 33.12413229889755], [1281.0, 65.22446236559139], [1285.0, 59.811111111111096], [1289.0, 52.771276595744666], [1341.0, 17.237947122861566], [1317.0, 67.98723404255318], [1313.0, 75.20754716981132], [1337.0, 37.08333333333332], [1333.0, 49.07746478873241], [1329.0, 200.33057851239676], [1325.0, 60.73451327433627], [1321.0, 57.08088235294115], [1297.0, 76.41735537190083], [1305.0, 61.68785578747627], [1301.0, 66.3], [1309.0, 70.92592592592592], [1349.0, 19.641711229946527], [1345.0, 22.453333333333333], [1373.0, 43.81081081081082], [1369.0, 54.688760806916406], [1353.0, 29.05513784461153], [1357.0, 796.9506172839511], [1377.0, 27.37777777777778], [1405.0, 51.61387066541703], [1401.0, 23.652702702702726], [1397.0, 61.79452054794522], [1393.0, 65.7657480314961], [1381.0, 18.66300940438874], [1385.0, 847.2491420727517], [1389.0, 40.11129568106312], [1361.0, 476.54679802955656], [1365.0, 76.94674392935994], [1413.0, 49.237261146496806], [1409.0, 61.49799999999997], [1437.0, 48.32394366197182], [1433.0, 56.41221374045803], [1429.0, 50.503816793893115], [1417.0, 42.83510638297867], [1421.0, 53.68181818181818], [1441.0, 60.229202037351456], [1465.0, 44.862549800796835], [1469.0, 41.108108108108105], [1461.0, 45.773170731707296], [1457.0, 33.18266978922715], [1445.0, 109.86219081272088], [1449.0, 68.94863013698628], [1453.0, 96.0309535696456], [1425.0, 51.43225806451614], [1485.0, 58.51508120649648], [1481.0, 48.855421686746986], [1477.0, 60.116657815542574], [1473.0, 34.89436619718309], [1497.0, 35.744680851063855], [1501.0, 30.842391304347817], [1521.0, 62.17090909090911], [1525.0, 57.61538461538461], [1533.0, 57.31213872832371], [1529.0, 65.26704545454547], [1505.0, 49.83006244424621], [1509.0, 29.71276595744679], [1513.0, 81.43169398907101], [1517.0, 87.96202531645572], [1489.0, 56.10316529894487], [1493.0, 50.3258426966292], [1545.0, 60.59883720930234], [1537.0, 91.18181818181819], [1561.0, 55.7588424437299], [1565.0, 63.62409638554224], [1541.0, 55.4405182567727], [1549.0, 40.37475345167654], [1569.0, 79.59390862944159], [1597.0, 78.16321114612724], [1593.0, 83.96122810470365], [1589.0, 65.21611001964627], [1585.0, 53.023483583750696], [1573.0, 60.72850122850121], [1577.0, 49.232592592592596], [1581.0, 132.89010989010993], [1557.0, 66.02119129438721], [1553.0, 46.294117647058826], [1605.0, 104.78333333333333], [1601.0, 152.50874726647928], [1629.0, 41.92030965391627], [1621.0, 63.49387755102042], [1625.0, 57.88214537755827], [1609.0, 92.2822719449225], [1613.0, 44.4502617801047], [1661.0, 31.766355140186906], [1637.0, 162.00298507462688], [1633.0, 68.79927338782916], [1645.0, 59.3406337371855], [1641.0, 66.84497219034161], [1657.0, 29.17307692307693], [1653.0, 33.68048780487807], [1649.0, 42.97999999999998], [1617.0, 61.926984126984166], [1677.0, 95.12134798958652], [1665.0, 70.58353510895884], [1685.0, 67.90747782002546], [1693.0, 111.67509025270765], [1689.0, 75.78692654468317], [1669.0, 49.38910505836572], [1673.0, 19.777777777777775], [1697.0, 69.30839416058403], [1701.0, 77.67909143855573], [1709.0, 120.97222222222223], [1705.0, 66.21024734982323], [1681.0, 97.4033613445378], [1725.0, 96.87096774193547], [1721.0, 79.58574938574922], [1717.0, 83.71518987341773], [1713.0, 223.72521246458925], [1741.0, 83.62465753424655], [1757.0, 73.3482587064676], [1753.0, 74.68091168091172], [1737.0, 71.15555555555558], [1729.0, 74.58971315529152], [1761.0, 55.83333333333333], [1789.0, 61.02082572159303], [1785.0, 38.85456110154903], [1781.0, 63.96424702058505], [1777.0, 349.57742484401643], [1765.0, 85.19483662767252], [1769.0, 58.20499999999998], [1773.0, 58.80143755615453], [1745.0, 84.59755172787371], [1749.0, 76.00230769230771], [1797.0, 43.75964391691404], [1793.0, 84.13157894736837], [1817.0, 53.0048309178744], [1821.0, 75.82724252491693], [1813.0, 88.86866359447004], [1801.0, 43.92241379310345], [1805.0, 143.1964912280702], [1841.0, 61.39534883720931], [1845.0, 101.39583333333337], [1849.0, 50.18032786885247], [1853.0, 61.85314685314684], [1825.0, 113.93774319066142], [1829.0, 88.41787579802667], [1833.0, 60.13195615514336], [1837.0, 47.701825557809315], [1809.0, 92.86021505376345], [1861.0, 65.69709543568466], [1857.0, 49.19339622641513], [1885.0, 37.17351598173516], [1881.0, 87.86845571287459], [1877.0, 35.77669902912621], [1865.0, 89.30465949820778], [1869.0, 64.24008810572685], [1889.0, 76.43819899729992], [1917.0, 96.3812154696133], [1913.0, 128.37499999999997], [1909.0, 122.03508771929823], [1905.0, 120.4], [1893.0, 68.54094292803971], [1897.0, 67.69969040247676], [1901.0, 79.73439734999623], [1873.0, 74.4], [1933.0, 81.2627617801048], [1949.0, 11.261538461538466], [1945.0, 100.14028776978424], [1941.0, 97.24666666666663], [1937.0, 104.9237611181703], [1921.0, 74.68085106382978], [1929.0, 95.81761006289307], [1925.0, 75.70297029702971], [1953.0, 25.80114722753349], [1981.0, 96.3936583531772], [1977.0, 35.86346863468634], [1973.0, 67.68948787061997], [1969.0, 86.81194690265492], [1957.0, 52.883116883116955], [1961.0, 67.74852071005927], [1965.0, 59.19286118980156], [2041.0, 106.16483516483515], [2045.0, 82.33720930232562], [2021.0, 71.06554307116106], [2017.0, 56.674698795180724], [2037.0, 98.81369863013698], [2033.0, 112.80916030534355], [2013.0, 81.5557083906465], [2005.0, 84.23600354060612], [2001.0, 125.55219780219807], [2009.0, 95.92407809110628], [1989.0, 84.43060498220642], [1985.0, 62.573363431151236], [1997.0, 114.19875776397518], [1993.0, 136.53658536585348], [2029.0, 90.44145873320528], [2025.0, 104.46341463414635], [2154.0, 10.212962962962965], [2122.0, 42.74114671163581], [2106.0, 68.26605504587157], [2098.0, 88.45055970149241], [2090.0, 88.76567926455552], [2082.0, 65.19867549668875], [2050.0, 106.1976458414177], [2162.0, 58.36396396396392], [2114.0, 80.26796992481219], [2146.0, 23.425742574257427], [2074.0, 81.45806451612906], [2066.0, 66.47588424437299], [2058.0, 108.1232943469785], [2138.0, 34.591836734693864], [2130.0, 22.158241758241775], [2290.0, 341.7142857142857], [2242.0, 12.868852459016395], [2250.0, 11.181818181818182], [2298.0, 275.0], [2282.0, 322.9411764705882], [2274.0, 510.7831325301205], [2218.0, 18.357142857142858], [2194.0, 34.54545454545454], [2202.0, 25.75], [2186.0, 37.391304347826086], [2234.0, 15.171171171171176], [2178.0, 48.0], [2226.0, 20.004184100418417], [2210.0, 24.718750000000004], [2258.0, 6.133333333333333], [2266.0, 6.153846153846153], [2314.0, 224.13636363636363], [2386.0, 3.0], [2394.0, 3.0], [2378.0, 3.0], [2362.0, 3.0], [2306.0, 510.3333333333333], [2322.0, 558.3333333333334], [2346.0, 536.0], [2354.0, 512.0], [2059.0, 73.13528855250716], [2171.0, 26.0], [2123.0, 44.93333333333335], [2115.0, 44.919732441471574], [2163.0, 43.93023255813953], [2099.0, 54.03810454323408], [2107.0, 39.99999999999998], [2051.0, 66.87878787878788], [2091.0, 98.86764705882355], [2083.0, 50.34502923976608], [2155.0, 4.7142857142857135], [2147.0, 38.363636363636374], [2075.0, 81.88071895424834], [2067.0, 69.21052631578947], [2139.0, 44.49999999999999], [2131.0, 19.396135265700487], [2195.0, 29.411764705882348], [2267.0, 5.272727272727272], [2235.0, 13.857142857142856], [2227.0, 15.454545454545453], [2211.0, 24.976744186046506], [2219.0, 20.813953488372096], [2179.0, 44.90540540540542], [2187.0, 39.23622047244093], [2259.0, 7.25], [2251.0, 9.454545454545453], [2243.0, 12.592592592592592], [2283.0, 538.0], [2203.0, 24.055555555555557], [2291.0, 555.8], [2299.0, 543.5], [2307.0, 398.5], [2331.0, 87.99999999999999], [2371.0, 3.5], [2395.0, 114.75], [2315.0, 313.82352941176464], [2323.0, 495.3333333333333], [2355.0, 349.0], [2363.0, 513.6666666666666], [2347.0, 264.0], [2339.0, 106.6], [519.0, 37.697674418604656], [515.0, 37.26890756302519], [513.0, 44.66185928668866], [517.0, 54.08333333333332], [529.0, 42.826839826839844], [541.0, 82.34920634920636], [537.0, 36.40671641791048], [539.0, 82.76315789473682], [543.0, 24.99358974358974], [531.0, 7.112994350282485], [533.0, 42.755102040816325], [535.0, 16.9363357698656], [521.0, 61.04615384615385], [523.0, 36.52000000000001], [525.0, 54.77575757575758], [527.0, 68.44715447154476], [551.0, 41.840000000000046], [547.0, 72.87719298245615], [545.0, 77.82432432432432], [549.0, 26.752808988764052], [569.0, 37.51807228915662], [573.0, 34.04705882352941], [575.0, 28.863496932515336], [571.0, 50.459183673469376], [561.0, 135.9090909090909], [563.0, 78.51234567901233], [565.0, 19.917494270435434], [567.0, 35.406504065040664], [553.0, 22.449275362318833], [555.0, 43.726500128766396], [557.0, 90.20000000000002], [559.0, 23.14385150812063], [583.0, 43.4778761061947], [581.0, 42.84276729559747], [593.0, 25.355670103092777], [595.0, 27.212765957446805], [607.0, 17.618021006080703], [605.0, 42.882521489971374], [603.0, 30.426716141001823], [601.0, 31.53456387984076], [597.0, 59.90962671905697], [599.0, 294.5], [579.0, 25.516806722689072], [577.0, 33.397727272727266], [585.0, 28.52147239263803], [587.0, 55.462500000000006], [589.0, 37.10526315789474], [591.0, 36.17867435158503], [611.0, 179.67449664429523], [623.0, 20.923371647509576], [621.0, 18.408518877057112], [619.0, 15.472795497185734], [609.0, 29.40883977900553], [613.0, 97.96862896979081], [615.0, 28.105357946870775], [633.0, 31.251336898395703], [635.0, 55.607142857142854], [637.0, 58.74], [639.0, 29.738425925925895], [625.0, 13.522189349112436], [627.0, 54.603773584905646], [631.0, 40.59701492537313], [629.0, 27.513381995133805], [617.0, 37.349081364829395], [643.0, 15.050958904109606], [647.0, 37.49090909090908], [653.0, 57.60606060606062], [655.0, 31.128440366972473], [651.0, 36.35555555555556], [641.0, 24.03030303030303], [645.0, 30.814371257485032], [665.0, 31.73999999999999], [667.0, 27.432812500000015], [669.0, 12.91891891891892], [671.0, 14.164556962025314], [657.0, 42.24475524475525], [659.0, 51.375], [661.0, 50.46938775510205], [663.0, 39.81578947368421], [649.0, 26.689347079037876], [675.0, 143.81944444444449], [687.0, 56.78048780487806], [685.0, 49.8], [683.0, 19.188929001203356], [673.0, 21.48], [677.0, 23.34245326037393], [679.0, 15.10389610389611], [703.0, 66.51470588235294], [699.0, 25.806836248012743], [701.0, 30.475062344139644], [697.0, 63.531746031745946], [689.0, 36.20987654320989], [691.0, 22.400590551181168], [693.0, 194.75], [695.0, 42.0601092896175], [681.0, 25.75], [729.0, 39.27164179104477], [709.0, 38.062900346529545], [711.0, 35.13513513513514], [705.0, 70.94117647058823], [707.0, 33.71796332156281], [731.0, 21.75181818181819], [733.0, 40.788082652570914], [735.0, 26.64781881744949], [721.0, 16.189655172413786], [725.0, 52.34210526315789], [723.0, 30.881578947368418], [727.0, 29.665271966527197], [719.0, 37.035041401655974], [717.0, 54.0], [715.0, 63.10000000000001], [713.0, 39.52631578947368], [743.0, 79.64], [741.0, 58.564814814814774], [749.0, 23.5383064516129], [739.0, 49.75000000000001], [761.0, 24.717391304347814], [763.0, 20.71262699564586], [765.0, 17.88135593220337], [767.0, 289.26923076923106], [753.0, 26.3932680017044], [755.0, 130.33005464480863], [757.0, 123.93749999999993], [759.0, 11.66], [745.0, 76.8217821782178], [747.0, 39.18232044198896], [751.0, 26.127516778523486], [737.0, 69.08333333333333], [771.0, 41.36475524475531], [775.0, 36.89315726290516], [781.0, 38.6484268125855], [783.0, 35.095486111111086], [779.0, 21.02044293015333], [769.0, 36.25000000000001], [773.0, 23.234146341463422], [789.0, 37.14705882352941], [791.0, 31.421052631578945], [795.0, 32.711019163762984], [787.0, 36.77905198776758], [785.0, 46.98884758364313], [799.0, 27.84641873278237], [797.0, 18.921568627450974], [793.0, 29.935267857142854], [777.0, 32.04085106382982], [805.0, 29.242679425837267], [801.0, 38.36746387643248], [815.0, 225.34347826086972], [813.0, 41.769230769230774], [811.0, 39.333333333333336], [803.0, 39.32152917505012], [807.0, 169.32608695652172], [817.0, 63.744680851063855], [831.0, 30.51657458563536], [829.0, 40.03804347826085], [827.0, 24.0], [825.0, 31.437001594896337], [819.0, 36.12774792379086], [821.0, 31.033856722276777], [823.0, 34.01098901098901], [809.0, 13.534031413612563], [833.0, 27.833516282473436], [843.0, 107.18518518518518], [845.0, 33.06060606060606], [847.0, 46.64444444444444], [837.0, 40.340425531914896], [835.0, 57.299999999999976], [839.0, 25.264437689969593], [863.0, 63.50476190476189], [861.0, 55.233846153846194], [859.0, 39.714285714285715], [857.0, 39.972515856236804], [849.0, 38.765624999999986], [851.0, 40.16216216216214], [855.0, 39.883116883116884], [853.0, 44.68], [841.0, 48.171174142480254], [893.0, 29.32122905027933], [867.0, 52.35227272727274], [869.0, 32.111111111111114], [871.0, 31.62479732951841], [895.0, 25.761325966850812], [891.0, 45.09981851179675], [889.0, 34.00793650793653], [881.0, 47.36764705882355], [883.0, 27.17647058823529], [885.0, 38.40186915887851], [887.0, 21.069486404833846], [865.0, 81.88461538461539], [877.0, 38.00000000000001], [879.0, 47.319148936170215], [875.0, 64.64705882352939], [873.0, 36.89361702127659], [903.0, 17.258290816326525], [899.0, 32.09760132340775], [897.0, 40.47967479674795], [911.0, 41.10056657223789], [909.0, 39.740740740740755], [907.0, 46.11111111111109], [905.0, 48.39175257731961], [901.0, 45.109677419354846], [917.0, 89.91616766467071], [915.0, 92.51612903225805], [913.0, 41.91525423728814], [927.0, 21.937500000000007], [925.0, 62.031250000000014], [923.0, 42.55737704918033], [921.0, 62.71153846153845], [919.0, 21.082124693915983], [931.0, 26.50000000000001], [943.0, 129.66216216216228], [941.0, 37.07812500000001], [939.0, 30.498054474708177], [929.0, 23.960784313725497], [935.0, 44.75561797752801], [959.0, 36.819548872180455], [957.0, 42.70277078085644], [955.0, 42.9], [953.0, 22.68539325842697], [945.0, 47.20320680628272], [947.0, 18.037433155080212], [951.0, 99.3191489361702], [949.0, 69.88127853881278], [937.0, 63.97727272727274], [933.0, 282.97590361445776], [989.0, 47.69230769230769], [991.0, 52.6775956284153], [987.0, 29.288612263716043], [985.0, 57.78877005347594], [983.0, 50.281214848143954], [981.0, 49.25], [979.0, 45.77777777777778], [977.0, 56.28662420382167], [975.0, 43.41346153846153], [963.0, 41.72972972972974], [961.0, 34.55384615384616], [967.0, 31.844444444444456], [965.0, 39.025641025641], [973.0, 43.639316239316244], [971.0, 40.05882352941177], [969.0, 35.13043478260869], [999.0, 48.517200474495844], [1009.0, 41.263157894736885], [1003.0, 65.28804347826085], [1001.0, 52.091603053435115], [995.0, 66.5022134776194], [997.0, 54.517241379310356], [1005.0, 45.71518987341774], [1007.0, 45.14213197969544], [993.0, 36.3228346456693], [1013.0, 40.73412698412697], [1011.0, 40.22346368715081], [1023.0, 25.38461538461538], [1021.0, 28.191489361702136], [1017.0, 25.28070175438597], [1019.0, 25.65384615384616], [1074.0, 34.71428571428571], [1030.0, 29.026441702342], [1038.0, 15.625], [1034.0, 22.04347826086957], [1026.0, 27.045977011494255], [1054.0, 57.36120401337792], [1050.0, 47.1], [1046.0, 48.57371794871793], [1078.0, 47.24444444444445], [1082.0, 48.5531914893617], [1086.0, 18.076271186440678], [1058.0, 45.94035087719296], [1062.0, 59.45058139534883], [1070.0, 60.610778443113766], [1066.0, 53.485714285714295], [1042.0, 46.459715639810405], [1090.0, 77.0], [1118.0, 39.8793452581842], [1114.0, 79.38300653594774], [1110.0, 57.56637168141595], [1106.0, 79.11538461538464], [1094.0, 44.89473684210528], [1098.0, 45.769230769230774], [1102.0, 32.48874598070729], [1138.0, 96.2840909090909], [1142.0, 28.935185185185183], [1150.0, 63.08023379383635], [1146.0, 37.175097276264594], [1122.0, 36.403614457831324], [1126.0, 56.54031266467615], [1130.0, 65.06091370558374], [1134.0, 55.70149253731343], [1158.0, 35.72571428571433], [1182.0, 43.92131616595135], [1178.0, 58.12068965517241], [1174.0, 42.553648068669524], [1154.0, 28.38107416879795], [1162.0, 49.340740740740756], [1166.0, 86.60625000000005], [1186.0, 59.980769230769226], [1214.0, 44.1766304347826], [1210.0, 48.815602836879414], [1206.0, 108.63636363636363], [1202.0, 52.75000000000001], [1190.0, 72.68115942028987], [1194.0, 54.71813725490196], [1198.0, 66.98795180722891], [1170.0, 48.62283737024216], [1222.0, 36.704918032786885], [1246.0, 37.278017241379295], [1242.0, 44.15789473684208], [1238.0, 85.33179114342362], [1218.0, 48.35869565217389], [1226.0, 50.09293680297398], [1230.0, 108.67569930069929], [1278.0, 33.25419664268586], [1274.0, 38.0555555555555], [1270.0, 64.7239819004525], [1266.0, 51.20287539936095], [1250.0, 61.57550335570472], [1254.0, 41.024258760107834], [1258.0, 78.85869565217386], [1262.0, 68.49999999999996], [1234.0, 45.01326970084957], [1338.0, 28.499999999999993], [1286.0, 44.907407407407405], [1282.0, 66.02325581395348], [1290.0, 42.850931677018636], [1294.0, 91.06754333532577], [1298.0, 75.36842105263158], [1306.0, 58.36842105263158], [1302.0, 63.440944881889784], [1310.0, 88.74509803921568], [1326.0, 57.22520804438288], [1342.0, 25.127659574468087], [1318.0, 41.47058823529413], [1314.0, 74.96078431372545], [1322.0, 54.42523364485978], [1330.0, 56.5654761904762], [1334.0, 55.462365591397834], [1350.0, 25.142857142857135], [1374.0, 47.14893617021278], [1346.0, 24.361182519280202], [1370.0, 49.64285714285714], [1366.0, 69.76489028213172], [1354.0, 25.578082191780805], [1358.0, 1351.6494345718916], [1394.0, 71.03115264797508], [1398.0, 63.27906976744185], [1402.0, 34.673366834170864], [1406.0, 43.49056603773586], [1378.0, 17.666666666666668], [1382.0, 32.09560439560438], [1390.0, 13.653261840929408], [1386.0, 58.69354838709677], [1362.0, 89.93333333333335], [1414.0, 53.84705882352943], [1438.0, 55.44202898550724], [1434.0, 39.27906976744187], [1430.0, 50.61538461538462], [1410.0, 57.62992125984252], [1418.0, 39.683597883597876], [1422.0, 47.683908045977034], [1466.0, 37.54929577464788], [1470.0, 40.10714285714286], [1462.0, 59.57163531114328], [1458.0, 56.29840319361277], [1442.0, 63.08224543080941], [1446.0, 99.9331306990882], [1450.0, 86.00917431192657], [1454.0, 79.79804560260582], [1426.0, 50.54923076923078], [1486.0, 54.0], [1502.0, 80.54026548672549], [1494.0, 49.79999999999999], [1482.0, 78.26666666666667], [1478.0, 64.62529274004686], [1474.0, 29.823529411764703], [1506.0, 39.35174418604641], [1534.0, 45.0], [1530.0, 62.5223880597015], [1526.0, 58.26666666666667], [1522.0, 36.857142857142854], [1510.0, 26.379370629370616], [1514.0, 71.0496524329691], [1518.0, 90.41666666666666], [1490.0, 58.27272727272727], [1498.0, 27.61885245901639], [1546.0, 77.08979591836727], [1558.0, 81.12476119279036], [1554.0, 52.77108433734942], [1562.0, 64.7272727272727], [1542.0, 97.24834874504621], [1566.0, 92.78461538461536], [1538.0, 130.11363636363637], [1550.0, 42.42857142857142], [1590.0, 68.23], [1586.0, 70.9007071302298], [1594.0, 83.28986587183311], [1598.0, 45.822029576746445], [1570.0, 85.99445676274946], [1574.0, 58.23342175066313], [1582.0, 133.37226277372258], [1578.0, 53.02564102564102], [1614.0, 35.400702987697706], [1606.0, 38.48571428571428], [1602.0, 105.02450980392159], [1610.0, 62.69911504424779], [1650.0, 44.39740820734344], [1654.0, 37.91566265060242], [1658.0, 33.99612403100774], [1662.0, 76.52124183006528], [1638.0, 33.07692307692306], [1634.0, 107.25742574257423], [1646.0, 25.240274599542328], [1642.0, 65.42862994061043], [1618.0, 55.73504273504274], [1626.0, 65.64705882352942], [1622.0, 63.95415318230843], [1630.0, 65.38749468311359], [1718.0, 75.13068181818181], [1670.0, 39.982142857142854], [1694.0, 86.17879417879418], [1666.0, 73.91522762951337], [1690.0, 56.99738219895288], [1678.0, 176.89830508474577], [1674.0, 21.86868686868688], [1714.0, 226.98178137651837], [1702.0, 74.65957446808513], [1698.0, 73.8040293040294], [1710.0, 85.17252590936789], [1706.0, 55.35789473684212], [1682.0, 85.522502744237], [1686.0, 46.00746268656719], [1726.0, 99.29746835443042], [1722.0, 100.48151658767762], [1734.0, 101.87227414330222], [1730.0, 74.92868462757536], [1758.0, 71.19684082624543], [1754.0, 78.68377935554346], [1750.0, 72.81139489194507], [1738.0, 69.52238805970151], [1742.0, 81.08042895442355], [1778.0, 129.5131195335277], [1782.0, 87.64761904761903], [1786.0, 19.587060702875366], [1790.0, 62.96448254745866], [1762.0, 72.28099173553719], [1766.0, 72.56243550051589], [1770.0, 66.59805825242712], [1774.0, 56.83685220729368], [1746.0, 109.24179431072218], [1802.0, 38.06874999999996], [1794.0, 82.98169717138084], [1818.0, 80.100332426715], [1822.0, 80.04858934169273], [1814.0, 53.57993730407525], [1798.0, 28.07662835249043], [1854.0, 54.20921985815604], [1850.0, 62.961274618278445], [1846.0, 87.93947772657447], [1842.0, 87.54148409894027], [1806.0, 129.60252365930603], [1826.0, 95.55660377358491], [1830.0, 31.86206896551724], [1834.0, 94.9198664440734], [1838.0, 43.52046783625734], [1810.0, 97.86956521739127], [1862.0, 65.69031377899042], [1886.0, 50.218390804597696], [1882.0, 87.9503816793894], [1878.0, 64.39473684210529], [1858.0, 41.119565217391305], [1866.0, 71.58943781942078], [1870.0, 104.83236994219648], [1894.0, 76.70514950166141], [1890.0, 64.34848484848486], [1918.0, 93.52238805970156], [1914.0, 114.36608863198462], [1910.0, 109.10169491525423], [1906.0, 175.375], [1898.0, 73.49510763209392], [1902.0, 85.00554471711747], [1874.0, 83.94189602446478], [1974.0, 38.51807228915661], [1922.0, 69.07446808510635], [1950.0, 71.87023109530985], [1946.0, 104.43502824858756], [1942.0, 101.18556701030926], [1938.0, 84.25162220620057], [1930.0, 96.89940828402362], [1926.0, 73.46288832913518], [1954.0, 126.44393291680342], [1958.0, 154.18484288354884], [1966.0, 80.56511536957362], [1962.0, 55.44927536231883], [1982.0, 61.325203252032516], [1978.0, 36.61538461538462], [1970.0, 72.34341252699785], [1934.0, 74.38478747203574], [1998.0, 89.81830985915484], [2046.0, 70.69696969696967], [2042.0, 21.0], [2038.0, 114.37046004842618], [2034.0, 87.12103258569618], [2026.0, 106.30183003259002], [2030.0, 106.31249999999999], [2022.0, 79.17241379310343], [2018.0, 92.81818181818183], [2010.0, 93.33043130191116], [2006.0, 91.49203539823006], [2002.0, 82.0], [1994.0, 104.52173913043478], [1990.0, 182.6759776536312], [2014.0, 62.495145631067956], [1986.0, 141.36585365853662], [2156.0, 137.02527805864509], [2164.0, 42.79696616102681], [2148.0, 22.892857142857128], [2076.0, 81.25000000000003], [2068.0, 70.61740041928711], [2060.0, 77.27719877986783], [2108.0, 36.02777777777778], [2052.0, 109.36880072137068], [2140.0, 38.6], [2132.0, 16.055555555555554], [2124.0, 30.74197860962567], [2116.0, 86.11053719008285], [2172.0, 32.5], [2100.0, 27.69407603890364], [2092.0, 93.08022388059693], [2084.0, 56.79191919191922], [2276.0, 277.0], [2292.0, 428.4], [2244.0, 11.551020408163264], [2300.0, 550.0], [2284.0, 271.5], [2228.0, 56.40909090909091], [2236.0, 15.333333333333334], [2188.0, 31.47692307692307], [2180.0, 40.2], [2204.0, 17.235294117647058], [2196.0, 46.62499999999999], [2220.0, 20.399999999999995], [2212.0, 26.269230769230774], [2260.0, 6.6], [2268.0, 3.0], [2252.0, 6.9], [2324.0, 3.0], [2396.0, 100.67441860465112], [2388.0, 3.0], [2380.0, 3.0], [2316.0, 244.45454545454544], [2308.0, 519.8571428571429], [2332.0, 348.33333333333337], [2348.0, 512.0], [2356.0, 1.0], [2364.0, 517.75], [2173.0, 2.0], [2165.0, 41.49000000000001], [2133.0, 34.48], [2125.0, 28.185483870967744], [2117.0, 66.86335403726713], [2109.0, 48.650000000000006], [2085.0, 39.78087649402393], [2101.0, 118.79676352879764], [2093.0, 84.60548523206745], [2077.0, 79.89827618867194], [2069.0, 42.82996432818073], [2061.0, 74.97096498719033], [2053.0, 92.9695121951221], [2149.0, 25.584729981378036], [2141.0, 41.51851851851853], [2293.0, 261.2], [2245.0, 10.500000000000002], [2301.0, 534.4285714285714], [2237.0, 13.277777777777782], [2189.0, 30.714285714285715], [2181.0, 49.0], [2205.0, 21.923076923076923], [2197.0, 32.0], [2277.0, 560.5], [2285.0, 550.0], [2229.0, 12.166666666666666], [2213.0, 17.0], [2221.0, 22.357142857142854], [2269.0, 4.071428571428571], [2261.0, 5.6], [2253.0, 9.01754385964912], [2333.0, 3.0], [2397.0, 3.0], [2389.0, 2.0], [2381.0, 4.0], [2325.0, 3.25], [2317.0, 300.3428571428572], [2309.0, 166.66666666666666], [2365.0, 3.25], [2357.0, 263.0], [2341.0, 2.5], [2349.0, 529.6666666666666], [1079.0, 57.13636363636363], [1027.0, 21.89090909090909], [1035.0, 21.0], [1031.0, 25.09375], [1055.0, 49.72222222222222], [1051.0, 49.853146853146875], [1047.0, 44.21739130434782], [1043.0, 48.71317201813584], [1039.0, 51.833333333333336], [1075.0, 51.57142857142857], [1083.0, 20.622222222222216], [1087.0, 51.93658536585367], [1059.0, 55.67272727272727], [1063.0, 50.95454545454545], [1067.0, 61.70512820512821], [1071.0, 71.76466916354546], [1099.0, 25.923076923076923], [1095.0, 31.983050847457633], [1091.0, 24.84], [1119.0, 70.06400000000001], [1111.0, 28.11952191235059], [1107.0, 89.28571428571429], [1115.0, 25.69224555735058], [1103.0, 207.56666666666663], [1139.0, 89.74305555555559], [1143.0, 42.003083021360936], [1147.0, 46.52147239263806], [1151.0, 50.74592263108225], [1123.0, 33.28205128205126], [1127.0, 50.61984483462628], [1131.0, 48.64202334630349], [1135.0, 118.85333333333334], [1159.0, 68.20748299319727], [1155.0, 47.909946236559136], [1183.0, 150.36474164133733], [1179.0, 46.007462686567145], [1175.0, 22.345679012345673], [1163.0, 43.554123711340246], [1167.0, 42.34703131642333], [1203.0, 29.306122448979604], [1207.0, 49.54807692307692], [1211.0, 38.28965517241379], [1215.0, 60.32326283987908], [1187.0, 69.87499999999999], [1191.0, 60.849397590361434], [1195.0, 45.111111111111114], [1199.0, 35.88709677419356], [1171.0, 29.40277777777779], [1223.0, 38.803738317757016], [1231.0, 83.62500000000003], [1247.0, 52.37450442207979], [1239.0, 56.05882352941176], [1243.0, 44.9132569558102], [1219.0, 39.76470588235295], [1227.0, 45.565036420395394], [1279.0, 42.0704022988506], [1275.0, 42.97228637413394], [1271.0, 53.54228406216125], [1267.0, 49.52542372881358], [1251.0, 67.0425], [1255.0, 60.886608015640235], [1259.0, 84.05335365853658], [1263.0, 80.43209876543203], [1235.0, 40.019999999999996], [1291.0, 35.59595959595959], [1287.0, 41.07611548556436], [1311.0, 87.32142857142861], [1283.0, 63.847736625514386], [1295.0, 116.70588235294119], [1323.0, 361.33333333333337], [1343.0, 28.276485788113703], [1319.0, 56.55], [1315.0, 70.49242424242422], [1339.0, 22.948916408668733], [1335.0, 40.31468531468532], [1331.0, 52.01739130434781], [1327.0, 59.720108695651945], [1299.0, 43.824786324786324], [1303.0, 60.050000000000004], [1307.0, 83.52325581395351], [1351.0, 25.65562913907284], [1375.0, 40.09782608695656], [1371.0, 36.3409090909091], [1367.0, 45.388888888888886], [1347.0, 24.607142857142875], [1355.0, 28.56647398843931], [1359.0, 544.0338983050848], [1407.0, 39.901041666666664], [1403.0, 33.39780324737345], [1399.0, 54.1978021978022], [1395.0, 41.88732394366198], [1379.0, 35.54716981132077], [1383.0, 57.03821656050956], [1391.0, 40.70610687022908], [1387.0, 62.77049180327866], [1363.0, 351.088888888889], [1415.0, 47.09611231101516], [1439.0, 49.700209643605895], [1435.0, 63.88671128107086], [1431.0, 57.63461538461538], [1411.0, 49.50265017667843], [1419.0, 40.472727272727276], [1423.0, 50.828358208955216], [1463.0, 50.927641099855265], [1459.0, 63.06511627906978], [1443.0, 68.03651019440498], [1471.0, 36.0], [1467.0, 43.91411042944788], [1447.0, 66.69527896995704], [1451.0, 157.41666666666666], [1455.0, 34.5477956324681], [1427.0, 49.59523809523808], [1483.0, 63.37662337662338], [1479.0, 61.214285714285715], [1475.0, 23.371428571428574], [1503.0, 49.1904761904762], [1499.0, 23.45408163265305], [1487.0, 64.3347826086957], [1523.0, 60.30591259640097], [1507.0, 34.6611785095321], [1535.0, 43.416666666666664], [1531.0, 62.03731343283582], [1527.0, 74.90472284073613], [1511.0, 64.40639269406394], [1515.0, 53.415628539071356], [1519.0, 90.41891891891893], [1495.0, 69.29220779220776], [1491.0, 43.49999999999999], [1551.0, 34.25454545454545], [1543.0, 97.0814393939395], [1567.0, 108.94351464435141], [1559.0, 72.81842105263173], [1563.0, 65.00000000000003], [1539.0, 98.296875], [1547.0, 37.7661870503597], [1599.0, 40.06402048655579], [1595.0, 60.78590785907861], [1591.0, 71.32352941176471], [1587.0, 61.666666666666664], [1571.0, 49.17451523545702], [1575.0, 45.68586387434555], [1579.0, 48.87193460490465], [1583.0, 97.13953488372098], [1555.0, 70.10487804878083], [1615.0, 58.149425287356316], [1607.0, 54.49462365591398], [1627.0, 56.900757575757595], [1603.0, 53.667428198433356], [1631.0, 54.665246212121154], [1611.0, 92.3433734939759], [1635.0, 164.3892944038928], [1663.0, 71.73242187500004], [1659.0, 21.425781250000007], [1655.0, 34.9429735234216], [1651.0, 43.33609958506225], [1639.0, 107.17391304347825], [1647.0, 45.42201834862385], [1643.0, 69.96698113207546], [1619.0, 104.49688149688143], [1623.0, 30.235294117647054], [1671.0, 41.16820276497698], [1667.0, 69.02730819245748], [1695.0, 212.8], [1687.0, 34.62777777777777], [1691.0, 70.98282842384462], [1675.0, 19.219512195121947], [1679.0, 166.75], [1723.0, 72.84127528282454], [1719.0, 72.42920353982299], [1715.0, 164.01986754966893], [1699.0, 77.18222011684824], [1703.0, 66.29404900816795], [1711.0, 206.33663366336629], [1707.0, 51.85747663551404], [1727.0, 99.07086614173225], [1683.0, 58.70795660036167], [1743.0, 84.93055555555556], [1735.0, 88.28929765886295], [1731.0, 75.74723247232471], [1759.0, 75.02893309222432], [1755.0, 72.41124260355022], [1739.0, 79.02083333333331], [1791.0, 44.8645833333333], [1787.0, 33.53160919540228], [1783.0, 88.31876606683802], [1779.0, 166.66923076923075], [1763.0, 69.92291220556736], [1767.0, 65.50733137829913], [1771.0, 75.09051094890505], [1775.0, 52.53793103448275], [1747.0, 81.97272727272731], [1751.0, 91.24077072538883], [1803.0, 51.537753222836216], [1795.0, 62.81422924901189], [1819.0, 70.41111111111101], [1823.0, 92.7254348848143], [1815.0, 70.54372623574143], [1799.0, 70.68664745437076], [1843.0, 105.6752577319588], [1807.0, 125.21808510638293], [1847.0, 66.05263157894737], [1851.0, 74.78547354229883], [1855.0, 49.352941176470594], [1831.0, 68.44927536231887], [1827.0, 99.41611842105274], [1835.0, 109.70783132530114], [1839.0, 75.51964191679818], [1811.0, 67.4361111111111], [1863.0, 86.63054187192118], [1883.0, 78.4279475982533], [1879.0, 73.99695740365104], [1859.0, 27.149201402415255], [1887.0, 50.21834793958583], [1867.0, 80.21222707423574], [1871.0, 222.77777777777777], [1919.0, 90.33547033453833], [1915.0, 129.1019736842104], [1907.0, 152.140350877193], [1891.0, 66.96839959225272], [1895.0, 90.96651090342681], [1899.0, 71.78968253968257], [1903.0, 136.14978448275866], [1875.0, 65.74752475247523], [1931.0, 98.37735849056604], [1951.0, 20.929230769230788], [1947.0, 102.49859154929582], [1943.0, 101.81333333333335], [1939.0, 83.54545454545453], [1927.0, 61.01492537313434], [1923.0, 64.60937500000003], [1955.0, 56.77068214804066], [1959.0, 86.7015706806283], [1963.0, 41.12021563342321], [1967.0, 74.9975062344139], [1983.0, 57.66137040714996], [1979.0, 31.035842293906818], [1975.0, 46.212461695607715], [1971.0, 78.11904761904766], [1935.0, 60.47022587268993], [1995.0, 132.3893805309734], [2047.0, 78.36781609195401], [2035.0, 100.05619834710711], [1999.0, 88.26018808777431], [2043.0, 86.67195767195767], [2039.0, 119.98529411764707], [2031.0, 97.48317046688376], [2027.0, 215.20454545454538], [2023.0, 62.87499999999999], [2019.0, 89.85212527964208], [2011.0, 108.30944831959413], [2007.0, 97.23476005188067], [2003.0, 109.95427092320958], [1991.0, 99.36600306278717], [2015.0, 72.58939096267196], [1987.0, 124.35714285714288], [2166.0, 106.66666666666667], [2142.0, 21.5], [2094.0, 93.13903394255908], [2086.0, 45.29067245119305], [2078.0, 82.08174144824503], [2150.0, 17.911764705882348], [2134.0, 22.705555555555552], [2126.0, 6.926470588235294], [2118.0, 78.65521628498716], [2110.0, 79.79304635761585], [2054.0, 72.2114695340502], [2070.0, 99.18133616118773], [2062.0, 58.30158730158729], [2102.0, 89.86725663716815], [2286.0, 358.1739130434783], [2302.0, 2.6666666666666665], [2254.0, 7.205882352941176], [2246.0, 12.0], [2294.0, 325.6666666666667], [2278.0, 3.0], [2206.0, 24.450000000000003], [2198.0, 29.000000000000007], [2190.0, 30.625], [2182.0, 46.836956521739125], [2238.0, 12.27777777777778], [2230.0, 32.9], [2222.0, 19.4959349593496], [2214.0, 29.5], [2270.0, 4.066666666666666], [2262.0, 7.0], [2318.0, 244.94117647058823], [2398.0, 175.11111111111111], [2390.0, 3.0], [2374.0, 3.0], [2366.0, 3.0], [2350.0, 4.0], [2358.0, 135.25], [2310.0, 454.2270270270271], [2334.0, 453.5714285714286], [2342.0, 514.0], [2167.0, 34.75], [2175.0, 37.42424242424242], [2159.0, 2.5], [2151.0, 6.0], [2135.0, 9.402777777777777], [2127.0, 24.174757281553394], [2119.0, 95.36585365853655], [2095.0, 99.54389312977096], [2087.0, 49.45833333333333], [2079.0, 75.88799999999999], [2071.0, 127.66077738515929], [2063.0, 60.33898305084744], [2055.0, 84.67557549746387], [2111.0, 74.66298342541432], [2103.0, 28.733333333333338], [2199.0, 24.65217391304348], [2287.0, 156.33333333333337], [2207.0, 29.300000000000004], [2263.0, 5.875], [2255.0, 7.0], [2271.0, 1.6666666666666665], [2247.0, 9.763157894736842], [2239.0, 9.5], [2231.0, 12.0], [2215.0, 19.810810810810807], [2223.0, 17.999999999999996], [2191.0, 23.666666666666668], [2183.0, 40.523605150214564], [2399.0, 316.7795497185738], [2359.0, 154.5], [2311.0, 218.0], [2319.0, 315.73684210526307], [2351.0, 3.0], [2335.0, 350.6666666666667], [2343.0, 348.0], [2367.0, 526.0]], "isOverall": false, "label": "user2role", "isController": false}, {"data": [[2085.7005697902036, 86.31611135436296]], "isOverall": false, "label": "user2role-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 398436.63333333336, "minX": 1.62666486E12, "maxY": 5360030.9, "series": [{"data": [[1.62666522E12, 398436.63333333336], [1.62666504E12, 2461543.6666666665], [1.6266651E12, 2498112.316666667], [1.62666492E12, 2200029.3666666667], [1.62666498E12, 2473999.3666666667], [1.62666486E12, 1288315.4166666667], [1.62666516E12, 2446137.8333333335]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62666522E12, 854868.35], [1.62666504E12, 5281584.116666666], [1.6266651E12, 5360030.9], [1.62666492E12, 4713838.616666666], [1.62666498E12, 5308308.6], [1.62666486E12, 2751154.45], [1.62666516E12, 5248557.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666522E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 37.65624599755797, "minX": 1.62666486E12, "maxY": 100.4672174759498, "series": [{"data": [[1.62666522E12, 42.5324052333121], [1.62666504E12, 100.4672174759498], [1.6266651E12, 97.24020017620641], [1.62666492E12, 85.50699836655993], [1.62666498E12, 100.41100442050329], [1.62666486E12, 37.65624599755797], [1.62666516E12, 80.14576249997569]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666522E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 37.650074816396476, "minX": 1.62666486E12, "maxY": 100.46667396792357, "series": [{"data": [[1.62666522E12, 42.53204671806952], [1.62666504E12, 100.46667396792357], [1.6266651E12, 97.23978864561884], [1.62666492E12, 85.50653558905488], [1.62666498E12, 100.4107035399789], [1.62666486E12, 37.650074816396476], [1.62666516E12, 80.14529946162651]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666522E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.09884416705800124, "minX": 1.62666486E12, "maxY": 0.6059059068733005, "series": [{"data": [[1.62666522E12, 0.09884416705800124], [1.62666504E12, 0.5274504243040654], [1.6266651E12, 0.6059059068733005], [1.62666492E12, 0.34625360573184616], [1.62666498E12, 0.5690309370232484], [1.62666486E12, 0.4305300874367846], [1.62666516E12, 0.40331463086058456]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666522E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.62666486E12, "maxY": 3711.0, "series": [{"data": [[1.62666522E12, 320.0], [1.62666504E12, 3696.0], [1.6266651E12, 3711.0], [1.62666492E12, 2841.0], [1.62666498E12, 2192.0], [1.62666486E12, 1706.0], [1.62666516E12, 3571.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62666522E12, 40.0], [1.62666504E12, 154.0], [1.6266651E12, 154.0], [1.62666492E12, 146.0], [1.62666498E12, 182.0], [1.62666486E12, 76.0], [1.62666516E12, 99.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62666522E12, 87.0], [1.62666504E12, 231.0], [1.6266651E12, 294.9900000000016], [1.62666492E12, 308.0], [1.62666498E12, 389.0], [1.62666486E12, 508.0], [1.62666516E12, 245.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62666522E12, 54.0], [1.62666504E12, 176.0], [1.6266651E12, 175.0], [1.62666492E12, 167.0], [1.62666498E12, 322.0], [1.62666486E12, 100.0], [1.62666516E12, 137.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62666522E12, 1.0], [1.62666504E12, 1.0], [1.6266651E12, 1.0], [1.62666492E12, 1.0], [1.62666498E12, 1.0], [1.62666486E12, 1.0], [1.62666516E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62666522E12, 23.0], [1.62666504E12, 65.0], [1.6266651E12, 100.0], [1.62666492E12, 98.0], [1.62666498E12, 77.0], [1.62666486E12, 34.0], [1.62666516E12, 49.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666522E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 254.0, "maxY": 486.0, "series": [{"data": [[16715.0, 23.0], [18387.0, 29.0], [17827.0, 95.0], [18035.0, 84.0], [18139.0, 57.0], [18099.0, 23.0], [19203.0, 45.0], [19243.0, 82.0], [19091.0, 75.0], [18971.0, 90.0], [19115.0, 39.0], [20435.0, 57.0], [20235.0, 93.0], [19635.0, 88.0], [20099.0, 63.0], [19699.0, 100.0], [20331.0, 88.0], [20315.0, 96.0], [20459.0, 92.0], [20731.0, 67.0], [21459.0, 87.0], [21123.0, 96.0], [21131.0, 47.0], [21363.0, 89.0], [21075.0, 88.0], [20875.0, 49.0], [20523.0, 82.0], [20963.0, 78.0], [20691.0, 78.0], [20579.0, 58.0], [21771.0, 91.0], [22179.0, 91.0], [21915.0, 48.0], [21995.0, 65.0], [21643.0, 57.0], [22555.0, 87.0], [22635.0, 90.0], [8205.0, 35.0], [8521.0, 35.0], [8893.0, 33.0], [9829.0, 27.0], [11521.0, 35.0], [12173.0, 30.0], [12629.0, 41.0], [12985.0, 15.0], [14621.0, 15.0], [14813.0, 100.0], [15409.0, 25.0], [16077.0, 30.0], [16081.0, 31.0], [16321.0, 44.0], [16109.0, 41.0], [15965.0, 86.0], [16994.0, 94.0], [16874.0, 84.0], [17650.0, 29.0], [17706.0, 70.0], [18162.0, 79.0], [17610.0, 89.0], [19426.0, 87.0], [19434.0, 80.0], [18650.0, 84.0], [19362.0, 76.0], [19258.0, 79.0], [18490.0, 39.0], [19178.0, 61.0], [20178.0, 37.0], [19874.0, 100.0], [20474.0, 65.0], [20426.0, 106.0], [20002.0, 79.0], [20010.0, 69.0], [19866.0, 35.0], [20626.0, 100.0], [20690.0, 77.0], [21202.0, 80.0], [21154.0, 63.0], [20498.0, 88.0], [21434.0, 40.0], [21618.0, 83.0], [21714.0, 70.0], [22418.0, 76.0], [21594.0, 99.0], [22186.0, 84.0], [22058.0, 67.0], [22674.0, 84.0], [24186.0, 68.0], [254.0, 486.0], [342.0, 7.0], [956.0, 11.0], [17233.0, 19.0], [16937.0, 29.0], [17985.0, 25.0], [18329.0, 30.0], [18929.0, 98.0], [19321.0, 84.0], [19553.0, 64.0], [19505.0, 72.0], [20353.0, 77.0], [20049.0, 89.0], [20169.0, 86.0], [19721.0, 82.0], [19705.0, 77.0], [20489.0, 36.0], [20889.0, 78.0], [20705.0, 83.0], [20561.0, 71.0], [20817.0, 96.0], [21161.0, 81.0], [20681.0, 88.0], [20513.0, 79.0], [21025.0, 95.0], [21313.0, 82.0], [21785.0, 39.0], [21705.0, 96.0], [21729.0, 92.0], [21977.0, 71.0], [22553.0, 64.0], [23753.0, 89.0], [4314.0, 10.0], [5398.0, 18.0], [6028.0, 37.0], [6464.0, 16.0], [6624.0, 22.0], [6858.0, 40.0], [7238.0, 26.0], [7460.0, 28.0], [10232.0, 41.0], [11476.0, 13.0], [14392.0, 51.0], [15716.0, 17.0], [15796.0, 19.0], [15832.0, 25.0], [15588.0, 19.0], [16152.0, 26.0], [17448.0, 19.0], [17424.0, 33.0], [18056.0, 71.0], [18040.0, 83.0], [18264.0, 101.0], [17664.0, 102.0], [17872.0, 83.0], [18960.0, 85.0], [18688.0, 26.0], [19176.0, 100.0], [19072.0, 96.0], [18752.0, 91.0], [19360.0, 57.0], [19352.0, 58.0], [19064.0, 99.0], [18856.0, 99.0], [18904.0, 72.0], [19552.0, 87.0], [20056.0, 70.0], [20072.0, 98.0], [20336.0, 81.0], [19960.0, 82.0], [19752.0, 68.0], [19864.0, 60.0], [19816.0, 65.0], [20096.0, 57.0], [20864.0, 66.0], [20696.0, 79.0], [20752.0, 80.0], [20744.0, 86.0], [21088.0, 91.0], [20520.0, 83.0], [20640.0, 77.0], [20616.0, 76.0], [21112.0, 86.0], [20736.0, 90.0], [21992.0, 61.0], [21768.0, 97.0], [22464.0, 64.0], [21584.0, 69.0], [22520.0, 95.0], [22808.0, 88.0], [22728.0, 60.0], [23584.0, 85.0], [16671.0, 24.0], [17279.0, 31.0], [17703.0, 38.0], [18351.0, 57.0], [18247.0, 71.0], [18759.0, 34.0], [19039.0, 61.0], [19159.0, 87.0], [18887.0, 99.0], [18847.0, 69.0], [19063.0, 61.0], [18831.0, 55.0], [19511.0, 50.0], [19559.0, 92.0], [19815.0, 94.0], [19951.0, 98.0], [19807.0, 88.0], [20295.0, 43.0], [20399.0, 79.0], [19743.0, 77.0], [20567.0, 63.0], [20575.0, 106.0], [20767.0, 76.0], [20943.0, 86.0], [20527.0, 91.0], [20503.0, 91.0], [20703.0, 95.0], [21175.0, 82.0], [21167.0, 102.0], [20639.0, 67.0], [21727.0, 88.0], [21863.0, 82.0], [21823.0, 87.0], [22271.0, 78.0], [21983.0, 79.0], [21799.0, 92.0], [21783.0, 88.0], [21959.0, 74.0], [22071.0, 87.0], [22311.0, 94.0], [22351.0, 73.0], [22607.0, 71.0], [23599.0, 82.0], [24615.0, 77.0], [15927.0, 27.0], [16718.0, 37.0], [17214.0, 36.0], [18078.0, 34.0], [18030.0, 88.0], [17494.0, 88.0], [18182.0, 55.0], [18566.0, 81.0], [19270.0, 101.0], [18750.0, 96.0], [19366.0, 95.0], [18950.0, 86.0], [19150.0, 79.0], [19326.0, 69.0], [18526.0, 81.0], [19374.0, 79.0], [19262.0, 99.0], [19694.0, 98.0], [20182.0, 92.0], [19710.0, 95.0], [20110.0, 73.0], [21070.0, 79.0], [21046.0, 101.0], [21086.0, 85.0], [21126.0, 86.0], [20982.0, 101.0], [20590.0, 76.0], [21078.0, 85.0], [20878.0, 77.0], [21294.0, 63.0], [21550.0, 93.0], [22102.0, 69.0], [22470.0, 85.0], [22086.0, 86.0], [23182.0, 89.0], [23294.0, 87.0], [22630.0, 42.0], [24462.0, 58.0], [17157.0, 24.0], [17445.0, 79.0], [17805.0, 93.0], [17837.0, 76.0], [18165.0, 71.0], [19389.0, 39.0], [18525.0, 85.0], [19381.0, 74.0], [18517.0, 104.0], [18837.0, 106.0], [19117.0, 97.0], [20213.0, 101.0], [19533.0, 63.0], [20117.0, 93.0], [19717.0, 68.0], [19509.0, 87.0], [19981.0, 54.0], [19941.0, 64.0], [20405.0, 48.0], [20509.0, 105.0], [21421.0, 96.0], [21365.0, 59.0], [20805.0, 70.0], [21045.0, 64.5], [21429.0, 71.0], [21237.0, 79.0], [21901.0, 78.0], [21749.0, 90.0], [21957.0, 79.0], [22349.0, 80.0], [21717.0, 61.0], [23325.0, 77.0], [23093.0, 73.0], [4489.0, 19.0], [6529.0, 27.0], [6877.0, 35.0], [7375.0, 19.0], [7239.0, 30.0], [7547.0, 23.0], [8009.0, 66.0], [9086.0, 33.0], [13706.0, 34.0], [15254.0, 20.0], [15274.0, 13.0], [14962.0, 27.0], [15726.0, 26.0], [15878.0, 21.0], [15942.0, 35.0], [16214.0, 54.0], [16948.0, 117.0], [16452.0, 88.0], [17228.0, 81.0], [18196.0, 26.0], [17492.0, 34.0], [18148.0, 101.0], [18132.0, 92.0], [18508.0, 86.0], [19332.0, 89.0], [18772.0, 86.0], [19340.0, 99.0], [19132.0, 91.0], [19252.0, 93.0], [18804.0, 75.0], [18692.0, 101.0], [19436.0, 56.0], [19692.0, 46.0], [20172.0, 94.0], [20244.0, 79.0], [19764.0, 69.0], [19748.0, 57.0], [20204.0, 42.0], [19652.0, 49.0], [20092.0, 44.0], [21484.0, 97.0], [20716.0, 70.0], [20532.0, 98.0], [21180.0, 88.0], [21444.0, 77.0], [21140.0, 90.0], [20996.0, 86.0], [20836.0, 82.0], [20900.0, 43.0], [21164.0, 70.0], [21940.0, 93.0], [22076.0, 90.0], [22020.0, 89.0], [21748.0, 88.0], [21660.0, 56.0], [23300.0, 82.0], [23236.0, 72.0], [22940.0, 67.0], [23148.0, 91.0], [22684.0, 80.0], [23316.0, 87.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 24615.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 254.0, "maxY": 486.0, "series": [{"data": [[16715.0, 23.0], [18387.0, 29.0], [17827.0, 95.0], [18035.0, 84.0], [18139.0, 57.0], [18099.0, 23.0], [19203.0, 45.0], [19243.0, 82.0], [19091.0, 75.0], [18971.0, 90.0], [19115.0, 39.0], [20435.0, 57.0], [20235.0, 93.0], [19635.0, 88.0], [20099.0, 63.0], [19699.0, 100.0], [20331.0, 88.0], [20315.0, 96.0], [20459.0, 92.0], [20731.0, 67.0], [21459.0, 87.0], [21123.0, 96.0], [21131.0, 47.0], [21363.0, 89.0], [21075.0, 88.0], [20875.0, 49.0], [20523.0, 82.0], [20963.0, 78.0], [20691.0, 78.0], [20579.0, 58.0], [21771.0, 91.0], [22179.0, 91.0], [21915.0, 48.0], [21995.0, 65.0], [21643.0, 57.0], [22555.0, 87.0], [22635.0, 90.0], [8205.0, 35.0], [8521.0, 35.0], [8893.0, 33.0], [9829.0, 27.0], [11521.0, 35.0], [12173.0, 30.0], [12629.0, 41.0], [12985.0, 15.0], [14621.0, 15.0], [14813.0, 100.0], [15409.0, 25.0], [16077.0, 30.0], [16081.0, 31.0], [16321.0, 44.0], [16109.0, 41.0], [15965.0, 86.0], [16994.0, 94.0], [16874.0, 84.0], [17650.0, 29.0], [17706.0, 70.0], [18162.0, 79.0], [17610.0, 89.0], [19426.0, 87.0], [19434.0, 80.0], [18650.0, 84.0], [19362.0, 76.0], [19258.0, 79.0], [18490.0, 39.0], [19178.0, 61.0], [20178.0, 37.0], [19874.0, 100.0], [20474.0, 65.0], [20426.0, 106.0], [20002.0, 79.0], [20010.0, 69.0], [19866.0, 35.0], [20626.0, 100.0], [20690.0, 77.0], [21202.0, 80.0], [21154.0, 63.0], [20498.0, 88.0], [21434.0, 40.0], [21618.0, 83.0], [21714.0, 70.0], [22418.0, 76.0], [21594.0, 99.0], [22186.0, 84.0], [22058.0, 67.0], [22674.0, 84.0], [24186.0, 68.0], [254.0, 486.0], [342.0, 7.0], [956.0, 11.0], [17233.0, 19.0], [16937.0, 29.0], [17985.0, 25.0], [18329.0, 30.0], [18929.0, 98.0], [19321.0, 84.0], [19553.0, 64.0], [19505.0, 72.0], [20353.0, 77.0], [20049.0, 89.0], [20169.0, 86.0], [19721.0, 82.0], [19705.0, 77.0], [20489.0, 36.0], [20889.0, 78.0], [20705.0, 83.0], [20561.0, 71.0], [20817.0, 96.0], [21161.0, 81.0], [20681.0, 88.0], [20513.0, 79.0], [21025.0, 95.0], [21313.0, 82.0], [21785.0, 39.0], [21705.0, 96.0], [21729.0, 92.0], [21977.0, 71.0], [22553.0, 64.0], [23753.0, 89.0], [4314.0, 10.0], [5398.0, 18.0], [6028.0, 37.0], [6464.0, 16.0], [6624.0, 22.0], [6858.0, 40.0], [7238.0, 26.0], [7460.0, 28.0], [10232.0, 41.0], [11476.0, 13.0], [14392.0, 51.0], [15716.0, 17.0], [15796.0, 19.0], [15832.0, 25.0], [15588.0, 19.0], [16152.0, 26.0], [17448.0, 19.0], [17424.0, 33.0], [18056.0, 71.0], [18040.0, 83.0], [18264.0, 101.0], [17664.0, 102.0], [17872.0, 83.0], [18960.0, 85.0], [18688.0, 26.0], [19176.0, 100.0], [19072.0, 96.0], [18752.0, 91.0], [19360.0, 57.0], [19352.0, 58.0], [19064.0, 99.0], [18856.0, 99.0], [18904.0, 72.0], [19552.0, 87.0], [20056.0, 70.0], [20072.0, 98.0], [20336.0, 81.0], [19960.0, 82.0], [19752.0, 68.0], [19864.0, 60.0], [19816.0, 65.0], [20096.0, 57.0], [20864.0, 66.0], [20696.0, 79.0], [20752.0, 80.0], [20744.0, 86.0], [21088.0, 91.0], [20520.0, 83.0], [20640.0, 77.0], [20616.0, 76.0], [21112.0, 86.0], [20736.0, 90.0], [21992.0, 61.0], [21768.0, 97.0], [22464.0, 64.0], [21584.0, 69.0], [22520.0, 95.0], [22808.0, 88.0], [22728.0, 60.0], [23584.0, 85.0], [16671.0, 24.0], [17279.0, 31.0], [17703.0, 38.0], [18351.0, 57.0], [18247.0, 71.0], [18759.0, 34.0], [19039.0, 61.0], [19159.0, 87.0], [18887.0, 99.0], [18847.0, 69.0], [19063.0, 61.0], [18831.0, 55.0], [19511.0, 50.0], [19559.0, 92.0], [19815.0, 94.0], [19951.0, 98.0], [19807.0, 88.0], [20295.0, 43.0], [20399.0, 79.0], [19743.0, 77.0], [20567.0, 63.0], [20575.0, 106.0], [20767.0, 76.0], [20943.0, 86.0], [20527.0, 91.0], [20503.0, 91.0], [20703.0, 95.0], [21175.0, 82.0], [21167.0, 102.0], [20639.0, 67.0], [21727.0, 88.0], [21863.0, 82.0], [21823.0, 87.0], [22271.0, 78.0], [21983.0, 79.0], [21799.0, 92.0], [21783.0, 88.0], [21959.0, 74.0], [22071.0, 87.0], [22311.0, 94.0], [22351.0, 73.0], [22607.0, 71.0], [23599.0, 82.0], [24615.0, 77.0], [15927.0, 27.0], [16718.0, 37.0], [17214.0, 36.0], [18078.0, 34.0], [18030.0, 88.0], [17494.0, 88.0], [18182.0, 55.0], [18566.0, 81.0], [19270.0, 101.0], [18750.0, 96.0], [19366.0, 95.0], [18950.0, 86.0], [19150.0, 79.0], [19326.0, 69.0], [18526.0, 81.0], [19374.0, 79.0], [19262.0, 99.0], [19694.0, 98.0], [20182.0, 92.0], [19710.0, 95.0], [20110.0, 73.0], [21070.0, 79.0], [21046.0, 101.0], [21086.0, 85.0], [21126.0, 86.0], [20982.0, 101.0], [20590.0, 76.0], [21078.0, 85.0], [20878.0, 77.0], [21294.0, 63.0], [21550.0, 93.0], [22102.0, 69.0], [22470.0, 85.0], [22086.0, 86.0], [23182.0, 89.0], [23294.0, 87.0], [22630.0, 42.0], [24462.0, 58.0], [17157.0, 24.0], [17445.0, 79.0], [17805.0, 93.0], [17837.0, 76.0], [18165.0, 71.0], [19389.0, 39.0], [18525.0, 85.0], [19381.0, 74.0], [18517.0, 104.0], [18837.0, 106.0], [19117.0, 97.0], [20213.0, 101.0], [19533.0, 63.0], [20117.0, 93.0], [19717.0, 68.0], [19509.0, 87.0], [19981.0, 54.0], [19941.0, 64.0], [20405.0, 48.0], [20509.0, 105.0], [21421.0, 96.0], [21365.0, 59.0], [20805.0, 70.0], [21045.0, 64.5], [21429.0, 71.0], [21237.0, 79.0], [21901.0, 78.0], [21749.0, 90.0], [21957.0, 79.0], [22349.0, 80.0], [21717.0, 61.0], [23325.0, 77.0], [23093.0, 73.0], [4489.0, 19.0], [6529.0, 27.0], [6877.0, 35.0], [7375.0, 19.0], [7239.0, 30.0], [7547.0, 23.0], [8009.0, 66.0], [9086.0, 33.0], [13706.0, 34.0], [15254.0, 20.0], [15274.0, 13.0], [14962.0, 27.0], [15726.0, 26.0], [15878.0, 21.0], [15942.0, 35.0], [16214.0, 54.0], [16948.0, 117.0], [16452.0, 88.0], [17228.0, 81.0], [18196.0, 26.0], [17492.0, 34.0], [18148.0, 101.0], [18132.0, 92.0], [18508.0, 86.0], [19332.0, 89.0], [18772.0, 86.0], [19340.0, 99.0], [19132.0, 91.0], [19252.0, 93.0], [18804.0, 75.0], [18692.0, 101.0], [19436.0, 56.0], [19692.0, 46.0], [20172.0, 94.0], [20244.0, 79.0], [19764.0, 69.0], [19748.0, 57.0], [20204.0, 42.0], [19652.0, 49.0], [20092.0, 44.0], [21484.0, 97.0], [20716.0, 70.0], [20532.0, 98.0], [21180.0, 88.0], [21444.0, 77.0], [21140.0, 90.0], [20996.0, 86.0], [20836.0, 82.0], [20900.0, 43.0], [21164.0, 70.0], [21940.0, 93.0], [22076.0, 90.0], [22020.0, 89.0], [21748.0, 88.0], [21660.0, 56.0], [23300.0, 82.0], [23236.0, 72.0], [22940.0, 67.0], [23148.0, 91.0], [22684.0, 80.0], [23316.0, 87.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 24615.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3281.0666666666666, "minX": 1.62666486E12, "maxY": 20715.383333333335, "series": [{"data": [[1.62666522E12, 3281.0666666666666], [1.62666504E12, 20380.833333333332], [1.6266651E12, 20715.383333333335], [1.62666492E12, 18240.666666666668], [1.62666498E12, 20489.433333333334], [1.62666486E12, 10690.266666666666], [1.62666516E12, 20244.283333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666522E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3300.65, "minX": 1.62666486E12, "maxY": 20695.1, "series": [{"data": [[1.62666522E12, 3300.65], [1.62666504E12, 20392.216666666667], [1.6266651E12, 20695.1], [1.62666492E12, 18223.3], [1.62666498E12, 20495.4], [1.62666486E12, 10670.566666666668], [1.62666516E12, 20264.7]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666522E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3300.65, "minX": 1.62666486E12, "maxY": 20695.1, "series": [{"data": [[1.62666522E12, 3300.65], [1.62666504E12, 20392.216666666667], [1.6266651E12, 20695.1], [1.62666492E12, 18223.3], [1.62666498E12, 20495.4], [1.62666486E12, 10670.566666666668], [1.62666516E12, 20264.7]], "isOverall": false, "label": "user2role-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666522E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3300.65, "minX": 1.62666486E12, "maxY": 20695.1, "series": [{"data": [[1.62666522E12, 3300.65], [1.62666504E12, 20392.216666666667], [1.6266651E12, 20695.1], [1.62666492E12, 18223.3], [1.62666498E12, 20495.4], [1.62666486E12, 10670.566666666668], [1.62666516E12, 20264.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666522E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

