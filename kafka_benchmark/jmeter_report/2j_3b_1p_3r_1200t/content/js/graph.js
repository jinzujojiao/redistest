/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1441.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 8.0], [4.9, 8.0], [5.0, 8.0], [5.1, 9.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 9.0], [5.6, 9.0], [5.7, 9.0], [5.8, 10.0], [5.9, 10.0], [6.0, 10.0], [6.1, 10.0], [6.2, 10.0], [6.3, 10.0], [6.4, 10.0], [6.5, 10.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 12.0], [7.4, 12.0], [7.5, 12.0], [7.6, 12.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 15.0], [9.8, 15.0], [9.9, 15.0], [10.0, 15.0], [10.1, 15.0], [10.2, 15.0], [10.3, 15.0], [10.4, 15.0], [10.5, 16.0], [10.6, 16.0], [10.7, 16.0], [10.8, 16.0], [10.9, 16.0], [11.0, 16.0], [11.1, 16.0], [11.2, 16.0], [11.3, 17.0], [11.4, 17.0], [11.5, 17.0], [11.6, 17.0], [11.7, 17.0], [11.8, 17.0], [11.9, 17.0], [12.0, 17.0], [12.1, 18.0], [12.2, 18.0], [12.3, 18.0], [12.4, 18.0], [12.5, 18.0], [12.6, 18.0], [12.7, 18.0], [12.8, 18.0], [12.9, 19.0], [13.0, 19.0], [13.1, 19.0], [13.2, 19.0], [13.3, 19.0], [13.4, 19.0], [13.5, 19.0], [13.6, 19.0], [13.7, 19.0], [13.8, 20.0], [13.9, 20.0], [14.0, 20.0], [14.1, 20.0], [14.2, 20.0], [14.3, 20.0], [14.4, 20.0], [14.5, 20.0], [14.6, 21.0], [14.7, 21.0], [14.8, 21.0], [14.9, 21.0], [15.0, 21.0], [15.1, 21.0], [15.2, 21.0], [15.3, 21.0], [15.4, 22.0], [15.5, 22.0], [15.6, 22.0], [15.7, 22.0], [15.8, 22.0], [15.9, 22.0], [16.0, 22.0], [16.1, 22.0], [16.2, 22.0], [16.3, 23.0], [16.4, 23.0], [16.5, 23.0], [16.6, 23.0], [16.7, 23.0], [16.8, 23.0], [16.9, 23.0], [17.0, 23.0], [17.1, 23.0], [17.2, 24.0], [17.3, 24.0], [17.4, 24.0], [17.5, 24.0], [17.6, 24.0], [17.7, 24.0], [17.8, 24.0], [17.9, 24.0], [18.0, 24.0], [18.1, 25.0], [18.2, 25.0], [18.3, 25.0], [18.4, 25.0], [18.5, 25.0], [18.6, 25.0], [18.7, 25.0], [18.8, 25.0], [18.9, 25.0], [19.0, 26.0], [19.1, 26.0], [19.2, 26.0], [19.3, 26.0], [19.4, 26.0], [19.5, 26.0], [19.6, 26.0], [19.7, 26.0], [19.8, 26.0], [19.9, 26.0], [20.0, 27.0], [20.1, 27.0], [20.2, 27.0], [20.3, 27.0], [20.4, 27.0], [20.5, 27.0], [20.6, 27.0], [20.7, 27.0], [20.8, 27.0], [20.9, 28.0], [21.0, 28.0], [21.1, 28.0], [21.2, 28.0], [21.3, 28.0], [21.4, 28.0], [21.5, 28.0], [21.6, 28.0], [21.7, 28.0], [21.8, 28.0], [21.9, 29.0], [22.0, 29.0], [22.1, 29.0], [22.2, 29.0], [22.3, 29.0], [22.4, 29.0], [22.5, 29.0], [22.6, 29.0], [22.7, 29.0], [22.8, 29.0], [22.9, 29.0], [23.0, 30.0], [23.1, 30.0], [23.2, 30.0], [23.3, 30.0], [23.4, 30.0], [23.5, 30.0], [23.6, 30.0], [23.7, 30.0], [23.8, 30.0], [23.9, 30.0], [24.0, 30.0], [24.1, 31.0], [24.2, 31.0], [24.3, 31.0], [24.4, 31.0], [24.5, 31.0], [24.6, 31.0], [24.7, 31.0], [24.8, 31.0], [24.9, 31.0], [25.0, 31.0], [25.1, 31.0], [25.2, 31.0], [25.3, 32.0], [25.4, 32.0], [25.5, 32.0], [25.6, 32.0], [25.7, 32.0], [25.8, 32.0], [25.9, 32.0], [26.0, 32.0], [26.1, 32.0], [26.2, 32.0], [26.3, 32.0], [26.4, 32.0], [26.5, 32.0], [26.6, 33.0], [26.7, 33.0], [26.8, 33.0], [26.9, 33.0], [27.0, 33.0], [27.1, 33.0], [27.2, 33.0], [27.3, 33.0], [27.4, 33.0], [27.5, 33.0], [27.6, 33.0], [27.7, 33.0], [27.8, 33.0], [27.9, 33.0], [28.0, 33.0], [28.1, 34.0], [28.2, 34.0], [28.3, 34.0], [28.4, 34.0], [28.5, 34.0], [28.6, 34.0], [28.7, 34.0], [28.8, 34.0], [28.9, 34.0], [29.0, 34.0], [29.1, 34.0], [29.2, 34.0], [29.3, 34.0], [29.4, 34.0], [29.5, 34.0], [29.6, 34.0], [29.7, 34.0], [29.8, 35.0], [29.9, 35.0], [30.0, 35.0], [30.1, 35.0], [30.2, 35.0], [30.3, 35.0], [30.4, 35.0], [30.5, 35.0], [30.6, 35.0], [30.7, 35.0], [30.8, 35.0], [30.9, 35.0], [31.0, 35.0], [31.1, 35.0], [31.2, 35.0], [31.3, 35.0], [31.4, 35.0], [31.5, 35.0], [31.6, 35.0], [31.7, 35.0], [31.8, 35.0], [31.9, 35.0], [32.0, 36.0], [32.1, 36.0], [32.2, 36.0], [32.3, 36.0], [32.4, 36.0], [32.5, 36.0], [32.6, 36.0], [32.7, 36.0], [32.8, 36.0], [32.9, 36.0], [33.0, 36.0], [33.1, 36.0], [33.2, 36.0], [33.3, 36.0], [33.4, 36.0], [33.5, 36.0], [33.6, 36.0], [33.7, 36.0], [33.8, 36.0], [33.9, 36.0], [34.0, 36.0], [34.1, 36.0], [34.2, 36.0], [34.3, 36.0], [34.4, 36.0], [34.5, 36.0], [34.6, 36.0], [34.7, 36.0], [34.8, 37.0], [34.9, 37.0], [35.0, 37.0], [35.1, 37.0], [35.2, 37.0], [35.3, 37.0], [35.4, 37.0], [35.5, 37.0], [35.6, 37.0], [35.7, 37.0], [35.8, 37.0], [35.9, 37.0], [36.0, 37.0], [36.1, 37.0], [36.2, 37.0], [36.3, 37.0], [36.4, 37.0], [36.5, 37.0], [36.6, 37.0], [36.7, 37.0], [36.8, 37.0], [36.9, 37.0], [37.0, 37.0], [37.1, 37.0], [37.2, 37.0], [37.3, 37.0], [37.4, 37.0], [37.5, 37.0], [37.6, 37.0], [37.7, 37.0], [37.8, 37.0], [37.9, 37.0], [38.0, 37.0], [38.1, 37.0], [38.2, 37.0], [38.3, 38.0], [38.4, 38.0], [38.5, 38.0], [38.6, 38.0], [38.7, 38.0], [38.8, 38.0], [38.9, 38.0], [39.0, 38.0], [39.1, 38.0], [39.2, 38.0], [39.3, 38.0], [39.4, 38.0], [39.5, 38.0], [39.6, 38.0], [39.7, 38.0], [39.8, 38.0], [39.9, 38.0], [40.0, 38.0], [40.1, 38.0], [40.2, 38.0], [40.3, 38.0], [40.4, 38.0], [40.5, 38.0], [40.6, 38.0], [40.7, 38.0], [40.8, 38.0], [40.9, 38.0], [41.0, 38.0], [41.1, 38.0], [41.2, 38.0], [41.3, 38.0], [41.4, 38.0], [41.5, 38.0], [41.6, 38.0], [41.7, 38.0], [41.8, 38.0], [41.9, 38.0], [42.0, 38.0], [42.1, 38.0], [42.2, 38.0], [42.3, 38.0], [42.4, 38.0], [42.5, 38.0], [42.6, 38.0], [42.7, 39.0], [42.8, 39.0], [42.9, 39.0], [43.0, 39.0], [43.1, 39.0], [43.2, 39.0], [43.3, 39.0], [43.4, 39.0], [43.5, 39.0], [43.6, 39.0], [43.7, 39.0], [43.8, 39.0], [43.9, 39.0], [44.0, 39.0], [44.1, 39.0], [44.2, 39.0], [44.3, 39.0], [44.4, 39.0], [44.5, 39.0], [44.6, 39.0], [44.7, 39.0], [44.8, 39.0], [44.9, 39.0], [45.0, 39.0], [45.1, 39.0], [45.2, 39.0], [45.3, 39.0], [45.4, 39.0], [45.5, 39.0], [45.6, 39.0], [45.7, 39.0], [45.8, 39.0], [45.9, 39.0], [46.0, 39.0], [46.1, 39.0], [46.2, 39.0], [46.3, 39.0], [46.4, 39.0], [46.5, 39.0], [46.6, 39.0], [46.7, 39.0], [46.8, 39.0], [46.9, 39.0], [47.0, 39.0], [47.1, 39.0], [47.2, 39.0], [47.3, 39.0], [47.4, 39.0], [47.5, 39.0], [47.6, 40.0], [47.7, 40.0], [47.8, 40.0], [47.9, 40.0], [48.0, 40.0], [48.1, 40.0], [48.2, 40.0], [48.3, 40.0], [48.4, 40.0], [48.5, 40.0], [48.6, 40.0], [48.7, 40.0], [48.8, 40.0], [48.9, 40.0], [49.0, 40.0], [49.1, 40.0], [49.2, 40.0], [49.3, 40.0], [49.4, 40.0], [49.5, 40.0], [49.6, 40.0], [49.7, 40.0], [49.8, 40.0], [49.9, 40.0], [50.0, 40.0], [50.1, 40.0], [50.2, 40.0], [50.3, 40.0], [50.4, 40.0], [50.5, 40.0], [50.6, 40.0], [50.7, 40.0], [50.8, 40.0], [50.9, 40.0], [51.0, 40.0], [51.1, 40.0], [51.2, 40.0], [51.3, 40.0], [51.4, 40.0], [51.5, 40.0], [51.6, 40.0], [51.7, 40.0], [51.8, 40.0], [51.9, 40.0], [52.0, 40.0], [52.1, 40.0], [52.2, 40.0], [52.3, 40.0], [52.4, 40.0], [52.5, 40.0], [52.6, 40.0], [52.7, 41.0], [52.8, 41.0], [52.9, 41.0], [53.0, 41.0], [53.1, 41.0], [53.2, 41.0], [53.3, 41.0], [53.4, 41.0], [53.5, 41.0], [53.6, 41.0], [53.7, 41.0], [53.8, 41.0], [53.9, 41.0], [54.0, 41.0], [54.1, 41.0], [54.2, 41.0], [54.3, 41.0], [54.4, 41.0], [54.5, 41.0], [54.6, 41.0], [54.7, 41.0], [54.8, 41.0], [54.9, 41.0], [55.0, 41.0], [55.1, 41.0], [55.2, 41.0], [55.3, 41.0], [55.4, 41.0], [55.5, 41.0], [55.6, 41.0], [55.7, 41.0], [55.8, 41.0], [55.9, 41.0], [56.0, 41.0], [56.1, 41.0], [56.2, 41.0], [56.3, 41.0], [56.4, 41.0], [56.5, 41.0], [56.6, 41.0], [56.7, 41.0], [56.8, 41.0], [56.9, 41.0], [57.0, 41.0], [57.1, 41.0], [57.2, 41.0], [57.3, 41.0], [57.4, 41.0], [57.5, 41.0], [57.6, 41.0], [57.7, 42.0], [57.8, 42.0], [57.9, 42.0], [58.0, 42.0], [58.1, 42.0], [58.2, 42.0], [58.3, 42.0], [58.4, 42.0], [58.5, 42.0], [58.6, 42.0], [58.7, 42.0], [58.8, 42.0], [58.9, 42.0], [59.0, 42.0], [59.1, 42.0], [59.2, 42.0], [59.3, 42.0], [59.4, 42.0], [59.5, 42.0], [59.6, 42.0], [59.7, 42.0], [59.8, 42.0], [59.9, 42.0], [60.0, 42.0], [60.1, 42.0], [60.2, 42.0], [60.3, 42.0], [60.4, 42.0], [60.5, 42.0], [60.6, 42.0], [60.7, 42.0], [60.8, 42.0], [60.9, 42.0], [61.0, 42.0], [61.1, 42.0], [61.2, 42.0], [61.3, 42.0], [61.4, 42.0], [61.5, 42.0], [61.6, 42.0], [61.7, 42.0], [61.8, 42.0], [61.9, 42.0], [62.0, 42.0], [62.1, 42.0], [62.2, 42.0], [62.3, 42.0], [62.4, 43.0], [62.5, 43.0], [62.6, 43.0], [62.7, 43.0], [62.8, 43.0], [62.9, 43.0], [63.0, 43.0], [63.1, 43.0], [63.2, 43.0], [63.3, 43.0], [63.4, 43.0], [63.5, 43.0], [63.6, 43.0], [63.7, 43.0], [63.8, 43.0], [63.9, 43.0], [64.0, 43.0], [64.1, 43.0], [64.2, 43.0], [64.3, 43.0], [64.4, 43.0], [64.5, 43.0], [64.6, 43.0], [64.7, 43.0], [64.8, 43.0], [64.9, 43.0], [65.0, 43.0], [65.1, 43.0], [65.2, 43.0], [65.3, 43.0], [65.4, 43.0], [65.5, 43.0], [65.6, 43.0], [65.7, 43.0], [65.8, 43.0], [65.9, 43.0], [66.0, 43.0], [66.1, 43.0], [66.2, 43.0], [66.3, 43.0], [66.4, 43.0], [66.5, 43.0], [66.6, 43.0], [66.7, 44.0], [66.8, 44.0], [66.9, 44.0], [67.0, 44.0], [67.1, 44.0], [67.2, 44.0], [67.3, 44.0], [67.4, 44.0], [67.5, 44.0], [67.6, 44.0], [67.7, 44.0], [67.8, 44.0], [67.9, 44.0], [68.0, 44.0], [68.1, 44.0], [68.2, 44.0], [68.3, 44.0], [68.4, 44.0], [68.5, 44.0], [68.6, 44.0], [68.7, 44.0], [68.8, 44.0], [68.9, 44.0], [69.0, 44.0], [69.1, 44.0], [69.2, 44.0], [69.3, 44.0], [69.4, 44.0], [69.5, 44.0], [69.6, 44.0], [69.7, 44.0], [69.8, 44.0], [69.9, 44.0], [70.0, 44.0], [70.1, 44.0], [70.2, 44.0], [70.3, 44.0], [70.4, 45.0], [70.5, 45.0], [70.6, 45.0], [70.7, 45.0], [70.8, 45.0], [70.9, 45.0], [71.0, 45.0], [71.1, 45.0], [71.2, 45.0], [71.3, 45.0], [71.4, 45.0], [71.5, 45.0], [71.6, 45.0], [71.7, 45.0], [71.8, 45.0], [71.9, 45.0], [72.0, 45.0], [72.1, 45.0], [72.2, 45.0], [72.3, 45.0], [72.4, 45.0], [72.5, 45.0], [72.6, 45.0], [72.7, 45.0], [72.8, 45.0], [72.9, 45.0], [73.0, 45.0], [73.1, 45.0], [73.2, 45.0], [73.3, 45.0], [73.4, 45.0], [73.5, 45.0], [73.6, 46.0], [73.7, 46.0], [73.8, 46.0], [73.9, 46.0], [74.0, 46.0], [74.1, 46.0], [74.2, 46.0], [74.3, 46.0], [74.4, 46.0], [74.5, 46.0], [74.6, 46.0], [74.7, 46.0], [74.8, 46.0], [74.9, 46.0], [75.0, 46.0], [75.1, 46.0], [75.2, 46.0], [75.3, 46.0], [75.4, 46.0], [75.5, 46.0], [75.6, 46.0], [75.7, 46.0], [75.8, 46.0], [75.9, 46.0], [76.0, 46.0], [76.1, 46.0], [76.2, 46.0], [76.3, 47.0], [76.4, 47.0], [76.5, 47.0], [76.6, 47.0], [76.7, 47.0], [76.8, 47.0], [76.9, 47.0], [77.0, 47.0], [77.1, 47.0], [77.2, 47.0], [77.3, 47.0], [77.4, 47.0], [77.5, 47.0], [77.6, 47.0], [77.7, 47.0], [77.8, 47.0], [77.9, 47.0], [78.0, 47.0], [78.1, 47.0], [78.2, 47.0], [78.3, 47.0], [78.4, 47.0], [78.5, 47.0], [78.6, 48.0], [78.7, 48.0], [78.8, 48.0], [78.9, 48.0], [79.0, 48.0], [79.1, 48.0], [79.2, 48.0], [79.3, 48.0], [79.4, 48.0], [79.5, 48.0], [79.6, 48.0], [79.7, 48.0], [79.8, 48.0], [79.9, 48.0], [80.0, 48.0], [80.1, 48.0], [80.2, 48.0], [80.3, 48.0], [80.4, 48.0], [80.5, 49.0], [80.6, 49.0], [80.7, 49.0], [80.8, 49.0], [80.9, 49.0], [81.0, 49.0], [81.1, 49.0], [81.2, 49.0], [81.3, 49.0], [81.4, 49.0], [81.5, 49.0], [81.6, 49.0], [81.7, 49.0], [81.8, 49.0], [81.9, 49.0], [82.0, 49.0], [82.1, 50.0], [82.2, 50.0], [82.3, 50.0], [82.4, 50.0], [82.5, 50.0], [82.6, 50.0], [82.7, 50.0], [82.8, 50.0], [82.9, 50.0], [83.0, 50.0], [83.1, 50.0], [83.2, 50.0], [83.3, 51.0], [83.4, 51.0], [83.5, 51.0], [83.6, 51.0], [83.7, 51.0], [83.8, 51.0], [83.9, 51.0], [84.0, 51.0], [84.1, 51.0], [84.2, 51.0], [84.3, 51.0], [84.4, 52.0], [84.5, 52.0], [84.6, 52.0], [84.7, 52.0], [84.8, 52.0], [84.9, 52.0], [85.0, 52.0], [85.1, 52.0], [85.2, 52.0], [85.3, 53.0], [85.4, 53.0], [85.5, 53.0], [85.6, 53.0], [85.7, 53.0], [85.8, 53.0], [85.9, 53.0], [86.0, 54.0], [86.1, 54.0], [86.2, 54.0], [86.3, 54.0], [86.4, 54.0], [86.5, 54.0], [86.6, 55.0], [86.7, 55.0], [86.8, 55.0], [86.9, 55.0], [87.0, 55.0], [87.1, 55.0], [87.2, 56.0], [87.3, 56.0], [87.4, 56.0], [87.5, 56.0], [87.6, 56.0], [87.7, 57.0], [87.8, 57.0], [87.9, 57.0], [88.0, 57.0], [88.1, 58.0], [88.2, 58.0], [88.3, 58.0], [88.4, 58.0], [88.5, 59.0], [88.6, 59.0], [88.7, 59.0], [88.8, 60.0], [88.9, 60.0], [89.0, 60.0], [89.1, 60.0], [89.2, 61.0], [89.3, 61.0], [89.4, 62.0], [89.5, 62.0], [89.6, 62.0], [89.7, 63.0], [89.8, 63.0], [89.9, 64.0], [90.0, 64.0], [90.1, 64.0], [90.2, 65.0], [90.3, 65.0], [90.4, 66.0], [90.5, 66.0], [90.6, 67.0], [90.7, 68.0], [90.8, 68.0], [90.9, 69.0], [91.0, 69.0], [91.1, 70.0], [91.2, 71.0], [91.3, 71.0], [91.4, 72.0], [91.5, 73.0], [91.6, 74.0], [91.7, 75.0], [91.8, 76.0], [91.9, 77.0], [92.0, 78.0], [92.1, 79.0], [92.2, 80.0], [92.3, 81.0], [92.4, 82.0], [92.5, 83.0], [92.6, 84.0], [92.7, 85.0], [92.8, 87.0], [92.9, 88.0], [93.0, 90.0], [93.1, 91.0], [93.2, 93.0], [93.3, 94.0], [93.4, 96.0], [93.5, 98.0], [93.6, 99.0], [93.7, 101.0], [93.8, 103.0], [93.9, 105.0], [94.0, 107.0], [94.1, 108.0], [94.2, 110.0], [94.3, 112.0], [94.4, 114.0], [94.5, 117.0], [94.6, 119.0], [94.7, 121.0], [94.8, 124.0], [94.9, 126.0], [95.0, 129.0], [95.1, 131.0], [95.2, 134.0], [95.3, 137.0], [95.4, 139.0], [95.5, 142.0], [95.6, 145.0], [95.7, 148.0], [95.8, 151.0], [95.9, 155.0], [96.0, 158.0], [96.1, 163.0], [96.2, 167.0], [96.3, 171.0], [96.4, 175.0], [96.5, 181.0], [96.6, 186.0], [96.7, 192.0], [96.8, 199.0], [96.9, 205.0], [97.0, 213.0], [97.1, 221.0], [97.2, 231.0], [97.3, 244.0], [97.4, 258.0], [97.5, 278.0], [97.6, 319.0], [97.7, 366.0], [97.8, 416.0], [97.9, 467.0], [98.0, 514.0], [98.1, 563.0], [98.2, 602.0], [98.3, 639.0], [98.4, 672.0], [98.5, 705.0], [98.6, 737.0], [98.7, 769.0], [98.8, 800.0], [98.9, 824.0], [99.0, 845.0], [99.1, 868.0], [99.2, 891.0], [99.3, 913.0], [99.4, 934.0], [99.5, 955.0], [99.6, 979.0], [99.7, 1006.0], [99.8, 1039.0], [99.9, 1083.0]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 5294879.0, "series": [{"data": [[0.0, 5294879.0], [600.0, 16486.0], [700.0, 17814.0], [200.0, 41983.0], [800.0, 24923.0], [900.0, 24812.0], [1000.0, 13915.0], [1100.0, 3607.0], [300.0, 12255.0], [1200.0, 655.0], [1300.0, 48.0], [1400.0, 5.0], [100.0, 181029.0], [400.0, 11399.0], [500.0, 12612.0]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 114768.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5541654.0, "series": [{"data": [[0.0, 5541654.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 114768.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 180.9851934166267, "minX": 1.6263459E12, "maxY": 600.0, "series": [{"data": [[1.62634602E12, 600.0], [1.6263459E12, 255.10432569974557], [1.6263462E12, 598.5372930557062], [1.62634626E12, 180.9851934166267], [1.62634608E12, 600.0], [1.62634614E12, 600.0], [1.62634596E12, 592.1273996785494]], "isOverall": false, "label": "role1", "isController": false}, {"data": [[1.62634602E12, 600.0], [1.6263462E12, 600.0], [1.62634626E12, 430.77757074280356], [1.62634608E12, 600.0], [1.62634614E12, 600.0], [1.62634596E12, 558.9291939331445]], "isOverall": false, "label": "role2", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62634626E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 837.6666666666666, "series": [{"data": [[2.0, 34.0], [3.0, 32.0], [4.0, 31.0], [6.0, 16.5], [8.0, 16.0], [9.0, 9.0], [10.0, 30.0], [11.0, 31.0], [12.0, 29.0], [13.0, 29.0], [14.0, 9.0], [15.0, 30.0], [17.0, 2.25], [18.0, 2.2], [19.0, 3.0], [20.0, 3.5], [21.0, 4.0], [23.0, 3.0], [24.0, 24.0], [25.0, 23.0], [29.0, 23.0], [30.0, 23.5], [31.0, 11.5], [33.0, 2.0], [32.0, 12.0], [35.0, 1.8333333333333335], [34.0, 5.699999999999999], [37.0, 3.0], [39.0, 1.7500000000000002], [41.0, 5.923076923076923], [43.0, 2.0], [42.0, 4.0], [44.0, 2.0], [47.0, 5.6], [46.0, 1.8333333333333333], [49.0, 12.25], [48.0, 40.0], [50.0, 6.888888888888889], [52.0, 3.0], [55.0, 20.0], [54.0, 20.333333333333332], [56.0, 20.0], [59.0, 5.333333333333334], [58.0, 18.0], [61.0, 20.0], [60.0, 2.5], [62.0, 21.2], [67.0, 18.5], [66.0, 24.666666666666668], [64.0, 19.5], [71.0, 24.0], [70.0, 35.0], [69.0, 34.5], [68.0, 34.666666666666664], [75.0, 29.0], [74.0, 34.0], [73.0, 35.0], [79.0, 31.0], [78.0, 2.6666666666666665], [77.0, 1.0], [76.0, 7.470588235294118], [83.0, 4.45], [82.0, 3.571428571428571], [81.0, 10.75], [80.0, 4.0], [87.0, 3.125], [86.0, 2.8333333333333335], [85.0, 2.9444444444444446], [84.0, 3.571428571428571], [91.0, 12.4], [90.0, 4.666666666666667], [89.0, 3.0], [88.0, 3.444444444444444], [95.0, 9.0], [94.0, 5.0], [93.0, 3.2222222222222223], [92.0, 18.0], [99.0, 12.125], [98.0, 18.708333333333332], [97.0, 7.041666666666666], [96.0, 4.333333333333333], [103.0, 24.166666666666668], [102.0, 23.416666666666664], [101.0, 41.25], [100.0, 25.166666666666664], [107.0, 31.450000000000003], [106.0, 60.0], [105.0, 47.75], [104.0, 40.0], [111.0, 19.135135135135133], [110.0, 5.5], [109.0, 7.7333333333333325], [108.0, 10.407407407407407], [115.0, 8.433333333333335], [114.0, 13.126353790613717], [113.0, 16.904109589041095], [112.0, 27.0], [119.0, 19.23255813953488], [118.0, 67.0], [117.0, 16.333333333333332], [116.0, 20.986666666666668], [123.0, 16.935483870967744], [122.0, 7.348148148148145], [121.0, 19.911111111111108], [120.0, 53.90909090909091], [127.0, 16.95918367346938], [126.0, 2.1428571428571423], [125.0, 23.28846153846154], [124.0, 47.0], [135.0, 15.618528610354213], [134.0, 9.318181818181815], [133.0, 9.031645569620252], [132.0, 13.336700336700332], [131.0, 41.42857142857142], [130.0, 42.3], [129.0, 23.117647058823536], [128.0, 8.053571428571429], [143.0, 3.108433734939758], [142.0, 3.7570621468926557], [141.0, 57.00000000000001], [140.0, 8.804347826086953], [139.0, 10.719626168224298], [138.0, 67.88461538461539], [137.0, 52.0], [136.0, 10.679856115107913], [151.0, 39.445544554455445], [150.0, 16.578947368421055], [149.0, 48.404761904761905], [148.0, 105.8], [147.0, 45.833333333333336], [146.0, 10.466666666666667], [145.0, 26.129629629629633], [144.0, 25.444444444444443], [159.0, 14.045454545454543], [157.0, 98.11111111111111], [156.0, 70.00000000000001], [155.0, 16.59042553191489], [154.0, 12.628664495114007], [153.0, 25.844919786096256], [152.0, 1.0], [167.0, 13.188340807174889], [166.0, 84.0], [165.0, 25.083333333333336], [164.0, 16.5], [163.0, 6.327272727272728], [162.0, 23.5], [161.0, 2.962962962962963], [160.0, 6.459459459459458], [175.0, 38.0], [174.0, 13.88235294117647], [173.0, 9.746376811594203], [172.0, 11.630434782608695], [171.0, 85.93333333333334], [170.0, 49.583333333333336], [169.0, 1.6666666666666667], [168.0, 17.283333333333335], [183.0, 6.148148148148148], [182.0, 78.6875], [181.0, 52.57692307692308], [180.0, 15.999999999999998], [179.0, 94.44642857142856], [178.0, 11.650485436893208], [177.0, 17.50670103092784], [176.0, 16.60434056761269], [191.0, 24.2], [190.0, 100.375], [189.0, 54.714285714285715], [188.0, 22.643564356435633], [187.0, 18.61176470588235], [186.0, 60.875], [185.0, 26.939393939393938], [184.0, 49.50000000000001], [198.0, 76.66666666666667], [197.0, 20.976310122038658], [196.0, 1.8275862068965512], [195.0, 7.296296296296297], [194.0, 26.83333333333334], [193.0, 114.88888888888889], [192.0, 46.59574468085106], [207.0, 202.0], [206.0, 30.35042735042736], [205.0, 24.854545454545452], [204.0, 126.8], [203.0, 159.0], [202.0, 103.47058823529413], [201.0, 80.5], [200.0, 18.915094339622634], [215.0, 25.464615384615392], [214.0, 33.807339449541296], [213.0, 207.0], [212.0, 250.95833333333331], [211.0, 261.5], [210.0, 167.33333333333334], [209.0, 141.22222222222223], [208.0, 35.783216783216794], [223.0, 41.105882352941194], [222.0, 85.47727272727272], [221.0, 36.65765765765766], [220.0, 49.02], [219.0, 24.24324324324325], [218.0, 48.61111111111111], [217.0, 50.88435374149661], [216.0, 11.511999999999999], [231.0, 13.881081081081081], [230.0, 41.25], [229.0, 14.484403669724774], [228.0, 21.62061403508771], [227.0, 14.479262672811059], [226.0, 28.485981308411194], [225.0, 45.252459016393445], [224.0, 403.75], [239.0, 33.39526276831974], [238.0, 376.5], [237.0, 275.6666666666667], [236.0, 154.06493506493516], [235.0, 10.235981308411217], [234.0, 8.679245283018863], [233.0, 9.59889502762431], [232.0, 11.127873563218392], [244.0, 41.52985074626868], [246.0, 45.72020725388597], [245.0, 29.965844402277074], [247.0, 22.94506816359266], [243.0, 22.09906291834006], [242.0, 157.27586206896552], [241.0, 89.89171974522293], [240.0, 283.2307692307692], [248.0, 36.11930585683298], [249.0, 65.0636363636363], [250.0, 9.798387096774196], [251.0, 27.80232558139535], [252.0, 21.047393364928904], [253.0, 28.335689045936398], [255.0, 28.433628318584073], [254.0, 24.214007782101167], [258.0, 32.265060240963855], [262.0, 17.703517587939707], [263.0, 36.0], [261.0, 37.16666666666667], [260.0, 22.267857142857153], [259.0, 26.37974683544304], [268.0, 53.94230769230769], [270.0, 29.888461538461527], [269.0, 14.264367816091955], [264.0, 36.884488448844884], [271.0, 15.875000000000005], [265.0, 68.82051282051282], [266.0, 13.431372549019605], [267.0, 20.471910112359545], [257.0, 32.09615384615385], [256.0, 26.543071161048687], [272.0, 37.31496062992125], [274.0, 57.56363636363635], [275.0, 26.29464285714287], [284.0, 13.277533039647576], [285.0, 24.90932203389831], [287.0, 97.66666666666667], [286.0, 43.439189189189186], [276.0, 8.68941979522184], [273.0, 25.614299153339584], [277.0, 26.525862068965512], [278.0, 41.32236842105265], [279.0, 63.253521126760575], [280.0, 347.00000000000006], [281.0, 32.77458033573143], [282.0, 32.270833333333336], [283.0, 8.936675461741427], [290.0, 32.25], [293.0, 21.712105798575767], [292.0, 7.5], [291.0, 38.63888888888889], [300.0, 35.989614243323444], [289.0, 25.802325581395348], [288.0, 33.65671641791044], [295.0, 52.99342105263158], [294.0, 7.261904761904764], [303.0, 28.082311733800367], [302.0, 23.88524590163935], [296.0, 39.57763975155279], [301.0, 28.216994061215118], [298.0, 159.71999999999997], [299.0, 826.2222222222222], [297.0, 104.0], [316.0, 16.044444444444444], [315.0, 29.313131313131326], [314.0, 21.856521739130436], [313.0, 72.65625], [312.0, 52.458333333333336], [317.0, 26.801255230125513], [318.0, 26.176470588235286], [319.0, 31.543046357615896], [310.0, 56.75], [309.0, 7.7], [308.0, 5.125], [307.0, 4.333333333333334], [306.0, 22.429958391123446], [305.0, 24.484251968503944], [311.0, 50.0], [304.0, 23.05450733752621], [334.0, 79.1111111111111], [335.0, 29.055555555555568], [333.0, 29.833679833679827], [332.0, 25.155844155844157], [331.0, 28.090909090909093], [330.0, 580.2], [329.0, 80.0], [327.0, 837.6666666666666], [321.0, 606.0], [320.0, 32.32291666666669], [323.0, 37.5189189189189], [322.0, 40.49486652977412], [326.0, 611.2352941176471], [325.0, 455.63888888888897], [324.0, 2.0], [350.0, 50.69135802469132], [351.0, 34.85929648241205], [348.0, 19.859374999999996], [339.0, 88.20754716981135], [338.0, 45.57142857142857], [336.0, 37.764705882352956], [347.0, 34.523809523809554], [346.0, 76.8529411764706], [345.0, 94.8048780487805], [344.0, 50.31249999999999], [343.0, 48.45454545454545], [342.0, 34.64705882352941], [341.0, 51.92957746478874], [340.0, 16.30991735537191], [366.0, 23.95294117647058], [367.0, 16.23469387755102], [365.0, 22.5625], [364.0, 22.909090909090907], [363.0, 24.619047619047624], [362.0, 73.70000000000002], [361.0, 35.55714285714285], [360.0, 137.03225806451616], [359.0, 43.41992882562275], [353.0, 36.77945809703846], [355.0, 124.44444444444441], [354.0, 35.88679245283022], [358.0, 30.68627450980391], [357.0, 32.66726943942135], [356.0, 156.7142857142857], [382.0, 33.109523809523814], [383.0, 15.588235294117645], [381.0, 45.75147928994084], [380.0, 21.509999999999998], [379.0, 32.007352941176464], [378.0, 63.69718309859155], [377.0, 41.697940503432505], [376.0, 10.686046511627909], [375.0, 31.452830188679243], [369.0, 49.380116959064324], [368.0, 86.75], [371.0, 73.48979591836736], [370.0, 37.32], [374.0, 30.534653465346516], [373.0, 60.753246753246756], [372.0, 222.0909090909091], [398.0, 25.61904761904762], [399.0, 36.247191011235884], [397.0, 32.44628099173555], [396.0, 184.21052631578945], [395.0, 37.442822384428254], [394.0, 40.61971830985917], [393.0, 54.343949044586005], [392.0, 40.905701754386], [391.0, 133.34482758620692], [385.0, 21.772727272727277], [384.0, 16.299999999999997], [387.0, 61.21830985915494], [386.0, 43.20955882352939], [390.0, 35.0], [389.0, 43.33870967741938], [388.0, 37.37549407114622], [413.0, 43.899497487437216], [400.0, 164.60565476190473], [407.0, 61.8679245283019], [406.0, 73.96096096096096], [405.0, 30.835164835164825], [404.0, 53.871794871794876], [402.0, 15.98901098901099], [403.0, 15.2590206185567], [412.0, 29.958333333333325], [410.0, 33.43290043290041], [411.0, 22.483133841131664], [401.0, 77.23076923076923], [414.0, 37.151702786377705], [415.0, 40.56535600425077], [409.0, 60.3076923076923], [408.0, 31.101398601398618], [430.0, 18.0], [416.0, 16.360520094562624], [417.0, 50.62025316455698], [419.0, 43.56045751633984], [418.0, 40.47918890074709], [420.0, 49.41038961038959], [421.0, 52.74404761904763], [423.0, 60.06422018348624], [422.0, 43.5773584905661], [431.0, 38.64495114006517], [425.0, 50.46096959737057], [424.0, 106.51724137931035], [429.0, 40.03874538745387], [428.0, 223.6], [427.0, 31.555555555555554], [426.0, 52.479721900347634], [445.0, 45.67489711934157], [437.0, 39.65031982942427], [436.0, 35.81249999999999], [438.0, 42.68837803320567], [441.0, 48.386294724075235], [440.0, 52.6986301369862], [442.0, 47.00970873786405], [443.0, 23.152654867256633], [444.0, 20.84645669291339], [439.0, 50.953608247422665], [432.0, 37.32767402376906], [434.0, 35.90909090909091], [433.0, 54.60000000000001], [435.0, 165.28571428571428], [446.0, 41.02204120747478], [447.0, 42.13100436681221], [450.0, 53.40594059405944], [448.0, 13.583514099783075], [449.0, 33.3573700954401], [453.0, 27.824832560535857], [455.0, 54.24999999999999], [454.0, 43.77446808510634], [452.0, 47.493403693931384], [451.0, 36.03636363636364], [461.0, 46.78927203065136], [460.0, 30.35483870967741], [457.0, 39.3125], [459.0, 31.874999999999993], [458.0, 91.12698412698414], [463.0, 45.96229508196725], [456.0, 28.590909090909086], [462.0, 64.46025878003698], [477.0, 63.0], [468.0, 41.08860759493671], [469.0, 66.13004926108377], [470.0, 51.03821656050957], [472.0, 45.41071428571428], [473.0, 28.11517952364026], [478.0, 30.69077090119434], [479.0, 52.18130311614725], [476.0, 97.19254658385091], [467.0, 52.6166077738516], [466.0, 54.05775577557753], [465.0, 51.77501553760101], [464.0, 46.31858407079643], [471.0, 56.0148148148148], [475.0, 56.91962905718702], [474.0, 54.777777777777786], [481.0, 55.02413793103446], [480.0, 40.978873239436616], [482.0, 39.026385224274435], [483.0, 42.43913043478257], [484.0, 45.820312500000014], [485.0, 56.583333333333336], [486.0, 51.55670103092781], [487.0, 48.5], [488.0, 67.49999999999999], [494.0, 51.70819672131144], [495.0, 46.53787878787877], [492.0, 49.834722222222275], [493.0, 46.818505338078225], [489.0, 47.033333333333324], [490.0, 52.68437499999997], [491.0, 55.741258741258726], [510.0, 39.83333333333333], [497.0, 39.5846338535415], [496.0, 96.20588235294116], [499.0, 339.0], [498.0, 48.95683453237408], [503.0, 94.8], [502.0, 106.112676056338], [501.0, 90.0], [500.0, 98.86915887850469], [511.0, 37.857142857142854], [509.0, 40.333333333333336], [508.0, 40.0], [507.0, 40.0], [506.0, 161.95918367346937], [505.0, 48.0], [504.0, 99.05714285714288], [541.0, 160.31578947368422], [530.0, 122.71428571428571], [529.0, 38.5], [528.0, 39.0], [531.0, 44.0], [533.0, 40.166666666666664], [532.0, 41.45454545454546], [535.0, 40.0], [534.0, 38.142857142857146], [539.0, 111.16666666666667], [543.0, 101.66666666666667], [542.0, 42.0], [540.0, 40.333333333333336], [538.0, 102.0], [537.0, 40.125], [536.0, 40.0], [518.0, 62.25], [517.0, 33.388888888888886], [516.0, 33.0], [515.0, 33.20000000000001], [514.0, 33.8], [513.0, 221.4], [512.0, 39.0], [527.0, 38.0], [526.0, 41.307692307692314], [525.0, 39.38461538461539], [524.0, 43.5], [523.0, 40.0], [522.0, 36.285714285714285], [521.0, 32.71428571428571], [520.0, 32.0], [549.0, 45.45297805642636], [545.0, 44.79999999999999], [544.0, 67.31428571428572], [559.0, 61.7440347071584], [558.0, 75.5474171164224], [557.0, 67.4113475177305], [556.0, 62.24748490945679], [555.0, 48.465753424657535], [554.0, 58.96331738437003], [553.0, 50.78974358974357], [552.0, 68.04008016032064], [546.0, 39.101449275362306], [547.0, 69.77659574468085], [548.0, 58.34594594594597], [551.0, 49.28783382789321], [550.0, 59.08282208588967], [569.0, 60.96969696969697], [568.0, 59.583624369421784], [560.0, 64.69130434782606], [566.0, 67.9984478075282], [565.0, 60.245049504950515], [564.0, 53.389016018306656], [563.0, 65.3648648648649], [562.0, 39.62222222222223], [561.0, 67.20851063829788], [567.0, 71.171875], [570.0, 74.79041916167662], [571.0, 45.66476345840118], [572.0, 63.61439114391143], [573.0, 46.565217391304344], [574.0, 55.910958904109606], [575.0, 28.88223432143582], [604.0, 32.54545454545455], [579.0, 49.98947368421053], [576.0, 99.8650442477876], [591.0, 38.0], [590.0, 41.02439024390243], [589.0, 59.066666666666684], [588.0, 39.577777777777776], [587.0, 62.643734643734625], [586.0, 62.820040899795515], [585.0, 58.957446808510646], [584.0, 54.56744186046514], [577.0, 59.62886597938141], [578.0, 61.465208747514936], [580.0, 45.03235843186059], [581.0, 144.7222222222222], [583.0, 79.4033485540334], [582.0, 81.24758560140474], [601.0, 113.45454545454545], [600.0, 51.86301369863014], [603.0, 19.5], [602.0, 1.0], [606.0, 37.3913043478261], [607.0, 75.81632653061222], [593.0, 38.0], [592.0, 37.5], [595.0, 38.07692307692307], [594.0, 38.233333333333334], [597.0, 93.94444444444443], [596.0, 83.78688524590163], [599.0, 96.45999999999998], [598.0, 58.94594594594592], [605.0, 34.77777777777778], [613.0, 72.38461538461542], [619.0, 57.51278195488722], [610.0, 37.449999999999996], [612.0, 62.72727272727273], [611.0, 30.923076923076927], [623.0, 38.85973700688801], [609.0, 68.06896551724137], [608.0, 41.77499999999999], [614.0, 97.05263157894738], [615.0, 74.36507936507935], [624.0, 17.27899686520378], [639.0, 41.924242424242436], [637.0, 76.54901960784315], [638.0, 33.838235294117666], [636.0, 28.116199001549216], [635.0, 94.71153846153848], [632.0, 37.376036171816025], [633.0, 61.34357005758161], [625.0, 29.70534838076543], [626.0, 27.9380066762041], [627.0, 38.23019801980191], [628.0, 21.37885462555065], [629.0, 21.604477611940315], [630.0, 23.269216205982627], [631.0, 179.7271341463416], [616.0, 60.405882352941184], [617.0, 89.13445378151262], [618.0, 45.02170848604454], [620.0, 1.5], [621.0, 52.15566037735847], [622.0, 39.59481865284975], [643.0, 59.16398713826367], [640.0, 29.249999999999996], [655.0, 20.926927939317352], [652.0, 7.3768115942028984], [653.0, 32.0], [654.0, 10.782608695652174], [650.0, 50.0], [651.0, 54.80464135021101], [641.0, 21.58536585365853], [642.0, 32.51219512195122], [646.0, 28.0], [647.0, 6.446808510638297], [664.0, 74.0], [670.0, 61.75000000000001], [669.0, 28.000000000000004], [668.0, 14.777777777777779], [667.0, 19.027777777777775], [656.0, 53.5], [657.0, 131.0], [671.0, 83.75], [659.0, 33.411764705882355], [661.0, 26.2], [660.0, 24.083333333333332], [663.0, 15.5], [662.0, 11.5], [658.0, 42.5], [665.0, 29.0], [645.0, 68.96341463414632], [648.0, 10.947577442414596], [649.0, 9.815384615384614], [644.0, 82.94444444444444], [700.0, 116.66666666666667], [676.0, 80.18595041322315], [675.0, 69.0], [677.0, 100.0], [697.0, 147.0], [679.0, 129.14285714285714], [674.0, 92.55555555555556], [672.0, 80.6], [687.0, 42.0], [686.0, 77.4], [684.0, 12.0], [683.0, 84.57142857142857], [682.0, 12.0], [681.0, 108.85714285714286], [703.0, 163.0], [689.0, 68.47058823529413], [688.0, 84.0], [692.0, 180.3], [691.0, 118.0], [694.0, 91.4], [693.0, 167.0], [702.0, 53.5], [701.0, 77.84615384615385], [699.0, 147.0], [698.0, 111.66666666666667], [731.0, 29.036697247706417], [723.0, 60.457142857142856], [727.0, 58.92668024439918], [726.0, 44.52314814814814], [724.0, 64.60204081632659], [725.0, 44.710307414104804], [728.0, 24.416908713693054], [711.0, 34.026315789473685], [710.0, 41.470588235294116], [709.0, 42.4], [708.0, 35.43749999999999], [707.0, 62.61807909604526], [706.0, 333.7142857142857], [705.0, 226.72727272727275], [704.0, 46.74666666666666], [719.0, 38.24353448275862], [718.0, 27.282608695652176], [717.0, 26.46153846153846], [716.0, 31.872611464968145], [715.0, 38.4], [714.0, 30.181249999999995], [713.0, 39.0], [712.0, 69.43636363636364], [722.0, 119.4], [721.0, 197.54999999999998], [729.0, 34.95170454545457], [730.0, 24.481554031994815], [732.0, 26.998947922146286], [733.0, 20.150000000000002], [734.0, 25.906697864872825], [735.0, 20.573934837092718], [720.0, 45.51433628318575], [741.0, 13.69635385534965], [737.0, 336.1176470588236], [738.0, 24.145784179808743], [736.0, 423.3101265822785], [750.0, 49.51428571428571], [751.0, 64.03571428571429], [739.0, 6.5], [740.0, 31.792418772563185], [743.0, 30.340517241379306], [752.0, 11.608478802992524], [766.0, 31.965796019900456], [767.0, 47.11382113821138], [764.0, 36.876288659793815], [765.0, 38.018496058217075], [762.0, 43.20131086142322], [763.0, 29.478991596638664], [760.0, 30.77056277056278], [761.0, 22.25862068965517], [753.0, 48.67465753424662], [754.0, 26.549233443970316], [755.0, 67.88852097130238], [756.0, 122.89508196721317], [757.0, 45.78046934140812], [758.0, 37.40379403794038], [759.0, 32.717948717948715], [742.0, 27.60526315789474], [746.0, 47.23591549295784], [745.0, 42.28363518758084], [744.0, 42.61278195488723], [747.0, 10.329831932773107], [748.0, 33.95393759286779], [749.0, 18.875133976420162], [771.0, 43.6315789473684], [768.0, 11.461538461538467], [782.0, 44.19426751592352], [783.0, 18.42753623188406], [780.0, 54.215189873417714], [781.0, 41.40038314176243], [778.0, 30.717391304347824], [779.0, 27.263045223441218], [769.0, 16.080000000000002], [770.0, 60.43055555555555], [772.0, 12.271375464684022], [773.0, 15.16058394160585], [774.0, 21.404255319148945], [775.0, 54.798045602605875], [784.0, 34.27123287671234], [799.0, 40.89473684210526], [797.0, 63.11545623836125], [798.0, 24.481142438667113], [795.0, 33.451127819548866], [796.0, 20.717877094972067], [793.0, 61.407185628742496], [792.0, 88.37614678899087], [794.0, 40.586206896551744], [785.0, 23.154639175257742], [786.0, 24.811034482758636], [787.0, 51.37226277372266], [788.0, 20.48194353250164], [789.0, 32.32720389399672], [790.0, 35.58090614886734], [791.0, 33.878524945770046], [776.0, 21.77358490566037], [777.0, 17.404255319148934], [803.0, 25.096774193548388], [800.0, 7.4459459459459465], [812.0, 26.289644012945015], [814.0, 47.42857142857142], [813.0, 52.07692307692307], [815.0, 41.96899224806201], [810.0, 27.923076923076923], [811.0, 49.45555555555556], [801.0, 44.87037037037036], [802.0, 44.29166666666668], [804.0, 19.876068376068375], [805.0, 14.477218225419675], [806.0, 23.196774193548404], [807.0, 24.31588447653431], [817.0, 31.900000000000016], [816.0, 48.16129032258065], [824.0, 24.31848257609176], [825.0, 26.562189054726367], [826.0, 13.803278688524594], [827.0, 8.306818181818182], [828.0, 28.056179775280903], [829.0, 59.50000000000001], [830.0, 46.333333333333336], [831.0, 53.57142857142857], [818.0, 22.96363636363637], [819.0, 15.40695748205414], [820.0, 19.73148148148148], [821.0, 31.55470737913487], [822.0, 35.06818181818183], [823.0, 45.212523719165084], [808.0, 50.74761904761905], [809.0, 79.6875], [837.0, 37.33852403520647], [833.0, 15.729174591099248], [832.0, 111.04761904761905], [845.0, 27.31410256410256], [847.0, 28.138461538461534], [834.0, 52.36348408710214], [835.0, 20.0253164556962], [836.0, 49.89759036144576], [839.0, 129.1700468018721], [838.0, 32.418410041841035], [856.0, 45.98114434330299], [857.0, 29.49746420047735], [858.0, 38.670018281535604], [859.0, 44.37349397590361], [860.0, 37.960948396094835], [861.0, 56.64102564102563], [863.0, 148.56521739130434], [862.0, 73.76635514018692], [848.0, 33.988764044943814], [849.0, 18.477611940298505], [850.0, 38.67924528301887], [851.0, 42.714285714285715], [852.0, 29.64814814814815], [853.0, 24.075268817204304], [854.0, 74.65625], [855.0, 17.03585657370518], [841.0, 53.16049382716045], [840.0, 54.99684542586748], [842.0, 31.944444444444457], [843.0, 35.887850467289724], [844.0, 30.307692307692307], [888.0, 32.031250000000014], [864.0, 102.9090909090909], [870.0, 55.50943396226416], [869.0, 34.29083665338646], [868.0, 54.75], [871.0, 22.0], [889.0, 66.86363636363637], [890.0, 51.20833333333333], [891.0, 106.00751879699244], [893.0, 89.91463414634143], [892.0, 128.62499999999997], [895.0, 41.214285714285715], [894.0, 56.31390134529148], [880.0, 26.807385952208595], [881.0, 19.102789317507472], [882.0, 41.15602836879431], [883.0, 35.52993068683053], [884.0, 21.231203007518804], [886.0, 128.15492957746508], [885.0, 52.808510638297875], [887.0, 57.693069306930674], [872.0, 38.42574257425743], [867.0, 32.65714285714286], [865.0, 91.33333333333333], [866.0, 87.52500000000006], [873.0, 32.70198675496688], [874.0, 59.99285714285716], [875.0, 19.000000000000004], [876.0, 19.95804195804195], [877.0, 39.11282843894899], [878.0, 45.815217391304344], [879.0, 41.53086419753085], [903.0, 410.74387527839616], [899.0, 46.169117647058826], [896.0, 48.954545454545446], [906.0, 69.02898550724642], [908.0, 62.06329113924053], [907.0, 61.162162162162176], [910.0, 38.25413826679642], [909.0, 23.424242424242426], [911.0, 53.61832061068699], [897.0, 21.92287581699345], [898.0, 52.53500000000002], [900.0, 20.24037184594955], [901.0, 36.67790262172283], [902.0, 17.369736545823006], [920.0, 22.910569105691046], [921.0, 23.333333333333346], [922.0, 18.167487684729053], [923.0, 16.102857142857147], [924.0, 18.378787878787875], [925.0, 22.814814814814813], [926.0, 19.489583333333325], [927.0, 29.23809523809524], [913.0, 59.480000000000004], [912.0, 47.373576309795034], [915.0, 41.86291126620158], [914.0, 33.4], [917.0, 29.123966942148755], [916.0, 28.70088300220751], [919.0, 22.927884615384617], [918.0, 24.16281895504254], [904.0, 116.01333333333334], [905.0, 59.35869565217391], [934.0, 30.783950617283992], [929.0, 65.10176125244615], [928.0, 12.19202898550724], [942.0, 19.68296726067139], [941.0, 36.909836065573764], [940.0, 32.153846153846146], [943.0, 26.772151898734172], [938.0, 19.71842650103521], [939.0, 29.078431372549005], [930.0, 35.89449838187707], [931.0, 29.74889867841409], [932.0, 22.687969924812023], [933.0, 26.08935361216729], [935.0, 30.34170854271357], [952.0, 30.330889199255193], [958.0, 22.942805538832047], [959.0, 27.902800658978563], [957.0, 90.73333333333333], [956.0, 90.09609609609618], [955.0, 117.97142857142855], [954.0, 221.7205882352941], [953.0, 173.79661016949157], [945.0, 23.61290322580644], [946.0, 34.70588235294118], [947.0, 25.928571428571427], [948.0, 16.261904761904763], [949.0, 35.238095238095234], [950.0, 23.424778761061944], [951.0, 21.642370845014003], [944.0, 29.47019867549669], [936.0, 26.178332475553304], [937.0, 18.688424717145345], [963.0, 40.19929660023447], [971.0, 3.6120218579234957], [960.0, 31.62769580022701], [974.0, 5.277777777777778], [975.0, 8.0], [961.0, 35.71249999999999], [962.0, 33.94749403341289], [967.0, 86.6376811594203], [984.0, 19.880403458213255], [985.0, 14.846153846153848], [986.0, 14.821428571428573], [987.0, 14.347826086956522], [988.0, 19.16], [989.0, 22.363636363636363], [990.0, 20.27906976744186], [991.0, 22.74285714285714], [976.0, 21.256410256410255], [977.0, 20.484848484848477], [978.0, 14.638095238095236], [979.0, 22.212753950338584], [980.0, 22.292961318960018], [981.0, 17.790000000000003], [982.0, 19.275632490013304], [983.0, 11.934782608695654], [966.0, 72.66666666666671], [965.0, 29.59028831562973], [964.0, 87.24444444444445], [968.0, 66.97101449275361], [969.0, 48.366554054054035], [970.0, 8.490756302521014], [972.0, 18.76352445740204], [973.0, 7.761718750000002], [999.0, 30.13432835820895], [995.0, 21.32233009708739], [992.0, 19.142857142857142], [1002.0, 37.89477681208331], [1004.0, 39.88000000000001], [1003.0, 49.727272727272734], [1006.0, 31.165775401069514], [1005.0, 29.545454545454547], [1007.0, 77.34444444444446], [993.0, 18.6875], [994.0, 20.119999999999997], [996.0, 13.34426229508197], [997.0, 19.639344262295086], [998.0, 25.075471698113216], [1014.0, 53.7008547008547], [1016.0, 32.484536082474214], [1017.0, 17.99173553719008], [1018.0, 26.95412844036697], [1019.0, 25.31481481481483], [1013.0, 38.11805555555557], [1012.0, 68.96969696969698], [1011.0, 69.2837837837838], [1020.0, 19.501445086705164], [1021.0, 35.51504826802951], [1022.0, 33.19619593538294], [1023.0, 22.96247960848287], [1009.0, 50.148648648648646], [1008.0, 44.37786259541984], [1010.0, 66.62068965517243], [1015.0, 19.59859154929578], [1000.0, 20.226666666666674], [1001.0, 20.848214285714274], [1026.0, 13.761904761904765], [1024.0, 32.18939393939393], [1054.0, 5.0], [1052.0, 15.843750000000004], [1050.0, 43.58208955223887], [1048.0, 44.64637681159421], [1046.0, 15.5], [1044.0, 32.125], [1042.0, 29.5], [1040.0, 145.4], [1028.0, 23.4], [1030.0, 45.30588235294118], [1032.0, 80.73809523809521], [1036.0, 31.20512820512821], [1034.0, 58.859374999999986], [1038.0, 52.642857142857146], [1056.0, 11.227138643067843], [1086.0, 519.3570520965693], [1084.0, 51.10218978102188], [1082.0, 36.65], [1080.0, 24.255319148936163], [1078.0, 30.04545454545454], [1076.0, 34.65853658536586], [1074.0, 33.78947368421051], [1072.0, 54.39878542510121], [1058.0, 7.619047619047619], [1060.0, 14.636363636363631], [1062.0, 10.826219512195125], [1064.0, 30.635605511239998], [1066.0, 18.891008174386908], [1068.0, 20.73743016759777], [1070.0, 18.31578947368421], [1136.0, 107.14285714285714], [1096.0, 81.35820895522389], [1100.0, 11.948275862068966], [1102.0, 12.000000000000002], [1138.0, 101.06666666666666], [1142.0, 162.33333333333334], [1146.0, 237.0], [1148.0, 42.79807692307692], [1120.0, 6.0], [1122.0, 54.529411764705884], [1124.0, 92.66666666666669], [1126.0, 125.125], [1128.0, 102.2], [1130.0, 127.92857142857143], [1132.0, 96.75], [1134.0, 157.63636363636363], [1150.0, 200.35714285714286], [1098.0, 76.9616724738676], [1094.0, 82.18965517241378], [1092.0, 46.92499999999998], [1090.0, 55.875], [1088.0, 19.456236323851165], [1118.0, 7.636363636363635], [1116.0, 10.555555555555555], [1114.0, 8.973684210526315], [1112.0, 9.0], [1110.0, 7.333333333333333], [1108.0, 9.842105263157896], [1106.0, 12.5], [1104.0, 9.666666666666666], [1186.0, 26.23529411764706], [1200.0, 61.46504553455667], [1184.0, 73.0909090909091], [1182.0, 17.0], [1178.0, 16.5], [1188.0, 15.911764705882353], [1190.0, 22.57142857142857], [1198.0, 26.0], [1196.0, 51.37671232876711], [1194.0, 27.418918918918916], [1192.0, 33.87878787878789], [1031.0, 53.70270270270271], [1037.0, 13.3853427895981], [1027.0, 12.611650485436892], [1055.0, 5.3167420814479645], [1053.0, 21.88], [1051.0, 66.24590163934423], [1049.0, 29.29513343799057], [1047.0, 71.18533604887982], [1045.0, 65.45454545454545], [1043.0, 25.414572864321617], [1041.0, 21.12903225806452], [1025.0, 18.96296296296296], [1029.0, 97.97631307929986], [1033.0, 79.42028985507245], [1035.0, 17.812500000000004], [1039.0, 41.350649350649356], [1087.0, 73.34482758620689], [1085.0, 33.848423876592925], [1083.0, 14.178082191780824], [1081.0, 29.5581395348837], [1079.0, 20.26000000000001], [1077.0, 41.708333333333336], [1075.0, 25.589285714285715], [1073.0, 21.805970149253728], [1057.0, 6.541436464088397], [1059.0, 16.0], [1061.0, 12.985611510791367], [1063.0, 18.432261768082686], [1065.0, 26.38135593220339], [1067.0, 13.54193548387097], [1069.0, 12.33018867924528], [1071.0, 26.481481481481485], [1137.0, 31.444444444444443], [1143.0, 99.3], [1099.0, 32.43661971830986], [1101.0, 9.8125], [1103.0, 11.437499999999998], [1139.0, 91.36842105263156], [1145.0, 245.0], [1147.0, 120.5], [1149.0, 51.00000000000002], [1151.0, 227.88888888888889], [1121.0, 7.551724137931035], [1123.0, 111.90000000000002], [1125.0, 108.51020408163264], [1127.0, 102.8], [1129.0, 84.33333333333334], [1133.0, 102.80000000000001], [1135.0, 100.0], [1097.0, 52.75977653631285], [1095.0, 79.33898305084747], [1093.0, 57.032258064516114], [1091.0, 59.538461538461554], [1089.0, 49.65384615384615], [1119.0, 7.75], [1117.0, 8.75], [1115.0, 9.08108108108108], [1113.0, 9.133333333333335], [1111.0, 9.0], [1109.0, 9.11111111111111], [1107.0, 10.78260869565217], [1105.0, 11.509803921568626], [1191.0, 41.6595744680851], [1195.0, 56.744827586206874], [1183.0, 53.8125], [1181.0, 17.0], [1185.0, 14.366666666666669], [1187.0, 48.29577464788732], [1189.0, 21.47222222222223], [1199.0, 15.0], [1193.0, 41.8936170212766], [1.0, 13.0]], "isOverall": false, "label": "user2role", "isController": false}, {"data": [[1156.4210942890059, 59.40752033706078]], "isOverall": false, "label": "user2role-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2377.65, "minX": 1.6263459E12, "maxY": 5241864.033333333, "series": [{"data": [[1.62634602E12, 2134858.066666667], [1.6263459E12, 2377.65], [1.6263462E12, 2130734.933333333], [1.62634626E12, 385503.88333333336], [1.62634608E12, 2129720.8833333333], [1.62634614E12, 2142393.1666666665], [1.62634596E12, 2454483.716666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62634602E12, 4567644.3], [1.6263459E12, 5011.966666666666], [1.6263462E12, 4571773.033333333], [1.62634626E12, 827142.4], [1.62634608E12, 4569619.016666667], [1.62634614E12, 4596796.75], [1.62634596E12, 5241864.033333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62634626E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 38.609622538498186, "minX": 1.6263459E12, "maxY": 66.48381577526555, "series": [{"data": [[1.62634602E12, 65.7285630952861], [1.6263459E12, 59.78795589482612], [1.6263462E12, 66.24335802729831], [1.62634626E12, 42.68409214261926], [1.62634608E12, 66.10712082667872], [1.62634614E12, 66.48381577526555], [1.62634596E12, 38.609622538498186]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62634626E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 38.609054452626545, "minX": 1.6263459E12, "maxY": 66.48350964179527, "series": [{"data": [[1.62634602E12, 65.72804573156247], [1.6263459E12, 56.1162001696353], [1.6263462E12, 66.24302661321332], [1.62634626E12, 42.683820766532925], [1.62634608E12, 66.10674107948338], [1.62634614E12, 66.48350964179527], [1.62634596E12, 38.609054452626545]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62634626E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.030414996659987342, "minX": 1.6263459E12, "maxY": 18.81170483460562, "series": [{"data": [[1.62634602E12, 0.07168079129321295], [1.6263459E12, 18.81170483460562], [1.6263462E12, 0.06935996480023503], [1.62634626E12, 0.030414996659987342], [1.62634608E12, 0.06218218607801224], [1.62634614E12, 0.07780203682053397], [1.62634596E12, 0.27358785984920836]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62634626E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.6263459E12, "maxY": 1441.0, "series": [{"data": [[1.62634602E12, 1441.0], [1.6263459E12, 327.0], [1.6263462E12, 1376.0], [1.62634626E12, 1170.0], [1.62634608E12, 1288.0], [1.62634614E12, 1386.0], [1.62634596E12, 1328.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62634602E12, 71.0], [1.6263459E12, 239.0], [1.6263462E12, 87.0], [1.62634626E12, 81.0], [1.62634608E12, 55.0], [1.62634614E12, 57.0], [1.62634596E12, 65.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62634602E12, 840.0], [1.6263459E12, 323.0], [1.6263462E12, 838.9900000000016], [1.62634626E12, 304.6800000000512], [1.62634608E12, 766.9800000000032], [1.62634614E12, 975.0], [1.62634596E12, 972.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62634602E12, 200.0], [1.6263459E12, 274.0], [1.6263462E12, 220.0], [1.62634626E12, 101.0], [1.62634608E12, 134.0], [1.62634614E12, 119.0], [1.62634596E12, 96.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62634602E12, 1.0], [1.6263459E12, 1.0], [1.6263462E12, 1.0], [1.62634626E12, 1.0], [1.62634608E12, 1.0], [1.62634614E12, 1.0], [1.62634596E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62634602E12, 41.0], [1.6263459E12, 14.0], [1.6263462E12, 33.0], [1.62634626E12, 3.0], [1.62634608E12, 41.0], [1.62634614E12, 41.0], [1.62634596E12, 42.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62634626E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 1179.0, "maxY": 45.0, "series": [{"data": [[17211.0, 41.0], [17171.0, 42.0], [16675.0, 43.0], [17059.0, 41.0], [17027.0, 41.0], [16939.0, 42.0], [18323.0, 42.0], [17771.0, 41.0], [17931.0, 41.0], [17723.0, 42.0], [17427.0, 41.0], [17955.0, 40.0], [18147.0, 40.0], [17475.0, 42.0], [17419.0, 41.0], [18659.0, 41.0], [19235.0, 41.0], [18939.0, 40.0], [18947.0, 40.0], [18931.0, 41.0], [19059.0, 42.0], [19987.0, 23.0], [20707.0, 22.0], [23907.0, 31.0], [26027.0, 18.0], [27635.0, 31.0], [27851.0, 29.0], [9013.0, 37.0], [9041.0, 25.0], [9177.0, 11.0], [8985.0, 4.0], [9461.0, 3.0], [15281.0, 44.0], [15741.0, 42.0], [15405.0, 35.0], [16157.0, 43.0], [16057.0, 42.0], [16634.0, 42.0], [16706.0, 43.0], [16754.0, 42.0], [17010.0, 43.0], [17194.0, 42.0], [17346.0, 42.0], [16610.0, 42.0], [16626.0, 41.0], [17114.0, 41.0], [17218.0, 40.0], [18322.0, 43.0], [18394.0, 37.0], [17682.0, 42.0], [18026.0, 42.0], [18386.0, 41.0], [17746.0, 42.0], [18162.0, 36.0], [18010.0, 41.0], [18218.0, 41.0], [17466.0, 41.0], [18434.0, 42.0], [18738.0, 19.0], [18490.0, 33.0], [18898.0, 41.0], [19362.0, 41.0], [19370.0, 40.0], [18722.0, 40.0], [19170.0, 41.0], [18618.0, 40.0], [18650.0, 41.0], [20034.0, 37.0], [20586.0, 24.0], [24034.0, 35.0], [24274.0, 29.0], [25738.0, 33.0], [26122.0, 31.0], [16553.0, 41.0], [17225.0, 41.0], [16609.0, 41.0], [17657.0, 42.0], [17585.0, 40.0], [17465.0, 42.0], [17873.0, 42.0], [17593.0, 40.0], [18345.0, 43.0], [18209.0, 39.0], [18185.0, 42.0], [17577.0, 42.0], [17945.0, 42.0], [18129.0, 40.0], [17969.0, 43.0], [18801.0, 41.0], [18505.0, 40.0], [1179.0, 14.0], [18849.0, 40.0], [19049.0, 40.0], [19449.0, 41.0], [18881.0, 40.0], [19409.0, 40.0], [18785.0, 39.0], [20193.0, 22.0], [19513.0, 40.0], [21473.0, 19.0], [20633.0, 19.0], [22121.0, 23.0], [23649.0, 31.0], [25281.0, 28.0], [3635.0, 3.0], [6226.0, 15.0], [9068.0, 3.0], [9256.0, 22.0], [10808.0, 39.0], [14780.0, 30.0], [14908.0, 45.0], [15732.0, 41.0], [15720.0, 41.0], [16012.0, 41.0], [16332.0, 41.0], [16140.0, 42.0], [16376.0, 41.0], [16592.0, 42.0], [16872.0, 40.0], [16512.0, 41.0], [17064.0, 40.0], [17344.0, 44.0], [16968.0, 42.0], [16960.0, 41.0], [17016.0, 41.0], [17632.0, 32.0], [18088.0, 43.0], [18136.0, 42.0], [18296.0, 41.0], [18008.0, 42.0], [17424.0, 41.0], [18248.0, 41.0], [18264.0, 40.0], [17880.0, 41.0], [18216.0, 40.0], [18232.0, 42.0], [17672.0, 41.0], [17800.0, 40.0], [17776.0, 37.0], [18808.0, 41.0], [18648.0, 40.0], [18728.0, 39.0], [19120.0, 41.0], [19216.0, 40.0], [18632.0, 39.0], [18496.0, 41.0], [20816.0, 22.0], [22072.0, 19.0], [21736.0, 34.0], [22712.0, 22.0], [22616.0, 27.0], [16607.0, 43.0], [16503.0, 18.0], [16951.0, 44.0], [16399.0, 41.0], [17207.0, 41.0], [17159.0, 40.0], [16959.0, 41.0], [16839.0, 41.0], [18287.0, 42.0], [18367.0, 42.0], [17991.0, 41.0], [18327.0, 41.0], [17727.0, 43.0], [17735.0, 38.0], [18255.0, 41.0], [17519.0, 42.0], [17823.0, 42.0], [18207.0, 41.0], [18039.0, 43.0], [17999.0, 41.0], [18047.0, 40.0], [18879.0, 41.0], [18671.0, 42.0], [19239.0, 41.0], [18519.0, 41.0], [19183.0, 41.0], [18695.0, 41.0], [19127.0, 40.0], [18471.0, 40.0], [20815.0, 24.0], [20767.0, 37.0], [22119.0, 21.0], [25183.0, 31.0], [9131.0, 39.0], [9071.0, 6.0], [9427.0, 28.0], [12835.0, 43.0], [14179.0, 42.0], [14487.0, 22.0], [15291.0, 43.0], [15259.0, 43.0], [15867.0, 22.0], [15443.0, 41.0], [16083.0, 42.0], [16175.0, 41.0], [16075.0, 42.0], [16299.0, 42.0], [16359.0, 39.0], [17358.0, 41.0], [17398.0, 42.0], [16654.0, 39.0], [16414.0, 42.0], [16398.0, 43.0], [17070.0, 39.0], [16614.0, 41.0], [16902.0, 42.0], [16494.0, 41.0], [17566.0, 41.0], [17734.0, 40.0], [17438.0, 41.0], [17710.0, 41.0], [18406.0, 40.0], [18174.0, 44.0], [17966.0, 42.0], [18382.0, 41.0], [17622.0, 41.0], [17494.0, 41.0], [17550.0, 40.0], [17534.0, 44.0], [18630.0, 40.0], [19342.0, 40.0], [18774.0, 40.0], [19046.0, 41.0], [19006.0, 42.0], [19214.0, 41.0], [18758.0, 42.0], [18886.0, 41.0], [18574.0, 40.0], [19878.0, 31.0], [19494.0, 24.0], [23230.0, 20.0], [25486.0, 29.0], [26742.0, 32.0], [16429.0, 42.0], [17333.0, 42.0], [17149.0, 41.0], [17405.0, 41.0], [16989.0, 41.0], [17365.0, 42.0], [16933.0, 35.0], [17077.0, 41.0], [17493.0, 41.0], [17501.0, 41.0], [17469.0, 42.0], [17877.0, 19.0], [17901.0, 42.0], [17733.0, 20.0], [18349.0, 40.0], [17597.0, 42.0], [18325.0, 41.0], [18317.0, 41.0], [17533.0, 41.0], [17549.0, 40.0], [18093.0, 41.0], [18045.0, 41.0], [18165.0, 42.0], [17989.0, 42.0], [17925.0, 31.0], [18645.0, 41.0], [18853.0, 40.0], [18805.0, 20.0], [18533.0, 41.0], [18517.0, 41.0], [18637.0, 41.0], [18869.0, 39.0], [18509.0, 38.0], [19085.0, 16.0], [19149.0, 40.0], [19021.0, 41.0], [18845.0, 41.0], [20421.0, 21.0], [19997.0, 21.0], [24453.0, 27.0], [4747.0, 13.0], [8514.0, 32.0], [9202.0, 16.0], [10466.0, 18.0], [13122.0, 29.0], [12898.0, 27.0], [14386.0, 37.0], [15314.0, 44.0], [16094.0, 43.0], [16086.0, 42.0], [16226.0, 41.0], [15966.0, 43.0], [16388.0, 41.5], [16788.0, 44.0], [16596.0, 42.0], [18292.0, 41.0], [17460.0, 39.0], [18228.0, 41.0], [17916.0, 41.0], [17500.0, 41.0], [18268.0, 40.0], [18388.0, 40.0], [17740.0, 37.0], [18596.0, 41.0], [18700.0, 40.0], [18564.0, 41.0], [18708.0, 41.0], [19020.0, 41.0], [19084.0, 41.0], [18852.0, 40.0], [18892.0, 42.0], [20124.0, 14.0], [22644.0, 23.0], [23588.0, 31.0], [23892.0, 17.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27851.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 1179.0, "maxY": 45.0, "series": [{"data": [[17211.0, 41.0], [17171.0, 42.0], [16675.0, 43.0], [17059.0, 41.0], [17027.0, 41.0], [16939.0, 42.0], [18323.0, 42.0], [17771.0, 41.0], [17931.0, 41.0], [17723.0, 42.0], [17427.0, 41.0], [17955.0, 40.0], [18147.0, 40.0], [17475.0, 42.0], [17419.0, 41.0], [18659.0, 41.0], [19235.0, 41.0], [18939.0, 40.0], [18947.0, 40.0], [18931.0, 41.0], [19059.0, 42.0], [19987.0, 23.0], [20707.0, 22.0], [23907.0, 31.0], [26027.0, 18.0], [27635.0, 31.0], [27851.0, 29.0], [9013.0, 37.0], [9041.0, 25.0], [9177.0, 11.0], [8985.0, 4.0], [9461.0, 3.0], [15281.0, 44.0], [15741.0, 42.0], [15405.0, 35.0], [16157.0, 43.0], [16057.0, 42.0], [16634.0, 42.0], [16706.0, 43.0], [16754.0, 42.0], [17010.0, 43.0], [17194.0, 42.0], [17346.0, 42.0], [16610.0, 42.0], [16626.0, 41.0], [17114.0, 41.0], [17218.0, 40.0], [18322.0, 43.0], [18394.0, 37.0], [17682.0, 42.0], [18026.0, 42.0], [18386.0, 41.0], [17746.0, 42.0], [18162.0, 36.0], [18010.0, 41.0], [18218.0, 41.0], [17466.0, 41.0], [18434.0, 42.0], [18738.0, 19.0], [18490.0, 33.0], [18898.0, 41.0], [19362.0, 41.0], [19370.0, 40.0], [18722.0, 40.0], [19170.0, 41.0], [18618.0, 40.0], [18650.0, 41.0], [20034.0, 37.0], [20586.0, 24.0], [24034.0, 35.0], [24274.0, 29.0], [25738.0, 33.0], [26122.0, 31.0], [16553.0, 41.0], [17225.0, 41.0], [16609.0, 41.0], [17657.0, 42.0], [17585.0, 40.0], [17465.0, 42.0], [17873.0, 42.0], [17593.0, 40.0], [18345.0, 43.0], [18209.0, 39.0], [18185.0, 42.0], [17577.0, 42.0], [17945.0, 42.0], [18129.0, 40.0], [17969.0, 43.0], [18801.0, 41.0], [18505.0, 40.0], [1179.0, 14.0], [18849.0, 40.0], [19049.0, 40.0], [19449.0, 41.0], [18881.0, 40.0], [19409.0, 40.0], [18785.0, 39.0], [20193.0, 22.0], [19513.0, 40.0], [21473.0, 19.0], [20633.0, 19.0], [22121.0, 23.0], [23649.0, 31.0], [25281.0, 28.0], [3635.0, 3.0], [6226.0, 15.0], [9068.0, 3.0], [9256.0, 22.0], [10808.0, 39.0], [14780.0, 30.0], [14908.0, 45.0], [15732.0, 41.0], [15720.0, 41.0], [16012.0, 41.0], [16332.0, 41.0], [16140.0, 42.0], [16376.0, 41.0], [16592.0, 42.0], [16872.0, 40.0], [16512.0, 41.0], [17064.0, 40.0], [17344.0, 44.0], [16968.0, 42.0], [16960.0, 41.0], [17016.0, 41.0], [17632.0, 32.0], [18088.0, 43.0], [18136.0, 42.0], [18296.0, 41.0], [18008.0, 42.0], [17424.0, 41.0], [18248.0, 41.0], [18264.0, 40.0], [17880.0, 41.0], [18216.0, 40.0], [18232.0, 42.0], [17672.0, 41.0], [17800.0, 40.0], [17776.0, 37.0], [18808.0, 41.0], [18648.0, 40.0], [18728.0, 39.0], [19120.0, 41.0], [19216.0, 40.0], [18632.0, 39.0], [18496.0, 41.0], [20816.0, 22.0], [22072.0, 19.0], [21736.0, 34.0], [22712.0, 22.0], [22616.0, 27.0], [16607.0, 43.0], [16503.0, 18.0], [16951.0, 44.0], [16399.0, 41.0], [17207.0, 41.0], [17159.0, 40.0], [16959.0, 41.0], [16839.0, 41.0], [18287.0, 42.0], [18367.0, 42.0], [17991.0, 41.0], [18327.0, 41.0], [17727.0, 43.0], [17735.0, 38.0], [18255.0, 41.0], [17519.0, 42.0], [17823.0, 42.0], [18207.0, 41.0], [18039.0, 43.0], [17999.0, 41.0], [18047.0, 40.0], [18879.0, 41.0], [18671.0, 42.0], [19239.0, 41.0], [18519.0, 41.0], [19183.0, 41.0], [18695.0, 41.0], [19127.0, 40.0], [18471.0, 40.0], [20815.0, 24.0], [20767.0, 37.0], [22119.0, 21.0], [25183.0, 31.0], [9131.0, 39.0], [9071.0, 6.0], [9427.0, 28.0], [12835.0, 43.0], [14179.0, 42.0], [14487.0, 22.0], [15291.0, 43.0], [15259.0, 43.0], [15867.0, 22.0], [15443.0, 41.0], [16083.0, 42.0], [16175.0, 41.0], [16075.0, 42.0], [16299.0, 42.0], [16359.0, 39.0], [17358.0, 41.0], [17398.0, 42.0], [16654.0, 39.0], [16414.0, 42.0], [16398.0, 43.0], [17070.0, 39.0], [16614.0, 41.0], [16902.0, 42.0], [16494.0, 41.0], [17566.0, 41.0], [17734.0, 40.0], [17438.0, 41.0], [17710.0, 41.0], [18406.0, 40.0], [18174.0, 44.0], [17966.0, 42.0], [18382.0, 41.0], [17622.0, 41.0], [17494.0, 41.0], [17550.0, 40.0], [17534.0, 44.0], [18630.0, 40.0], [19342.0, 40.0], [18774.0, 40.0], [19046.0, 41.0], [19006.0, 42.0], [19214.0, 41.0], [18758.0, 42.0], [18886.0, 41.0], [18574.0, 40.0], [19878.0, 31.0], [19494.0, 24.0], [23230.0, 20.0], [25486.0, 29.0], [26742.0, 32.0], [16429.0, 42.0], [17333.0, 42.0], [17149.0, 41.0], [17405.0, 41.0], [16989.0, 41.0], [17365.0, 42.0], [16933.0, 35.0], [17077.0, 41.0], [17493.0, 41.0], [17501.0, 41.0], [17469.0, 42.0], [17877.0, 19.0], [17901.0, 42.0], [17733.0, 20.0], [18349.0, 40.0], [17597.0, 42.0], [18325.0, 41.0], [18317.0, 41.0], [17533.0, 41.0], [17549.0, 40.0], [18093.0, 41.0], [18045.0, 41.0], [18165.0, 42.0], [17989.0, 42.0], [17925.0, 31.0], [18645.0, 41.0], [18853.0, 40.0], [18805.0, 20.0], [18533.0, 41.0], [18517.0, 41.0], [18637.0, 41.0], [18869.0, 39.0], [18509.0, 38.0], [19085.0, 16.0], [19149.0, 40.0], [19021.0, 41.0], [18845.0, 41.0], [20421.0, 21.0], [19997.0, 21.0], [24453.0, 27.0], [4747.0, 13.0], [8514.0, 32.0], [9202.0, 16.0], [10466.0, 18.0], [13122.0, 29.0], [12898.0, 27.0], [14386.0, 37.0], [15314.0, 44.0], [16094.0, 43.0], [16086.0, 42.0], [16226.0, 41.0], [15966.0, 43.0], [16388.0, 41.5], [16788.0, 44.0], [16596.0, 42.0], [18292.0, 41.0], [17460.0, 39.0], [18228.0, 41.0], [17916.0, 41.0], [17500.0, 41.0], [18268.0, 40.0], [18388.0, 40.0], [17740.0, 37.0], [18596.0, 41.0], [18700.0, 40.0], [18564.0, 41.0], [18708.0, 41.0], [19020.0, 41.0], [19084.0, 41.0], [18852.0, 40.0], [18892.0, 42.0], [20124.0, 14.0], [22644.0, 23.0], [23588.0, 31.0], [23892.0, 17.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 27851.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 20.95, "minX": 1.6263459E12, "maxY": 20350.083333333332, "series": [{"data": [[1.62634602E12, 17685.866666666665], [1.6263459E12, 20.95], [1.6263462E12, 17643.916666666668], [1.62634626E12, 3181.4166666666665], [1.62634608E12, 17643.166666666668], [1.62634614E12, 17748.3], [1.62634596E12, 20350.083333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62634626E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 19.65, "minX": 1.6263459E12, "maxY": 20331.433333333334, "series": [{"data": [[1.62634602E12, 17685.816666666666], [1.6263459E12, 19.65], [1.6263462E12, 17651.633333333335], [1.62634626E12, 3193.6], [1.62634608E12, 17643.316666666666], [1.62634614E12, 17748.25], [1.62634596E12, 20331.433333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62634626E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 19.65, "minX": 1.6263459E12, "maxY": 20331.433333333334, "series": [{"data": [[1.62634602E12, 17685.816666666666], [1.6263459E12, 19.65], [1.6263462E12, 17651.633333333335], [1.62634626E12, 3193.6], [1.62634608E12, 17643.316666666666], [1.62634614E12, 17748.25], [1.62634596E12, 20331.433333333334]], "isOverall": false, "label": "user2role-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62634626E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 19.65, "minX": 1.6263459E12, "maxY": 20331.433333333334, "series": [{"data": [[1.62634602E12, 17685.816666666666], [1.6263459E12, 19.65], [1.6263462E12, 17651.633333333335], [1.62634626E12, 3193.6], [1.62634608E12, 17643.316666666666], [1.62634614E12, 17748.25], [1.62634596E12, 20331.433333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62634626E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

