/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 4615.0, "series": [{"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 8.0], [6.8, 8.0], [6.9, 8.0], [7.0, 8.0], [7.1, 8.0], [7.2, 8.0], [7.3, 8.0], [7.4, 8.0], [7.5, 8.0], [7.6, 8.0], [7.7, 8.0], [7.8, 8.0], [7.9, 8.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 9.0], [9.2, 9.0], [9.3, 9.0], [9.4, 10.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 10.0], [9.9, 10.0], [10.0, 10.0], [10.1, 10.0], [10.2, 10.0], [10.3, 10.0], [10.4, 10.0], [10.5, 10.0], [10.6, 10.0], [10.7, 10.0], [10.8, 11.0], [10.9, 11.0], [11.0, 11.0], [11.1, 11.0], [11.2, 11.0], [11.3, 11.0], [11.4, 11.0], [11.5, 11.0], [11.6, 11.0], [11.7, 11.0], [11.8, 11.0], [11.9, 11.0], [12.0, 11.0], [12.1, 11.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 12.0], [13.3, 12.0], [13.4, 12.0], [13.5, 13.0], [13.6, 13.0], [13.7, 13.0], [13.8, 13.0], [13.9, 13.0], [14.0, 13.0], [14.1, 13.0], [14.2, 13.0], [14.3, 13.0], [14.4, 13.0], [14.5, 13.0], [14.6, 13.0], [14.7, 13.0], [14.8, 13.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 15.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 15.0], [17.5, 15.0], [17.6, 16.0], [17.7, 16.0], [17.8, 16.0], [17.9, 16.0], [18.0, 16.0], [18.1, 16.0], [18.2, 16.0], [18.3, 16.0], [18.4, 16.0], [18.5, 16.0], [18.6, 16.0], [18.7, 16.0], [18.8, 16.0], [18.9, 17.0], [19.0, 17.0], [19.1, 17.0], [19.2, 17.0], [19.3, 17.0], [19.4, 17.0], [19.5, 17.0], [19.6, 17.0], [19.7, 17.0], [19.8, 17.0], [19.9, 17.0], [20.0, 17.0], [20.1, 17.0], [20.2, 17.0], [20.3, 18.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 18.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 18.0], [21.4, 18.0], [21.5, 18.0], [21.6, 19.0], [21.7, 19.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 19.0], [22.2, 19.0], [22.3, 19.0], [22.4, 19.0], [22.5, 19.0], [22.6, 19.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 20.0], [23.1, 20.0], [23.2, 20.0], [23.3, 20.0], [23.4, 20.0], [23.5, 20.0], [23.6, 20.0], [23.7, 20.0], [23.8, 20.0], [23.9, 20.0], [24.0, 20.0], [24.1, 20.0], [24.2, 20.0], [24.3, 21.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 21.0], [25.0, 21.0], [25.1, 21.0], [25.2, 21.0], [25.3, 21.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 22.0], [25.8, 22.0], [25.9, 22.0], [26.0, 22.0], [26.1, 22.0], [26.2, 22.0], [26.3, 22.0], [26.4, 22.0], [26.5, 22.0], [26.6, 22.0], [26.7, 22.0], [26.8, 22.0], [26.9, 22.0], [27.0, 22.0], [27.1, 22.0], [27.2, 23.0], [27.3, 23.0], [27.4, 23.0], [27.5, 23.0], [27.6, 23.0], [27.7, 23.0], [27.8, 23.0], [27.9, 23.0], [28.0, 23.0], [28.1, 23.0], [28.2, 23.0], [28.3, 23.0], [28.4, 23.0], [28.5, 23.0], [28.6, 24.0], [28.7, 24.0], [28.8, 24.0], [28.9, 24.0], [29.0, 24.0], [29.1, 24.0], [29.2, 24.0], [29.3, 24.0], [29.4, 24.0], [29.5, 24.0], [29.6, 24.0], [29.7, 24.0], [29.8, 24.0], [29.9, 24.0], [30.0, 24.0], [30.1, 24.0], [30.2, 25.0], [30.3, 25.0], [30.4, 25.0], [30.5, 25.0], [30.6, 25.0], [30.7, 25.0], [30.8, 25.0], [30.9, 25.0], [31.0, 25.0], [31.1, 25.0], [31.2, 25.0], [31.3, 25.0], [31.4, 25.0], [31.5, 25.0], [31.6, 25.0], [31.7, 25.0], [31.8, 26.0], [31.9, 26.0], [32.0, 26.0], [32.1, 26.0], [32.2, 26.0], [32.3, 26.0], [32.4, 26.0], [32.5, 26.0], [32.6, 26.0], [32.7, 26.0], [32.8, 26.0], [32.9, 26.0], [33.0, 26.0], [33.1, 26.0], [33.2, 26.0], [33.3, 26.0], [33.4, 27.0], [33.5, 27.0], [33.6, 27.0], [33.7, 27.0], [33.8, 27.0], [33.9, 27.0], [34.0, 27.0], [34.1, 27.0], [34.2, 27.0], [34.3, 27.0], [34.4, 27.0], [34.5, 27.0], [34.6, 27.0], [34.7, 27.0], [34.8, 27.0], [34.9, 27.0], [35.0, 28.0], [35.1, 28.0], [35.2, 28.0], [35.3, 28.0], [35.4, 28.0], [35.5, 28.0], [35.6, 28.0], [35.7, 28.0], [35.8, 28.0], [35.9, 28.0], [36.0, 28.0], [36.1, 28.0], [36.2, 28.0], [36.3, 28.0], [36.4, 28.0], [36.5, 28.0], [36.6, 29.0], [36.7, 29.0], [36.8, 29.0], [36.9, 29.0], [37.0, 29.0], [37.1, 29.0], [37.2, 29.0], [37.3, 29.0], [37.4, 29.0], [37.5, 29.0], [37.6, 29.0], [37.7, 29.0], [37.8, 29.0], [37.9, 29.0], [38.0, 29.0], [38.1, 29.0], [38.2, 30.0], [38.3, 30.0], [38.4, 30.0], [38.5, 30.0], [38.6, 30.0], [38.7, 30.0], [38.8, 30.0], [38.9, 30.0], [39.0, 30.0], [39.1, 30.0], [39.2, 30.0], [39.3, 30.0], [39.4, 30.0], [39.5, 30.0], [39.6, 30.0], [39.7, 31.0], [39.8, 31.0], [39.9, 31.0], [40.0, 31.0], [40.1, 31.0], [40.2, 31.0], [40.3, 31.0], [40.4, 31.0], [40.5, 31.0], [40.6, 31.0], [40.7, 31.0], [40.8, 31.0], [40.9, 31.0], [41.0, 31.0], [41.1, 31.0], [41.2, 32.0], [41.3, 32.0], [41.4, 32.0], [41.5, 32.0], [41.6, 32.0], [41.7, 32.0], [41.8, 32.0], [41.9, 32.0], [42.0, 32.0], [42.1, 32.0], [42.2, 32.0], [42.3, 32.0], [42.4, 32.0], [42.5, 32.0], [42.6, 33.0], [42.7, 33.0], [42.8, 33.0], [42.9, 33.0], [43.0, 33.0], [43.1, 33.0], [43.2, 33.0], [43.3, 33.0], [43.4, 33.0], [43.5, 33.0], [43.6, 33.0], [43.7, 33.0], [43.8, 33.0], [43.9, 33.0], [44.0, 34.0], [44.1, 34.0], [44.2, 34.0], [44.3, 34.0], [44.4, 34.0], [44.5, 34.0], [44.6, 34.0], [44.7, 34.0], [44.8, 34.0], [44.9, 34.0], [45.0, 34.0], [45.1, 34.0], [45.2, 34.0], [45.3, 35.0], [45.4, 35.0], [45.5, 35.0], [45.6, 35.0], [45.7, 35.0], [45.8, 35.0], [45.9, 35.0], [46.0, 35.0], [46.1, 35.0], [46.2, 35.0], [46.3, 35.0], [46.4, 35.0], [46.5, 35.0], [46.6, 36.0], [46.7, 36.0], [46.8, 36.0], [46.9, 36.0], [47.0, 36.0], [47.1, 36.0], [47.2, 36.0], [47.3, 36.0], [47.4, 36.0], [47.5, 36.0], [47.6, 36.0], [47.7, 36.0], [47.8, 37.0], [47.9, 37.0], [48.0, 37.0], [48.1, 37.0], [48.2, 37.0], [48.3, 37.0], [48.4, 37.0], [48.5, 37.0], [48.6, 37.0], [48.7, 37.0], [48.8, 37.0], [48.9, 37.0], [49.0, 37.0], [49.1, 38.0], [49.2, 38.0], [49.3, 38.0], [49.4, 38.0], [49.5, 38.0], [49.6, 38.0], [49.7, 38.0], [49.8, 38.0], [49.9, 38.0], [50.0, 38.0], [50.1, 38.0], [50.2, 38.0], [50.3, 39.0], [50.4, 39.0], [50.5, 39.0], [50.6, 39.0], [50.7, 39.0], [50.8, 39.0], [50.9, 39.0], [51.0, 39.0], [51.1, 39.0], [51.2, 39.0], [51.3, 39.0], [51.4, 39.0], [51.5, 40.0], [51.6, 40.0], [51.7, 40.0], [51.8, 40.0], [51.9, 40.0], [52.0, 40.0], [52.1, 40.0], [52.2, 40.0], [52.3, 40.0], [52.4, 40.0], [52.5, 40.0], [52.6, 41.0], [52.7, 41.0], [52.8, 41.0], [52.9, 41.0], [53.0, 41.0], [53.1, 41.0], [53.2, 41.0], [53.3, 41.0], [53.4, 41.0], [53.5, 41.0], [53.6, 41.0], [53.7, 41.0], [53.8, 42.0], [53.9, 42.0], [54.0, 42.0], [54.1, 42.0], [54.2, 42.0], [54.3, 42.0], [54.4, 42.0], [54.5, 42.0], [54.6, 42.0], [54.7, 42.0], [54.8, 42.0], [54.9, 43.0], [55.0, 43.0], [55.1, 43.0], [55.2, 43.0], [55.3, 43.0], [55.4, 43.0], [55.5, 43.0], [55.6, 43.0], [55.7, 43.0], [55.8, 43.0], [55.9, 43.0], [56.0, 43.0], [56.1, 44.0], [56.2, 44.0], [56.3, 44.0], [56.4, 44.0], [56.5, 44.0], [56.6, 44.0], [56.7, 44.0], [56.8, 44.0], [56.9, 44.0], [57.0, 44.0], [57.1, 44.0], [57.2, 45.0], [57.3, 45.0], [57.4, 45.0], [57.5, 45.0], [57.6, 45.0], [57.7, 45.0], [57.8, 45.0], [57.9, 45.0], [58.0, 45.0], [58.1, 45.0], [58.2, 45.0], [58.3, 46.0], [58.4, 46.0], [58.5, 46.0], [58.6, 46.0], [58.7, 46.0], [58.8, 46.0], [58.9, 46.0], [59.0, 46.0], [59.1, 46.0], [59.2, 46.0], [59.3, 46.0], [59.4, 47.0], [59.5, 47.0], [59.6, 47.0], [59.7, 47.0], [59.8, 47.0], [59.9, 47.0], [60.0, 47.0], [60.1, 47.0], [60.2, 47.0], [60.3, 47.0], [60.4, 47.0], [60.5, 48.0], [60.6, 48.0], [60.7, 48.0], [60.8, 48.0], [60.9, 48.0], [61.0, 48.0], [61.1, 48.0], [61.2, 48.0], [61.3, 48.0], [61.4, 48.0], [61.5, 48.0], [61.6, 49.0], [61.7, 49.0], [61.8, 49.0], [61.9, 49.0], [62.0, 49.0], [62.1, 49.0], [62.2, 49.0], [62.3, 49.0], [62.4, 49.0], [62.5, 49.0], [62.6, 50.0], [62.7, 50.0], [62.8, 50.0], [62.9, 50.0], [63.0, 50.0], [63.1, 50.0], [63.2, 50.0], [63.3, 50.0], [63.4, 50.0], [63.5, 50.0], [63.6, 51.0], [63.7, 51.0], [63.8, 51.0], [63.9, 51.0], [64.0, 51.0], [64.1, 51.0], [64.2, 51.0], [64.3, 51.0], [64.4, 51.0], [64.5, 51.0], [64.6, 52.0], [64.7, 52.0], [64.8, 52.0], [64.9, 52.0], [65.0, 52.0], [65.1, 52.0], [65.2, 52.0], [65.3, 52.0], [65.4, 52.0], [65.5, 53.0], [65.6, 53.0], [65.7, 53.0], [65.8, 53.0], [65.9, 53.0], [66.0, 53.0], [66.1, 53.0], [66.2, 53.0], [66.3, 53.0], [66.4, 54.0], [66.5, 54.0], [66.6, 54.0], [66.7, 54.0], [66.8, 54.0], [66.9, 54.0], [67.0, 54.0], [67.1, 54.0], [67.2, 55.0], [67.3, 55.0], [67.4, 55.0], [67.5, 55.0], [67.6, 55.0], [67.7, 55.0], [67.8, 55.0], [67.9, 55.0], [68.0, 56.0], [68.1, 56.0], [68.2, 56.0], [68.3, 56.0], [68.4, 56.0], [68.5, 56.0], [68.6, 56.0], [68.7, 56.0], [68.8, 57.0], [68.9, 57.0], [69.0, 57.0], [69.1, 57.0], [69.2, 57.0], [69.3, 57.0], [69.4, 57.0], [69.5, 57.0], [69.6, 58.0], [69.7, 58.0], [69.8, 58.0], [69.9, 58.0], [70.0, 58.0], [70.1, 58.0], [70.2, 58.0], [70.3, 59.0], [70.4, 59.0], [70.5, 59.0], [70.6, 59.0], [70.7, 59.0], [70.8, 59.0], [70.9, 59.0], [71.0, 60.0], [71.1, 60.0], [71.2, 60.0], [71.3, 60.0], [71.4, 60.0], [71.5, 60.0], [71.6, 60.0], [71.7, 61.0], [71.8, 61.0], [71.9, 61.0], [72.0, 61.0], [72.1, 61.0], [72.2, 61.0], [72.3, 61.0], [72.4, 62.0], [72.5, 62.0], [72.6, 62.0], [72.7, 62.0], [72.8, 62.0], [72.9, 62.0], [73.0, 63.0], [73.1, 63.0], [73.2, 63.0], [73.3, 63.0], [73.4, 63.0], [73.5, 63.0], [73.6, 63.0], [73.7, 64.0], [73.8, 64.0], [73.9, 64.0], [74.0, 64.0], [74.1, 64.0], [74.2, 64.0], [74.3, 65.0], [74.4, 65.0], [74.5, 65.0], [74.6, 65.0], [74.7, 65.0], [74.8, 65.0], [74.9, 66.0], [75.0, 66.0], [75.1, 66.0], [75.2, 66.0], [75.3, 66.0], [75.4, 66.0], [75.5, 67.0], [75.6, 67.0], [75.7, 67.0], [75.8, 67.0], [75.9, 67.0], [76.0, 67.0], [76.1, 68.0], [76.2, 68.0], [76.3, 68.0], [76.4, 68.0], [76.5, 68.0], [76.6, 68.0], [76.7, 69.0], [76.8, 69.0], [76.9, 69.0], [77.0, 69.0], [77.1, 69.0], [77.2, 69.0], [77.3, 70.0], [77.4, 70.0], [77.5, 70.0], [77.6, 70.0], [77.7, 70.0], [77.8, 70.0], [77.9, 71.0], [78.0, 71.0], [78.1, 71.0], [78.2, 71.0], [78.3, 71.0], [78.4, 72.0], [78.5, 72.0], [78.6, 72.0], [78.7, 72.0], [78.8, 72.0], [78.9, 72.0], [79.0, 73.0], [79.1, 73.0], [79.2, 73.0], [79.3, 73.0], [79.4, 73.0], [79.5, 74.0], [79.6, 74.0], [79.7, 74.0], [79.8, 74.0], [79.9, 74.0], [80.0, 75.0], [80.1, 75.0], [80.2, 75.0], [80.3, 75.0], [80.4, 75.0], [80.5, 76.0], [80.6, 76.0], [80.7, 76.0], [80.8, 76.0], [80.9, 76.0], [81.0, 77.0], [81.1, 77.0], [81.2, 77.0], [81.3, 77.0], [81.4, 78.0], [81.5, 78.0], [81.6, 78.0], [81.7, 78.0], [81.8, 78.0], [81.9, 79.0], [82.0, 79.0], [82.1, 79.0], [82.2, 79.0], [82.3, 80.0], [82.4, 80.0], [82.5, 80.0], [82.6, 80.0], [82.7, 81.0], [82.8, 81.0], [82.9, 81.0], [83.0, 81.0], [83.1, 82.0], [83.2, 82.0], [83.3, 82.0], [83.4, 82.0], [83.5, 83.0], [83.6, 83.0], [83.7, 83.0], [83.8, 83.0], [83.9, 84.0], [84.0, 84.0], [84.1, 84.0], [84.2, 84.0], [84.3, 85.0], [84.4, 85.0], [84.5, 85.0], [84.6, 85.0], [84.7, 86.0], [84.8, 86.0], [84.9, 86.0], [85.0, 87.0], [85.1, 87.0], [85.2, 87.0], [85.3, 87.0], [85.4, 88.0], [85.5, 88.0], [85.6, 88.0], [85.7, 89.0], [85.8, 89.0], [85.9, 89.0], [86.0, 90.0], [86.1, 90.0], [86.2, 90.0], [86.3, 90.0], [86.4, 91.0], [86.5, 91.0], [86.6, 91.0], [86.7, 92.0], [86.8, 92.0], [86.9, 92.0], [87.0, 93.0], [87.1, 93.0], [87.2, 93.0], [87.3, 94.0], [87.4, 94.0], [87.5, 94.0], [87.6, 95.0], [87.7, 95.0], [87.8, 96.0], [87.9, 96.0], [88.0, 96.0], [88.1, 97.0], [88.2, 97.0], [88.3, 97.0], [88.4, 98.0], [88.5, 98.0], [88.6, 99.0], [88.7, 99.0], [88.8, 99.0], [88.9, 100.0], [89.0, 100.0], [89.1, 101.0], [89.2, 101.0], [89.3, 102.0], [89.4, 102.0], [89.5, 103.0], [89.6, 103.0], [89.7, 103.0], [89.8, 104.0], [89.9, 104.0], [90.0, 105.0], [90.1, 105.0], [90.2, 106.0], [90.3, 106.0], [90.4, 107.0], [90.5, 107.0], [90.6, 108.0], [90.7, 109.0], [90.8, 109.0], [90.9, 110.0], [91.0, 110.0], [91.1, 111.0], [91.2, 111.0], [91.3, 112.0], [91.4, 113.0], [91.5, 113.0], [91.6, 114.0], [91.7, 114.0], [91.8, 115.0], [91.9, 116.0], [92.0, 116.0], [92.1, 117.0], [92.2, 118.0], [92.3, 119.0], [92.4, 119.0], [92.5, 120.0], [92.6, 121.0], [92.7, 122.0], [92.8, 122.0], [92.9, 123.0], [93.0, 124.0], [93.1, 125.0], [93.2, 126.0], [93.3, 127.0], [93.4, 128.0], [93.5, 129.0], [93.6, 130.0], [93.7, 131.0], [93.8, 132.0], [93.9, 133.0], [94.0, 134.0], [94.1, 135.0], [94.2, 136.0], [94.3, 137.0], [94.4, 139.0], [94.5, 140.0], [94.6, 141.0], [94.7, 142.0], [94.8, 144.0], [94.9, 145.0], [95.0, 147.0], [95.1, 148.0], [95.2, 150.0], [95.3, 151.0], [95.4, 153.0], [95.5, 155.0], [95.6, 157.0], [95.7, 159.0], [95.8, 160.0], [95.9, 162.0], [96.0, 165.0], [96.1, 167.0], [96.2, 169.0], [96.3, 172.0], [96.4, 175.0], [96.5, 178.0], [96.6, 181.0], [96.7, 184.0], [96.8, 187.0], [96.9, 191.0], [97.0, 195.0], [97.1, 200.0], [97.2, 205.0], [97.3, 211.0], [97.4, 217.0], [97.5, 225.0], [97.6, 233.0], [97.7, 240.0], [97.8, 246.0], [97.9, 251.0], [98.0, 256.0], [98.1, 260.0], [98.2, 264.0], [98.3, 268.0], [98.4, 272.0], [98.5, 277.0], [98.6, 281.0], [98.7, 286.0], [98.8, 291.0], [98.9, 297.0], [99.0, 302.0], [99.1, 309.0], [99.2, 316.0], [99.3, 323.0], [99.4, 331.0], [99.5, 342.0], [99.6, 354.0], [99.7, 372.0], [99.8, 404.0], [99.9, 502.0], [100.0, 4615.0]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 6990173.0, "series": [{"data": [[0.0, 6990173.0], [600.0, 1489.0], [700.0, 431.0], [800.0, 109.0], [900.0, 71.0], [1000.0, 1170.0], [1100.0, 582.0], [1200.0, 98.0], [1300.0, 38.0], [1400.0, 18.0], [1500.0, 11.0], [100.0, 651218.0], [1600.0, 10.0], [1700.0, 3.0], [1800.0, 7.0], [1900.0, 1.0], [2000.0, 5.0], [2100.0, 9.0], [2200.0, 1.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2800.0, 1.0], [3000.0, 25.0], [3100.0, 20.0], [200.0, 146607.0], [3200.0, 7.0], [3300.0, 2.0], [3600.0, 1.0], [4600.0, 1.0], [300.0, 65983.0], [400.0, 8661.0], [500.0, 3842.0]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 107.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7862672.0, "series": [{"data": [[0.0, 7862672.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7818.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 107.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 256.83069554352255, "minX": 1.62641322E12, "maxY": 900.0, "series": [{"data": [[1.62641322E12, 422.798869970226], [1.62641352E12, 805.1357628187285], [1.62641358E12, 256.83069554352255], [1.6264134E12, 900.0], [1.62641346E12, 900.0], [1.62641328E12, 871.9619725440447], [1.62641334E12, 900.0]], "isOverall": false, "label": "role1", "isController": false}, {"data": [[1.62641352E12, 900.0], [1.62641358E12, 828.5438346534933], [1.6264134E12, 900.0], [1.62641346E12, 900.0], [1.62641328E12, 884.5603422238453], [1.62641334E12, 900.0]], "isOverall": false, "label": "role2", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62641358E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 455.00952380952396, "series": [{"data": [[2.0, 10.0], [3.0, 6.0], [4.0, 1.1666666666666667], [5.0, 1.2941176470588238], [6.0, 1.4666666666666668], [7.0, 1.5714285714285714], [8.0, 1.5757575757575757], [9.0, 1.6874999999999996], [10.0, 1.4558823529411764], [11.0, 1.5193370165745863], [12.0, 1.8111888111888106], [13.0, 2.7499999999999996], [14.0, 4.0], [15.0, 3.0], [16.0, 2.25], [17.0, 2.4], [18.0, 3.5], [19.0, 2.6666666666666665], [21.0, 2.4], [22.0, 2.6], [23.0, 1.0], [24.0, 1.6666666666666667], [26.0, 2.4], [27.0, 2.4], [28.0, 3.0], [29.0, 5.0], [30.0, 3.0], [31.0, 6.0], [33.0, 3.25], [32.0, 3.0], [34.0, 3.0], [37.0, 2.0], [36.0, 3.0], [38.0, 3.0], [41.0, 3.0], [40.0, 2.8], [43.0, 3.0], [44.0, 2.5], [47.0, 4.25], [46.0, 6.0], [51.0, 3.0], [50.0, 7.0], [53.0, 2.7777777777777777], [52.0, 2.0], [55.0, 3.3333333333333335], [54.0, 3.4000000000000004], [56.0, 3.0], [59.0, 4.0], [58.0, 4.0], [61.0, 2.0], [60.0, 3.0], [63.0, 3.0], [67.0, 4.0], [66.0, 3.666666666666667], [65.0, 3.375], [64.0, 3.3333333333333335], [71.0, 3.428571428571429], [70.0, 4.333333333333333], [69.0, 3.5], [68.0, 4.285714285714286], [75.0, 3.75], [74.0, 3.75], [79.0, 7.499999999999998], [78.0, 4.666666666666667], [77.0, 6.857142857142857], [76.0, 4.090909090909091], [83.0, 85.0], [82.0, 24.5], [81.0, 56.5], [80.0, 3.0], [87.0, 17.571428571428573], [85.0, 3.5], [84.0, 3.0], [90.0, 4.0], [89.0, 45.0], [88.0, 31.333333333333336], [95.0, 5.0], [94.0, 20.2], [93.0, 62.5], [99.0, 4.5], [98.0, 37.66666666666667], [97.0, 10.96774193548387], [96.0, 12.88888888888889], [103.0, 21.25], [102.0, 4.0], [101.0, 4.5], [100.0, 19.8], [107.0, 24.5], [106.0, 12.299999999999997], [104.0, 30.333333333333332], [111.0, 18.1], [110.0, 4.285714285714286], [109.0, 3.933333333333333], [108.0, 22.5], [115.0, 27.0], [114.0, 76.0], [112.0, 40.5], [119.0, 17.272727272727273], [118.0, 12.200000000000001], [117.0, 13.0], [116.0, 4.5], [123.0, 5.818181818181818], [122.0, 6.0], [121.0, 6.333333333333333], [120.0, 4.5], [127.0, 3.5], [126.0, 5.2], [125.0, 4.0], [124.0, 4.0], [135.0, 6.916666666666667], [134.0, 11.000000000000002], [132.0, 5.0], [131.0, 5.0], [130.0, 13.999999999999998], [128.0, 11.07142857142857], [143.0, 8.666666666666666], [142.0, 9.8], [141.0, 6.6], [140.0, 18.166666666666668], [139.0, 30.0], [138.0, 5.0], [137.0, 11.777777777777779], [136.0, 6.6], [151.0, 23.5], [150.0, 8.222222222222221], [149.0, 46.333333333333336], [148.0, 10.625], [147.0, 8.25], [146.0, 9.0], [145.0, 7.0], [144.0, 8.5], [159.0, 9.333333333333334], [158.0, 9.0], [157.0, 8.0], [156.0, 8.0], [155.0, 8.2], [154.0, 19.6], [153.0, 35.75], [152.0, 64.0], [167.0, 10.0], [165.0, 8.0], [164.0, 11.0], [163.0, 9.0], [161.0, 9.0], [160.0, 11.0], [175.0, 8.25], [173.0, 10.0], [172.0, 60.0], [171.0, 19.125], [170.0, 8.5], [169.0, 8.25], [168.0, 8.0], [183.0, 11.6], [182.0, 11.0], [181.0, 7.0], [180.0, 8.357142857142856], [179.0, 8.571428571428571], [178.0, 6.5], [176.0, 11.125], [191.0, 17.25], [190.0, 5.0], [189.0, 5.6000000000000005], [188.0, 6.666666666666667], [187.0, 5.0], [186.0, 9.181818181818183], [184.0, 4.0], [199.0, 15.666666666666666], [198.0, 7.066666666666667], [197.0, 17.142857142857142], [196.0, 20.0], [195.0, 6.0], [194.0, 18.571428571428573], [193.0, 4.666666666666667], [192.0, 5.0], [207.0, 5.0], [206.0, 6.0], [205.0, 13.666666666666666], [204.0, 8.45833333333333], [203.0, 7.25], [202.0, 6.666666666666667], [201.0, 21.066666666666666], [200.0, 7.928571428571428], [215.0, 12.125], [214.0, 16.666666666666668], [213.0, 10.0], [212.0, 8.75], [211.0, 10.0], [210.0, 8.5], [209.0, 12.0], [208.0, 5.0], [219.0, 140.14285714285714], [220.0, 85.00000000000001], [221.0, 137.64356435643563], [222.0, 133.08695652173913], [223.0, 41.8], [218.0, 10.249999999999998], [217.0, 11.142857142857144], [216.0, 10.0], [224.0, 163.70967741935488], [231.0, 10.0], [230.0, 20.0], [228.0, 4.0], [227.0, 12.142857142857142], [225.0, 20.5], [229.0, 21.5], [226.0, 11.0], [239.0, 7.515384615384618], [237.0, 24.0], [236.0, 60.24999999999999], [235.0, 17.571428571428573], [238.0, 21.28571428571429], [234.0, 9.785714285714285], [233.0, 9.0], [232.0, 20.545454545454547], [240.0, 13.013513513513512], [241.0, 79.12643678160917], [242.0, 42.17137809187277], [243.0, 27.32189973614777], [244.0, 32.426020408163296], [245.0, 10.313131313131313], [246.0, 9.471698113207543], [247.0, 8.75862068965517], [248.0, 8.421052631578947], [249.0, 8.986928104575163], [251.0, 6.8677685950413245], [252.0, 6.12121212121212], [253.0, 5.533333333333332], [254.0, 3.0833333333333335], [255.0, 4.428571428571428], [250.0, 7.666666666666667], [256.0, 4.532258064516128], [259.0, 4.291044776119404], [260.0, 4.2], [261.0, 3.083333333333334], [262.0, 3.812499999999999], [258.0, 6.740740740740741], [257.0, 7.210526315789474], [263.0, 12.460550458715606], [266.0, 25.59593679458241], [271.0, 63.98290598290596], [265.0, 8.8], [264.0, 8.0], [270.0, 43.8411214953271], [269.0, 96.50000000000001], [267.0, 25.666666666666668], [268.0, 23.279388083735917], [275.0, 12.598901098901099], [272.0, 24.75924404272801], [279.0, 7.8], [273.0, 23.515469935785177], [274.0, 11.962962962962962], [280.0, 23.32203389830509], [287.0, 52.14], [286.0, 55.44444444444446], [285.0, 108.11475409836068], [284.0, 129.20000000000002], [281.0, 11.088631984585748], [282.0, 11.280000000000003], [283.0, 13.714837712519323], [278.0, 19.54545454545455], [277.0, 15.423076923076922], [276.0, 17.05405405405405], [289.0, 20.313318777292583], [288.0, 39.73076923076923], [290.0, 12.375], [291.0, 27.299999999999997], [292.0, 41.6835132482826], [293.0, 38.28769017980633], [294.0, 17.710097719869715], [295.0, 5.704545454545457], [296.0, 17.57894736842105], [303.0, 19.4], [302.0, 25.0], [300.0, 22.441075120606445], [301.0, 44.12500000000001], [297.0, 76.77777777777777], [298.0, 36.6], [299.0, 75.0], [305.0, 3.0], [307.0, 15.074621064904763], [306.0, 20.307692307692307], [317.0, 93.85185185185186], [316.0, 122.76], [304.0, 18.72727272727273], [308.0, 83.72483221476513], [313.0, 21.4455409356725], [315.0, 195.68421052631575], [314.0, 18.0], [312.0, 68.1232876712329], [311.0, 54.846153846153825], [310.0, 30.696969696969706], [309.0, 19.61111111111111], [318.0, 61.724137931034484], [319.0, 42.680586080586096], [322.0, 55.8369565217391], [321.0, 36.7], [323.0, 55.335243553008574], [332.0, 5.184931506849313], [333.0, 24.395833333333332], [334.0, 56.60526315789474], [335.0, 50.65254798146926], [328.0, 16.0], [324.0, 9.714285714285719], [326.0, 15.88381742738589], [327.0, 40.11169392162925], [320.0, 16.57142857142857], [325.0, 16.523809523809526], [329.0, 89.58064516129033], [330.0, 13.307692307692307], [331.0, 14.038461538461538], [339.0, 22.566037735849044], [349.0, 14.793103448275861], [348.0, 10.749999999999998], [338.0, 44.07142857142857], [337.0, 18.0], [336.0, 58.875], [346.0, 17.009302325581388], [347.0, 10.431372549019608], [345.0, 72.02777777777781], [344.0, 17.749999999999996], [351.0, 15.677419354838708], [350.0, 14.8], [343.0, 48.500000000000014], [342.0, 34.08196721311476], [341.0, 26.078947368421055], [340.0, 15.391304347826082], [360.0, 27.151162790697672], [366.0, 28.368421052631575], [364.0, 31.607142857142872], [355.0, 34.266666666666666], [363.0, 25.555555555555554], [362.0, 24.0], [361.0, 25.607142857142858], [356.0, 20.625], [358.0, 28.249999999999996], [357.0, 12.666666666666666], [354.0, 28.5], [352.0, 10.492063492063496], [353.0, 35.61538461538462], [359.0, 23.712962962962965], [367.0, 30.23595505617977], [370.0, 24.5], [374.0, 17.030812324929997], [375.0, 15.553398058252434], [373.0, 16.06122448979592], [372.0, 17.803738317757002], [376.0, 18.434782608695645], [382.0, 21.93817204301076], [383.0, 9.802013422818787], [380.0, 22.383954154727803], [371.0, 21.35816618911175], [381.0, 19.040345821325644], [369.0, 28.9], [368.0, 2.5], [377.0, 46.223170331473675], [378.0, 22.509933774834437], [379.0, 53.70926517571892], [385.0, 11.799426934097424], [384.0, 85.08333333333334], [386.0, 109.43442622950822], [387.0, 93.70370370370371], [388.0, 19.719486081370466], [389.0, 106.4], [390.0, 104.17241379310343], [391.0, 59.9255247122547], [392.0, 15.442992874109267], [398.0, 40.01139693910781], [399.0, 48.553470919324575], [396.0, 49.9255599472991], [397.0, 140.09999999999997], [393.0, 22.029411764705895], [394.0, 20.78097345132744], [395.0, 27.754237288135606], [401.0, 22.874074074074077], [400.0, 14.070093457943932], [402.0, 34.84090909090907], [403.0, 50.85139393939386], [404.0, 22.435294117647082], [405.0, 38.12500000000001], [406.0, 51.990686274509955], [407.0, 40.24324324324325], [411.0, 84.3650793650793], [414.0, 36.73474872346141], [415.0, 34.88636363636363], [409.0, 50.742268041237125], [408.0, 38.152777777777786], [410.0, 63.52739726027397], [412.0, 44.43750000000001], [413.0, 13.948717948717949], [419.0, 34.8], [423.0, 42.375], [425.0, 18.367124708322542], [424.0, 49.0], [427.0, 57.49999999999999], [426.0, 32.681818181818166], [430.0, 49.71764705882352], [429.0, 49.437499999999986], [428.0, 32.41860465116279], [431.0, 25.28395061728396], [422.0, 47.49514563106794], [421.0, 48.41176470588236], [420.0, 48.99082568807338], [418.0, 42.11290322580645], [417.0, 42.903225806451616], [416.0, 50.64102564102566], [433.0, 8.894179894179894], [432.0, 28.579591836734735], [434.0, 19.589999999999996], [435.0, 31.50769230769229], [436.0, 62.540807914262146], [438.0, 21.906141367323293], [439.0, 17.145945945945947], [437.0, 109.025], [445.0, 37.04651162790698], [443.0, 23.724137931034488], [442.0, 15.519999999999998], [440.0, 15.382978723404255], [441.0, 15.257142857142858], [447.0, 15.454545454545455], [446.0, 17.76190476190476], [444.0, 23.705882352941178], [451.0, 14.5], [461.0, 6.2], [460.0, 14.0], [459.0, 17.29850746268657], [458.0, 18.0], [457.0, 20.641025641025642], [456.0, 16.3], [463.0, 17.666666666666668], [462.0, 15.833333333333336], [455.0, 17.000000000000004], [454.0, 8.0], [452.0, 22.25], [453.0, 26.035714285714292], [449.0, 17.000000000000004], [450.0, 21.677419354838708], [448.0, 15.727272727272727], [478.0, 12.666666666666666], [477.0, 17.163265306122447], [476.0, 17.666666666666668], [467.0, 20.652173913043477], [474.0, 12.333333333333334], [475.0, 18.4], [473.0, 14.25], [472.0, 17.13513513513514], [479.0, 18.800000000000004], [470.0, 4.0], [469.0, 16.906976744186046], [468.0, 20.0], [466.0, 18.266666666666666], [464.0, 10.611111111111112], [465.0, 14.411764705882351], [471.0, 17.222222222222225], [494.0, 30.56], [495.0, 32.94444444444444], [493.0, 21.0], [492.0, 26.857142857142854], [491.0, 31.25], [490.0, 24.692307692307693], [489.0, 19.0], [488.0, 23.674418604651155], [485.0, 19.918918918918912], [484.0, 21.375], [483.0, 17.87878787878788], [481.0, 16.23076923076923], [482.0, 18.434782608695656], [480.0, 17.083333333333336], [487.0, 22.48387096774193], [486.0, 28.23076923076923], [510.0, 48.0], [511.0, 40.14545454545455], [509.0, 39.80952380952381], [508.0, 49.0], [505.0, 33.8], [507.0, 92.5], [506.0, 39.28571428571429], [504.0, 17.0], [503.0, 32.625], [497.0, 28.31578947368421], [496.0, 28.15], [499.0, 25.09090909090909], [498.0, 32.375], [502.0, 21.571428571428573], [501.0, 29.950000000000003], [500.0, 26.75], [512.0, 39.666666666666664], [518.0, 173.3870967741936], [526.0, 32.09090909090909], [524.0, 85.34848484848486], [514.0, 68.30000000000001], [522.0, 52.94399591211046], [520.0, 166.59183673469394], [528.0, 48.177777777777784], [542.0, 42.96774193548386], [538.0, 92.58064516129032], [540.0, 27.14159292035405], [536.0, 45.66963649322873], [530.0, 51.90740740740741], [532.0, 23.07557044169992], [534.0, 43.30719726819018], [516.0, 159.46153846153845], [546.0, 23.70670670670676], [570.0, 113.90000000000002], [544.0, 26.5], [558.0, 40.774193548387096], [556.0, 40.6], [550.0, 15.127565982404686], [554.0, 18.086217124777548], [552.0, 67.89583333333333], [568.0, 387.6666666666666], [560.0, 57.52777777777778], [574.0, 34.78048780487805], [572.0, 18.867647058823533], [562.0, 21.465674603174634], [564.0, 28.666666666666668], [566.0, 30.846153846153847], [548.0, 35.5], [600.0, 43.01694915254237], [582.0, 32.50399860917932], [578.0, 17.75115919629056], [580.0, 25.986358244365377], [576.0, 58.73333333333332], [602.0, 32.03636363636364], [604.0, 15.5], [606.0, 15.43529411764706], [592.0, 39.484848484848484], [594.0, 30.764919721296565], [596.0, 28.391665163268982], [598.0, 49.58333333333333], [584.0, 252.16666666666669], [586.0, 18.822495606326846], [588.0, 33.79166666666667], [590.0, 41.23809523809524], [612.0, 13.0], [614.0, 23.571428571428573], [608.0, 10.399999999999999], [622.0, 20.945945945945947], [620.0, 18.530785562632687], [618.0, 15.771151178918174], [610.0, 25.000000000000004], [632.0, 32.0], [634.0, 127.2], [636.0, 260.0], [638.0, 41.0], [624.0, 30.818181818181817], [628.0, 48.23809523809524], [626.0, 8.666666666666666], [630.0, 34.82692307692308], [616.0, 35.14285714285714], [654.0, 29.36507936507937], [648.0, 54.99999999999999], [650.0, 26.48453608247422], [652.0, 35.46000000000001], [646.0, 28.472727272727276], [644.0, 25.916666666666664], [642.0, 33.21359223300971], [640.0, 38.774999999999984], [656.0, 30.000000000000004], [670.0, 18.571428571428566], [668.0, 22.707142857142856], [666.0, 26.309523809523814], [664.0, 31.77777777777778], [658.0, 30.507462686567163], [660.0, 25.88888888888889], [662.0, 34.6], [674.0, 20.150684931506845], [672.0, 18.808510638297868], [686.0, 39.11363636363637], [684.0, 19.0], [682.0, 19.73333333333333], [676.0, 17.31517509727627], [678.0, 16.72413793103449], [690.0, 34.750941501380765], [702.0, 38.42857142857142], [700.0, 17.541666666666668], [698.0, 17.059171597633146], [696.0, 34.82580645161289], [692.0, 30.199431099873568], [694.0, 50.86813186813186], [680.0, 100.82608695652175], [706.0, 20.75], [710.0, 30.109589041095887], [728.0, 33.82246318174456], [730.0, 24.823529411764703], [716.0, 12.785714285714285], [714.0, 27.666666666666668], [712.0, 21.964285714285715], [704.0, 44.03703703703703], [708.0, 20.625], [718.0, 40.0], [720.0, 44.31147540983607], [722.0, 38.92086330935248], [726.0, 26.376068376068385], [734.0, 19.57142857142857], [732.0, 22.12903225806452], [738.0, 26.311475409836078], [736.0, 18.2], [748.0, 23.103636363636404], [750.0, 148.51724137931026], [746.0, 71.19607843137256], [740.0, 28.771929824561404], [742.0, 38.575268817204325], [752.0, 142.5303867403315], [764.0, 33.93333333333333], [766.0, 35.89795918367347], [762.0, 20.02158273381294], [760.0, 31.450000000000003], [754.0, 34.47327451997914], [756.0, 33.72463768115941], [758.0, 26.057750759878417], [744.0, 24.277173913043477], [770.0, 32.85937500000001], [768.0, 71.19999999999999], [782.0, 61.28332034294594], [780.0, 25.97232472324722], [778.0, 32.73602484472049], [772.0, 24.548611111111104], [774.0, 17.90283400809718], [798.0, 29.0], [784.0, 92.0765306122449], [786.0, 61.903846153846196], [788.0, 43.47773475314621], [790.0, 70.77717391304348], [796.0, 32.1675392670157], [794.0, 42.40344827586209], [792.0, 62.37599999999998], [776.0, 38.599669830788244], [828.0, 35.42857142857142], [830.0, 17.466666666666665], [818.0, 30.160256410256416], [816.0, 27.0], [820.0, 25.444444444444443], [826.0, 28.890109890109873], [824.0, 28.1], [806.0, 23.47368421052631], [804.0, 37.214285714285715], [800.0, 42.47500000000001], [802.0, 38.199999999999996], [814.0, 23.52631578947368], [812.0, 18.4375], [810.0, 57.411764705882355], [808.0, 26.956521739130437], [822.0, 23.270833333333336], [848.0, 13.0], [854.0, 20.625000000000004], [852.0, 23.346938775510203], [856.0, 19.79166666666667], [838.0, 51.03846153846154], [836.0, 23.68421052631579], [834.0, 107.55555555555556], [832.0, 20.749999999999996], [850.0, 54.6923076923077], [862.0, 98.63942307692312], [860.0, 25.83774834437087], [858.0, 38.589482822770705], [844.0, 17.666666666666664], [846.0, 18.249999999999996], [842.0, 14.222222222222221], [840.0, 20.520000000000003], [868.0, 40.8362183754994], [878.0, 51.76714801444042], [864.0, 38.569506726457405], [870.0, 34.34130146082334], [866.0, 29.88802083333332], [880.0, 29.679596586501102], [890.0, 44.33333333333333], [888.0, 47.77443609022557], [892.0, 63.06249999999997], [894.0, 53.70588235294118], [882.0, 33.462121212121225], [884.0, 34.611223880597066], [886.0, 35.143912737508856], [872.0, 62.49999999999999], [874.0, 76.4075012671059], [876.0, 42.85210577864841], [920.0, 29.162801932367177], [912.0, 60.86042323277805], [900.0, 44.61990950226246], [898.0, 43.656565656565654], [896.0, 45.3009708737864], [902.0, 29.37142857142857], [922.0, 64.02255639097747], [924.0, 45.55609756097561], [926.0, 41.278557114228455], [910.0, 35.628571428571426], [908.0, 29.666666666666668], [906.0, 36.74999999999999], [914.0, 34.95762711864406], [916.0, 59.46619217081848], [918.0, 58.133333333333326], [930.0, 31.431111111111147], [928.0, 28.805714285714284], [942.0, 36.66470588235291], [940.0, 32.35962145110411], [938.0, 34.37344028520508], [936.0, 36.26198630136985], [932.0, 36.829596412556036], [956.0, 14.125], [954.0, 36.68382352941178], [958.0, 39.0909090909091], [946.0, 14.90909090909091], [944.0, 31.365079365079367], [948.0, 28.0], [952.0, 27.214285714285715], [934.0, 40.72222222222222], [950.0, 17.888888888888886], [986.0, 64.45454545454545], [984.0, 66.88888888888889], [976.0, 39.733333333333334], [990.0, 48.736842105263165], [988.0, 57.53333333333334], [974.0, 27.689655172413794], [960.0, 16.2], [962.0, 32.58333333333333], [966.0, 31.793103448275865], [964.0, 25.133333333333336], [972.0, 37.428571428571416], [970.0, 32.69565217391304], [968.0, 32.69230769230769], [982.0, 31.0188679245283], [978.0, 38.61111111111111], [980.0, 37.591836734693885], [1022.0, 40.9173633440514], [1016.0, 37.96712538226303], [1018.0, 43.949122807017595], [1020.0, 35.5], [1008.0, 30.225133430373557], [1010.0, 55.4341926729987], [1012.0, 31.986277873070346], [1014.0, 39.19196062346183], [998.0, 53.0], [996.0, 122.8], [994.0, 58.279999999999994], [992.0, 54.190476190476204], [1000.0, 9.73239436619718], [1002.0, 12.258620689655178], [1004.0, 33.473684210526315], [1006.0, 26.857142857142858], [1028.0, 24.216836734693853], [1024.0, 14.705882352941176], [1052.0, 56.90283400809719], [1048.0, 35.23428571428571], [1044.0, 19.347457627118647], [1040.0, 48.666666666666664], [1032.0, 14.674603174603178], [1036.0, 17.56737588652482], [1076.0, 76.07142857142858], [1072.0, 98.30370370370382], [1080.0, 2.0], [1084.0, 43.17857142857144], [1056.0, 32.519083969465655], [1060.0, 34.69354838709676], [1064.0, 38.75], [1068.0, 39.66197183098591], [1140.0, 9.0], [1136.0, 39.588235294117645], [1148.0, 21.392857142857142], [1120.0, 35.55116696588868], [1124.0, 19.59375], [1144.0, 20.210526315789465], [1088.0, 36.37777777777778], [1092.0, 25.307692307692307], [1096.0, 17.6875], [1100.0, 24.41176470588235], [1116.0, 42.02898126463693], [1112.0, 51.72727272727271], [1108.0, 47.339217191097745], [1104.0, 40.91626409017706], [1132.0, 33.270833333333336], [1128.0, 35.61016949152541], [1160.0, 35.58620689655171], [1204.0, 40.240679824561425], [1212.0, 31.892857142857142], [1208.0, 61.3016564952049], [1180.0, 2.75], [1152.0, 20.083333333333332], [1156.0, 25.0], [1200.0, 13.207792207792208], [1164.0, 18.858974358974365], [1176.0, 19.472727272727273], [1172.0, 10.0], [1168.0, 13.256410256410257], [1196.0, 16.9375], [1192.0, 21.84552845528456], [1188.0, 18.21052631578947], [1184.0, 29.25352112676057], [1276.0, 45.40625449317049], [1252.0, 29.204651162790686], [1248.0, 20.79262086513995], [1256.0, 27.38292011019284], [1260.0, 20.68493150684931], [1272.0, 33.804953560371516], [1268.0, 40.36170212765957], [1264.0, 30.715877437325926], [1228.0, 43.69424657534267], [1224.0, 33.43712574850297], [1220.0, 45.218884120171644], [1216.0, 19.379084967320253], [1244.0, 46.47737960110255], [1240.0, 34.526066350710884], [1236.0, 19.39777777777781], [1232.0, 36.26630434782609], [1340.0, 41.974999999999994], [1316.0, 49.5], [1312.0, 46.69977426636569], [1320.0, 51.52238805970149], [1324.0, 26.4], [1336.0, 44.09090909090909], [1332.0, 19.5], [1280.0, 20.250000000000004], [1284.0, 47.48209366391183], [1292.0, 154.85714285714286], [1288.0, 47.6020408163265], [1328.0, 40.19444444444444], [1308.0, 22.875], [1304.0, 142.0], [1300.0, 82.9], [1296.0, 28.0], [1356.0, 58.1875], [1392.0, 38.669854132901136], [1388.0, 47.137380191693296], [1384.0, 54.81440877055599], [1344.0, 52.92307692307693], [1348.0, 82.60714285714288], [1352.0, 2.5], [1396.0, 41.275263754468554], [1400.0, 34.30354013319313], [1404.0, 18.08602150537635], [1376.0, 49.750000000000014], [1380.0, 48.524752475247524], [1372.0, 45.047787610619466], [1368.0, 43.072530864197525], [1360.0, 57.52542806031168], [1364.0, 52.996241778891275], [1408.0, 31.378378378378365], [1428.0, 29.960000000000004], [1432.0, 27.476821192052977], [1436.0, 92.26086956521739], [1412.0, 33.67291563887516], [1416.0, 19.09287148594378], [1420.0, 24.220207253885995], [1440.0, 21.8], [1444.0, 75.29577464788731], [1448.0, 16.333333333333332], [1452.0, 12.0], [1468.0, 35.51633986928104], [1464.0, 46.42340158796483], [1460.0, 22.47668393782383], [1456.0, 25.881987577639755], [1424.0, 4.6], [1528.0, 38.88334317779105], [1484.0, 28.507692307692306], [1520.0, 38.87666666666669], [1524.0, 39.76601607347886], [1532.0, 49.20782122905025], [1504.0, 43.91804457225014], [1508.0, 31.468007312614244], [1512.0, 37.79919678714862], [1516.0, 28.978238341968943], [1488.0, 15.76], [1492.0, 25.305555555555554], [1496.0, 14.319672131147541], [1500.0, 52.15260323159785], [1476.0, 72.49999999999997], [1480.0, 21.879999999999995], [1472.0, 64.45454545454547], [1564.0, 77.14285714285715], [1588.0, 38.142857142857146], [1548.0, 9.65263157894737], [1584.0, 41.60465116279069], [1552.0, 50.89572649572645], [1556.0, 17.858247422680435], [1560.0, 30.661764705882337], [1536.0, 36.16904761904755], [1540.0, 27.833333333333314], [1544.0, 29.62045454545453], [1592.0, 15.0], [1568.0, 53.666666666666664], [1572.0, 42.0952380952381], [1576.0, 26.259259259259263], [1580.0, 64.64285714285714], [1596.0, 16.032258064516128], [1628.0, 6.054545454545456], [1612.0, 24.78846153846154], [1648.0, 4.235294117647059], [1652.0, 49.3943661971831], [1656.0, 222.0], [1660.0, 7.333333333333334], [1616.0, 15.82], [1620.0, 16.250000000000007], [1624.0, 11.623767514270883], [1608.0, 47.55555555555556], [1604.0, 19.241379310344826], [1600.0, 19.55263157894737], [1632.0, 3.818181818181818], [1636.0, 2.25], [1640.0, 2.3], [1644.0, 3.2142857142857144], [1672.0, 7.5662650602409665], [1668.0, 9.428571428571429], [1664.0, 6.666666666666666], [1692.0, 7.5625], [1688.0, 9.999999999999996], [1676.0, 8.5], [1712.0, 10.111111111111112], [1716.0, 90.24999999999999], [1720.0, 65.54545454545455], [1724.0, 52.0], [1696.0, 5.454545454545454], [1700.0, 6.647058823529413], [1704.0, 191.25], [1708.0, 101.375], [1680.0, 9.814814814814811], [1684.0, 3.9999999999999996], [1732.0, 39.728971962616825], [1740.0, 38.75], [1728.0, 55.683544303797454], [1752.0, 50.57692307692308], [1756.0, 35.46808510638298], [1748.0, 55.361256544502595], [1736.0, 29.461538461538467], [1776.0, 122.43150684931504], [1780.0, 67.62962962962963], [1784.0, 55.3076923076923], [1764.0, 38.133333333333326], [1760.0, 21.62857142857143], [1768.0, 45.0], [1772.0, 69.1772151898734], [1788.0, 119.0], [1744.0, 66.9830508474576], [1800.0, 55.405437106283316], [1796.0, 48.03030303030304], [1792.0, 63.75847457627118], [1025.0, 12.35897435897436], [1053.0, 53.28448275862068], [1049.0, 30.082867783985098], [1045.0, 51.04771587366121], [1041.0, 24.444444444444443], [1029.0, 21.578947368421055], [1033.0, 14.024096385542173], [1037.0, 12.722222222222223], [1057.0, 26.24055415617127], [1085.0, 34.875], [1081.0, 83.55882352941177], [1077.0, 60.905882352941205], [1073.0, 78.37142857142858], [1061.0, 18.93548387096775], [1065.0, 9.382352941176473], [1069.0, 33.62068965517241], [1141.0, 10.692307692307693], [1137.0, 7.0], [1149.0, 67.69387755102042], [1121.0, 39.86551724137932], [1145.0, 30.111111111111107], [1089.0, 30.461538461538453], [1117.0, 36.778869778869776], [1097.0, 23.555555555555557], [1093.0, 27.749999999999996], [1101.0, 34.800000000000004], [1113.0, 59.654545454545456], [1109.0, 34.75576036866358], [1105.0, 27.937388193202185], [1129.0, 47.75], [1133.0, 32.704724409448815], [1125.0, 28.000000000000004], [1209.0, 64.11184210526316], [1185.0, 12.272727272727273], [1213.0, 35.45361428153354], [1189.0, 22.97747747747748], [1205.0, 31.50945775535939], [1201.0, 34.5], [1165.0, 26.761904761904756], [1161.0, 27.041666666666668], [1157.0, 22.53846153846154], [1153.0, 22.5], [1181.0, 2.3333333333333335], [1177.0, 14.38095238095238], [1173.0, 24.916666666666664], [1169.0, 37.285714285714285], [1197.0, 29.12359550561798], [1193.0, 8.0], [1277.0, 48.42371202113575], [1273.0, 37.15436241610738], [1253.0, 43.02121629281737], [1249.0, 49.085201793721936], [1257.0, 28.519572953736674], [1261.0, 24.190994052676288], [1269.0, 29.526315789473685], [1265.0, 39.97359735973606], [1217.0, 48.71179194869962], [1245.0, 34.36661466458663], [1225.0, 44.141610087293884], [1221.0, 37.229586935638835], [1229.0, 45.95128740431448], [1241.0, 36.26895306859203], [1237.0, 41.75635224504019], [1233.0, 24.056603773584907], [1341.0, 52.47126436781611], [1337.0, 49.77777777777777], [1317.0, 58.78048780487805], [1321.0, 77.0], [1325.0, 55.23333333333334], [1313.0, 52.04166666666667], [1333.0, 31.66666666666668], [1329.0, 24.71428571428571], [1281.0, 33.41468682505403], [1285.0, 48.31166404405972], [1289.0, 50.938202247191], [1293.0, 72.52173913043477], [1309.0, 33.666666666666664], [1301.0, 81.16666666666667], [1305.0, 71.75], [1297.0, 30.642857142857146], [1377.0, 67.75543478260869], [1385.0, 38.52985781990521], [1389.0, 15.052631578947368], [1381.0, 58.743243243243235], [1405.0, 16.461714285714244], [1401.0, 30.454720616570327], [1397.0, 18.542725173210158], [1373.0, 51.68636539204347], [1345.0, 65.19999999999999], [1349.0, 76.92307692307692], [1357.0, 53.807692307692314], [1353.0, 65.39436619718312], [1393.0, 37.37440191387562], [1365.0, 48.54219148761021], [1369.0, 50.0], [1361.0, 146.0396039603961], [1409.0, 31.817931034482758], [1429.0, 29.69565217391304], [1433.0, 61.68539325842699], [1437.0, 131.5909090909091], [1413.0, 31.119331742243414], [1417.0, 51.615171137835304], [1421.0, 30.530464914813745], [1441.0, 6.0], [1445.0, 22.0], [1449.0, 29.64923076923075], [1453.0, 29.446428571428577], [1469.0, 39.333333333333336], [1465.0, 41.31023437500003], [1461.0, 23.296875000000004], [1457.0, 15.534591194968558], [1425.0, 49.712999437253785], [1485.0, 22.83109118086699], [1481.0, 34.200873362445414], [1477.0, 40.204081632653065], [1473.0, 52.319148936170244], [1501.0, 47.845760980592466], [1505.0, 51.81353919239909], [1533.0, 29.3218997361478], [1529.0, 25.975], [1525.0, 26.197780020181643], [1521.0, 55.71814671814669], [1509.0, 23.148636763412505], [1513.0, 26.578947368421048], [1517.0, 38.60623229461755], [1489.0, 22.298441634813333], [1493.0, 30.225806451612907], [1497.0, 10.739454094292812], [1537.0, 36.402459016393514], [1589.0, 71.87500000000003], [1561.0, 94.52941176470588], [1545.0, 24.94498381877021], [1541.0, 25.0], [1549.0, 8.719178082191787], [1565.0, 28.720000000000006], [1585.0, 15.750000000000002], [1557.0, 46.477777777777774], [1553.0, 32.30357142857144], [1593.0, 11.0], [1569.0, 32.375], [1573.0, 28.416666666666664], [1577.0, 27.857142857142858], [1581.0, 60.6764705882353], [1597.0, 18.82142857142857], [1613.0, 19.044444444444448], [1609.0, 212.25683060109293], [1649.0, 4.441860465116279], [1653.0, 91.8], [1657.0, 62.54838709677419], [1661.0, 10.166666666666668], [1621.0, 30.187500000000004], [1617.0, 23.727272727272723], [1625.0, 7.38135593220339], [1629.0, 5.076923076923077], [1601.0, 16.307692307692314], [1605.0, 25.318181818181817], [1633.0, 4.106382978723404], [1637.0, 2.090909090909091], [1641.0, 2.875], [1645.0, 2.181818181818182], [1669.0, 2.6666666666666665], [1677.0, 10.771929824561404], [1665.0, 6.416666666666667], [1693.0, 6.575], [1689.0, 10.833333333333332], [1685.0, 4.4], [1673.0, 7.272727272727273], [1713.0, 3.0], [1725.0, 55.92857142857142], [1721.0, 55.625], [1717.0, 355.45692883895106], [1697.0, 5.0], [1701.0, 67.29104477611936], [1705.0, 102.70588235294117], [1709.0, 186.74193548387103], [1681.0, 10.931372549019605], [1733.0, 37.090909090909086], [1729.0, 40.52830188679246], [1753.0, 46.83870967741937], [1757.0, 34.80952380952381], [1749.0, 52.40909090909091], [1737.0, 33.888888888888886], [1741.0, 61.46153846153845], [1761.0, 37.47794117647059], [1765.0, 50.56557377049181], [1769.0, 58.64705882352941], [1773.0, 47.35999999999999], [1789.0, 56.25806451612904], [1785.0, 121.95652173913042], [1781.0, 71.01449275362316], [1777.0, 121.31578947368426], [1745.0, 92.26923076923077], [1797.0, 110.36538461538463], [1793.0, 69.19354838709677], [515.0, 39.150760135135265], [513.0, 41.13700131521264], [527.0, 36.08333333333333], [525.0, 22.341880341880337], [523.0, 40.9248120300752], [521.0, 81.0666666666667], [519.0, 291.5735294117648], [543.0, 53.482758620689644], [541.0, 309.84210526315786], [539.0, 33.59744830620324], [537.0, 24.0], [529.0, 46.678260869565214], [531.0, 76.45833333333337], [535.0, 56.539682539682545], [533.0, 65.85443037974686], [517.0, 36.666666666666664], [549.0, 59.96153846153845], [545.0, 48.824999999999996], [559.0, 54.772727272727266], [557.0, 33.27027027027028], [555.0, 33.93333333333333], [553.0, 82.89583333333331], [551.0, 102.35106382978725], [569.0, 455.00952380952396], [573.0, 23.58724832214765], [575.0, 49.11764705882353], [571.0, 35.85499462943067], [561.0, 54.67073170731707], [563.0, 29.34653465346534], [565.0, 28.0], [567.0, 9.040435458786941], [547.0, 29.733333333333334], [583.0, 254.8666666666667], [577.0, 63.80565371024736], [579.0, 17.42857142857144], [581.0, 38.45000000000002], [601.0, 15.589743589743591], [603.0, 12.920000000000002], [605.0, 6.040816326530614], [607.0, 36.5], [593.0, 46.62686567164178], [595.0, 34.19182389937104], [599.0, 44.16666666666669], [597.0, 38.296296296296305], [585.0, 52.14767932489448], [587.0, 33.0], [589.0, 39.857142857142854], [591.0, 42.99999999999999], [611.0, 37.6], [609.0, 25.388888888888886], [623.0, 33.54545454545455], [621.0, 19.37662337662338], [619.0, 14.621506682867551], [613.0, 34.0], [615.0, 21.833333333333336], [633.0, 31.93103448275862], [635.0, 40.8955223880597], [639.0, 43.333333333333336], [637.0, 40.709677419354854], [627.0, 18.547169811320757], [625.0, 14.054794520547947], [629.0, 34.64705882352941], [631.0, 32.16666666666667], [617.0, 18.249999999999996], [655.0, 27.170212765957448], [665.0, 26.149999999999995], [653.0, 26.250000000000007], [647.0, 34.765957446808514], [649.0, 25.599999999999998], [651.0, 130.66666666666666], [645.0, 30.526315789473685], [643.0, 32.5], [641.0, 36.95121951219511], [671.0, 52.88235294117647], [669.0, 18.880952380952376], [667.0, 30.277777777777782], [657.0, 34.37623762376237], [659.0, 35.45000000000001], [661.0, 29.583333333333336], [663.0, 34.49333333333333], [675.0, 26.294117647058826], [679.0, 101.35199610516071], [685.0, 16.0], [687.0, 41.65540540540543], [683.0, 38.41158652025749], [673.0, 27.628504672897197], [677.0, 20.708333333333336], [689.0, 23.279069767441865], [703.0, 33.5], [701.0, 30.451612903225804], [699.0, 30.86538461538462], [697.0, 28.35937500000001], [691.0, 41.52984201287301], [693.0, 38.043956043956044], [695.0, 24.651724137931037], [681.0, 32.18246445497621], [705.0, 35.78991596638659], [709.0, 25.258241758241752], [731.0, 28.98245614035088], [711.0, 20.652173913043477], [729.0, 22.947368421052637], [717.0, 68.16666666666667], [715.0, 22.5], [713.0, 20.600000000000005], [719.0, 32.6], [707.0, 20.240000000000002], [723.0, 63.857142857142854], [725.0, 47.09174311926604], [727.0, 21.165394402035627], [735.0, 24.483516483516482], [733.0, 22.999999999999996], [739.0, 9.133333333333324], [751.0, 148.78125], [749.0, 157.85714285714286], [747.0, 26.1425339366516], [737.0, 47.128205128205124], [741.0, 36.71929824561405], [743.0, 25.6540948275862], [765.0, 36.90598290598291], [767.0, 34.375], [763.0, 22.307228915662673], [761.0, 24.347826086956513], [753.0, 146.14814814814815], [755.0, 26.620155038759684], [757.0, 19.771117166212566], [759.0, 37.42372881355932], [745.0, 90.87962962962962], [771.0, 27.212454212454222], [783.0, 37.758270227182095], [781.0, 38.51616864510848], [779.0, 27.313868613138677], [769.0, 34.20754716981133], [773.0, 19.98230088495575], [775.0, 30.65714285714286], [799.0, 35.607843137254896], [785.0, 55.545945945945924], [787.0, 53.97196261682244], [791.0, 39.89060568603214], [789.0, 147.6369982547993], [797.0, 36.07920792079207], [795.0, 48.75675675675676], [793.0, 33.228390723822955], [777.0, 30.28652321630801], [829.0, 20.9], [825.0, 26.92727272727273], [831.0, 21.428571428571423], [817.0, 25.539325842696623], [821.0, 51.88888888888889], [819.0, 51.06382978723404], [827.0, 69.46808510638301], [807.0, 22.285714285714285], [805.0, 33.0], [803.0, 32.608695652173914], [801.0, 31.0], [815.0, 31.111111111111114], [813.0, 48.52380952380953], [811.0, 16.166666666666668], [809.0, 24.0], [823.0, 27.433333333333337], [839.0, 109.0], [847.0, 95.75], [857.0, 9.447058823529408], [855.0, 40.25], [853.0, 21.8], [851.0, 25.73333333333333], [837.0, 101.57142857142857], [835.0, 45.89999999999999], [833.0, 19.25], [849.0, 25.312499999999993], [863.0, 131.52631578947367], [861.0, 46.86015325670498], [859.0, 41.661157024793376], [845.0, 18.258064516129036], [843.0, 16.615384615384617], [841.0, 53.0], [889.0, 45.03448275862069], [871.0, 39.18603565761248], [865.0, 36.09722222222223], [869.0, 35.17718940936865], [867.0, 41.908668730650184], [891.0, 69.66666666666666], [893.0, 38.99999999999999], [895.0, 52.20270270270269], [881.0, 30.53691275167785], [883.0, 31.877207737594656], [885.0, 28.521671826625422], [887.0, 43.696428571428584], [873.0, 66.59701492537314], [875.0, 207.85458167330702], [877.0, 35.56521739130434], [879.0, 26.19454329774613], [903.0, 26.923076923076923], [899.0, 48.087837837837824], [897.0, 44.0], [901.0, 233.1891891891892], [921.0, 92.41891891891899], [923.0, 20.40617577197149], [925.0, 19.94418604651161], [927.0, 44.7590559824371], [909.0, 29.115384615384617], [907.0, 30.148148148148152], [905.0, 25.25], [911.0, 53.292682926829286], [913.0, 30.698113207547173], [915.0, 51.32913646191023], [917.0, 32.81069858329271], [919.0, 41.469407265774365], [931.0, 27.19480519480519], [953.0, 18.75], [943.0, 26.303571428571423], [941.0, 39.79805137289654], [939.0, 33.24606299212602], [937.0, 30.80604534005037], [929.0, 33.562818336163005], [933.0, 38.15384615384615], [955.0, 34.050000000000004], [957.0, 37.87500000000001], [959.0, 36.75862068965519], [945.0, 31.923076923076902], [947.0, 3.0], [935.0, 39.67857142857143], [951.0, 31.055555555555554], [949.0, 22.5], [965.0, 29.6], [989.0, 83.44444444444444], [991.0, 34.06666666666666], [987.0, 92.2], [975.0, 35.26436781609195], [961.0, 21.169491525423723], [963.0, 31.666666666666664], [967.0, 33.111111111111114], [973.0, 38.2], [971.0, 65.8], [969.0, 2.0], [983.0, 38.19298245614035], [981.0, 42.291666666666664], [979.0, 31.4], [977.0, 34.15789473684211], [1019.0, 27.312849162011176], [995.0, 53.300000000000004], [999.0, 50.71428571428571], [1017.0, 31.707287449392727], [1021.0, 35.30000000000002], [1023.0, 26.145907473309613], [1009.0, 44.48854961832062], [1011.0, 26.199999999999996], [1013.0, 51.56222547584184], [1015.0, 42.00215285252971], [1001.0, 7.656249999999999], [1003.0, 36.33333333333333], [1005.0, 24.529306054741433], [1007.0, 27.953599999999994], [993.0, 37.43636363636364], [1026.0, 19.721088435374153], [1050.0, 41.7092391304348], [1046.0, 57.11764705882352], [1054.0, 19.540372670807454], [1042.0, 7.0], [1030.0, 17.71356783919598], [1034.0, 25.87671232876713], [1038.0, 9.954022988505749], [1074.0, 91.30555555555554], [1078.0, 58.55913978494626], [1082.0, 49.50847457627118], [1086.0, 36.46774193548387], [1058.0, 14.35], [1062.0, 43.11764705882353], [1066.0, 14.966666666666667], [1070.0, 55.69230769230771], [1146.0, 34.00000000000001], [1150.0, 45.72222222222222], [1122.0, 17.545454545454547], [1126.0, 43.42857142857142], [1142.0, 8.8], [1138.0, 9.238095238095237], [1118.0, 53.86319396847156], [1094.0, 22.468085106382976], [1090.0, 25.885714285714283], [1102.0, 46.03571428571429], [1098.0, 18.999999999999996], [1114.0, 73.51604938271609], [1110.0, 54.25590551181107], [1106.0, 31.172864099158943], [1134.0, 19.151515151515152], [1130.0, 47.31746031746033], [1206.0, 38.81746031746031], [1190.0, 27.54113924050633], [1214.0, 15.439783491204327], [1210.0, 57.86989795918371], [1182.0, 36.76470588235294], [1158.0, 21.27777777777778], [1154.0, 21.875], [1162.0, 21.666666666666668], [1166.0, 12.133333333333333], [1202.0, 19.27102803738317], [1178.0, 21.960000000000004], [1174.0, 26.408163265306122], [1170.0, 14.940298507462684], [1198.0, 16.272727272727266], [1194.0, 14.333333333333332], [1186.0, 27.65714285714286], [1278.0, 32.12804878048784], [1270.0, 32.29166666666668], [1250.0, 35.76470588235295], [1254.0, 26.631016042780757], [1258.0, 21.99002493765585], [1262.0, 53.340483486550916], [1274.0, 33.36874999999997], [1266.0, 37.9255583126551], [1230.0, 40.227272727272684], [1218.0, 37.4395796847636], [1226.0, 71.28445747800572], [1222.0, 30.448210922787176], [1246.0, 26.83977900552487], [1242.0, 38.099917423616816], [1238.0, 42.52182539682538], [1234.0, 30.185185185185176], [1342.0, 51.704918032786885], [1334.0, 32.6923076923077], [1318.0, 49.625], [1314.0, 67.41666666666663], [1322.0, 48.666666666666664], [1326.0, 41.41176470588234], [1338.0, 35.05128205128205], [1330.0, 45.15624999999999], [1310.0, 34.63157894736842], [1282.0, 13.478260869565217], [1286.0, 40.388145315487535], [1290.0, 142.75], [1294.0, 56.75], [1306.0, 37.54166666666667], [1302.0, 176.75], [1298.0, 44.05479452054798], [1354.0, 117.53846153846155], [1382.0, 48.76610978520286], [1386.0, 33.0], [1390.0, 9.517006802721088], [1374.0, 74.33928571428574], [1346.0, 57.66666666666665], [1350.0, 57.516129032258064], [1394.0, 32.45381984036487], [1398.0, 6.116883116883118], [1402.0, 45.919228075636006], [1406.0, 21.12701421800948], [1378.0, 71.30115830115827], [1358.0, 55.96791443850267], [1370.0, 46.50000000000001], [1362.0, 50.307069219440386], [1366.0, 41.80048959608323], [1414.0, 22.988687782805442], [1422.0, 24.03015384615387], [1430.0, 22.42857142857143], [1434.0, 52.1219512195122], [1438.0, 99.03571428571428], [1410.0, 36.89238210399027], [1418.0, 25.24470134874759], [1442.0, 4.5], [1446.0, 55.34523809523811], [1450.0, 59.27586206896552], [1454.0, 13.6], [1470.0, 46.71659865736488], [1466.0, 27.40063761955367], [1462.0, 44.70329670329669], [1458.0, 35.11811023622046], [1426.0, 26.922009569377977], [1526.0, 9.953846153846158], [1494.0, 34.636220472440954], [1486.0, 25.195885509838934], [1522.0, 64.6182572614108], [1530.0, 30.254049445865235], [1534.0, 7.384615384615384], [1506.0, 39.91596091205208], [1510.0, 42.69408538973752], [1514.0, 30.897707231040567], [1518.0, 55.43750000000001], [1490.0, 30.543719737966292], [1498.0, 39.087604655911605], [1502.0, 30.770780856423183], [1482.0, 33.65773195876291], [1478.0, 22.290909090909093], [1474.0, 60.33944954128432], [1566.0, 37.111111111111114], [1550.0, 6.53846153846154], [1586.0, 16.499999999999996], [1590.0, 25.875000000000004], [1554.0, 43.96666666666667], [1558.0, 27.632653061224488], [1562.0, 20.333333333333332], [1538.0, 27.08536585365854], [1542.0, 28.981273408239712], [1546.0, 20.143749999999997], [1598.0, 22.25], [1570.0, 36.65000000000001], [1574.0, 25.11111111111111], [1578.0, 24.752631578947376], [1582.0, 42.978723404255334], [1594.0, 21.875], [1630.0, 6.536585365853657], [1610.0, 31.75423728813559], [1614.0, 14.474903474903472], [1650.0, 22.425], [1654.0, 82.57291666666666], [1662.0, 9.8], [1618.0, 22.926829268292686], [1622.0, 29.16393442622951], [1626.0, 4.333333333333333], [1606.0, 25.750000000000004], [1602.0, 10.666666666666666], [1634.0, 3.0], [1638.0, 2.5], [1642.0, 1.9090909090909092], [1646.0, 2.8], [1670.0, 6.714285714285714], [1686.0, 13.057692307692303], [1694.0, 7.0], [1690.0, 12.823255813953493], [1674.0, 6.918367346938775], [1678.0, 11.2], [1718.0, 171.5], [1714.0, 193.21052631578948], [1722.0, 46.0], [1726.0, 60.07692307692308], [1698.0, 5.333333333333334], [1702.0, 145.99999999999997], [1706.0, 5.0], [1710.0, 135.69047619047626], [1682.0, 6.666666666666666], [1734.0, 50.71428571428572], [1730.0, 42.86363636363636], [1758.0, 69.88235294117646], [1754.0, 60.5], [1750.0, 52.41176470588235], [1738.0, 48.375], [1742.0, 66.22222222222221], [1778.0, 79.84], [1786.0, 113.76470588235293], [1782.0, 69.34210526315788], [1790.0, 66.34999999999998], [1762.0, 48.5], [1766.0, 43.49999999999999], [1770.0, 60.90000000000002], [1774.0, 52.0], [1746.0, 85.98484848484853], [1798.0, 81.82894736842105], [1794.0, 83.75403225806448], [1031.0, 22.368421052631586], [1027.0, 19.70689655172414], [1055.0, 16.932119205298036], [1051.0, 46.004991680532484], [1047.0, 20.76018099547511], [1043.0, 25.793915603532877], [1035.0, 17.941176470588232], [1039.0, 6.724137931034483], [1087.0, 32.17647058823529], [1083.0, 41.08333333333333], [1079.0, 47.09677419354839], [1075.0, 68.76923076923076], [1059.0, 26.66972477064221], [1063.0, 35.51724137931034], [1067.0, 44.58940397350994], [1071.0, 52.62372786839533], [1139.0, 27.333333333333336], [1147.0, 33.66449511400651], [1151.0, 26.642857142857135], [1143.0, 13.785714285714286], [1119.0, 78.11627906976743], [1091.0, 25.195876288659797], [1095.0, 17.555555555555557], [1103.0, 44.39285714285714], [1099.0, 21.178571428571427], [1115.0, 58.7868852459016], [1111.0, 63.92653061224485], [1107.0, 24.968455551003657], [1131.0, 18.08108108108108], [1135.0, 18.60000000000002], [1127.0, 21.51219512195122], [1123.0, 16.09090909090909], [1203.0, 57.44160219615688], [1191.0, 23.049999999999997], [1211.0, 39.59388646288206], [1215.0, 36.392688227022944], [1187.0, 18.24489795918368], [1207.0, 70.23300970873787], [1167.0, 57.333333333333336], [1163.0, 22.53571428571428], [1159.0, 32.0], [1155.0, 22.5], [1183.0, 51.96220302375812], [1179.0, 13.100998890122076], [1175.0, 29.194444444444443], [1171.0, 6.333333333333333], [1199.0, 11.306451612903228], [1195.0, 15.999999999999996], [1279.0, 26.351851851851848], [1251.0, 32.462962962962955], [1275.0, 35.47887323943662], [1255.0, 28.271812080536915], [1259.0, 42.99014144877839], [1263.0, 33.35382863649299], [1267.0, 42.52846522049076], [1271.0, 28.106145251396665], [1247.0, 22.801431127012524], [1219.0, 33.75000000000001], [1223.0, 31.592391304347846], [1227.0, 61.25], [1231.0, 28.90895295902883], [1243.0, 78.16822429906547], [1235.0, 18.6875], [1239.0, 38.687196110210714], [1339.0, 37.18032786885247], [1335.0, 24.916666666666664], [1315.0, 62.125], [1319.0, 51.1875], [1323.0, 34.84615384615385], [1327.0, 20.27272727272727], [1343.0, 46.44094488188976], [1331.0, 34.88235294117648], [1311.0, 85.67567567567566], [1283.0, 40.890190800411546], [1291.0, 129.8], [1287.0, 58.17475728155338], [1295.0, 48.25], [1307.0, 32.68965517241379], [1303.0, 23.0], [1299.0, 48.547169811320764], [1379.0, 56.5994550408719], [1399.0, 39.59138904059705], [1391.0, 21.08823529411765], [1387.0, 31.04545454545455], [1383.0, 44.236719134284336], [1407.0, 44.8132762312635], [1403.0, 24.87762237762237], [1395.0, 31.774550484094032], [1375.0, 77.90751445086707], [1347.0, 51.26530612244899], [1351.0, 51.0], [1359.0, 57.98765432098765], [1355.0, 74.32142857142857], [1371.0, 33.78947368421052], [1367.0, 43.29670329670328], [1363.0, 47.634499396863696], [1415.0, 20.44421052631579], [1423.0, 8.978494623655914], [1431.0, 22.977011494252878], [1435.0, 44.34161490683229], [1439.0, 54.386861313868614], [1411.0, 52.026453350229716], [1419.0, 50.1214729794357], [1471.0, 57.32907170650356], [1443.0, 101.89814814814817], [1447.0, 48.05166666666671], [1451.0, 64.56435643564355], [1455.0, 20.522727272727277], [1467.0, 27.051417270929488], [1463.0, 49.922330097087375], [1459.0, 20.75], [1427.0, 73.18589025755884], [1487.0, 15.390143737166303], [1483.0, 32.48333333333334], [1495.0, 8.6875], [1479.0, 40.69291900152814], [1475.0, 38.396351575456116], [1503.0, 33.637204850031935], [1535.0, 31.545514511873314], [1531.0, 31.889081455805904], [1527.0, 9.924137931034481], [1523.0, 73.10476190476194], [1507.0, 37.20715574263381], [1511.0, 40.59680638722555], [1519.0, 32.55357142857142], [1515.0, 37.77394338891038], [1491.0, 48.207074721780536], [1499.0, 57.580872011251756], [1543.0, 28.16341829085458], [1547.0, 12.675999999999997], [1539.0, 29.7615894039735], [1551.0, 8.161458333333336], [1567.0, 71.87499999999999], [1563.0, 27.17073170731707], [1587.0, 48.075949367088604], [1555.0, 20.776785714285715], [1559.0, 28.36585365853659], [1599.0, 27.5], [1571.0, 45.41666666666667], [1575.0, 23.710526315789473], [1579.0, 46.264516129032266], [1583.0, 33.358974358974365], [1595.0, 18.5], [1591.0, 14.5], [1615.0, 1.0], [1655.0, 78.22815533980581], [1611.0, 32.839999999999996], [1651.0, 12.711538461538463], [1659.0, 6.0], [1663.0, 5.333333333333333], [1619.0, 14.999999999999995], [1623.0, 13.433333333333332], [1627.0, 5.0], [1631.0, 4.638888888888888], [1603.0, 14.777777777777779], [1607.0, 17.0], [1635.0, 2.7272727272727266], [1639.0, 2.909090909090909], [1643.0, 2.72], [1647.0, 2.1666666666666665], [1671.0, 3.875], [1695.0, 5.888888888888889], [1687.0, 10.61904761904762], [1691.0, 6.684931506849315], [1675.0, 7.919354838709675], [1679.0, 9.227642276422767], [1719.0, 328.01265822784825], [1727.0, 47.661290322580655], [1699.0, 4.5], [1703.0, 3.4], [1707.0, 131.35416666666669], [1711.0, 34.06666666666666], [1683.0, 10.883720930232558], [1735.0, 35.22222222222222], [1759.0, 24.230769230769244], [1755.0, 49.70909090909091], [1751.0, 63.81818181818183], [1731.0, 39.347368421052636], [1739.0, 25.88888888888889], [1743.0, 54.39953271028038], [1791.0, 75.7684210526316], [1763.0, 48.988636363636346], [1767.0, 10.0], [1775.0, 83.31746031746033], [1771.0, 50.846153846153854], [1787.0, 102.47169811320758], [1783.0, 64.94520547945207], [1779.0, 83.7614678899083], [1747.0, 26.25], [1795.0, 46.08029197080292], [1799.0, 74.81045751633994], [1.0, 9.0]], "isOverall": false, "label": "user2role", "isController": false}, {"data": [[1706.6887852343061, 53.4395745329102]], "isOverall": false, "label": "user2role-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 263604.7, "minX": 1.62641322E12, "maxY": 6878960.5, "series": [{"data": [[1.62641322E12, 263604.7], [1.62641352E12, 2963253.183333333], [1.62641358E12, 503727.81666666665], [1.6264134E12, 3103291.55], [1.62641346E12, 2971482.283333333], [1.62641328E12, 2819758.45], [1.62641334E12, 3209639.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62641322E12, 561319.25], [1.62641352E12, 6358052.866666666], [1.62641358E12, 1080819.95], [1.6264134E12, 6658531.716666667], [1.62641346E12, 6375746.883333334], [1.62641328E12, 6024275.75], [1.62641334E12, 6878960.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62641358E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 37.73832938840921, "minX": 1.62641322E12, "maxY": 60.34040921429265, "series": [{"data": [[1.62641322E12, 37.73832938840921], [1.62641352E12, 47.90737099669345], [1.62641358E12, 38.691316902505086], [1.6264134E12, 60.34040921429265], [1.62641346E12, 55.57215436352171], [1.62641328E12, 51.09621492409345], [1.62641334E12, 55.56262336348328]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62641358E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 37.67413148049208, "minX": 1.62641322E12, "maxY": 60.340020239646684, "series": [{"data": [[1.62641322E12, 37.67413148049208], [1.62641352E12, 47.90694462926447], [1.62641358E12, 38.69108525738581], [1.6264134E12, 60.340020239646684], [1.62641346E12, 55.571603926052155], [1.62641328E12, 51.09561125283331], [1.62641334E12, 55.56218522527855]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62641358E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.2400242827987575, "minX": 1.62641322E12, "maxY": 0.8336173928715149, "series": [{"data": [[1.62641322E12, 0.6035886080781874], [1.62641352E12, 0.5555248528760975], [1.62641358E12, 0.2400242827987575], [1.6264134E12, 0.8336173928715149], [1.62641346E12, 0.6989865315465796], [1.62641328E12, 0.6220661112795762], [1.62641334E12, 0.7312025232749336]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62641358E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62641322E12, "maxY": 4615.0, "series": [{"data": [[1.62641322E12, 1129.0], [1.62641352E12, 3691.0], [1.62641358E12, 1823.0], [1.6264134E12, 4615.0], [1.62641346E12, 3384.0], [1.62641328E12, 3225.0], [1.62641334E12, 3230.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62641322E12, 72.0], [1.62641352E12, 85.0], [1.62641358E12, 41.0], [1.6264134E12, 166.90000000000146], [1.62641346E12, 104.0], [1.62641328E12, 98.0], [1.62641334E12, 107.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62641322E12, 304.9900000000016], [1.62641352E12, 223.0], [1.62641358E12, 114.0], [1.6264134E12, 479.9900000000016], [1.62641346E12, 309.0], [1.62641328E12, 251.0], [1.62641334E12, 349.9900000000016]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62641322E12, 122.0], [1.62641352E12, 129.0], [1.62641358E12, 58.0], [1.6264134E12, 325.0], [1.62641346E12, 142.0], [1.62641328E12, 143.0], [1.62641334E12, 174.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62641322E12, 1.0], [1.62641352E12, 0.0], [1.62641358E12, 1.0], [1.6264134E12, 0.0], [1.62641346E12, 1.0], [1.62641328E12, 1.0], [1.62641334E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62641322E12, 16.0], [1.62641352E12, 35.0], [1.62641358E12, 18.0], [1.6264134E12, 32.0], [1.62641346E12, 42.0], [1.62641328E12, 46.0], [1.62641334E12, 44.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62641358E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 12.0, "minX": 2813.0, "maxY": 54.0, "series": [{"data": [[16387.0, 21.0], [16787.0, 31.0], [20707.0, 21.0], [21923.0, 42.0], [21707.0, 33.0], [23387.0, 20.0], [23547.0, 27.0], [24139.0, 49.0], [24547.0, 40.0], [23803.0, 23.0], [24283.0, 32.0], [24603.0, 41.0], [24851.0, 33.0], [24675.0, 46.0], [25435.0, 48.0], [24667.0, 27.0], [24643.0, 36.0], [25371.0, 34.0], [26467.0, 46.0], [26179.0, 42.0], [25675.0, 38.0], [25659.0, 38.0], [26099.0, 45.0], [25891.0, 31.0], [26427.0, 46.0], [25707.0, 43.0], [26907.0, 44.0], [27971.0, 41.0], [28579.0, 50.0], [28131.0, 47.0], [28179.0, 46.0], [29003.0, 41.0], [11101.0, 15.0], [10849.0, 12.0], [16073.0, 21.0], [16682.0, 25.0], [16898.0, 36.0], [20010.0, 31.0], [22906.0, 40.0], [24010.0, 41.0], [24122.0, 46.0], [23738.0, 40.5], [24370.0, 48.0], [24202.0, 44.0], [23690.0, 30.0], [23882.0, 28.0], [25458.0, 49.0], [25138.0, 47.0], [24730.0, 42.0], [24714.0, 48.0], [25082.0, 39.0], [25346.0, 33.0], [25202.0, 42.0], [25946.0, 45.0], [25834.0, 34.0], [26114.0, 42.0], [26330.0, 36.0], [27010.0, 49.0], [27002.0, 48.0], [27514.0, 42.0], [27402.0, 26.0], [27434.0, 50.0], [26794.0, 32.0], [26746.0, 45.0], [27954.0, 45.0], [27970.0, 43.0], [27914.0, 39.0], [27714.0, 39.0], [28818.0, 47.0], [29218.0, 50.0], [30690.0, 43.0], [20513.0, 25.0], [22289.0, 35.0], [23153.0, 32.0], [23417.0, 39.0], [23409.0, 33.0], [22777.0, 27.0], [23857.0, 46.0], [24049.0, 51.0], [24409.0, 41.0], [23745.0, 39.0], [23673.0, 35.0], [24097.0, 33.0], [25249.0, 47.0], [25121.0, 49.0], [25129.0, 43.0], [25489.0, 41.0], [25169.0, 46.0], [25377.0, 26.0], [25177.0, 46.0], [26569.0, 48.0], [26185.0, 44.0], [25697.0, 25.0], [26233.0, 33.0], [26297.0, 26.0], [25753.0, 37.0], [26417.0, 46.0], [26433.0, 36.0], [26609.0, 27.0], [26041.0, 40.0], [27137.0, 43.0], [26817.0, 49.0], [27281.0, 38.0], [27473.0, 45.0], [28185.0, 41.0], [27665.0, 34.0], [2813.0, 16.0], [6368.0, 15.0], [6278.0, 21.0], [6738.0, 49.0], [7172.0, 40.0], [7246.0, 19.0], [7928.0, 16.0], [9204.0, 33.0], [15168.0, 34.0], [14852.0, 25.0], [22816.0, 42.0], [23408.0, 38.0], [23208.0, 33.0], [23536.0, 30.0], [24488.0, 39.0], [24232.0, 35.0], [24456.0, 32.0], [24288.0, 41.0], [24248.0, 38.0], [23632.0, 36.0], [23672.0, 43.0], [24328.0, 28.0], [24448.0, 28.0], [25336.0, 49.0], [24600.0, 48.0], [24640.0, 34.0], [24832.0, 32.0], [24888.0, 40.0], [26440.0, 42.0], [26000.0, 41.0], [25736.0, 32.0], [25720.0, 38.0], [27400.0, 47.0], [27176.0, 45.0], [27112.0, 46.0], [26720.0, 42.0], [26952.0, 44.0], [27536.0, 40.0], [27584.0, 32.0], [28464.0, 46.0], [27952.0, 37.0], [28752.0, 34.0], [29648.0, 42.0], [29472.0, 43.0], [20775.0, 35.0], [21991.0, 19.0], [21783.0, 34.0], [22871.0, 26.0], [22743.0, 34.0], [24175.0, 20.0], [24447.0, 37.0], [24159.0, 35.0], [24343.0, 36.0], [24079.0, 31.0], [23647.0, 42.0], [24439.0, 43.0], [24863.0, 52.0], [25503.0, 49.0], [24727.0, 43.0], [24935.0, 47.0], [25287.0, 35.0], [24607.0, 32.0], [25663.0, 39.0], [26071.0, 47.0], [26247.0, 38.0], [26063.0, 38.0], [26135.0, 39.0], [26287.0, 47.0], [25799.0, 38.0], [25607.0, 39.0], [27287.0, 47.0], [27071.0, 39.0], [27479.0, 37.0], [26791.0, 27.0], [27223.0, 31.0], [28671.0, 47.0], [29463.0, 49.0], [29831.0, 42.0], [9199.0, 25.0], [10351.0, 20.0], [13071.0, 16.0], [13099.0, 17.0], [13579.0, 15.0], [13931.0, 24.0], [16103.0, 27.0], [18750.0, 31.0], [22470.0, 27.0], [23014.0, 41.0], [22702.0, 45.0], [23382.0, 44.0], [22590.0, 29.0], [23670.0, 47.0], [24222.0, 53.0], [23982.0, 49.0], [24094.0, 32.0], [23694.0, 45.0], [23638.0, 24.0], [24446.0, 26.0], [25318.0, 39.0], [25278.0, 44.0], [25198.0, 37.0], [25350.0, 36.0], [24710.0, 31.0], [25742.0, 47.0], [25998.0, 46.0], [25790.0, 47.0], [25718.0, 45.0], [25862.0, 46.0], [26470.0, 34.0], [25910.0, 45.0], [25846.0, 45.0], [26014.0, 40.0], [27014.0, 42.0], [27214.0, 42.0], [27110.0, 45.0], [27854.0, 49.0], [28478.0, 40.0], [28014.0, 48.0], [27806.0, 42.0], [27686.0, 48.0], [28182.0, 45.0], [29230.0, 47.0], [19333.0, 20.0], [20757.0, 33.0], [22493.0, 40.0], [23365.0, 23.0], [23061.0, 47.0], [22549.0, 28.0], [23229.0, 46.0], [22717.0, 24.0], [23501.0, 28.0], [23125.0, 36.0], [23885.0, 42.0], [24053.0, 30.0], [24293.0, 39.0], [24173.0, 30.0], [25093.0, 52.0], [25133.0, 54.0], [25445.0, 48.0], [25461.0, 38.0], [24765.0, 39.0], [24661.0, 32.0], [25293.0, 34.0], [25117.0, 31.5], [26037.0, 46.0], [26309.0, 48.0], [26261.0, 44.0], [26197.0, 40.0], [26613.0, 52.0], [26053.0, 49.0], [26437.0, 29.0], [26293.0, 34.0], [27845.0, 44.0], [27941.0, 43.0], [27813.0, 31.0], [29037.0, 48.0], [5421.0, 17.0], [5873.0, 17.0], [6201.0, 15.0], [6203.0, 39.0], [6631.0, 17.0], [7473.0, 43.0], [8770.0, 50.0], [14350.0, 34.0], [16700.0, 38.0], [19420.0, 27.0], [20316.0, 32.0], [20956.0, 22.0], [22036.0, 49.0], [22492.0, 30.0], [23148.0, 40.0], [23196.0, 31.0], [23100.0, 49.0], [23468.0, 38.0], [23396.0, 33.0], [22732.0, 28.0], [24140.0, 34.0], [24420.0, 47.0], [24076.0, 46.0], [24012.0, 47.0], [23756.0, 38.0], [23948.0, 40.0], [23572.0, 26.0], [25484.0, 47.0], [24708.0, 45.0], [24828.0, 46.0], [24804.0, 31.0], [24820.0, 39.0], [25020.0, 46.0], [24964.0, 42.0], [25068.0, 45.0], [24652.0, 29.0], [25572.0, 47.0], [25228.0, 45.0], [25588.0, 45.0], [25092.0, 35.0], [25524.0, 45.0], [25444.0, 51.0], [25380.0, 49.0], [26316.0, 48.0], [25732.0, 43.0], [25748.0, 42.0], [25740.0, 33.0], [25812.0, 39.0], [27116.0, 45.0], [26876.0, 47.0], [27300.0, 40.0], [26908.0, 39.0], [26748.0, 46.0], [27908.0, 44.0], [28004.0, 31.0], [28540.0, 38.0], [28044.0, 43.0], [28300.0, 43.0], [28748.0, 38.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30690.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 12.0, "minX": 2813.0, "maxY": 54.0, "series": [{"data": [[16387.0, 21.0], [16787.0, 31.0], [20707.0, 21.0], [21923.0, 42.0], [21707.0, 33.0], [23387.0, 20.0], [23547.0, 27.0], [24139.0, 49.0], [24547.0, 40.0], [23803.0, 23.0], [24283.0, 32.0], [24603.0, 41.0], [24851.0, 33.0], [24675.0, 46.0], [25435.0, 48.0], [24667.0, 27.0], [24643.0, 36.0], [25371.0, 34.0], [26467.0, 46.0], [26179.0, 42.0], [25675.0, 38.0], [25659.0, 38.0], [26099.0, 45.0], [25891.0, 31.0], [26427.0, 46.0], [25707.0, 43.0], [26907.0, 44.0], [27971.0, 41.0], [28579.0, 50.0], [28131.0, 47.0], [28179.0, 46.0], [29003.0, 41.0], [11101.0, 15.0], [10849.0, 12.0], [16073.0, 21.0], [16682.0, 25.0], [16898.0, 36.0], [20010.0, 31.0], [22906.0, 40.0], [24010.0, 41.0], [24122.0, 46.0], [23738.0, 40.5], [24370.0, 48.0], [24202.0, 44.0], [23690.0, 30.0], [23882.0, 28.0], [25458.0, 49.0], [25138.0, 47.0], [24730.0, 42.0], [24714.0, 48.0], [25082.0, 39.0], [25346.0, 33.0], [25202.0, 42.0], [25946.0, 45.0], [25834.0, 34.0], [26114.0, 42.0], [26330.0, 36.0], [27010.0, 49.0], [27002.0, 48.0], [27514.0, 42.0], [27402.0, 26.0], [27434.0, 50.0], [26794.0, 32.0], [26746.0, 45.0], [27954.0, 45.0], [27970.0, 43.0], [27914.0, 39.0], [27714.0, 39.0], [28818.0, 47.0], [29218.0, 50.0], [30690.0, 43.0], [20513.0, 25.0], [22289.0, 35.0], [23153.0, 32.0], [23417.0, 39.0], [23409.0, 33.0], [22777.0, 27.0], [23857.0, 46.0], [24049.0, 51.0], [24409.0, 41.0], [23745.0, 39.0], [23673.0, 35.0], [24097.0, 33.0], [25249.0, 47.0], [25121.0, 49.0], [25129.0, 43.0], [25489.0, 41.0], [25169.0, 46.0], [25377.0, 26.0], [25177.0, 46.0], [26569.0, 48.0], [26185.0, 44.0], [25697.0, 25.0], [26233.0, 33.0], [26297.0, 26.0], [25753.0, 37.0], [26417.0, 46.0], [26433.0, 36.0], [26609.0, 27.0], [26041.0, 40.0], [27137.0, 43.0], [26817.0, 49.0], [27281.0, 38.0], [27473.0, 45.0], [28185.0, 41.0], [27665.0, 34.0], [2813.0, 16.0], [6368.0, 15.0], [6278.0, 21.0], [6738.0, 49.0], [7172.0, 40.0], [7246.0, 19.0], [7928.0, 16.0], [9204.0, 33.0], [15168.0, 34.0], [14852.0, 25.0], [22816.0, 42.0], [23408.0, 38.0], [23208.0, 33.0], [23536.0, 30.0], [24488.0, 39.0], [24232.0, 35.0], [24456.0, 32.0], [24288.0, 41.0], [24248.0, 38.0], [23632.0, 36.0], [23672.0, 43.0], [24328.0, 28.0], [24448.0, 28.0], [25336.0, 49.0], [24600.0, 48.0], [24640.0, 34.0], [24832.0, 32.0], [24888.0, 40.0], [26440.0, 42.0], [26000.0, 41.0], [25736.0, 32.0], [25720.0, 38.0], [27400.0, 47.0], [27176.0, 45.0], [27112.0, 46.0], [26720.0, 42.0], [26952.0, 44.0], [27536.0, 40.0], [27584.0, 32.0], [28464.0, 46.0], [27952.0, 37.0], [28752.0, 34.0], [29648.0, 42.0], [29472.0, 43.0], [20775.0, 35.0], [21991.0, 19.0], [21783.0, 34.0], [22871.0, 26.0], [22743.0, 34.0], [24175.0, 20.0], [24447.0, 37.0], [24159.0, 35.0], [24343.0, 36.0], [24079.0, 31.0], [23647.0, 42.0], [24439.0, 43.0], [24863.0, 52.0], [25503.0, 49.0], [24727.0, 43.0], [24935.0, 47.0], [25287.0, 35.0], [24607.0, 32.0], [25663.0, 39.0], [26071.0, 47.0], [26247.0, 38.0], [26063.0, 38.0], [26135.0, 39.0], [26287.0, 47.0], [25799.0, 38.0], [25607.0, 39.0], [27287.0, 47.0], [27071.0, 39.0], [27479.0, 37.0], [26791.0, 27.0], [27223.0, 31.0], [28671.0, 47.0], [29463.0, 49.0], [29831.0, 42.0], [9199.0, 25.0], [10351.0, 20.0], [13071.0, 16.0], [13099.0, 17.0], [13579.0, 15.0], [13931.0, 24.0], [16103.0, 27.0], [18750.0, 31.0], [22470.0, 27.0], [23014.0, 41.0], [22702.0, 45.0], [23382.0, 44.0], [22590.0, 29.0], [23670.0, 47.0], [24222.0, 53.0], [23982.0, 49.0], [24094.0, 32.0], [23694.0, 45.0], [23638.0, 24.0], [24446.0, 26.0], [25318.0, 39.0], [25278.0, 44.0], [25198.0, 37.0], [25350.0, 36.0], [24710.0, 31.0], [25742.0, 47.0], [25998.0, 46.0], [25790.0, 47.0], [25718.0, 45.0], [25862.0, 46.0], [26470.0, 34.0], [25910.0, 45.0], [25846.0, 45.0], [26014.0, 40.0], [27014.0, 42.0], [27214.0, 42.0], [27110.0, 45.0], [27854.0, 49.0], [28478.0, 40.0], [28014.0, 48.0], [27806.0, 42.0], [27686.0, 48.0], [28182.0, 45.0], [29230.0, 47.0], [19333.0, 20.0], [20757.0, 33.0], [22493.0, 40.0], [23365.0, 23.0], [23061.0, 47.0], [22549.0, 28.0], [23229.0, 46.0], [22717.0, 24.0], [23501.0, 28.0], [23125.0, 36.0], [23885.0, 42.0], [24053.0, 30.0], [24293.0, 39.0], [24173.0, 30.0], [25093.0, 52.0], [25133.0, 54.0], [25445.0, 48.0], [25461.0, 38.0], [24765.0, 39.0], [24661.0, 32.0], [25293.0, 34.0], [25117.0, 31.5], [26037.0, 46.0], [26309.0, 48.0], [26261.0, 44.0], [26197.0, 40.0], [26613.0, 52.0], [26053.0, 49.0], [26437.0, 29.0], [26293.0, 34.0], [27845.0, 44.0], [27941.0, 43.0], [27813.0, 31.0], [29037.0, 48.0], [5421.0, 17.0], [5873.0, 17.0], [6201.0, 15.0], [6203.0, 39.0], [6631.0, 17.0], [7473.0, 43.0], [8770.0, 50.0], [14350.0, 34.0], [16700.0, 38.0], [19420.0, 27.0], [20316.0, 32.0], [20956.0, 22.0], [22036.0, 49.0], [22492.0, 30.0], [23148.0, 40.0], [23196.0, 31.0], [23100.0, 49.0], [23468.0, 38.0], [23396.0, 33.0], [22732.0, 28.0], [24140.0, 34.0], [24420.0, 47.0], [24076.0, 46.0], [24012.0, 47.0], [23756.0, 38.0], [23948.0, 40.0], [23572.0, 26.0], [25484.0, 47.0], [24708.0, 45.0], [24828.0, 46.0], [24804.0, 31.0], [24820.0, 39.0], [25020.0, 46.0], [24964.0, 42.0], [25068.0, 45.0], [24652.0, 29.0], [25572.0, 47.0], [25228.0, 45.0], [25588.0, 45.0], [25092.0, 35.0], [25524.0, 45.0], [25444.0, 51.0], [25380.0, 49.0], [26316.0, 48.0], [25732.0, 43.0], [25748.0, 42.0], [25740.0, 33.0], [25812.0, 39.0], [27116.0, 45.0], [26876.0, 47.0], [27300.0, 40.0], [26908.0, 39.0], [26748.0, 46.0], [27908.0, 44.0], [28004.0, 31.0], [28540.0, 38.0], [28044.0, 43.0], [28300.0, 43.0], [28748.0, 38.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 30690.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2184.4, "minX": 1.62641322E12, "maxY": 26587.6, "series": [{"data": [[1.62641322E12, 2184.4], [1.62641352E12, 24537.95], [1.62641358E12, 4169.566666666667], [1.6264134E12, 25712.033333333333], [1.62641346E12, 24600.783333333333], [1.62641328E12, 23384.283333333333], [1.62641334E12, 26587.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62641358E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2182.8333333333335, "minX": 1.62641322E12, "maxY": 26589.783333333333, "series": [{"data": [[1.62641322E12, 2182.8333333333335], [1.62641352E12, 24548.466666666667], [1.62641358E12, 4173.05], [1.6264134E12, 25708.616666666665], [1.62641346E12, 24616.783333333333], [1.62641328E12, 23357.083333333332], [1.62641334E12, 26589.783333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62641358E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2182.8333333333335, "minX": 1.62641322E12, "maxY": 26589.783333333333, "series": [{"data": [[1.62641322E12, 2182.8333333333335], [1.62641352E12, 24548.466666666667], [1.62641358E12, 4173.05], [1.6264134E12, 25708.616666666665], [1.62641346E12, 24616.783333333333], [1.62641328E12, 23357.083333333332], [1.62641334E12, 26589.783333333333]], "isOverall": false, "label": "user2role-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62641358E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2182.8333333333335, "minX": 1.62641322E12, "maxY": 26589.783333333333, "series": [{"data": [[1.62641322E12, 2182.8333333333335], [1.62641352E12, 24548.466666666667], [1.62641358E12, 4173.05], [1.6264134E12, 25708.616666666665], [1.62641346E12, 24616.783333333333], [1.62641328E12, 23357.083333333332], [1.62641334E12, 26589.783333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62641358E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

