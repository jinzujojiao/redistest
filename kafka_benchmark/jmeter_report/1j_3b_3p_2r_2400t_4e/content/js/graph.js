/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5638.0, "series": [{"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 3.0], [0.4, 3.0], [0.5, 4.0], [0.6, 5.0], [0.7, 6.0], [0.8, 6.0], [0.9, 7.0], [1.0, 8.0], [1.1, 9.0], [1.2, 9.0], [1.3, 10.0], [1.4, 11.0], [1.5, 11.0], [1.6, 12.0], [1.7, 13.0], [1.8, 14.0], [1.9, 14.0], [2.0, 15.0], [2.1, 15.0], [2.2, 16.0], [2.3, 17.0], [2.4, 17.0], [2.5, 18.0], [2.6, 18.0], [2.7, 19.0], [2.8, 19.0], [2.9, 20.0], [3.0, 20.0], [3.1, 21.0], [3.2, 21.0], [3.3, 22.0], [3.4, 22.0], [3.5, 22.0], [3.6, 23.0], [3.7, 23.0], [3.8, 24.0], [3.9, 24.0], [4.0, 25.0], [4.1, 25.0], [4.2, 26.0], [4.3, 26.0], [4.4, 26.0], [4.5, 27.0], [4.6, 27.0], [4.7, 28.0], [4.8, 28.0], [4.9, 28.0], [5.0, 29.0], [5.1, 29.0], [5.2, 30.0], [5.3, 30.0], [5.4, 30.0], [5.5, 31.0], [5.6, 31.0], [5.7, 31.0], [5.8, 32.0], [5.9, 32.0], [6.0, 32.0], [6.1, 33.0], [6.2, 33.0], [6.3, 33.0], [6.4, 33.0], [6.5, 34.0], [6.6, 34.0], [6.7, 34.0], [6.8, 34.0], [6.9, 34.0], [7.0, 35.0], [7.1, 35.0], [7.2, 35.0], [7.3, 35.0], [7.4, 36.0], [7.5, 36.0], [7.6, 36.0], [7.7, 36.0], [7.8, 37.0], [7.9, 37.0], [8.0, 37.0], [8.1, 37.0], [8.2, 37.0], [8.3, 38.0], [8.4, 38.0], [8.5, 38.0], [8.6, 38.0], [8.7, 39.0], [8.8, 39.0], [8.9, 39.0], [9.0, 39.0], [9.1, 39.0], [9.2, 40.0], [9.3, 40.0], [9.4, 40.0], [9.5, 40.0], [9.6, 40.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 41.0], [10.1, 42.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 43.0], [10.6, 43.0], [10.7, 43.0], [10.8, 43.0], [10.9, 44.0], [11.0, 44.0], [11.1, 44.0], [11.2, 45.0], [11.3, 45.0], [11.4, 45.0], [11.5, 45.0], [11.6, 46.0], [11.7, 46.0], [11.8, 46.0], [11.9, 46.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 48.0], [12.6, 48.0], [12.7, 48.0], [12.8, 48.0], [12.9, 49.0], [13.0, 49.0], [13.1, 49.0], [13.2, 49.0], [13.3, 50.0], [13.4, 50.0], [13.5, 50.0], [13.6, 50.0], [13.7, 51.0], [13.8, 51.0], [13.9, 51.0], [14.0, 51.0], [14.1, 51.0], [14.2, 52.0], [14.3, 52.0], [14.4, 52.0], [14.5, 52.0], [14.6, 53.0], [14.7, 53.0], [14.8, 53.0], [14.9, 53.0], [15.0, 53.0], [15.1, 54.0], [15.2, 54.0], [15.3, 54.0], [15.4, 54.0], [15.5, 54.0], [15.6, 55.0], [15.7, 55.0], [15.8, 55.0], [15.9, 55.0], [16.0, 55.0], [16.1, 56.0], [16.2, 56.0], [16.3, 56.0], [16.4, 56.0], [16.5, 57.0], [16.6, 57.0], [16.7, 57.0], [16.8, 57.0], [16.9, 57.0], [17.0, 58.0], [17.1, 58.0], [17.2, 58.0], [17.3, 58.0], [17.4, 58.0], [17.5, 59.0], [17.6, 59.0], [17.7, 59.0], [17.8, 59.0], [17.9, 59.0], [18.0, 60.0], [18.1, 60.0], [18.2, 60.0], [18.3, 60.0], [18.4, 61.0], [18.5, 61.0], [18.6, 61.0], [18.7, 61.0], [18.8, 61.0], [18.9, 62.0], [19.0, 62.0], [19.1, 62.0], [19.2, 62.0], [19.3, 62.0], [19.4, 63.0], [19.5, 63.0], [19.6, 63.0], [19.7, 63.0], [19.8, 64.0], [19.9, 64.0], [20.0, 64.0], [20.1, 64.0], [20.2, 64.0], [20.3, 65.0], [20.4, 65.0], [20.5, 65.0], [20.6, 65.0], [20.7, 65.0], [20.8, 66.0], [20.9, 66.0], [21.0, 66.0], [21.1, 66.0], [21.2, 66.0], [21.3, 67.0], [21.4, 67.0], [21.5, 67.0], [21.6, 67.0], [21.7, 67.0], [21.8, 68.0], [21.9, 68.0], [22.0, 68.0], [22.1, 68.0], [22.2, 68.0], [22.3, 69.0], [22.4, 69.0], [22.5, 69.0], [22.6, 69.0], [22.7, 69.0], [22.8, 70.0], [22.9, 70.0], [23.0, 70.0], [23.1, 70.0], [23.2, 70.0], [23.3, 71.0], [23.4, 71.0], [23.5, 71.0], [23.6, 71.0], [23.7, 71.0], [23.8, 72.0], [23.9, 72.0], [24.0, 72.0], [24.1, 72.0], [24.2, 72.0], [24.3, 73.0], [24.4, 73.0], [24.5, 73.0], [24.6, 73.0], [24.7, 73.0], [24.8, 74.0], [24.9, 74.0], [25.0, 74.0], [25.1, 74.0], [25.2, 74.0], [25.3, 75.0], [25.4, 75.0], [25.5, 75.0], [25.6, 75.0], [25.7, 75.0], [25.8, 75.0], [25.9, 76.0], [26.0, 76.0], [26.1, 76.0], [26.2, 76.0], [26.3, 76.0], [26.4, 77.0], [26.5, 77.0], [26.6, 77.0], [26.7, 77.0], [26.8, 77.0], [26.9, 78.0], [27.0, 78.0], [27.1, 78.0], [27.2, 78.0], [27.3, 78.0], [27.4, 79.0], [27.5, 79.0], [27.6, 79.0], [27.7, 79.0], [27.8, 79.0], [27.9, 80.0], [28.0, 80.0], [28.1, 80.0], [28.2, 80.0], [28.3, 80.0], [28.4, 81.0], [28.5, 81.0], [28.6, 81.0], [28.7, 81.0], [28.8, 81.0], [28.9, 81.0], [29.0, 82.0], [29.1, 82.0], [29.2, 82.0], [29.3, 82.0], [29.4, 82.0], [29.5, 83.0], [29.6, 83.0], [29.7, 83.0], [29.8, 83.0], [29.9, 83.0], [30.0, 83.0], [30.1, 84.0], [30.2, 84.0], [30.3, 84.0], [30.4, 84.0], [30.5, 84.0], [30.6, 85.0], [30.7, 85.0], [30.8, 85.0], [30.9, 85.0], [31.0, 85.0], [31.1, 85.0], [31.2, 86.0], [31.3, 86.0], [31.4, 86.0], [31.5, 86.0], [31.6, 86.0], [31.7, 86.0], [31.8, 87.0], [31.9, 87.0], [32.0, 87.0], [32.1, 87.0], [32.2, 87.0], [32.3, 87.0], [32.4, 88.0], [32.5, 88.0], [32.6, 88.0], [32.7, 88.0], [32.8, 88.0], [32.9, 88.0], [33.0, 88.0], [33.1, 89.0], [33.2, 89.0], [33.3, 89.0], [33.4, 89.0], [33.5, 89.0], [33.6, 89.0], [33.7, 90.0], [33.8, 90.0], [33.9, 90.0], [34.0, 90.0], [34.1, 90.0], [34.2, 90.0], [34.3, 90.0], [34.4, 91.0], [34.5, 91.0], [34.6, 91.0], [34.7, 91.0], [34.8, 91.0], [34.9, 91.0], [35.0, 92.0], [35.1, 92.0], [35.2, 92.0], [35.3, 92.0], [35.4, 92.0], [35.5, 92.0], [35.6, 92.0], [35.7, 93.0], [35.8, 93.0], [35.9, 93.0], [36.0, 93.0], [36.1, 93.0], [36.2, 93.0], [36.3, 93.0], [36.4, 94.0], [36.5, 94.0], [36.6, 94.0], [36.7, 94.0], [36.8, 94.0], [36.9, 94.0], [37.0, 94.0], [37.1, 94.0], [37.2, 95.0], [37.3, 95.0], [37.4, 95.0], [37.5, 95.0], [37.6, 95.0], [37.7, 95.0], [37.8, 95.0], [37.9, 96.0], [38.0, 96.0], [38.1, 96.0], [38.2, 96.0], [38.3, 96.0], [38.4, 96.0], [38.5, 96.0], [38.6, 96.0], [38.7, 97.0], [38.8, 97.0], [38.9, 97.0], [39.0, 97.0], [39.1, 97.0], [39.2, 97.0], [39.3, 97.0], [39.4, 97.0], [39.5, 98.0], [39.6, 98.0], [39.7, 98.0], [39.8, 98.0], [39.9, 98.0], [40.0, 98.0], [40.1, 98.0], [40.2, 98.0], [40.3, 99.0], [40.4, 99.0], [40.5, 99.0], [40.6, 99.0], [40.7, 99.0], [40.8, 99.0], [40.9, 99.0], [41.0, 99.0], [41.1, 100.0], [41.2, 100.0], [41.3, 100.0], [41.4, 100.0], [41.5, 100.0], [41.6, 100.0], [41.7, 100.0], [41.8, 100.0], [41.9, 100.0], [42.0, 101.0], [42.1, 101.0], [42.2, 101.0], [42.3, 101.0], [42.4, 101.0], [42.5, 101.0], [42.6, 101.0], [42.7, 101.0], [42.8, 101.0], [42.9, 102.0], [43.0, 102.0], [43.1, 102.0], [43.2, 102.0], [43.3, 102.0], [43.4, 102.0], [43.5, 102.0], [43.6, 102.0], [43.7, 102.0], [43.8, 103.0], [43.9, 103.0], [44.0, 103.0], [44.1, 103.0], [44.2, 103.0], [44.3, 103.0], [44.4, 103.0], [44.5, 103.0], [44.6, 103.0], [44.7, 104.0], [44.8, 104.0], [44.9, 104.0], [45.0, 104.0], [45.1, 104.0], [45.2, 104.0], [45.3, 104.0], [45.4, 104.0], [45.5, 104.0], [45.6, 104.0], [45.7, 105.0], [45.8, 105.0], [45.9, 105.0], [46.0, 105.0], [46.1, 105.0], [46.2, 105.0], [46.3, 105.0], [46.4, 105.0], [46.5, 105.0], [46.6, 105.0], [46.7, 106.0], [46.8, 106.0], [46.9, 106.0], [47.0, 106.0], [47.1, 106.0], [47.2, 106.0], [47.3, 106.0], [47.4, 106.0], [47.5, 106.0], [47.6, 106.0], [47.7, 107.0], [47.8, 107.0], [47.9, 107.0], [48.0, 107.0], [48.1, 107.0], [48.2, 107.0], [48.3, 107.0], [48.4, 107.0], [48.5, 107.0], [48.6, 107.0], [48.7, 107.0], [48.8, 108.0], [48.9, 108.0], [49.0, 108.0], [49.1, 108.0], [49.2, 108.0], [49.3, 108.0], [49.4, 108.0], [49.5, 108.0], [49.6, 108.0], [49.7, 108.0], [49.8, 108.0], [49.9, 108.0], [50.0, 108.0], [50.1, 109.0], [50.2, 109.0], [50.3, 109.0], [50.4, 109.0], [50.5, 109.0], [50.6, 109.0], [50.7, 109.0], [50.8, 109.0], [50.9, 109.0], [51.0, 109.0], [51.1, 109.0], [51.2, 109.0], [51.3, 109.0], [51.4, 110.0], [51.5, 110.0], [51.6, 110.0], [51.7, 110.0], [51.8, 110.0], [51.9, 110.0], [52.0, 110.0], [52.1, 110.0], [52.2, 110.0], [52.3, 110.0], [52.4, 110.0], [52.5, 110.0], [52.6, 110.0], [52.7, 110.0], [52.8, 111.0], [52.9, 111.0], [53.0, 111.0], [53.1, 111.0], [53.2, 111.0], [53.3, 111.0], [53.4, 111.0], [53.5, 111.0], [53.6, 111.0], [53.7, 111.0], [53.8, 111.0], [53.9, 111.0], [54.0, 111.0], [54.1, 111.0], [54.2, 112.0], [54.3, 112.0], [54.4, 112.0], [54.5, 112.0], [54.6, 112.0], [54.7, 112.0], [54.8, 112.0], [54.9, 112.0], [55.0, 112.0], [55.1, 112.0], [55.2, 112.0], [55.3, 112.0], [55.4, 112.0], [55.5, 112.0], [55.6, 113.0], [55.7, 113.0], [55.8, 113.0], [55.9, 113.0], [56.0, 113.0], [56.1, 113.0], [56.2, 113.0], [56.3, 113.0], [56.4, 113.0], [56.5, 113.0], [56.6, 113.0], [56.7, 113.0], [56.8, 113.0], [56.9, 113.0], [57.0, 114.0], [57.1, 114.0], [57.2, 114.0], [57.3, 114.0], [57.4, 114.0], [57.5, 114.0], [57.6, 114.0], [57.7, 114.0], [57.8, 114.0], [57.9, 114.0], [58.0, 114.0], [58.1, 114.0], [58.2, 114.0], [58.3, 114.0], [58.4, 114.0], [58.5, 115.0], [58.6, 115.0], [58.7, 115.0], [58.8, 115.0], [58.9, 115.0], [59.0, 115.0], [59.1, 115.0], [59.2, 115.0], [59.3, 115.0], [59.4, 115.0], [59.5, 115.0], [59.6, 115.0], [59.7, 115.0], [59.8, 115.0], [59.9, 115.0], [60.0, 116.0], [60.1, 116.0], [60.2, 116.0], [60.3, 116.0], [60.4, 116.0], [60.5, 116.0], [60.6, 116.0], [60.7, 116.0], [60.8, 116.0], [60.9, 116.0], [61.0, 116.0], [61.1, 116.0], [61.2, 116.0], [61.3, 116.0], [61.4, 116.0], [61.5, 117.0], [61.6, 117.0], [61.7, 117.0], [61.8, 117.0], [61.9, 117.0], [62.0, 117.0], [62.1, 117.0], [62.2, 117.0], [62.3, 117.0], [62.4, 117.0], [62.5, 117.0], [62.6, 117.0], [62.7, 117.0], [62.8, 117.0], [62.9, 117.0], [63.0, 117.0], [63.1, 118.0], [63.2, 118.0], [63.3, 118.0], [63.4, 118.0], [63.5, 118.0], [63.6, 118.0], [63.7, 118.0], [63.8, 118.0], [63.9, 118.0], [64.0, 118.0], [64.1, 118.0], [64.2, 118.0], [64.3, 118.0], [64.4, 118.0], [64.5, 118.0], [64.6, 118.0], [64.7, 118.0], [64.8, 119.0], [64.9, 119.0], [65.0, 119.0], [65.1, 119.0], [65.2, 119.0], [65.3, 119.0], [65.4, 119.0], [65.5, 119.0], [65.6, 119.0], [65.7, 119.0], [65.8, 119.0], [65.9, 119.0], [66.0, 119.0], [66.1, 119.0], [66.2, 119.0], [66.3, 119.0], [66.4, 120.0], [66.5, 120.0], [66.6, 120.0], [66.7, 120.0], [66.8, 120.0], [66.9, 120.0], [67.0, 120.0], [67.1, 120.0], [67.2, 120.0], [67.3, 120.0], [67.4, 120.0], [67.5, 120.0], [67.6, 120.0], [67.7, 120.0], [67.8, 120.0], [67.9, 121.0], [68.0, 121.0], [68.1, 121.0], [68.2, 121.0], [68.3, 121.0], [68.4, 121.0], [68.5, 121.0], [68.6, 121.0], [68.7, 121.0], [68.8, 121.0], [68.9, 121.0], [69.0, 121.0], [69.1, 121.0], [69.2, 121.0], [69.3, 121.0], [69.4, 121.0], [69.5, 121.0], [69.6, 122.0], [69.7, 122.0], [69.8, 122.0], [69.9, 122.0], [70.0, 122.0], [70.1, 122.0], [70.2, 122.0], [70.3, 122.0], [70.4, 122.0], [70.5, 122.0], [70.6, 122.0], [70.7, 122.0], [70.8, 122.0], [70.9, 122.0], [71.0, 123.0], [71.1, 123.0], [71.2, 123.0], [71.3, 123.0], [71.4, 123.0], [71.5, 123.0], [71.6, 123.0], [71.7, 123.0], [71.8, 123.0], [71.9, 123.0], [72.0, 123.0], [72.1, 123.0], [72.2, 123.0], [72.3, 123.0], [72.4, 124.0], [72.5, 124.0], [72.6, 124.0], [72.7, 124.0], [72.8, 124.0], [72.9, 124.0], [73.0, 124.0], [73.1, 124.0], [73.2, 124.0], [73.3, 124.0], [73.4, 124.0], [73.5, 124.0], [73.6, 124.0], [73.7, 125.0], [73.8, 125.0], [73.9, 125.0], [74.0, 125.0], [74.1, 125.0], [74.2, 125.0], [74.3, 125.0], [74.4, 125.0], [74.5, 125.0], [74.6, 125.0], [74.7, 125.0], [74.8, 125.0], [74.9, 125.0], [75.0, 126.0], [75.1, 126.0], [75.2, 126.0], [75.3, 126.0], [75.4, 126.0], [75.5, 126.0], [75.6, 126.0], [75.7, 126.0], [75.8, 126.0], [75.9, 126.0], [76.0, 126.0], [76.1, 126.0], [76.2, 126.0], [76.3, 127.0], [76.4, 127.0], [76.5, 127.0], [76.6, 127.0], [76.7, 127.0], [76.8, 127.0], [76.9, 127.0], [77.0, 127.0], [77.1, 127.0], [77.2, 127.0], [77.3, 127.0], [77.4, 128.0], [77.5, 128.0], [77.6, 128.0], [77.7, 128.0], [77.8, 128.0], [77.9, 128.0], [78.0, 128.0], [78.1, 128.0], [78.2, 128.0], [78.3, 128.0], [78.4, 128.0], [78.5, 129.0], [78.6, 129.0], [78.7, 129.0], [78.8, 129.0], [78.9, 129.0], [79.0, 129.0], [79.1, 129.0], [79.2, 129.0], [79.3, 129.0], [79.4, 129.0], [79.5, 130.0], [79.6, 130.0], [79.7, 130.0], [79.8, 130.0], [79.9, 130.0], [80.0, 130.0], [80.1, 130.0], [80.2, 130.0], [80.3, 130.0], [80.4, 131.0], [80.5, 131.0], [80.6, 131.0], [80.7, 131.0], [80.8, 131.0], [80.9, 131.0], [81.0, 131.0], [81.1, 131.0], [81.2, 132.0], [81.3, 132.0], [81.4, 132.0], [81.5, 132.0], [81.6, 132.0], [81.7, 132.0], [81.8, 132.0], [81.9, 132.0], [82.0, 133.0], [82.1, 133.0], [82.2, 133.0], [82.3, 133.0], [82.4, 133.0], [82.5, 133.0], [82.6, 133.0], [82.7, 133.0], [82.8, 134.0], [82.9, 134.0], [83.0, 134.0], [83.1, 134.0], [83.2, 134.0], [83.3, 134.0], [83.4, 135.0], [83.5, 135.0], [83.6, 135.0], [83.7, 135.0], [83.8, 135.0], [83.9, 136.0], [84.0, 136.0], [84.1, 136.0], [84.2, 136.0], [84.3, 136.0], [84.4, 137.0], [84.5, 137.0], [84.6, 137.0], [84.7, 137.0], [84.8, 137.0], [84.9, 138.0], [85.0, 138.0], [85.1, 138.0], [85.2, 138.0], [85.3, 139.0], [85.4, 139.0], [85.5, 139.0], [85.6, 140.0], [85.7, 140.0], [85.8, 140.0], [85.9, 140.0], [86.0, 141.0], [86.1, 141.0], [86.2, 142.0], [86.3, 142.0], [86.4, 143.0], [86.5, 143.0], [86.6, 144.0], [86.7, 144.0], [86.8, 145.0], [86.9, 145.0], [87.0, 146.0], [87.1, 147.0], [87.2, 147.0], [87.3, 148.0], [87.4, 149.0], [87.5, 150.0], [87.6, 151.0], [87.7, 151.0], [87.8, 152.0], [87.9, 154.0], [88.0, 155.0], [88.1, 156.0], [88.2, 157.0], [88.3, 159.0], [88.4, 160.0], [88.5, 162.0], [88.6, 163.0], [88.7, 165.0], [88.8, 167.0], [88.9, 168.0], [89.0, 170.0], [89.1, 172.0], [89.2, 174.0], [89.3, 176.0], [89.4, 178.0], [89.5, 180.0], [89.6, 182.0], [89.7, 184.0], [89.8, 187.0], [89.9, 189.0], [90.0, 191.0], [90.1, 193.0], [90.2, 195.0], [90.3, 198.0], [90.4, 200.0], [90.5, 202.0], [90.6, 204.0], [90.7, 206.0], [90.8, 209.0], [90.9, 211.0], [91.0, 213.0], [91.1, 215.0], [91.2, 217.0], [91.3, 219.0], [91.4, 221.0], [91.5, 223.0], [91.6, 225.0], [91.7, 227.0], [91.8, 229.0], [91.9, 231.0], [92.0, 233.0], [92.1, 235.0], [92.2, 237.0], [92.3, 240.0], [92.4, 242.0], [92.5, 244.0], [92.6, 246.0], [92.7, 248.0], [92.8, 250.0], [92.9, 252.0], [93.0, 255.0], [93.1, 257.0], [93.2, 259.0], [93.3, 261.0], [93.4, 263.0], [93.5, 266.0], [93.6, 268.0], [93.7, 270.0], [93.8, 273.0], [93.9, 275.0], [94.0, 277.0], [94.1, 279.0], [94.2, 281.0], [94.3, 283.0], [94.4, 284.0], [94.5, 286.0], [94.6, 288.0], [94.7, 290.0], [94.8, 291.0], [94.9, 293.0], [95.0, 296.0], [95.1, 297.0], [95.2, 299.0], [95.3, 301.0], [95.4, 303.0], [95.5, 305.0], [95.6, 307.0], [95.7, 309.0], [95.8, 310.0], [95.9, 312.0], [96.0, 314.0], [96.1, 316.0], [96.2, 318.0], [96.3, 320.0], [96.4, 322.0], [96.5, 324.0], [96.6, 326.0], [96.7, 328.0], [96.8, 330.0], [96.9, 332.0], [97.0, 334.0], [97.1, 336.0], [97.2, 339.0], [97.3, 341.0], [97.4, 343.0], [97.5, 346.0], [97.6, 349.0], [97.7, 351.0], [97.8, 355.0], [97.9, 357.0], [98.0, 360.0], [98.1, 363.0], [98.2, 366.0], [98.3, 370.0], [98.4, 373.0], [98.5, 377.0], [98.6, 381.0], [98.7, 385.0], [98.8, 389.0], [98.9, 395.0], [99.0, 401.0], [99.1, 407.0], [99.2, 414.0], [99.3, 422.0], [99.4, 431.0], [99.5, 443.0], [99.6, 462.0], [99.7, 488.0], [99.8, 548.0], [99.9, 706.0]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 2767459.0, "series": [{"data": [[0.0, 2302230.0], [600.0, 3381.0], [700.0, 1286.0], [800.0, 1345.0], [900.0, 739.0], [1000.0, 260.0], [1100.0, 95.0], [1200.0, 73.0], [1300.0, 12.0], [1400.0, 3.0], [1500.0, 58.0], [1600.0, 168.0], [100.0, 2767459.0], [1700.0, 65.0], [1800.0, 12.0], [200.0, 270727.0], [4800.0, 25.0], [300.0, 210804.0], [5100.0, 337.0], [4900.0, 82.0], [5000.0, 259.0], [5300.0, 258.0], [5200.0, 269.0], [5400.0, 226.0], [5500.0, 123.0], [5600.0, 41.0], [400.0, 42592.0], [500.0, 6057.0]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1923.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5593925.0, "series": [{"data": [[0.0, 5593925.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 13138.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1923.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2055.1805174783412, "minX": 1.62666558E12, "maxY": 2400.0, "series": [{"data": [[1.6266657E12, 2400.0], [1.62666558E12, 2257.4298720288384], [1.62666588E12, 2055.1805174783412], [1.62666576E12, 2400.0], [1.62666582E12, 2400.0], [1.62666564E12, 2400.0]], "isOverall": false, "label": "role1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666588E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 4981.72, "series": [{"data": [[2.0, 2.0], [3.0, 1.0], [4.0, 1.0952380952380953], [5.0, 1.5], [6.0, 1.181818181818182], [7.0, 1.0], [8.0, 1.3076923076923077], [9.0, 1.0], [10.0, 1.3809523809523812], [11.0, 1.2142857142857144], [12.0, 1.2500000000000004], [13.0, 1.2000000000000002], [14.0, 1.8888888888888893], [15.0, 1.0], [16.0, 4.727272727272727], [17.0, 6.2857142857142865], [18.0, 1.8500000000000003], [19.0, 3.524590163934427], [20.0, 1.3030303030303032], [21.0, 1.3773584905660379], [22.0, 1.4838709677419357], [23.0, 1.3437500000000002], [24.0, 1.4642857142857144], [25.0, 1.274509803921569], [26.0, 1.3783783783783785], [27.0, 1.4347826086956523], [28.0, 1.32394366197183], [29.0, 1.3913043478260871], [30.0, 1.3905109489051108], [31.0, 1.5588235294117647], [33.0, 1.5296803652968032], [32.0, 1.6097560975609757], [35.0, 1.8333333333333335], [34.0, 1.6319444444444444], [37.0, 1.6764705882352942], [36.0, 1.8834951456310678], [39.0, 1.6862745098039214], [38.0, 1.9166666666666663], [41.0, 1.902439024390243], [40.0, 1.8148148148148147], [43.0, 1.903225806451613], [42.0, 1.6], [45.0, 2.013201320132011], [47.0, 3.8709677419354844], [46.0, 2.262975778546712], [49.0, 2.477842003853573], [48.0, 2.3118811881188126], [51.0, 2.704545454545455], [50.0, 2.0], [53.0, 2.111111111111111], [52.0, 3.4375], [55.0, 2.6666666666666674], [54.0, 2.133333333333334], [57.0, 1.9999999999999998], [56.0, 2.0], [59.0, 2.2272727272727275], [58.0, 2.0], [61.0, 2.5714285714285716], [60.0, 2.5000000000000004], [63.0, 2.25], [62.0, 2.24], [67.0, 2.181818181818182], [66.0, 3.861111111111111], [65.0, 2.476190476190476], [64.0, 1.8235294117647056], [71.0, 3.1232876712328763], [70.0, 2.8518518518518525], [69.0, 3.269230769230769], [68.0, 2.1875], [75.0, 2.7735849056603765], [74.0, 3.5], [73.0, 3.2547169811320757], [72.0, 3.4], [79.0, 3.849056603773585], [78.0, 3.78], [77.0, 3.454545454545454], [76.0, 2.6875], [83.0, 11.25714285714286], [82.0, 5.571428571428572], [81.0, 6.571428571428572], [80.0, 3.264150943396227], [87.0, 4.148437500000002], [86.0, 4.2], [85.0, 4.041666666666667], [84.0, 5.217171717171716], [91.0, 7.96103896103896], [90.0, 4.403508771929825], [89.0, 5.0], [88.0, 4.530612244897959], [95.0, 4.333333333333332], [94.0, 4.324999999999999], [93.0, 6.5], [92.0, 9.10344827586207], [99.0, 4.5], [98.0, 4.495145631067962], [97.0, 4.406593406593409], [96.0, 4.655462184873947], [103.0, 4.915254237288138], [102.0, 4.756756756756758], [101.0, 4.553191489361702], [100.0, 4.428571428571426], [107.0, 5.125], [106.0, 5.357142857142857], [105.0, 6.25], [104.0, 5.2], [111.0, 5.918918918918919], [110.0, 5.363636363636364], [109.0, 5.135135135135136], [108.0, 5.55263157894737], [115.0, 5.415094339622641], [114.0, 5.0], [113.0, 5.652173913043478], [112.0, 5.564705882352941], [119.0, 5.571428571428571], [118.0, 5.720930232558139], [117.0, 5.363636363636363], [116.0, 5.130434782608696], [123.0, 6.0], [122.0, 6.0434782608695645], [121.0, 5.629629629629629], [120.0, 5.638888888888888], [127.0, 6.099999999999999], [126.0, 5.333333333333333], [125.0, 5.666666666666667], [124.0, 6.75], [135.0, 6.555555555555555], [134.0, 6.5666666666666655], [133.0, 6.161290322580645], [132.0, 6.142857142857143], [131.0, 5.666666666666667], [130.0, 5.7], [129.0, 7.0], [128.0, 5.9117647058823515], [143.0, 6.8181818181818175], [142.0, 6.63157894736842], [141.0, 6.319999999999999], [140.0, 6.454545454545456], [139.0, 6.2], [138.0, 6.658823529411764], [137.0, 6.764705882352942], [136.0, 6.444444444444445], [151.0, 7.5555555555555545], [150.0, 7.428571428571428], [149.0, 8.0], [148.0, 7.304347826086957], [147.0, 6.953488372093023], [146.0, 7.084745762711865], [145.0, 7.03973509933775], [144.0, 7.341463414634146], [159.0, 11.1], [158.0, 10.399999999999999], [157.0, 8.63157894736842], [156.0, 8.111111111111109], [155.0, 7.295918367346941], [154.0, 7.0], [153.0, 7.343283582089552], [152.0, 7.0], [167.0, 7.937499999999999], [166.0, 8.9375], [164.0, 10.588235294117649], [163.0, 10.56], [162.0, 10.588235294117649], [161.0, 11.05357142857143], [160.0, 11.0], [175.0, 8.679245283018869], [174.0, 8.757575757575756], [173.0, 9.0], [172.0, 8.913043478260871], [171.0, 8.75], [170.0, 8.833333333333329], [169.0, 9.022727272727277], [168.0, 8.16], [183.0, 9.31446540880504], [182.0, 9.125], [181.0, 8.685714285714285], [180.0, 8.75], [179.0, 8.604166666666668], [178.0, 8.374999999999998], [177.0, 8.410256410256409], [176.0, 8.488372093023255], [191.0, 9.152542372881358], [190.0, 9.0], [189.0, 9.0], [188.0, 9.0], [187.0, 8.913043478260871], [186.0, 9.0], [185.0, 9.0], [184.0, 9.26086956521739], [199.0, 10.090909090909092], [198.0, 9.849999999999998], [197.0, 9.952380952380954], [196.0, 8.726027397260271], [195.0, 9.275862068965516], [194.0, 9.0], [193.0, 9.25], [192.0, 9.281250000000002], [207.0, 10.7], [206.0, 10.378378378378377], [205.0, 9.892857142857148], [204.0, 9.35], [203.0, 8.852941176470589], [202.0, 9.704545454545457], [201.0, 9.440860215053766], [200.0, 11.700000000000003], [215.0, 11.027777777777779], [214.0, 12.0], [213.0, 10.5], [211.0, 10.571428571428571], [210.0, 10.555555555555552], [209.0, 10.0], [208.0, 10.285714285714285], [223.0, 10.612244897959183], [221.0, 10.876190476190477], [220.0, 11.14285714285714], [219.0, 11.108108108108107], [218.0, 10.777777777777775], [217.0, 10.864864864864867], [216.0, 11.0], [231.0, 10.037037037037038], [230.0, 9.985915492957751], [229.0, 10.066666666666666], [228.0, 9.9375], [227.0, 9.888888888888891], [226.0, 10.185714285714285], [225.0, 9.4], [224.0, 10.209677419354838], [239.0, 10.685314685314683], [238.0, 10.492424242424244], [237.0, 10.0], [236.0, 10.722222222222223], [235.0, 10.445161290322577], [234.0, 9.052083333333334], [233.0, 9.654761904761898], [232.0, 10.086206896551724], [247.0, 9.666666666666666], [246.0, 10.0], [245.0, 10.333333333333334], [244.0, 14.4], [243.0, 9.799999999999999], [242.0, 11.272727272727273], [241.0, 12.875], [240.0, 10.1673640167364], [255.0, 8.615384615384617], [254.0, 10.75], [253.0, 12.928571428571427], [252.0, 11.777777777777779], [251.0, 14.333333333333334], [250.0, 19.77777777777778], [249.0, 24.5], [248.0, 9.6], [270.0, 9.717948717948717], [271.0, 15.171428571428565], [269.0, 20.0], [268.0, 32.6595744680851], [267.0, 27.567567567567572], [266.0, 24.0], [265.0, 30.757575757575758], [264.0, 22.29032258064516], [263.0, 22.320754716981128], [257.0, 13.944444444444443], [256.0, 9.948717948717952], [259.0, 18.07936507936508], [258.0, 25.0], [262.0, 49.699999999999996], [260.0, 10.0], [286.0, 12.370967741935482], [287.0, 15.046153846153842], [285.0, 18.666666666666668], [284.0, 24.774193548387093], [283.0, 27.939393939393938], [282.0, 20.842105263157894], [281.0, 18.51063829787234], [280.0, 11.038011695906432], [279.0, 6.411764705882356], [272.0, 22.0], [275.0, 19.5], [274.0, 19.333333333333332], [278.0, 8.087719298245611], [277.0, 8.71875], [276.0, 11.351351351351356], [302.0, 13.258064516129032], [303.0, 13.08], [301.0, 13.98], [300.0, 14.166666666666666], [299.0, 14.030303030303031], [298.0, 13.700000000000001], [297.0, 13.692307692307692], [296.0, 14.114754098360658], [295.0, 14.75], [289.0, 13.0], [288.0, 13.166666666666666], [291.0, 13.363636363636363], [290.0, 14.333333333333334], [294.0, 14.107142857142856], [292.0, 14.214285714285714], [318.0, 15.277777777777779], [319.0, 13.544776119402984], [317.0, 21.333333333333332], [316.0, 14.071428571428571], [315.0, 21.368421052631575], [314.0, 11.239999999999998], [313.0, 12.840000000000002], [312.0, 11.666666666666664], [311.0, 13.344827586206899], [305.0, 12.842364532019708], [304.0, 12.879310344827587], [307.0, 11.615384615384617], [306.0, 12.95238095238095], [310.0, 14.444444444444443], [309.0, 12.142857142857142], [308.0, 15.122807017543852], [334.0, 14.8], [335.0, 15.966666666666665], [333.0, 15.105263157894736], [332.0, 18.159090909090914], [331.0, 21.27272727272727], [330.0, 15.76666666666667], [329.0, 21.049999999999997], [328.0, 22.88888888888889], [327.0, 23.200000000000003], [321.0, 14.70833333333333], [320.0, 10.499999999999998], [323.0, 8.666666666666666], [322.0, 15.435294117647057], [326.0, 20.581395348837212], [325.0, 16.214285714285715], [324.0, 14.875000000000004], [350.0, 27.75], [351.0, 28.11111111111111], [349.0, 27.0], [348.0, 28.281250000000004], [347.0, 27.5], [346.0, 27.411764705882355], [345.0, 27.333333333333332], [344.0, 27.21428571428571], [343.0, 26.8125], [337.0, 19.250000000000004], [336.0, 16.30612244897959], [339.0, 22.086956521739125], [338.0, 23.181818181818183], [342.0, 25.835616438356166], [341.0, 21.0], [340.0, 22.307692307692307], [366.0, 18.043478260869563], [367.0, 17.990740740740737], [365.0, 17.999999999999996], [364.0, 17.741935483870964], [363.0, 20.875], [362.0, 22.312500000000004], [361.0, 22.4], [360.0, 22.325000000000003], [359.0, 22.333333333333332], [353.0, 28.217391304347824], [355.0, 28.307692307692314], [354.0, 28.142857142857142], [358.0, 24.10344827586207], [357.0, 28.678571428571427], [382.0, 20.000000000000004], [383.0, 19.875000000000004], [381.0, 19.25], [380.0, 19.586206896551733], [379.0, 19.692307692307686], [378.0, 19.26086956521739], [377.0, 19.93333333333333], [376.0, 19.5], [375.0, 20.333333333333332], [369.0, 19.307692307692307], [368.0, 18.241379310344833], [371.0, 18.348484848484855], [370.0, 18.736842105263154], [374.0, 19.122641509433965], [373.0, 18.266666666666662], [372.0, 18.226190476190478], [398.0, 18.72340425531915], [399.0, 18.11111111111111], [397.0, 18.954545454545457], [396.0, 19.470588235294112], [394.0, 18.0], [393.0, 18.27777777777778], [392.0, 17.666666666666668], [390.0, 17.888888888888886], [387.0, 18.368421052631582], [386.0, 18.843137254901958], [385.0, 19.272727272727277], [384.0, 19.463414634146346], [388.0, 18.428571428571427], [414.0, 20.720588235294123], [415.0, 21.571428571428573], [413.0, 21.769230769230766], [412.0, 21.625000000000004], [411.0, 20.438596491228072], [410.0, 19.0], [409.0, 19.789473684210527], [408.0, 20.84444444444445], [407.0, 19.735802469135805], [401.0, 19.75], [400.0, 19.190476190476193], [403.0, 20.731707317073173], [402.0, 20.114285714285714], [405.0, 20.147058823529413], [404.0, 20.093457943925237], [430.0, 20.393258426966288], [431.0, 20.885714285714293], [429.0, 19.529411764705895], [428.0, 19.137931034482754], [427.0, 19.349056603773583], [426.0, 19.835294117647052], [425.0, 20.925925925925934], [424.0, 21.64255319148935], [423.0, 21.142857142857142], [417.0, 21.148148148148152], [416.0, 22.520000000000003], [419.0, 23.0], [418.0, 20.654545454545453], [422.0, 21.839999999999996], [421.0, 22.153846153846153], [420.0, 21.840909090909093], [446.0, 20.8913043478261], [447.0, 19.46428571428571], [445.0, 22.846153846153847], [444.0, 22.482299774039713], [443.0, 22.714285714285715], [442.0, 23.03921568627451], [441.0, 22.771428571428572], [440.0, 22.375], [439.0, 22.340425531914896], [433.0, 21.122807017543863], [432.0, 20.90909090909091], [435.0, 21.382352941176475], [434.0, 21.428571428571427], [438.0, 21.604395604395602], [437.0, 21.529411764705884], [436.0, 21.521276595744677], [462.0, 22.228571428571428], [463.0, 17.751091703056776], [461.0, 23.55714285714286], [460.0, 23.987951807228917], [459.0, 26.987341772151904], [458.0, 35.65789473684212], [457.0, 35.0], [456.0, 30.806451612903235], [455.0, 43.0], [449.0, 17.72467532467533], [448.0, 19.033333333333335], [451.0, 16.161290322580644], [450.0, 17.106666666666673], [454.0, 31.25], [453.0, 26.71129707112969], [452.0, 19.55714285714286], [478.0, 21.46923076923077], [479.0, 28.333333333333336], [477.0, 26.239130434782606], [476.0, 28.666666666666657], [475.0, 54.3375], [474.0, 59.315789473684205], [473.0, 34.61111111111109], [472.0, 51.5], [471.0, 34.48275862068966], [465.0, 15.014285714285714], [464.0, 14.440677966101697], [467.0, 21.406779661016948], [466.0, 18.243243243243242], [470.0, 29.38461538461539], [469.0, 36.15789473684211], [468.0, 15.75], [494.0, 21.749999999999996], [495.0, 21.807692307692314], [493.0, 23.8], [492.0, 21.25], [491.0, 21.473684210526315], [490.0, 21.4], [489.0, 22.300000000000004], [488.0, 24.090909090909093], [487.0, 23.873873873873862], [481.0, 16.48571428571429], [480.0, 20.07339449541284], [483.0, 17.65], [482.0, 10.772727272727272], [486.0, 22.16949152542373], [485.0, 21.685483870967744], [484.0, 11.30909090909091], [510.0, 27.636363636363633], [511.0, 26.25], [509.0, 27.727272727272727], [508.0, 27.387096774193544], [507.0, 26.315789473684205], [506.0, 26.040000000000003], [505.0, 26.528301886792452], [504.0, 26.882978723404257], [503.0, 27.52631578947368], [497.0, 23.004291845493576], [496.0, 20.878787878787875], [499.0, 27.749999999999993], [498.0, 26.197802197802194], [502.0, 28.051282051282044], [501.0, 27.48958333333333], [500.0, 28.23529411764706], [540.0, 30.13253012048193], [542.0, 31.8], [538.0, 30.38571428571429], [536.0, 34.768115942029], [534.0, 35.5], [532.0, 37.24999999999999], [530.0, 30.92592592592592], [528.0, 30.84883720930232], [526.0, 29.571428571428573], [512.0, 29.0], [518.0, 27.324999999999996], [516.0, 29.552631578947373], [524.0, 30.0], [522.0, 27.7948717948718], [520.0, 26.611940298507466], [570.0, 29.0], [572.0, 28.74137931034483], [568.0, 29.666666666666668], [550.0, 29.58823529411765], [548.0, 30.090909090909093], [546.0, 33.857142857142854], [544.0, 33.366459627329185], [566.0, 29.785714285714285], [564.0, 27.93548387096774], [562.0, 27.543478260869563], [560.0, 26.300000000000004], [558.0, 27.42857142857143], [556.0, 28.0], [554.0, 28.137931034482758], [552.0, 28.682926829268297], [604.0, 23.36263736263736], [606.0, 23.607843137254903], [602.0, 28.928571428571427], [600.0, 25.255813953488374], [598.0, 24.45833333333334], [596.0, 26.647619047619056], [594.0, 27.367346938775512], [592.0, 26.42857142857143], [590.0, 26.83333333333334], [578.0, 26.0], [576.0, 27.11016949152543], [582.0, 27.12727272727273], [580.0, 27.000000000000004], [588.0, 27.531249999999996], [586.0, 28.25], [584.0, 27.693548387096776], [636.0, 39.25], [638.0, 40.419999999999995], [634.0, 39.6], [632.0, 35.23529411764706], [630.0, 34.0], [628.0, 37.91666666666667], [626.0, 37.699999999999996], [624.0, 33.9], [622.0, 32.857142857142854], [610.0, 19.7], [608.0, 32.54054054054054], [614.0, 23.900000000000006], [612.0, 22.6], [620.0, 42.0], [618.0, 31.02941176470587], [616.0, 23.639344262295083], [668.0, 31.94444444444444], [670.0, 32.57142857142857], [666.0, 30.425], [664.0, 30.788659793814436], [662.0, 32.043478260869556], [660.0, 31.28260869565218], [658.0, 37.114754098360656], [656.0, 37.892307692307696], [654.0, 38.17142857142857], [642.0, 42.31999999999999], [640.0, 40.11111111111112], [646.0, 47.39999999999999], [644.0, 42.98000000000001], [652.0, 37.653846153846146], [650.0, 42.0], [648.0, 37.22857142857143], [700.0, 35.05263157894737], [702.0, 35.182539682539684], [698.0, 34.8], [696.0, 34.47368421052631], [694.0, 34.388888888888886], [692.0, 34.5925925925926], [690.0, 34.38596491228069], [688.0, 33.76], [686.0, 35.125], [674.0, 34.28125], [672.0, 33.4], [678.0, 34.25842696629214], [676.0, 34.57142857142857], [684.0, 35.25], [682.0, 35.5], [680.0, 35.46835443037974], [734.0, 39.508620689655196], [724.0, 102.79999999999998], [720.0, 124.02941176470588], [722.0, 43.96850393700787], [726.0, 63.965789473684275], [728.0, 81.56249999999999], [710.0, 34.430555555555536], [708.0, 34.13461538461539], [706.0, 33.70689655172411], [704.0, 33.971153846153854], [718.0, 27.15409836065573], [716.0, 33.83394833948338], [714.0, 35.15644820295987], [712.0, 36.59016393442623], [730.0, 38.83814102564104], [732.0, 109.64141414141423], [742.0, 43.61281337047354], [738.0, 52.79220779220781], [736.0, 48.849999999999994], [750.0, 17.75], [740.0, 168.2765957446809], [752.0, 54.94827586206895], [766.0, 35.12707182320445], [764.0, 56.85446009389668], [760.0, 43.16129032258063], [762.0, 35.162303664921474], [754.0, 31.435643564356447], [756.0, 156.9], [758.0, 36.13888888888889], [746.0, 30.593080724876458], [744.0, 34.09306930693069], [748.0, 33.15189873417722], [770.0, 44.994169096209916], [774.0, 83.5762711864407], [772.0, 35.1805792163544], [792.0, 42.1904761904762], [780.0, 83.05333333333331], [768.0, 65.96923076923078], [782.0, 49.431754874651794], [794.0, 970.0], [798.0, 500.50000000000006], [796.0, 41.0], [784.0, 43.872093023255836], [788.0, 248.11111111111111], [786.0, 40.0], [790.0, 42.269999999999996], [776.0, 36.674347826086894], [778.0, 36.828660436137106], [806.0, 325.5833333333333], [800.0, 78.80000000000001], [810.0, 171.0], [814.0, 117.90909090909096], [812.0, 43.35000000000001], [804.0, 190.7590361445783], [802.0, 42.82000000000001], [824.0, 132.28571428571428], [826.0, 113.2962962962963], [828.0, 288.36842105263156], [830.0, 44.11538461538462], [816.0, 126.06666666666669], [818.0, 736.8571428571429], [820.0, 273.7407407407408], [822.0, 515.25], [808.0, 390.57142857142856], [836.0, 186.53124999999994], [834.0, 429.68421052631567], [832.0, 222.2], [846.0, 155.37499999999997], [844.0, 86.14285714285714], [838.0, 52.54205607476635], [862.0, 929.5], [848.0, 42.9047619047619], [860.0, 82.04347826086956], [856.0, 266.0], [858.0, 43.04166666666667], [850.0, 148.7058823529412], [852.0, 171.28571428571428], [854.0, 124.45454545454545], [840.0, 97.29411764705884], [842.0, 86.14285714285712], [868.0, 151.08695652173915], [866.0, 588.6315789473683], [864.0, 558.6499999999999], [876.0, 495.6470588235295], [878.0, 44.5], [892.0, 474.3636363636364], [894.0, 43.333333333333336], [880.0, 43.99999999999999], [888.0, 106.78947368421053], [870.0, 43.66666666666667], [890.0, 174.77777777777774], [882.0, 311.4], [884.0, 121.11999999999998], [886.0, 664.15], [872.0, 605.8235294117648], [874.0, 168.68000000000004], [898.0, 367.9710144927536], [910.0, 43.07692307692308], [896.0, 101.65], [908.0, 54.24528301886792], [918.0, 330.27272727272725], [916.0, 52.75], [914.0, 50.1153846153846], [912.0, 44.4], [926.0, 51.973333333333336], [924.0, 52.0], [922.0, 52.75000000000001], [920.0, 53.5], [902.0, 44.39130434782608], [900.0, 44.64705882352941], [904.0, 53.2258064516129], [906.0, 85.07692307692307], [928.0, 189.54999999999998], [942.0, 235.33333333333331], [930.0, 282.6666666666666], [932.0, 110.7894736842105], [958.0, 178.3846153846154], [946.0, 54.0], [944.0, 53.56000000000002], [950.0, 47.0], [948.0, 53.724999999999994], [956.0, 46.97101449275361], [954.0, 46.111111111111114], [952.0, 46.578947368421055], [934.0, 52.343749999999986], [936.0, 275.5], [938.0, 132.19047619047618], [940.0, 68.88235294117645], [962.0, 612.3333333333335], [960.0, 178.6153846153846], [974.0, 95.26811594202908], [972.0, 189.1126760563381], [970.0, 172.69230769230768], [964.0, 491.8], [966.0, 110.92052980132452], [976.0, 166.4285714285714], [990.0, 1781.5], [988.0, 226.09090909090904], [986.0, 258.3406593406594], [984.0, 56.26345609065154], [978.0, 85.02380952380956], [980.0, 119.66666666666664], [982.0, 92.74311926605507], [968.0, 359.44444444444446], [996.0, 120.82608695652176], [998.0, 104.44897959183673], [992.0, 61.31764705882352], [1004.0, 76.74025974025975], [1006.0, 85.27027027027025], [1002.0, 190.6666666666667], [994.0, 77.7843137254902], [1016.0, 193.84374999999997], [1018.0, 191.75], [1020.0, 47.95833333333334], [1008.0, 77.50684931506851], [1022.0, 42.511627906976734], [1010.0, 102.54838709677419], [1012.0, 63.25000000000001], [1014.0, 46.47727272727271], [1000.0, 69.34999999999998], [1032.0, 87.83333333333337], [1024.0, 79.62765957446805], [1028.0, 40.91964285714285], [1052.0, 89.26666666666665], [1048.0, 197.92857142857144], [1044.0, 137.08333333333331], [1040.0, 62.145631067961155], [1084.0, 117.58333333333336], [1056.0, 23.0], [1080.0, 266.54166666666674], [1076.0, 77.91111111111113], [1072.0, 71.0056497175141], [1036.0, 37.625], [1060.0, 97.9090909090909], [1064.0, 156.93750000000003], [1068.0, 84.45945945945947], [1092.0, 239.99999999999994], [1088.0, 106.859649122807], [1116.0, 105.17391304347825], [1112.0, 66.69014084507042], [1108.0, 81.74545454545454], [1104.0, 62.18181818181818], [1096.0, 92.75862068965515], [1100.0, 84.51612903225808], [1140.0, 277.4], [1136.0, 59.48695652173913], [1144.0, 210.05555555555557], [1148.0, 114.96774193548387], [1120.0, 389.0416666666666], [1124.0, 138.71428571428572], [1128.0, 100.73076923076923], [1132.0, 57.56250000000001], [1156.0, 57.00000000000001], [1160.0, 85.40909090909092], [1152.0, 326.0], [1180.0, 169.3421052631581], [1176.0, 161.38095238095238], [1172.0, 127.87500000000004], [1168.0, 611.0], [1164.0, 96.61290322580645], [1184.0, 57.83870967741934], [1188.0, 57.333333333333336], [1212.0, 405.2], [1208.0, 237.91304347826087], [1204.0, 112.69565217391303], [1200.0, 65.3529411764706], [1196.0, 76.01104972375695], [1192.0, 58.73333333333332], [1228.0, 160.58333333333334], [1220.0, 118.89473684210529], [1224.0, 67.68750000000001], [1216.0, 239.99999999999997], [1244.0, 65.34677419354836], [1240.0, 104.0], [1236.0, 128.33333333333334], [1232.0, 66.86206896551724], [1264.0, 123.90322580645163], [1268.0, 85.91999999999996], [1272.0, 62.27665706051873], [1276.0, 75.33333333333333], [1248.0, 101.05882352941178], [1252.0, 180.8], [1260.0, 77.3153153153153], [1284.0, 144.25454545454548], [1280.0, 109.07594936708867], [1308.0, 100.8709677419355], [1304.0, 149.8958333333333], [1300.0, 131.38202247191018], [1296.0, 127.8484848484849], [1288.0, 107.60810810810806], [1292.0, 186.4444444444445], [1312.0, 576.5], [1340.0, 275.6333333333334], [1336.0, 240.00000000000003], [1332.0, 130.03225806451616], [1328.0, 562.2], [1316.0, 268.3214285714286], [1320.0, 428.3888888888889], [1324.0, 340.325], [1348.0, 94.5070422535211], [1356.0, 68.77272727272725], [1344.0, 114.875], [1372.0, 76.94776119402985], [1368.0, 174.11538461538458], [1364.0, 103.46391752577321], [1360.0, 117.65], [1352.0, 614.8333333333334], [1392.0, 214.25], [1396.0, 183.23529411764707], [1400.0, 263.3333333333333], [1404.0, 161.4029850746269], [1376.0, 117.3125], [1380.0, 83.5], [1384.0, 93.5945945945946], [1388.0, 142.02083333333337], [1412.0, 153.34482758620692], [1408.0, 129.83333333333334], [1436.0, 87.48275862068964], [1432.0, 298.14285714285717], [1428.0, 173.42857142857142], [1424.0, 119.22222222222223], [1416.0, 114.96428571428571], [1420.0, 115.59259259259261], [1440.0, 269.53846153846155], [1468.0, 85.20930232558138], [1464.0, 174.83870967741936], [1460.0, 89.75609756097562], [1456.0, 101.36781609195405], [1444.0, 99.61176470588234], [1448.0, 75.58904109589042], [1452.0, 82.33333333333334], [1476.0, 113.1304347826087], [1472.0, 495.21875], [1500.0, 552.5], [1496.0, 82.19999999999999], [1492.0, 143.0434782608695], [1488.0, 136.10526315789474], [1480.0, 354.5], [1484.0, 248.1538461538461], [1504.0, 474.5], [1532.0, 69.97761194029849], [1528.0, 60.7586206896552], [1520.0, 422.5], [1524.0, 52.6], [1508.0, 104.7], [1512.0, 89.22727272727275], [1516.0, 153.20000000000002], [1540.0, 43.0625], [1560.0, 118.85714285714286], [1536.0, 58.48484848484846], [1564.0, 35.794117647058826], [1556.0, 100.62962962962966], [1552.0, 248.70000000000002], [1544.0, 147.4], [1548.0, 126.5], [1568.0, 110.85714285714286], [1596.0, 36.17567567567569], [1592.0, 39.25274725274726], [1588.0, 34.27413127413126], [1584.0, 93.3142857142857], [1572.0, 69.83333333333333], [1576.0, 60.21428571428572], [1580.0, 54.26086956521739], [1604.0, 81.88888888888889], [1628.0, 4162.513761467892], [1600.0, 355.10526315789474], [1624.0, 3393.946188340808], [1620.0, 81.61538461538461], [1616.0, 22.0], [1612.0, 21.833333333333336], [1608.0, 22.792452830188687], [1648.0, 57.2], [1652.0, 56.588235294117645], [1656.0, 49.416666666666664], [1660.0, 64.33333333333334], [1632.0, 4627.363636363637], [1636.0, 2794.308333333333], [1640.0, 3678.8382352941176], [1644.0, 129.37837837837836], [1664.0, 92.14285714285712], [1676.0, 162.65116279069767], [1692.0, 112.81818181818184], [1688.0, 123.90909090909092], [1684.0, 139.9217391304348], [1668.0, 89.74999999999999], [1672.0, 150.98581560283688], [1680.0, 143.93814432989691], [1712.0, 248.52000000000004], [1716.0, 12.642857142857142], [1720.0, 14.619047619047619], [1724.0, 153.5], [1696.0, 200.17948717948713], [1700.0, 216.60000000000002], [1704.0, 274.0], [1708.0, 253.78125], [1732.0, 301.4999999999999], [1728.0, 273.3636363636364], [1756.0, 155.83333333333331], [1748.0, 164.33333333333331], [1752.0, 139.85714285714286], [1736.0, 224.77777777777783], [1740.0, 193.9333333333333], [1760.0, 178.42105263157896], [1788.0, 6.428571428571429], [1784.0, 7.454545454545454], [1776.0, 476.0], [1764.0, 192.0], [1768.0, 14.0], [1744.0, 224.76923076923077], [1796.0, 142.73684210526318], [1792.0, 70.875], [1820.0, 120.47368421052627], [1816.0, 94.95833333333334], [1812.0, 166.68749999999997], [1800.0, 167.8076923076923], [1804.0, 103.47368421052633], [1824.0, 261.0], [1852.0, 54.34375], [1848.0, 180.63636363636363], [1844.0, 119.734693877551], [1840.0, 87.93965517241381], [1828.0, 287.0], [1832.0, 62.75000000000001], [1836.0, 147.3064516129032], [1808.0, 115.99999999999999], [1860.0, 53.892857142857125], [1856.0, 86.30434782608702], [1884.0, 149.83333333333334], [1880.0, 287.2777777777778], [1876.0, 197.2], [1864.0, 303.3953488372094], [1868.0, 63.32773109243696], [1888.0, 245.6111111111111], [1916.0, 184.6266666666666], [1912.0, 189.23076923076925], [1908.0, 197.05882352941174], [1904.0, 128.63636363636365], [1892.0, 191.6315789473684], [1896.0, 296.67741935483866], [1900.0, 278.3636363636363], [1872.0, 268.11428571428564], [1928.0, 28.166666666666664], [1924.0, 61.47058823529412], [1920.0, 31.0], [1948.0, 37.47619047619048], [1944.0, 209.07142857142858], [1932.0, 149.72222222222223], [1968.0, 245.61111111111111], [1972.0, 316.0769230769231], [1976.0, 83.05128205128206], [1980.0, 197.13043478260863], [1952.0, 213.12], [1956.0, 163.6428571428571], [1960.0, 22.107142857142854], [1964.0, 269.203125], [1936.0, 164.69841269841268], [1940.0, 285.5], [1992.0, 301.58536585365874], [1984.0, 304.84615384615387], [2012.0, 276.75], [1988.0, 108.46000000000001], [1996.0, 65.82608695652173], [2016.0, 119.05882352941175], [2044.0, 234.6363636363636], [2040.0, 103.61538461538463], [2036.0, 110.75], [2032.0, 195.88235294117646], [2020.0, 231.71428571428572], [2024.0, 219.17543859649118], [2028.0, 137.7142857142857], [2004.0, 17.0], [2000.0, 19.375], [2008.0, 132.5], [2056.0, 263.3333333333333], [2048.0, 213.0], [2104.0, 74.4], [2096.0, 301.5], [2064.0, 205.18749999999994], [2072.0, 13.172413793103443], [2112.0, 178.2941176470588], [2168.0, 102.60937499999999], [2152.0, 226.7], [2160.0, 290.245283018868], [2144.0, 193.12500000000003], [2120.0, 211.10000000000002], [2128.0, 129.34693877551024], [2136.0, 300.4], [2080.0, 282.70000000000005], [2192.0, 82.66666666666666], [2184.0, 136.8], [2176.0, 44.77777777777778], [2232.0, 83.4375], [2200.0, 75.99999999999996], [2240.0, 385.5714285714286], [2296.0, 171.28571428571436], [2288.0, 66.32142857142858], [2272.0, 18.916666666666664], [2280.0, 77.12500000000001], [2248.0, 71.72], [2256.0, 176.22500000000002], [2264.0, 193.66666666666666], [2208.0, 39.8], [2216.0, 171.20909090909086], [2224.0, 321.6], [2312.0, 120.48571428571432], [2304.0, 305.1666666666667], [2360.0, 213.10714285714286], [2352.0, 202.10999999999999], [2344.0, 47.15625000000003], [2320.0, 71.32926829268291], [2328.0, 65.7217391304347], [2368.0, 187.99999999999997], [2400.0, 117.58885608813988], [2376.0, 96.56363636363633], [2384.0, 169.33333333333334], [2392.0, 155.38000000000002], [2336.0, 194.70588235294116], [2057.0, 157.58333333333334], [2049.0, 111.88235294117646], [2097.0, 301.55555555555554], [2105.0, 303.8888888888889], [2089.0, 180.16666666666666], [2065.0, 144.3478260869565], [2073.0, 119.17391304347827], [2113.0, 266.6222222222223], [2169.0, 65.78000000000002], [2153.0, 41.25], [2161.0, 221.5294117647058], [2145.0, 272.12121212121207], [2121.0, 72.31818181818183], [2129.0, 130.36734693877554], [2137.0, 60.18181818181819], [2081.0, 310.1851851851852], [2185.0, 161.1], [2177.0, 253.22857142857143], [2233.0, 97.875], [2225.0, 243.35714285714283], [2217.0, 217.7291666666667], [2193.0, 214.86111111111111], [2201.0, 92.14285714285714], [2241.0, 75.33333333333336], [2297.0, 262.4545454545455], [2289.0, 46.393939393939405], [2281.0, 72.0], [2273.0, 23.103448275862075], [2249.0, 190.9375], [2257.0, 91.04], [2265.0, 22.5], [2209.0, 101.0], [2313.0, 264.22727272727275], [2305.0, 143.85106382978722], [2361.0, 53.59999999999999], [2353.0, 156.13513513513516], [2345.0, 72.66666666666664], [2321.0, 160.0], [2329.0, 12.494623655913982], [2369.0, 256.6874999999999], [2377.0, 95.91428571428575], [2385.0, 109.46153846153847], [2393.0, 143.60000000000005], [2337.0, 141.55555555555554], [1029.0, 625.375], [1033.0, 100.78947368421055], [1049.0, 126.92307692307689], [1045.0, 66.76744186046513], [1041.0, 227.06249999999991], [1025.0, 135.26315789473682], [1053.0, 27.444444444444446], [1037.0, 70.88679245283014], [1057.0, 110.39024390243902], [1085.0, 82.32258064516134], [1081.0, 131.7037037037037], [1077.0, 82.07594936708865], [1073.0, 72.28571428571428], [1061.0, 240.1428571428572], [1065.0, 74.29113924050634], [1069.0, 97.79710144927539], [1089.0, 580.375], [1117.0, 390.10714285714295], [1113.0, 80.11538461538464], [1109.0, 68.92753623188408], [1105.0, 135.08000000000004], [1093.0, 68.46875], [1097.0, 106.94871794871794], [1101.0, 100.74193548387099], [1141.0, 60.0], [1137.0, 60.25], [1145.0, 145.23076923076923], [1149.0, 75.8985507246377], [1121.0, 142.17500000000004], [1125.0, 475.99206349206327], [1129.0, 428.8333333333333], [1133.0, 100.6], [1153.0, 59.026315789473685], [1177.0, 87.28571428571425], [1181.0, 58.75949367088609], [1173.0, 498.66666666666663], [1169.0, 61.18181818181818], [1157.0, 79.35483870967744], [1165.0, 60.631578947368425], [1161.0, 62.078947368421055], [1213.0, 489.0], [1209.0, 155.48717948717945], [1205.0, 149.57142857142858], [1201.0, 432.66666666666663], [1185.0, 114.77777777777784], [1189.0, 72.63636363636365], [1193.0, 336.95], [1197.0, 78.66666666666669], [1221.0, 121.38095238095238], [1245.0, 65.16666666666667], [1217.0, 71.72727272727273], [1241.0, 85.0], [1237.0, 82.90909090909089], [1233.0, 147.85714285714286], [1225.0, 95.42857142857143], [1229.0, 83.98484848484848], [1265.0, 95.9016393442623], [1269.0, 68.23699421965321], [1273.0, 65.23376623376623], [1277.0, 91.23880597014926], [1249.0, 108.87500000000001], [1253.0, 77.99056603773582], [1257.0, 66.72727272727272], [1261.0, 92.14285714285718], [1281.0, 118.07692307692305], [1309.0, 159.6], [1305.0, 151.70085470085473], [1297.0, 641.0], [1285.0, 335.1785714285714], [1289.0, 352.7560975609756], [1293.0, 427.2857142857143], [1341.0, 203.96000000000004], [1337.0, 297.35294117647067], [1333.0, 362.04761904761904], [1329.0, 257.4516129032258], [1313.0, 223.423076923077], [1317.0, 87.88235294117646], [1321.0, 573.2307692307693], [1325.0, 270.3333333333333], [1345.0, 101.4134615384615], [1373.0, 134.60000000000002], [1369.0, 91.22857142857141], [1365.0, 100.95180722891561], [1361.0, 230.8125], [1349.0, 399.5999999999999], [1353.0, 167.25806451612905], [1357.0, 170.29629629629633], [1393.0, 82.58333333333333], [1397.0, 307.99999999999994], [1401.0, 105.41666666666664], [1405.0, 130.03773584905665], [1377.0, 133.91304347826087], [1381.0, 285.6923076923077], [1385.0, 304.8125], [1389.0, 149.3333333333333], [1409.0, 259.0625], [1437.0, 86.63636363636363], [1433.0, 121.04999999999998], [1429.0, 142.97916666666666], [1425.0, 587.7541899441345], [1413.0, 492.44444444444457], [1417.0, 135.8701298701298], [1421.0, 247.82051282051273], [1469.0, 237.42857142857144], [1465.0, 93.29032258064515], [1461.0, 81.52459016393442], [1457.0, 103.75862068965516], [1441.0, 141.58108108108107], [1445.0, 92.08], [1449.0, 126.94444444444444], [1453.0, 74.2952380952381], [1477.0, 59.76923076923077], [1485.0, 181.5], [1501.0, 120.125], [1497.0, 139.58333333333334], [1493.0, 303.5], [1489.0, 283.5833333333333], [1473.0, 188.91304347826085], [1481.0, 58.86956521739131], [1529.0, 397.20000000000005], [1525.0, 151.60000000000002], [1521.0, 114.00000000000003], [1505.0, 115.90243902439029], [1509.0, 177.75], [1513.0, 55.0], [1517.0, 67.78571428571429], [1545.0, 48.333333333333336], [1549.0, 56.18279569892476], [1565.0, 36.18749999999999], [1561.0, 103.19999999999999], [1557.0, 117.92857142857143], [1553.0, 145.9], [1537.0, 133.45454545454544], [1597.0, 61.50769230769233], [1593.0, 106.51562500000001], [1589.0, 33.07142857142857], [1585.0, 75.30769230769232], [1569.0, 56.35483870967742], [1573.0, 34.666666666666664], [1577.0, 68.53061224489792], [1581.0, 97.63636363636363], [1601.0, 285.0], [1629.0, 4450.899999999998], [1625.0, 3832.296992481202], [1621.0, 4791.016806722692], [1617.0, 22.138888888888886], [1605.0, 128.5], [1609.0, 65.48648648648651], [1649.0, 50.30158730158732], [1613.0, 22.30769230769231], [1653.0, 59.954022988505734], [1657.0, 65.42682926829268], [1661.0, 76.72340425531917], [1633.0, 2358.8780487804875], [1637.0, 2786.3035714285706], [1641.0, 158.9025559105432], [1645.0, 143.02898550724638], [1677.0, 149.97222222222217], [1665.0, 73.30232558139537], [1693.0, 248.88526211671595], [1689.0, 64.33333333333334], [1685.0, 150.06737588652487], [1673.0, 163.71739130434779], [1713.0, 247.52941176470588], [1721.0, 32.12698412698412], [1717.0, 15.333333333333334], [1725.0, 286.46874999999994], [1697.0, 207.63043478260877], [1701.0, 221.27272727272728], [1705.0, 126.07142857142856], [1709.0, 190.076923076923], [1681.0, 105.92941176470586], [1669.0, 96.84848484848486], [1733.0, 248.55], [1729.0, 282.6896551724138], [1757.0, 123.68421052631577], [1753.0, 196.26666666666668], [1749.0, 230.2], [1737.0, 165.43589743589746], [1741.0, 195.0], [1777.0, 478.0], [1785.0, 7.0], [1761.0, 238.0], [1765.0, 14.7], [1745.0, 213.66666666666663], [1797.0, 229.5714285714286], [1805.0, 196.85714285714286], [1793.0, 5.5], [1821.0, 248.87499999999997], [1817.0, 72.31249999999999], [1813.0, 131.20930232558135], [1801.0, 212.5901639344263], [1841.0, 310.45], [1845.0, 41.0], [1849.0, 278.5], [1853.0, 246.64999999999992], [1825.0, 144.0], [1829.0, 112.0], [1833.0, 57.25531914893616], [1837.0, 293.4444444444445], [1809.0, 67.22727272727272], [1861.0, 293.7105263157894], [1857.0, 90.47619047619048], [1885.0, 241.23529411764704], [1881.0, 230.41379310344823], [1877.0, 108.91525423728814], [1865.0, 189.82758620689657], [1869.0, 247.6], [1889.0, 126.43333333333334], [1917.0, 31.812500000000004], [1913.0, 227.32258064516125], [1909.0, 187.26086956521735], [1905.0, 85.97916666666669], [1893.0, 166.14285714285717], [1897.0, 43.18309859154931], [1901.0, 236.23140495867776], [1873.0, 57.234234234234215], [1925.0, 211.63855421686753], [1933.0, 258.29032258064524], [1921.0, 31.0], [1949.0, 157.16666666666663], [1945.0, 141.51851851851853], [1941.0, 279.65000000000003], [1929.0, 279.83636363636356], [1969.0, 91.20652173913044], [1973.0, 342.37500000000006], [1977.0, 220.57894736842096], [1981.0, 166.35714285714286], [1953.0, 156.44827586206907], [1957.0, 131.8888888888889], [1961.0, 197.64705882352942], [1965.0, 321.9199999999999], [1937.0, 265.08474576271175], [1989.0, 107.40816326530624], [1985.0, 208.92592592592598], [2009.0, 362.0], [2013.0, 103.25], [1993.0, 219.4], [1997.0, 319.00000000000006], [2017.0, 365.3333333333333], [2045.0, 8.5], [2041.0, 97.71428571428571], [2033.0, 13.4], [2037.0, 107.73333333333333], [2021.0, 201.3529411764706], [2025.0, 195.1818181818181], [2029.0, 251.05882352941177], [2001.0, 18.212765957446805], [2005.0, 18.75], [2058.0, 188.1], [2050.0, 204.0], [2106.0, 119.74999999999997], [2098.0, 325.764705882353], [2090.0, 290.0], [2066.0, 128.22857142857143], [2074.0, 222.6], [2114.0, 301.67857142857156], [2170.0, 202.66666666666669], [2154.0, 53.9375], [2162.0, 66.06250000000001], [2146.0, 283.0], [2122.0, 283.69230769230774], [2130.0, 136.96511627906972], [2138.0, 103.22727272727273], [2082.0, 415.97499999999985], [2186.0, 200.66666666666666], [2178.0, 206.46153846153845], [2234.0, 230.4285714285714], [2226.0, 327.3333333333333], [2218.0, 247.00000000000003], [2194.0, 97.65714285714289], [2202.0, 252.82857142857134], [2242.0, 89.0], [2298.0, 76.51063829787232], [2290.0, 52.023529411764706], [2282.0, 56.657657657657666], [2274.0, 58.567567567567586], [2250.0, 193.51428571428568], [2258.0, 200.8888888888889], [2266.0, 22.42307692307692], [2210.0, 226.2307692307692], [2314.0, 126.32000000000002], [2306.0, 34.37209302325583], [2362.0, 60.81666666666667], [2354.0, 161.2142857142857], [2346.0, 455.019247219846], [2322.0, 251.4], [2330.0, 324.0666666666667], [2370.0, 41.03225806451614], [2378.0, 256.05000000000007], [2386.0, 42.933734939759056], [2394.0, 65.23428571428569], [2338.0, 141.1449275362319], [2059.0, 107.07692307692311], [2051.0, 134.65], [2107.0, 66.16], [2099.0, 243.75], [2091.0, 291.57692307692304], [2067.0, 119.57142857142856], [2075.0, 200.91071428571433], [2115.0, 183.25], [2171.0, 186.8], [2155.0, 53.8], [2163.0, 211.67441860465112], [2147.0, 268.57142857142856], [2123.0, 242.75], [2131.0, 178.1818181818182], [2139.0, 239.58333333333334], [2083.0, 244.97473275024316], [2187.0, 190.75], [2179.0, 195.41176470588238], [2235.0, 225.23076923076923], [2227.0, 314.6153846153845], [2219.0, 173.625], [2195.0, 208.82608695652178], [2203.0, 146.16666666666669], [2243.0, 108.50000000000001], [2299.0, 96.79487179487182], [2291.0, 84.88235294117646], [2283.0, 159.60606060606065], [2275.0, 43.95652173913042], [2251.0, 63.08695652173913], [2259.0, 226.53846153846152], [2267.0, 22.823529411764703], [2211.0, 221.25], [2315.0, 261.6438356164384], [2307.0, 198.88524590163942], [2363.0, 245.83050847457625], [2355.0, 94.25352112676059], [2347.0, 235.11038961038983], [2323.0, 29.974358974358974], [2331.0, 93.5584905660378], [2371.0, 99.14285714285715], [2379.0, 179.67647058823536], [2387.0, 34.44055944055944], [2395.0, 113.98333333333332], [2339.0, 88.56410256410255], [541.0, 30.11764705882353], [543.0, 30.999999999999996], [539.0, 30.529411764705884], [537.0, 35.0392156862745], [535.0, 35.185185185185176], [533.0, 36.89440993788818], [531.0, 33.37096774193549], [529.0, 30.5], [527.0, 30.38333333333333], [515.0, 28.85], [513.0, 27.731707317073173], [519.0, 26.560000000000006], [517.0, 28.839572192513366], [525.0, 30.032258064516125], [523.0, 29.34051724137931], [521.0, 27.55445544554455], [573.0, 28.040000000000003], [575.0, 27.220930232558132], [569.0, 29.57142857142857], [551.0, 29.288888888888884], [549.0, 30.142857142857142], [547.0, 32.006802721088434], [545.0, 33.857142857142854], [567.0, 29.444444444444446], [565.0, 29.218181818181815], [563.0, 27.599999999999994], [561.0, 26.84848484848484], [559.0, 26.700000000000006], [557.0, 27.78378378378379], [555.0, 28.224999999999994], [553.0, 28.53333333333333], [605.0, 37.25], [607.0, 27.15384615384615], [603.0, 25.119999999999997], [601.0, 24.118181818181828], [599.0, 23.571428571428573], [597.0, 25.216666666666665], [595.0, 26.214285714285715], [593.0, 26.0], [591.0, 27.42307692307692], [579.0, 27.074074074074076], [577.0, 27.5], [583.0, 27.45], [581.0, 27.208333333333332], [589.0, 27.08695652173913], [587.0, 27.65384615384616], [585.0, 27.25], [637.0, 35.5], [639.0, 40.4375], [635.0, 38.583333333333336], [633.0, 33.75], [631.0, 38.46666666666666], [629.0, 36.18181818181818], [627.0, 29.9], [625.0, 34.36363636363635], [623.0, 31.309278350515452], [611.0, 20.77777777777778], [609.0, 24.210526315789476], [615.0, 24.75], [613.0, 30.304347826086957], [621.0, 41.06666666666666], [617.0, 26.25], [669.0, 32.54], [671.0, 32.74242424242424], [667.0, 30.599999999999998], [665.0, 31.0], [663.0, 31.833333333333336], [661.0, 31.56896551724138], [659.0, 31.508771929824565], [657.0, 37.44827586206897], [655.0, 38.0], [643.0, 40.25], [641.0, 39.333333333333336], [647.0, 39.47727272727272], [645.0, 46.68571428571427], [651.0, 37.333333333333336], [649.0, 37.29411764705884], [701.0, 35.596491228070164], [703.0, 33.888888888888886], [699.0, 34.88059701492538], [697.0, 34.674418604651166], [695.0, 34.2457627118644], [693.0, 34.0], [691.0, 34.781818181818174], [689.0, 33.803278688524586], [687.0, 34.010810810810824], [675.0, 34.33333333333333], [673.0, 34.25], [679.0, 34.95744680851064], [677.0, 34.120000000000005], [685.0, 35.0], [683.0, 35.55172413793103], [681.0, 34.956989247311824], [735.0, 38.86015325670498], [731.0, 130.42105263157893], [721.0, 518.1666666666667], [729.0, 50.16822429906543], [711.0, 35.83820662768033], [709.0, 34.05882352941177], [707.0, 34.857142857142854], [705.0, 37.066352108522516], [733.0, 38.353846153846185], [727.0, 38.02131018153122], [725.0, 35.8780487804878], [723.0, 41.21487603305785], [719.0, 37.16562500000001], [717.0, 30.217993079584776], [715.0, 36.955882352941174], [713.0, 36.25806451612903], [743.0, 60.641711229946495], [749.0, 97.51851851851849], [751.0, 45.75949367088607], [741.0, 47.349462365591386], [739.0, 41.61818181818182], [737.0, 36.57627118644068], [765.0, 69.90303030303032], [767.0, 57.488372093023266], [763.0, 37.471264367816076], [761.0, 63.263888888888886], [753.0, 128.48120300751881], [755.0, 20.64120370370369], [757.0, 52.34950720242604], [759.0, 151.8928571428571], [745.0, 33.947976878612714], [747.0, 29.014184397163135], [775.0, 45.18999999999999], [781.0, 61.52212389380532], [783.0, 79.21686746987955], [771.0, 48.69565217391305], [769.0, 34.074074074074076], [773.0, 35.83333333333334], [793.0, 247.0], [795.0, 112.38461538461537], [797.0, 120.00000000000001], [799.0, 349.66666666666663], [785.0, 350.00000000000006], [787.0, 272.75], [789.0, 40.70175438596491], [791.0, 42.35897435897436], [777.0, 37.366652941860025], [779.0, 53.116666666666674], [807.0, 136.3333333333333], [801.0, 133.64999999999998], [803.0, 294.72727272727275], [805.0, 479.6363636363637], [827.0, 94.7777777777778], [825.0, 43.454545454545446], [829.0, 968.0], [817.0, 226.10000000000002], [831.0, 43.96153846153846], [819.0, 182.0], [821.0, 225.0], [823.0, 44.0], [809.0, 432.1666666666667], [811.0, 43.333333333333336], [813.0, 43.36363636363636], [839.0, 100.31249999999997], [847.0, 260.25], [845.0, 343.00000000000006], [837.0, 142.28260869565221], [835.0, 44.125], [833.0, 43.5], [849.0, 222.4], [863.0, 67.53623188405797], [861.0, 83.0909090909091], [859.0, 482.43749999999994], [857.0, 337.53333333333336], [851.0, 57.18749999999997], [855.0, 287.3636363636364], [853.0, 43.33333333333333], [841.0, 429.99999999999994], [843.0, 118.41666666666666], [869.0, 160.39682539682536], [879.0, 166.6075949367088], [877.0, 481.02325581395337], [867.0, 729.7647058823529], [865.0, 43.0], [871.0, 749.9583333333333], [889.0, 43.764705882352935], [881.0, 98.91666666666667], [883.0, 44.285714285714285], [895.0, 76.34722222222223], [893.0, 143.59999999999997], [891.0, 43.361111111111114], [887.0, 146.60526315789474], [885.0, 43.67999999999999], [873.0, 86.94444444444446], [875.0, 369.6363636363636], [899.0, 527.9375], [911.0, 55.55555555555556], [907.0, 256.2], [909.0, 43.74074074074073], [897.0, 105.26315789473685], [903.0, 181.00000000000003], [901.0, 44.54285714285715], [921.0, 53.0], [925.0, 52.15789473684211], [923.0, 52.58823529411765], [919.0, 63.09615384615386], [917.0, 52.599999999999994], [915.0, 51.734177215189895], [913.0, 46.117647058823536], [927.0, 52.0], [905.0, 144.35185185185188], [931.0, 191.16666666666666], [939.0, 121.19090909090903], [937.0, 81.47368421052632], [941.0, 111.74999999999997], [943.0, 52.57142857142857], [959.0, 47.33333333333334], [947.0, 54.5], [945.0, 54.495934959349604], [957.0, 47.36842105263157], [955.0, 47.104477611940304], [953.0, 46.40217391304349], [935.0, 52.0], [933.0, 51.714285714285715], [951.0, 46.53846153846155], [949.0, 46.924528301886774], [963.0, 102.63414634146342], [975.0, 56.84615384615387], [973.0, 53.345646437994716], [971.0, 384.99999999999994], [961.0, 612.0], [965.0, 73.40449438202252], [967.0, 700.133333333333], [991.0, 539.6976744186043], [989.0, 103.02898550724642], [987.0, 93.39655172413799], [985.0, 747.0], [977.0, 83.18367346938778], [979.0, 472.34999999999985], [981.0, 246.843137254902], [983.0, 46.38383838383838], [969.0, 54.07792207792209], [997.0, 106.05633802816901], [993.0, 407.4], [995.0, 54.325], [1007.0, 264.7142857142857], [1003.0, 203.75], [1005.0, 54.529411764705884], [999.0, 101.6153846153846], [1017.0, 339.4285714285714], [1019.0, 50.672566371681405], [1021.0, 136.88], [1023.0, 82.77027027027026], [1009.0, 66.18987341772154], [1011.0, 100.49999999999996], [1013.0, 63.528985507246375], [1015.0, 187.14285714285714], [1001.0, 109.66153846153846], [1034.0, 54.481081081081086], [1026.0, 145.11290322580646], [1030.0, 40.164556962025316], [1054.0, 151.80000000000004], [1050.0, 99.71171171171169], [1046.0, 57.37499999999999], [1042.0, 141.06779661016947], [1086.0, 197.40740740740745], [1058.0, 74.78787878787878], [1082.0, 272.4], [1078.0, 150.58333333333334], [1074.0, 145.0], [1038.0, 38.90000000000001], [1062.0, 92.76363636363637], [1070.0, 70.89795918367348], [1066.0, 67.55440414507771], [1094.0, 62.18348623853213], [1090.0, 248.5454545454546], [1118.0, 471.61538461538476], [1114.0, 184.86956521739125], [1110.0, 63.43010752688173], [1106.0, 73.33333333333331], [1098.0, 72.56363636363639], [1102.0, 75.27272727272734], [1138.0, 121.65384615384613], [1142.0, 210.16666666666663], [1146.0, 449.07142857142856], [1150.0, 176.11111111111114], [1122.0, 180.26086956521738], [1126.0, 85.79487179487181], [1130.0, 209.51851851851856], [1134.0, 57.31578947368421], [1154.0, 71.95744680851062], [1182.0, 58.31481481481481], [1178.0, 91.35294117647057], [1174.0, 67.42168674698794], [1170.0, 511.8333333333333], [1158.0, 82.29629629629632], [1162.0, 127.11764705882354], [1214.0, 117.22222222222223], [1210.0, 104.0909090909091], [1206.0, 76.36619718309858], [1202.0, 66.93939393939392], [1166.0, 61.27450980392156], [1186.0, 168.74999999999997], [1190.0, 44.75], [1198.0, 63.77108433734941], [1194.0, 57.59259259259258], [1222.0, 108.92499999999997], [1226.0, 171.0], [1230.0, 67.0], [1242.0, 203.3529411764706], [1246.0, 65.05882352941175], [1238.0, 255.0], [1234.0, 107.92592592592594], [1218.0, 77.3913043478261], [1266.0, 77.8], [1270.0, 68.52325581395354], [1274.0, 138.25000000000003], [1278.0, 122.3333333333333], [1250.0, 91.46666666666667], [1254.0, 137.0], [1258.0, 66.43478260869566], [1262.0, 70.39634146341461], [1286.0, 343.72727272727275], [1282.0, 106.6470588235294], [1310.0, 204.59999999999997], [1306.0, 105.95999999999995], [1302.0, 96.19767441860463], [1298.0, 209.64705882352942], [1290.0, 245.90476190476184], [1294.0, 503.1111111111111], [1342.0, 511.92500000000007], [1338.0, 128.67647058823533], [1334.0, 195.0], [1330.0, 177.89552238805967], [1314.0, 104.97321428571425], [1318.0, 509.2857142857143], [1322.0, 194.3939393939394], [1326.0, 82.38805970149252], [1346.0, 101.3], [1374.0, 79.77441077441063], [1370.0, 406.6999999999999], [1366.0, 439.3333333333333], [1362.0, 104.09433962264148], [1350.0, 153.28205128205133], [1354.0, 159.8157894736842], [1358.0, 411.8], [1394.0, 123.36666666666669], [1398.0, 148.62499999999994], [1402.0, 202.48648648648648], [1406.0, 565.5833333333333], [1378.0, 159.35576923076917], [1382.0, 85.66666666666669], [1386.0, 132.34482758620686], [1390.0, 149.1954022988506], [1414.0, 133.08247422680415], [1438.0, 182.3], [1434.0, 191.85000000000002], [1430.0, 102.13114754098363], [1426.0, 106.80722891566265], [1410.0, 114.25641025641028], [1418.0, 353.6249999999999], [1422.0, 179.8133333333333], [1470.0, 157.8], [1466.0, 88.50909090909092], [1462.0, 64.39393939393935], [1458.0, 147.35], [1442.0, 129.2857142857143], [1446.0, 119.62162162162164], [1450.0, 90.18333333333337], [1454.0, 68.82608695652175], [1478.0, 193.63636363636363], [1474.0, 306.90000000000003], [1502.0, 552.25], [1498.0, 68.14893617021276], [1494.0, 129.90243902439025], [1490.0, 268.7142857142857], [1482.0, 198.71428571428572], [1486.0, 128.28571428571433], [1534.0, 63.41860465116281], [1530.0, 66.07407407407406], [1526.0, 80.99145299145303], [1522.0, 53.4], [1506.0, 110.11111111111109], [1510.0, 55.25], [1514.0, 91.92307692307693], [1518.0, 501.9090909090909], [1542.0, 68.73076923076925], [1538.0, 154.22222222222223], [1566.0, 53.10377358490565], [1562.0, 50.4782608695652], [1558.0, 54.63112391930836], [1554.0, 79.99999999999999], [1546.0, 59.641025641025635], [1550.0, 128.93103448275866], [1570.0, 35.25], [1598.0, 288.0], [1594.0, 49.181818181818194], [1590.0, 31.925742574257438], [1586.0, 43.275862068965516], [1574.0, 47.99999999999999], [1578.0, 33.0], [1582.0, 162.92500000000007], [1606.0, 551.0], [1630.0, 3479.478260869565], [1622.0, 4981.72], [1626.0, 2767.057591623038], [1618.0, 20.0], [1602.0, 547.0], [1614.0, 110.83333333333333], [1610.0, 22.515624999999993], [1650.0, 27.875], [1654.0, 27.0], [1658.0, 73.5], [1662.0, 75.67346938775509], [1634.0, 3098.8352941176468], [1638.0, 2729.3978494623657], [1642.0, 77.02325581395347], [1646.0, 108.87037037037041], [1670.0, 136.69945355191254], [1666.0, 111.13333333333334], [1694.0, 83.89999999999999], [1690.0, 55.72727272727273], [1686.0, 116.7], [1674.0, 70.69696969696967], [1678.0, 61.49999999999999], [1714.0, 97.41666666666666], [1718.0, 13.433333333333334], [1722.0, 153.90000000000003], [1726.0, 297.6086956521739], [1698.0, 257.6111111111111], [1702.0, 198.6153846153846], [1706.0, 205.46666666666667], [1710.0, 102.00000000000001], [1682.0, 130.23076923076925], [1734.0, 254.14999999999998], [1758.0, 120.33333333333336], [1754.0, 176.87499999999997], [1750.0, 16.666666666666664], [1730.0, 252.49999999999994], [1738.0, 45.96825396825397], [1742.0, 146.55555555555557], [1790.0, 6.2857142857142865], [1786.0, 7.0], [1782.0, 14.0], [1778.0, 321.66666666666663], [1762.0, 99.00000000000001], [1766.0, 126.87179487179486], [1746.0, 194.2727272727273], [1798.0, 235.0], [1822.0, 190.5], [1818.0, 150.11111111111111], [1814.0, 29.14062499999999], [1794.0, 213.6], [1802.0, 138.1590909090909], [1806.0, 85.8], [1854.0, 63.714285714285715], [1850.0, 167.38028169014086], [1846.0, 152.23684210526315], [1842.0, 65.40909090909089], [1826.0, 136.4], [1830.0, 133.28813559322032], [1834.0, 93.71428571428571], [1838.0, 220.8923076923077], [1810.0, 156.05555555555551], [1862.0, 55.06], [1886.0, 120.95652173913044], [1882.0, 185.87499999999997], [1878.0, 239.57692307692304], [1858.0, 78.44067796610169], [1866.0, 95.23287671232877], [1870.0, 59.07547169811326], [1918.0, 30.666666666666668], [1914.0, 69.22857142857141], [1910.0, 86.88], [1906.0, 74.265306122449], [1890.0, 286.88888888888897], [1894.0, 269.37500000000006], [1898.0, 235.8275862068965], [1902.0, 103.56818181818184], [1874.0, 281.2666666666667], [1930.0, 115.0], [1926.0, 214.9333333333333], [1942.0, 170.4242424242424], [1922.0, 31.0], [1950.0, 216.5655737704919], [1946.0, 117.59740259740259], [1934.0, 225.7142857142857], [1970.0, 312.9367088607595], [1974.0, 129.12121212121218], [1978.0, 299.16666666666663], [1982.0, 281.6666666666667], [1954.0, 110.63043478260866], [1958.0, 101.59259259259262], [1962.0, 83.31578947368422], [1966.0, 58.11111111111111], [1938.0, 283.78125], [1998.0, 179.35185185185188], [1990.0, 252.45454545454547], [2014.0, 72.1590909090909], [2010.0, 300.37500000000006], [1986.0, 138.1333333333333], [1994.0, 230.88000000000005], [2046.0, 174.66666666666666], [2042.0, 53.428571428571416], [2038.0, 131.9], [2034.0, 205.18518518518516], [2018.0, 315.09523809523813], [2022.0, 161.83333333333334], [2026.0, 234.12499999999997], [2030.0, 176.29411764705887], [2006.0, 24.97872340425531], [2060.0, 230.71428571428572], [2108.0, 112.33333333333334], [2100.0, 228.81250000000006], [2092.0, 284.03448275862064], [2052.0, 193.59999999999997], [2068.0, 172.37499999999997], [2076.0, 250.6666666666667], [2172.0, 199.50000000000003], [2164.0, 140.24193548387095], [2156.0, 53.46153846153846], [2148.0, 121.01754385964914], [2116.0, 216.7142857142858], [2124.0, 270.0277777777778], [2132.0, 300.5], [2140.0, 185.42105263157896], [2084.0, 117.68421052631581], [2196.0, 185.13333333333333], [2204.0, 179.70833333333337], [2180.0, 278.2], [2236.0, 302.99999999999994], [2228.0, 122.0], [2188.0, 43.0], [2300.0, 74.62921348314609], [2292.0, 206.16666666666666], [2284.0, 146.9666666666666], [2276.0, 104.47222222222216], [2244.0, 62.84615384615385], [2252.0, 39.510638297872326], [2260.0, 98.48571428571431], [2268.0, 21.714285714285705], [2212.0, 206.54999999999998], [2220.0, 497.6], [2316.0, 44.68354430379747], [2364.0, 155.0263157894737], [2356.0, 183.0], [2348.0, 801.4324324324326], [2308.0, 321.7272727272728], [2324.0, 293.23333333333323], [2332.0, 49.536231884057976], [2372.0, 88.17073170731703], [2380.0, 274.9120879120879], [2388.0, 172.6315789473684], [2396.0, 74.84615384615385], [2340.0, 76.58064516129035], [2061.0, 68.86363636363635], [2109.0, 72.41818181818182], [2101.0, 68.66666666666667], [2093.0, 297.4772727272727], [2053.0, 310.5333333333333], [2069.0, 142.88235294117646], [2077.0, 110.29032258064518], [2173.0, 135.99999999999997], [2165.0, 262.9230769230769], [2157.0, 120.79411764705883], [2149.0, 302.8], [2117.0, 199.41176470588232], [2125.0, 203.5813953488372], [2133.0, 167.77777777777777], [2141.0, 207.33333333333334], [2085.0, 164.64285714285717], [2189.0, 246.2857142857143], [2237.0, 121.85294117647058], [2229.0, 331.8888888888889], [2221.0, 334.125], [2181.0, 113.14814814814812], [2197.0, 55.63888888888889], [2205.0, 224.1851851851852], [2301.0, 186.3636363636363], [2293.0, 59.53488372093024], [2285.0, 126.32142857142858], [2277.0, 107.0], [2245.0, 70.44444444444449], [2253.0, 287.9], [2261.0, 212.04761904761907], [2269.0, 21.0], [2213.0, 226.11764705882345], [2317.0, 157.08333333333334], [2365.0, 53.98275862068965], [2357.0, 223.27499999999998], [2349.0, 337.5726872246699], [2309.0, 205.05263157894746], [2325.0, 131.31578947368425], [2333.0, 69.06451612903226], [2373.0, 61.56521739130435], [2381.0, 187.48979591836735], [2389.0, 162.01574803149606], [2397.0, 66.56796116504859], [2341.0, 33.8421052631579], [1035.0, 403.5000000000001], [1031.0, 64.54285714285713], [1047.0, 181.46153846153845], [1027.0, 455.7142857142857], [1055.0, 38.541666666666686], [1051.0, 89.5], [1043.0, 71.96428571428567], [1039.0, 51.560975609756085], [1083.0, 82.89743589743587], [1079.0, 93.70833333333336], [1075.0, 70.13636363636364], [1059.0, 334.0], [1063.0, 72.86111111111109], [1067.0, 64.08000000000001], [1071.0, 44.72413793103448], [1095.0, 234.57142857142856], [1099.0, 177.79999999999998], [1103.0, 62.47368421052632], [1091.0, 198.88888888888889], [1119.0, 177.11111111111111], [1115.0, 61.339285714285715], [1111.0, 102.65671641791046], [1107.0, 80.66666666666669], [1139.0, 422.85714285714283], [1143.0, 609.5454545454545], [1147.0, 119.6019417475728], [1151.0, 77.99999999999999], [1123.0, 166.53846153846155], [1127.0, 99.76923076923076], [1131.0, 546.8000000000002], [1135.0, 111.56521739130436], [1163.0, 71.99999999999999], [1167.0, 278.6], [1179.0, 206.34090909090912], [1175.0, 74.43999999999997], [1171.0, 60.88888888888889], [1159.0, 170.6], [1183.0, 51.777777777777786], [1155.0, 61.014084507042234], [1215.0, 153.1], [1211.0, 89.55737704918035], [1207.0, 141.1034482758621], [1203.0, 215.1333333333333], [1187.0, 100.53846153846153], [1191.0, 114.2], [1199.0, 65.0], [1195.0, 57.833333333333336], [1223.0, 298.9047619047619], [1227.0, 98.30555555555554], [1247.0, 166.16666666666669], [1235.0, 78.58666666666667], [1243.0, 66.0], [1239.0, 65.87499999999999], [1219.0, 86.40476190476191], [1231.0, 419.99999999999994], [1267.0, 354.0], [1271.0, 66.39823008849557], [1275.0, 168.76190476190476], [1279.0, 140.76744186046508], [1251.0, 77.41666666666666], [1255.0, 90.02040816326534], [1259.0, 66.75000000000001], [1263.0, 76.75757575757578], [1287.0, 246.86956521739137], [1291.0, 221.99999999999997], [1283.0, 131.89999999999995], [1311.0, 114.93333333333332], [1307.0, 95.68852459016396], [1303.0, 481.7142857142858], [1299.0, 160.2857142857143], [1295.0, 141.758064516129], [1343.0, 609.9565217391304], [1339.0, 448.4285714285714], [1335.0, 132.70149253731344], [1331.0, 371.0909090909091], [1315.0, 241.43750000000006], [1319.0, 145.73015873015876], [1323.0, 600.7692307692307], [1327.0, 315.00000000000006], [1351.0, 68.21428571428572], [1347.0, 582.655172413793], [1375.0, 165.00000000000003], [1371.0, 109.24489795918367], [1367.0, 79.26315789473684], [1363.0, 230.5263157894737], [1355.0, 488.1538461538462], [1359.0, 122.09523809523812], [1395.0, 231.38461538461536], [1399.0, 514.4545454545454], [1403.0, 119.92608695652171], [1407.0, 274.3103448275863], [1379.0, 185.50746268656724], [1383.0, 312.36], [1387.0, 267.5882352941176], [1391.0, 287.82857142857137], [1415.0, 136.02255639097743], [1419.0, 436.0], [1411.0, 454.3999999999999], [1435.0, 109.39795918367346], [1431.0, 126.80000000000004], [1427.0, 145.30000000000004], [1439.0, 85.78571428571429], [1423.0, 353.55555555555566], [1471.0, 159.3333333333333], [1467.0, 232.88235294117644], [1463.0, 85.10294117647058], [1459.0, 130.3478260869565], [1443.0, 177.0], [1447.0, 89.30434782608694], [1451.0, 118.66666666666663], [1455.0, 164.70000000000002], [1475.0, 454.7333333333334], [1483.0, 156.66666666666666], [1499.0, 148.0909090909091], [1495.0, 86.88235294117648], [1491.0, 305.5], [1503.0, 58.11428571428572], [1479.0, 77.20370370370371], [1487.0, 93.2142857142857], [1535.0, 226.09090909090912], [1531.0, 111.48717948717949], [1527.0, 52.0], [1523.0, 53.333333333333336], [1507.0, 198.2857142857143], [1511.0, 184.47368421052633], [1515.0, 136.16666666666666], [1519.0, 61.68852459016392], [1543.0, 47.38064516129034], [1547.0, 70.84210526315789], [1539.0, 76.03448275862068], [1567.0, 56.82608695652175], [1563.0, 56.519999999999996], [1559.0, 48.08], [1555.0, 102.88636363636365], [1551.0, 51.91666666666667], [1599.0, 68.19178082191783], [1595.0, 96.08536585365852], [1591.0, 75.0135135135135], [1587.0, 37.95575221238936], [1571.0, 149.88888888888889], [1575.0, 63.95238095238095], [1579.0, 51.97435897435898], [1583.0, 247.17647058823525], [1603.0, 155.0], [1607.0, 553.0], [1631.0, 4427.100000000001], [1627.0, 4531.586956521739], [1623.0, 4754.765957446807], [1619.0, 288.5], [1611.0, 127.0], [1615.0, 23.0], [1651.0, 43.55263157894736], [1655.0, 65.50270270270265], [1659.0, 64.60958904109593], [1663.0, 92.17948717948717], [1635.0, 1745.8000000000002], [1639.0, 3605.0592105263154], [1643.0, 133.61290322580643], [1647.0, 54.42857142857143], [1671.0, 39.09090909090909], [1667.0, 137.98484848484827], [1695.0, 123.22222222222223], [1691.0, 148.51063829787233], [1687.0, 144.0416666666667], [1675.0, 166.48958333333334], [1679.0, 161.60784313725492], [1719.0, 13.815789473684209], [1715.0, 13.294117647058824], [1723.0, 101.37931034482759], [1727.0, 279.14285714285717], [1699.0, 175.99999999999997], [1703.0, 194.6], [1707.0, 78.94444444444444], [1711.0, 283.0731707317073], [1683.0, 104.08333333333333], [1735.0, 243.17391304347828], [1731.0, 280.804347826087], [1759.0, 16.75], [1755.0, 216.84615384615384], [1751.0, 125.68181818181816], [1739.0, 15.25], [1743.0, 187.8181818181818], [1779.0, 77.71428571428572], [1791.0, 39.43478260869566], [1787.0, 6.2857142857142865], [1763.0, 104.79999999999998], [1767.0, 14.0], [1747.0, 208.8307692307692], [1799.0, 228.0312500000001], [1795.0, 56.49999999999997], [1823.0, 63.750000000000014], [1819.0, 134.2941176470588], [1815.0, 94.73333333333333], [1803.0, 168.61290322580646], [1807.0, 72.75], [1843.0, 89.16393442622953], [1847.0, 108.15151515151516], [1851.0, 119.20967741935479], [1855.0, 86.86861313868617], [1827.0, 112.75698924731189], [1831.0, 74.66666666666667], [1835.0, 76.94999999999999], [1839.0, 123.93548387096774], [1811.0, 178.2121212121212], [1863.0, 268.22950819672144], [1887.0, 216.13333333333333], [1883.0, 129.125], [1879.0, 60.218750000000014], [1859.0, 186.67857142857142], [1867.0, 260.64], [1871.0, 81.52427184466016], [1919.0, 30.333333333333332], [1915.0, 140.89705882352948], [1911.0, 73.44776119402988], [1907.0, 104.86567164179104], [1891.0, 180.36666666666667], [1895.0, 273.11111111111114], [1899.0, 300.57446808510656], [1903.0, 125.4571428571429], [1875.0, 276.2477064220184], [1927.0, 212.5275590551183], [1923.0, 178.77777777777777], [1951.0, 160.96874999999994], [1947.0, 253.17647058823528], [1943.0, 235.61538461538464], [1931.0, 249.26956521739118], [1935.0, 122.75862068965517], [1971.0, 322.9047619047619], [1975.0, 65.84810126582279], [1979.0, 140.0540540540541], [1983.0, 152.46153846153845], [1955.0, 388.97368421052624], [1959.0, 91.50909090909089], [1963.0, 99.11764705882352], [1967.0, 135.88000000000002], [1939.0, 191.67692307692315], [1999.0, 109.01923076923079], [1991.0, 152.44827586206898], [2015.0, 16.666666666666668], [1987.0, 236.54545454545456], [1995.0, 297.5915492957748], [2019.0, 16.0], [2043.0, 173.16666666666666], [2047.0, 142.8461538461538], [2039.0, 80.28571428571429], [2035.0, 97.35714285714288], [2023.0, 322.25], [2027.0, 176.84615384615384], [2031.0, 87.27272727272728], [2003.0, 71.08333333333331], [2007.0, 145.625], [2062.0, 137.59459459459458], [2110.0, 224.88888888888889], [2102.0, 101.3571428571429], [2094.0, 300.0], [2054.0, 103.62500000000001], [2070.0, 34.94117647058823], [2078.0, 281.6666666666667], [2174.0, 197.48275862068968], [2166.0, 265.29268292682923], [2158.0, 309.6666666666667], [2150.0, 149.7692307692308], [2118.0, 118.95454545454545], [2126.0, 230.5294117647058], [2134.0, 191.53846153846152], [2142.0, 236.54285714285714], [2086.0, 105.39393939393938], [2190.0, 280.0], [2238.0, 265.9032258064517], [2230.0, 217.0], [2222.0, 131.57894736842107], [2182.0, 82.23636363636365], [2198.0, 229.77358490566036], [2206.0, 111.64999999999998], [2302.0, 232.98095238095243], [2294.0, 15.232142857142858], [2286.0, 78.32394366197184], [2278.0, 124.5], [2246.0, 67.0], [2254.0, 77.02459016393448], [2262.0, 109.45901639344265], [2270.0, 21.035714285714285], [2214.0, 86.57142857142857], [2318.0, 91.82142857142858], [2366.0, 192.2222222222222], [2358.0, 147.9206349206349], [2350.0, 313.5333333333333], [2310.0, 22.578947368421048], [2326.0, 279.2222222222222], [2334.0, 82.632], [2374.0, 99.25373134328362], [2382.0, 246.35294117647058], [2390.0, 144.82022471910116], [2398.0, 90.65789473684211], [2342.0, 182.8181818181818], [2063.0, 168.5294117647059], [2079.0, 209.94736842105263], [2111.0, 65.32], [2103.0, 269.85714285714283], [2095.0, 288.4166666666667], [2055.0, 238.83333333333331], [2071.0, 131.52173913043478], [2175.0, 287.12499999999994], [2167.0, 268.99999999999994], [2159.0, 269.4397590361446], [2151.0, 300.6666666666666], [2119.0, 195.42500000000004], [2127.0, 271.8235294117647], [2135.0, 211.66666666666666], [2143.0, 251.99999999999994], [2087.0, 197.26315789473685], [2191.0, 181.2105263157895], [2239.0, 251.84615384615384], [2231.0, 119.8], [2223.0, 63.1578947368421], [2183.0, 127.49999999999997], [2199.0, 100.875], [2207.0, 130.375], [2303.0, 81.09090909090908], [2295.0, 165.33333333333334], [2287.0, 260.0357142857143], [2279.0, 110.98214285714283], [2247.0, 95.49999999999999], [2255.0, 94.63636363636364], [2263.0, 23.1], [2271.0, 22.821428571428573], [2215.0, 105.72727272727273], [2319.0, 203.38666666666666], [2367.0, 208.18421052631572], [2359.0, 29.743589743589737], [2351.0, 191.4354838709678], [2311.0, 119.89999999999995], [2327.0, 383.33333333333337], [2335.0, 127.44], [2375.0, 118.33333333333339], [2383.0, 280.375], [2391.0, 214.3529411764706], [2399.0, 66.08646616541358], [2343.0, 62.675000000000026], [1.0, 1.0]], "isOverall": false, "label": "user2role", "isController": false}, {"data": [[2338.8007714765595, 116.94874581609353]], "isOverall": false, "label": "user2role-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 188947.55, "minX": 1.62666558E12, "maxY": 4981860.683333334, "series": [{"data": [[1.6266657E12, 2322155.466666667], [1.62666558E12, 188947.55], [1.62666588E12, 1924902.4333333333], [1.62666576E12, 2302797.5166666666], [1.62666582E12, 2272480.5833333335], [1.62666564E12, 2273658.783333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6266657E12, 4981860.683333334], [1.62666558E12, 401133.25], [1.62666588E12, 4129992.4166666665], [1.62666576E12, 4940977.533333333], [1.62666582E12, 4876240.483333333], [1.62666564E12, 4863400.133333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666588E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 93.19778731231831, "minX": 1.62666558E12, "maxY": 415.8829154792778, "series": [{"data": [[1.6266657E12, 115.69945385968092], [1.62666558E12, 415.8829154792778], [1.62666588E12, 93.19778731231831], [1.62666576E12, 116.65964924849183], [1.62666582E12, 113.58196526122232], [1.62666564E12, 117.20688474402003]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666588E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 93.19720827171365, "minX": 1.62666558E12, "maxY": 415.8816987395001, "series": [{"data": [[1.6266657E12, 115.69812728370388], [1.62666558E12, 415.8816987395001], [1.62666588E12, 93.19720827171365], [1.62666576E12, 116.65931376831483], [1.62666582E12, 113.58148545853035], [1.62666564E12, 117.20652639402857]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666588E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.1110911536215506, "minX": 1.62666558E12, "maxY": 1.4216536987821753, "series": [{"data": [[1.6266657E12, 0.17479782930234208], [1.62666558E12, 1.4216536987821753], [1.62666588E12, 0.17448772151700362], [1.62666576E12, 0.1361490370670619], [1.62666582E12, 0.17395060865007916], [1.62666564E12, 0.1110911536215506]], "isOverall": false, "label": "user2role", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666588E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.62666558E12, "maxY": 5638.0, "series": [{"data": [[1.6266657E12, 1740.0], [1.62666558E12, 5638.0], [1.62666588E12, 1238.0], [1.62666576E12, 1509.0], [1.62666582E12, 1549.0], [1.62666564E12, 1266.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6266657E12, 121.0], [1.62666558E12, 366.0], [1.62666588E12, 10.0], [1.62666576E12, 133.0], [1.62666582E12, 237.0], [1.62666564E12, 265.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6266657E12, 331.0], [1.62666558E12, 393.0], [1.62666588E12, 17.0], [1.62666576E12, 353.9900000000016], [1.62666582E12, 387.0], [1.62666564E12, 411.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6266657E12, 225.0], [1.62666558E12, 381.0], [1.62666588E12, 11.0], [1.62666576E12, 235.0], [1.62666582E12, 319.0], [1.62666564E12, 332.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6266657E12, 1.0], [1.62666558E12, 1.0], [1.62666588E12, 1.0], [1.62666576E12, 1.0], [1.62666582E12, 1.0], [1.62666564E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6266657E12, 108.0], [1.62666558E12, 319.0], [1.62666588E12, 3.0], [1.62666576E12, 124.0], [1.62666582E12, 122.0], [1.62666564E12, 104.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666588E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 741.0, "maxY": 892.0, "series": [{"data": [[16491.0, 66.0], [17155.0, 109.0], [18291.0, 107.0], [17483.0, 124.0], [18235.0, 113.0], [17427.0, 132.0], [17803.0, 83.0], [17899.0, 93.0], [18115.0, 97.0], [18315.0, 103.0], [18347.0, 89.0], [18387.0, 62.0], [18427.0, 114.0], [18915.0, 122.0], [19243.0, 115.0], [18723.0, 115.0], [18747.0, 105.0], [19059.0, 119.0], [19051.0, 99.0], [19099.0, 117.0], [19387.0, 92.0], [18923.0, 111.0], [19227.0, 112.0], [20019.0, 104.0], [20099.0, 102.0], [19899.0, 99.0], [19715.0, 81.0], [19475.0, 76.0], [19811.0, 77.0], [20955.0, 109.0], [21371.0, 90.0], [22899.0, 33.0], [23731.0, 91.0], [10141.0, 2.0], [15233.0, 137.0], [16930.0, 105.0], [16698.0, 103.0], [17178.0, 113.0], [18394.0, 110.0], [18426.0, 70.0], [18346.0, 71.0], [18418.0, 124.0], [17898.0, 120.0], [17546.0, 115.0], [18266.0, 118.0], [19290.0, 101.0], [19058.0, 121.0], [18914.0, 106.0], [18882.0, 111.0], [18730.0, 86.0], [18642.0, 121.0], [19250.0, 104.0], [18554.0, 65.0], [18634.0, 117.0], [18930.0, 114.0], [19098.0, 110.0], [18954.0, 91.0], [19010.0, 117.0], [19522.0, 77.0], [20090.0, 94.0], [20082.0, 99.0], [19810.0, 80.0], [19930.0, 64.0], [19922.0, 113.0], [19634.0, 112.0], [20362.0, 114.0], [19482.0, 115.0], [19490.0, 96.0], [20042.0, 112.0], [19994.0, 100.0], [20370.0, 11.0], [20762.0, 98.0], [21378.0, 118.0], [20490.0, 112.0], [20546.0, 105.0], [21082.0, 106.0], [20906.0, 105.0], [22162.0, 84.0], [741.0, 553.0], [882.0, 892.0], [16553.0, 88.0], [16617.0, 103.0], [16761.0, 114.0], [17329.0, 104.0], [18305.0, 119.0], [18345.0, 122.0], [17681.0, 113.0], [17881.0, 116.0], [17481.0, 128.0], [17729.0, 105.0], [18105.0, 119.0], [18057.0, 96.0], [17713.0, 96.0], [19337.0, 108.0], [19345.0, 102.0], [19281.0, 102.0], [19201.0, 92.0], [19145.0, 105.0], [19177.0, 120.0], [19041.0, 122.0], [19089.0, 125.0], [20425.0, 103.0], [20137.0, 114.0], [20169.0, 124.0], [19729.0, 115.0], [19905.0, 117.0], [19993.0, 110.0], [20233.0, 119.0], [20009.0, 112.0], [19705.0, 114.0], [20753.0, 96.0], [20561.0, 70.0], [22553.0, 96.0], [1856.0, 626.0], [5106.0, 120.0], [5560.0, 146.0], [5526.0, 293.0], [5642.0, 302.0], [7122.0, 320.0], [7514.0, 28.0], [7844.0, 318.0], [7846.0, 299.5], [7782.0, 320.0], [8062.0, 301.0], [8576.0, 291.0], [12704.0, 175.0], [15972.0, 105.0], [17104.0, 84.0], [17680.0, 74.0], [18120.0, 109.0], [17616.0, 82.0], [18264.0, 87.0], [19368.0, 115.0], [19024.0, 124.0], [18792.0, 106.0], [18800.0, 59.0], [19032.0, 117.0], [19328.0, 127.0], [18944.0, 119.0], [19216.0, 113.0], [19248.0, 88.0], [19320.0, 109.0], [19536.0, 113.0], [20128.0, 116.0], [19712.0, 119.0], [19696.0, 118.0], [19792.0, 115.0], [19744.0, 111.0], [19648.0, 103.0], [19760.0, 100.0], [19488.0, 30.0], [20760.0, 117.0], [20704.0, 98.0], [20488.0, 76.0], [20736.0, 93.0], [21592.0, 108.0], [17223.0, 82.0], [17263.0, 117.0], [17735.0, 126.0], [18039.0, 109.0], [17671.0, 116.0], [18207.0, 73.0], [19279.0, 95.0], [19191.0, 103.0], [19431.0, 117.0], [19159.0, 112.0], [18479.0, 104.0], [18463.0, 115.0], [18743.0, 95.0], [18719.0, 40.0], [18903.0, 114.0], [18495.0, 101.0], [18551.0, 118.0], [18503.0, 114.0], [20175.0, 115.0], [19559.0, 113.0], [19767.0, 99.0], [20143.0, 99.0], [19703.0, 115.0], [19711.0, 96.0], [20647.0, 108.0], [21055.0, 106.0], [20487.0, 108.0], [20791.0, 112.0], [21159.0, 110.0], [21479.0, 104.0], [22095.0, 91.0], [11659.0, 88.0], [15227.0, 39.0], [16303.0, 129.0], [16414.0, 123.0], [17382.0, 85.0], [18358.0, 115.0], [18142.0, 128.0], [17758.0, 119.0], [17502.0, 123.0], [18350.0, 125.0], [18062.0, 98.0], [17742.0, 86.0], [19030.0, 87.0], [18486.0, 116.0], [18766.0, 119.0], [18718.0, 94.0], [18814.0, 126.0], [19142.0, 113.0], [19078.0, 106.0], [19198.0, 109.0], [19150.0, 100.0], [19454.0, 113.0], [18798.0, 120.0], [19286.0, 105.0], [19238.0, 110.0], [19958.0, 120.0], [19798.0, 114.0], [19790.0, 104.0], [19814.0, 118.0], [19838.0, 99.0], [19854.0, 88.0], [19990.0, 123.0], [19598.0, 85.0], [19526.0, 117.0], [20878.0, 111.0], [21702.0, 111.0], [17213.0, 132.0], [17221.0, 124.0], [17509.0, 122.0], [18157.0, 124.0], [17885.0, 122.0], [17973.0, 124.0], [18221.0, 65.0], [18101.0, 116.0], [18253.0, 91.0], [18373.0, 107.0], [19221.0, 71.0], [18949.0, 108.0], [18797.0, 113.0], [19261.0, 110.0], [19317.0, 34.0], [18589.0, 110.0], [18749.0, 121.0], [18669.0, 108.0], [18997.0, 120.0], [19173.0, 39.0], [18725.0, 121.0], [19645.0, 97.0], [19821.0, 115.0], [19893.0, 116.0], [19677.0, 121.0], [19653.0, 73.0], [19709.0, 116.0], [20421.0, 94.0], [19605.0, 36.0], [20661.0, 109.0], [20485.0, 101.0], [20941.0, 97.0], [21221.0, 103.0], [20741.0, 94.0], [22125.0, 98.0], [21541.0, 106.0], [22581.0, 98.0], [6577.0, 361.0], [6507.0, 360.0], [6423.0, 375.0], [6747.0, 339.0], [9066.0, 258.0], [17036.0, 138.0], [17268.0, 120.0], [16964.0, 130.0], [17076.0, 119.0], [18276.0, 125.0], [18284.0, 88.0], [17556.0, 120.0], [17572.0, 133.0], [18252.0, 110.0], [19428.0, 111.0], [18956.0, 122.0], [19348.0, 108.0], [18796.0, 119.0], [19300.0, 67.0], [19396.0, 121.0], [18932.0, 113.0], [19964.0, 102.0], [19580.0, 115.0], [20468.0, 96.0], [19788.0, 119.0], [19556.0, 118.0], [19756.0, 117.0], [19636.0, 111.0], [19628.0, 37.0], [19700.0, 103.0], [20452.0, 105.0], [19924.0, 111.0], [19748.0, 117.0], [20620.0, 111.0], [21108.0, 110.0], [21508.0, 108.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 23731.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 741.0, "maxY": 892.0, "series": [{"data": [[16491.0, 66.0], [17155.0, 109.0], [18291.0, 107.0], [17483.0, 124.0], [18235.0, 113.0], [17427.0, 132.0], [17803.0, 83.0], [17899.0, 93.0], [18115.0, 97.0], [18315.0, 103.0], [18347.0, 89.0], [18387.0, 62.0], [18427.0, 114.0], [18915.0, 122.0], [19243.0, 115.0], [18723.0, 115.0], [18747.0, 105.0], [19059.0, 119.0], [19051.0, 99.0], [19099.0, 117.0], [19387.0, 92.0], [18923.0, 111.0], [19227.0, 112.0], [20019.0, 104.0], [20099.0, 102.0], [19899.0, 99.0], [19715.0, 81.0], [19475.0, 76.0], [19811.0, 77.0], [20955.0, 109.0], [21371.0, 90.0], [22899.0, 33.0], [23731.0, 91.0], [10141.0, 2.0], [15233.0, 137.0], [16930.0, 105.0], [16698.0, 103.0], [17178.0, 113.0], [18394.0, 110.0], [18426.0, 70.0], [18346.0, 71.0], [18418.0, 124.0], [17898.0, 120.0], [17546.0, 115.0], [18266.0, 118.0], [19290.0, 101.0], [19058.0, 121.0], [18914.0, 106.0], [18882.0, 111.0], [18730.0, 86.0], [18642.0, 121.0], [19250.0, 104.0], [18554.0, 65.0], [18634.0, 117.0], [18930.0, 114.0], [19098.0, 110.0], [18954.0, 91.0], [19010.0, 117.0], [19522.0, 77.0], [20090.0, 94.0], [20082.0, 99.0], [19810.0, 80.0], [19930.0, 64.0], [19922.0, 113.0], [19634.0, 112.0], [20362.0, 114.0], [19482.0, 115.0], [19490.0, 96.0], [20042.0, 112.0], [19994.0, 100.0], [20370.0, 11.0], [20762.0, 98.0], [21378.0, 118.0], [20490.0, 112.0], [20546.0, 105.0], [21082.0, 106.0], [20906.0, 105.0], [22162.0, 84.0], [741.0, 553.0], [882.0, 892.0], [16553.0, 88.0], [16617.0, 103.0], [16761.0, 114.0], [17329.0, 104.0], [18305.0, 119.0], [18345.0, 122.0], [17681.0, 113.0], [17881.0, 116.0], [17481.0, 128.0], [17729.0, 105.0], [18105.0, 119.0], [18057.0, 96.0], [17713.0, 96.0], [19337.0, 108.0], [19345.0, 102.0], [19281.0, 102.0], [19201.0, 92.0], [19145.0, 105.0], [19177.0, 120.0], [19041.0, 122.0], [19089.0, 125.0], [20425.0, 103.0], [20137.0, 114.0], [20169.0, 124.0], [19729.0, 115.0], [19905.0, 117.0], [19993.0, 110.0], [20233.0, 119.0], [20009.0, 112.0], [19705.0, 114.0], [20753.0, 96.0], [20561.0, 70.0], [22553.0, 96.0], [1856.0, 626.0], [5106.0, 120.0], [5560.0, 146.0], [5526.0, 293.0], [5642.0, 302.0], [7122.0, 320.0], [7514.0, 28.0], [7844.0, 318.0], [7846.0, 299.5], [7782.0, 320.0], [8062.0, 301.0], [8576.0, 291.0], [12704.0, 175.0], [15972.0, 105.0], [17104.0, 84.0], [17680.0, 74.0], [18120.0, 109.0], [17616.0, 82.0], [18264.0, 87.0], [19368.0, 115.0], [19024.0, 124.0], [18792.0, 106.0], [18800.0, 59.0], [19032.0, 117.0], [19328.0, 127.0], [18944.0, 119.0], [19216.0, 113.0], [19248.0, 88.0], [19320.0, 109.0], [19536.0, 113.0], [20128.0, 116.0], [19712.0, 119.0], [19696.0, 118.0], [19792.0, 115.0], [19744.0, 111.0], [19648.0, 103.0], [19760.0, 100.0], [19488.0, 30.0], [20760.0, 117.0], [20704.0, 98.0], [20488.0, 76.0], [20736.0, 93.0], [21592.0, 108.0], [17223.0, 82.0], [17263.0, 117.0], [17735.0, 126.0], [18039.0, 109.0], [17671.0, 116.0], [18207.0, 73.0], [19279.0, 95.0], [19191.0, 103.0], [19431.0, 117.0], [19159.0, 112.0], [18479.0, 104.0], [18463.0, 115.0], [18743.0, 95.0], [18719.0, 40.0], [18903.0, 114.0], [18495.0, 101.0], [18551.0, 118.0], [18503.0, 114.0], [20175.0, 115.0], [19559.0, 113.0], [19767.0, 99.0], [20143.0, 99.0], [19703.0, 115.0], [19711.0, 96.0], [20647.0, 108.0], [21055.0, 106.0], [20487.0, 108.0], [20791.0, 112.0], [21159.0, 110.0], [21479.0, 104.0], [22095.0, 91.0], [11659.0, 88.0], [15227.0, 39.0], [16303.0, 129.0], [16414.0, 123.0], [17382.0, 85.0], [18358.0, 115.0], [18142.0, 128.0], [17758.0, 119.0], [17502.0, 123.0], [18350.0, 125.0], [18062.0, 98.0], [17742.0, 86.0], [19030.0, 87.0], [18486.0, 116.0], [18766.0, 119.0], [18718.0, 94.0], [18814.0, 126.0], [19142.0, 113.0], [19078.0, 106.0], [19198.0, 109.0], [19150.0, 100.0], [19454.0, 113.0], [18798.0, 120.0], [19286.0, 105.0], [19238.0, 110.0], [19958.0, 120.0], [19798.0, 114.0], [19790.0, 104.0], [19814.0, 118.0], [19838.0, 99.0], [19854.0, 88.0], [19990.0, 123.0], [19598.0, 85.0], [19526.0, 117.0], [20878.0, 111.0], [21702.0, 111.0], [17213.0, 132.0], [17221.0, 124.0], [17509.0, 122.0], [18157.0, 124.0], [17885.0, 122.0], [17973.0, 124.0], [18221.0, 65.0], [18101.0, 116.0], [18253.0, 91.0], [18373.0, 107.0], [19221.0, 71.0], [18949.0, 108.0], [18797.0, 113.0], [19261.0, 110.0], [19317.0, 34.0], [18589.0, 110.0], [18749.0, 121.0], [18669.0, 108.0], [18997.0, 120.0], [19173.0, 39.0], [18725.0, 121.0], [19645.0, 97.0], [19821.0, 115.0], [19893.0, 116.0], [19677.0, 121.0], [19653.0, 73.0], [19709.0, 116.0], [20421.0, 94.0], [19605.0, 36.0], [20661.0, 109.0], [20485.0, 101.0], [20941.0, 97.0], [21221.0, 103.0], [20741.0, 94.0], [22125.0, 98.0], [21541.0, 106.0], [22581.0, 98.0], [6577.0, 361.0], [6507.0, 360.0], [6423.0, 375.0], [6747.0, 339.0], [9066.0, 258.0], [17036.0, 138.0], [17268.0, 120.0], [16964.0, 130.0], [17076.0, 119.0], [18276.0, 125.0], [18284.0, 88.0], [17556.0, 120.0], [17572.0, 133.0], [18252.0, 110.0], [19428.0, 111.0], [18956.0, 122.0], [19348.0, 108.0], [18796.0, 119.0], [19300.0, 67.0], [19396.0, 121.0], [18932.0, 113.0], [19964.0, 102.0], [19580.0, 115.0], [20468.0, 96.0], [19788.0, 119.0], [19556.0, 118.0], [19756.0, 117.0], [19636.0, 111.0], [19628.0, 37.0], [19700.0, 103.0], [20452.0, 105.0], [19924.0, 111.0], [19748.0, 117.0], [20620.0, 111.0], [21108.0, 110.0], [21508.0, 108.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 23731.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1601.55, "minX": 1.62666558E12, "maxY": 19235.35, "series": [{"data": [[1.6266657E12, 19235.35], [1.62666558E12, 1601.55], [1.62666588E12, 15907.883333333333], [1.62666576E12, 19077.133333333335], [1.62666582E12, 18825.233333333334], [1.62666564E12, 18835.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666588E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1561.55, "minX": 1.62666558E12, "maxY": 19234.983333333334, "series": [{"data": [[1.6266657E12, 19234.983333333334], [1.62666558E12, 1561.55], [1.62666588E12, 15945.916666666666], [1.62666576E12, 19077.133333333335], [1.62666582E12, 18827.183333333334], [1.62666564E12, 18836.333333333332]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62666588E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1561.55, "minX": 1.62666558E12, "maxY": 19234.983333333334, "series": [{"data": [[1.6266657E12, 19234.983333333334], [1.62666558E12, 1561.55], [1.62666588E12, 15945.916666666666], [1.62666576E12, 19077.133333333335], [1.62666582E12, 18827.183333333334], [1.62666564E12, 18836.333333333332]], "isOverall": false, "label": "user2role-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666588E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1561.55, "minX": 1.62666558E12, "maxY": 19234.983333333334, "series": [{"data": [[1.6266657E12, 19234.983333333334], [1.62666558E12, 1561.55], [1.62666588E12, 15945.916666666666], [1.62666576E12, 19077.133333333335], [1.62666582E12, 18827.183333333334], [1.62666564E12, 18836.333333333332]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62666588E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

