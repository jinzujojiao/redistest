/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 29.0, "minX": 0.0, "maxY": 2895.0, "series": [{"data": [[0.0, 29.0], [0.1, 245.0], [0.2, 399.0], [0.3, 403.0], [0.4, 406.0], [0.5, 408.0], [0.6, 410.0], [0.7, 412.0], [0.8, 413.0], [0.9, 415.0], [1.0, 416.0], [1.1, 417.0], [1.2, 418.0], [1.3, 419.0], [1.4, 420.0], [1.5, 421.0], [1.6, 421.0], [1.7, 422.0], [1.8, 423.0], [1.9, 424.0], [2.0, 424.0], [2.1, 425.0], [2.2, 425.0], [2.3, 426.0], [2.4, 426.0], [2.5, 427.0], [2.6, 428.0], [2.7, 428.0], [2.8, 429.0], [2.9, 429.0], [3.0, 430.0], [3.1, 430.0], [3.2, 431.0], [3.3, 431.0], [3.4, 432.0], [3.5, 432.0], [3.6, 433.0], [3.7, 433.0], [3.8, 433.0], [3.9, 434.0], [4.0, 434.0], [4.1, 435.0], [4.2, 435.0], [4.3, 435.0], [4.4, 436.0], [4.5, 436.0], [4.6, 436.0], [4.7, 437.0], [4.8, 437.0], [4.9, 437.0], [5.0, 438.0], [5.1, 438.0], [5.2, 439.0], [5.3, 439.0], [5.4, 439.0], [5.5, 439.0], [5.6, 440.0], [5.7, 440.0], [5.8, 440.0], [5.9, 441.0], [6.0, 441.0], [6.1, 441.0], [6.2, 442.0], [6.3, 442.0], [6.4, 442.0], [6.5, 442.0], [6.6, 443.0], [6.7, 443.0], [6.8, 443.0], [6.9, 444.0], [7.0, 444.0], [7.1, 444.0], [7.2, 444.0], [7.3, 445.0], [7.4, 445.0], [7.5, 445.0], [7.6, 445.0], [7.7, 446.0], [7.8, 446.0], [7.9, 446.0], [8.0, 446.0], [8.1, 447.0], [8.2, 447.0], [8.3, 447.0], [8.4, 447.0], [8.5, 448.0], [8.6, 448.0], [8.7, 448.0], [8.8, 448.0], [8.9, 448.0], [9.0, 449.0], [9.1, 449.0], [9.2, 449.0], [9.3, 449.0], [9.4, 450.0], [9.5, 450.0], [9.6, 450.0], [9.7, 450.0], [9.8, 450.0], [9.9, 451.0], [10.0, 451.0], [10.1, 451.0], [10.2, 451.0], [10.3, 451.0], [10.4, 452.0], [10.5, 452.0], [10.6, 452.0], [10.7, 452.0], [10.8, 452.0], [10.9, 453.0], [11.0, 453.0], [11.1, 453.0], [11.2, 453.0], [11.3, 453.0], [11.4, 454.0], [11.5, 454.0], [11.6, 454.0], [11.7, 454.0], [11.8, 454.0], [11.9, 454.0], [12.0, 455.0], [12.1, 455.0], [12.2, 455.0], [12.3, 455.0], [12.4, 455.0], [12.5, 456.0], [12.6, 456.0], [12.7, 456.0], [12.8, 456.0], [12.9, 456.0], [13.0, 456.0], [13.1, 457.0], [13.2, 457.0], [13.3, 457.0], [13.4, 457.0], [13.5, 457.0], [13.6, 457.0], [13.7, 458.0], [13.8, 458.0], [13.9, 458.0], [14.0, 458.0], [14.1, 458.0], [14.2, 458.0], [14.3, 458.0], [14.4, 459.0], [14.5, 459.0], [14.6, 459.0], [14.7, 459.0], [14.8, 459.0], [14.9, 459.0], [15.0, 460.0], [15.1, 460.0], [15.2, 460.0], [15.3, 460.0], [15.4, 460.0], [15.5, 460.0], [15.6, 460.0], [15.7, 461.0], [15.8, 461.0], [15.9, 461.0], [16.0, 461.0], [16.1, 461.0], [16.2, 461.0], [16.3, 462.0], [16.4, 462.0], [16.5, 462.0], [16.6, 462.0], [16.7, 462.0], [16.8, 462.0], [16.9, 462.0], [17.0, 463.0], [17.1, 463.0], [17.2, 463.0], [17.3, 463.0], [17.4, 463.0], [17.5, 463.0], [17.6, 464.0], [17.7, 464.0], [17.8, 464.0], [17.9, 464.0], [18.0, 464.0], [18.1, 464.0], [18.2, 464.0], [18.3, 465.0], [18.4, 465.0], [18.5, 465.0], [18.6, 465.0], [18.7, 465.0], [18.8, 465.0], [18.9, 465.0], [19.0, 466.0], [19.1, 466.0], [19.2, 466.0], [19.3, 466.0], [19.4, 466.0], [19.5, 466.0], [19.6, 466.0], [19.7, 467.0], [19.8, 467.0], [19.9, 467.0], [20.0, 467.0], [20.1, 467.0], [20.2, 467.0], [20.3, 467.0], [20.4, 468.0], [20.5, 468.0], [20.6, 468.0], [20.7, 468.0], [20.8, 468.0], [20.9, 468.0], [21.0, 468.0], [21.1, 469.0], [21.2, 469.0], [21.3, 469.0], [21.4, 469.0], [21.5, 469.0], [21.6, 469.0], [21.7, 469.0], [21.8, 469.0], [21.9, 470.0], [22.0, 470.0], [22.1, 470.0], [22.2, 470.0], [22.3, 470.0], [22.4, 470.0], [22.5, 470.0], [22.6, 470.0], [22.7, 471.0], [22.8, 471.0], [22.9, 471.0], [23.0, 471.0], [23.1, 471.0], [23.2, 471.0], [23.3, 471.0], [23.4, 471.0], [23.5, 472.0], [23.6, 472.0], [23.7, 472.0], [23.8, 472.0], [23.9, 472.0], [24.0, 472.0], [24.1, 472.0], [24.2, 472.0], [24.3, 473.0], [24.4, 473.0], [24.5, 473.0], [24.6, 473.0], [24.7, 473.0], [24.8, 473.0], [24.9, 473.0], [25.0, 473.0], [25.1, 474.0], [25.2, 474.0], [25.3, 474.0], [25.4, 474.0], [25.5, 474.0], [25.6, 474.0], [25.7, 474.0], [25.8, 474.0], [25.9, 475.0], [26.0, 475.0], [26.1, 475.0], [26.2, 475.0], [26.3, 475.0], [26.4, 475.0], [26.5, 475.0], [26.6, 475.0], [26.7, 475.0], [26.8, 476.0], [26.9, 476.0], [27.0, 476.0], [27.1, 476.0], [27.2, 476.0], [27.3, 476.0], [27.4, 476.0], [27.5, 476.0], [27.6, 477.0], [27.7, 477.0], [27.8, 477.0], [27.9, 477.0], [28.0, 477.0], [28.1, 477.0], [28.2, 477.0], [28.3, 477.0], [28.4, 478.0], [28.5, 478.0], [28.6, 478.0], [28.7, 478.0], [28.8, 478.0], [28.9, 478.0], [29.0, 478.0], [29.1, 478.0], [29.2, 479.0], [29.3, 479.0], [29.4, 479.0], [29.5, 479.0], [29.6, 479.0], [29.7, 479.0], [29.8, 479.0], [29.9, 479.0], [30.0, 480.0], [30.1, 480.0], [30.2, 480.0], [30.3, 480.0], [30.4, 480.0], [30.5, 480.0], [30.6, 480.0], [30.7, 480.0], [30.8, 480.0], [30.9, 481.0], [31.0, 481.0], [31.1, 481.0], [31.2, 481.0], [31.3, 481.0], [31.4, 481.0], [31.5, 481.0], [31.6, 481.0], [31.7, 481.0], [31.8, 482.0], [31.9, 482.0], [32.0, 482.0], [32.1, 482.0], [32.2, 482.0], [32.3, 482.0], [32.4, 482.0], [32.5, 482.0], [32.6, 483.0], [32.7, 483.0], [32.8, 483.0], [32.9, 483.0], [33.0, 483.0], [33.1, 483.0], [33.2, 483.0], [33.3, 483.0], [33.4, 483.0], [33.5, 484.0], [33.6, 484.0], [33.7, 484.0], [33.8, 484.0], [33.9, 484.0], [34.0, 484.0], [34.1, 484.0], [34.2, 484.0], [34.3, 484.0], [34.4, 485.0], [34.5, 485.0], [34.6, 485.0], [34.7, 485.0], [34.8, 485.0], [34.9, 485.0], [35.0, 485.0], [35.1, 485.0], [35.2, 485.0], [35.3, 486.0], [35.4, 486.0], [35.5, 486.0], [35.6, 486.0], [35.7, 486.0], [35.8, 486.0], [35.9, 486.0], [36.0, 486.0], [36.1, 486.0], [36.2, 487.0], [36.3, 487.0], [36.4, 487.0], [36.5, 487.0], [36.6, 487.0], [36.7, 487.0], [36.8, 487.0], [36.9, 487.0], [37.0, 487.0], [37.1, 488.0], [37.2, 488.0], [37.3, 488.0], [37.4, 488.0], [37.5, 488.0], [37.6, 488.0], [37.7, 488.0], [37.8, 488.0], [37.9, 488.0], [38.0, 489.0], [38.1, 489.0], [38.2, 489.0], [38.3, 489.0], [38.4, 489.0], [38.5, 489.0], [38.6, 489.0], [38.7, 489.0], [38.8, 489.0], [38.9, 490.0], [39.0, 490.0], [39.1, 490.0], [39.2, 490.0], [39.3, 490.0], [39.4, 490.0], [39.5, 490.0], [39.6, 490.0], [39.7, 490.0], [39.8, 490.0], [39.9, 491.0], [40.0, 491.0], [40.1, 491.0], [40.2, 491.0], [40.3, 491.0], [40.4, 491.0], [40.5, 491.0], [40.6, 491.0], [40.7, 491.0], [40.8, 491.0], [40.9, 492.0], [41.0, 492.0], [41.1, 492.0], [41.2, 492.0], [41.3, 492.0], [41.4, 492.0], [41.5, 492.0], [41.6, 492.0], [41.7, 492.0], [41.8, 492.0], [41.9, 493.0], [42.0, 493.0], [42.1, 493.0], [42.2, 493.0], [42.3, 493.0], [42.4, 493.0], [42.5, 493.0], [42.6, 493.0], [42.7, 493.0], [42.8, 493.0], [42.9, 494.0], [43.0, 494.0], [43.1, 494.0], [43.2, 494.0], [43.3, 494.0], [43.4, 494.0], [43.5, 494.0], [43.6, 494.0], [43.7, 494.0], [43.8, 494.0], [43.9, 495.0], [44.0, 495.0], [44.1, 495.0], [44.2, 495.0], [44.3, 495.0], [44.4, 495.0], [44.5, 495.0], [44.6, 495.0], [44.7, 495.0], [44.8, 495.0], [44.9, 496.0], [45.0, 496.0], [45.1, 496.0], [45.2, 496.0], [45.3, 496.0], [45.4, 496.0], [45.5, 496.0], [45.6, 496.0], [45.7, 496.0], [45.8, 497.0], [45.9, 497.0], [46.0, 497.0], [46.1, 497.0], [46.2, 497.0], [46.3, 497.0], [46.4, 497.0], [46.5, 497.0], [46.6, 497.0], [46.7, 497.0], [46.8, 498.0], [46.9, 498.0], [47.0, 498.0], [47.1, 498.0], [47.2, 498.0], [47.3, 498.0], [47.4, 498.0], [47.5, 498.0], [47.6, 498.0], [47.7, 498.0], [47.8, 499.0], [47.9, 499.0], [48.0, 499.0], [48.1, 499.0], [48.2, 499.0], [48.3, 499.0], [48.4, 499.0], [48.5, 499.0], [48.6, 499.0], [48.7, 500.0], [48.8, 500.0], [48.9, 500.0], [49.0, 500.0], [49.1, 500.0], [49.2, 500.0], [49.3, 500.0], [49.4, 500.0], [49.5, 500.0], [49.6, 500.0], [49.7, 501.0], [49.8, 501.0], [49.9, 501.0], [50.0, 501.0], [50.1, 501.0], [50.2, 501.0], [50.3, 501.0], [50.4, 501.0], [50.5, 501.0], [50.6, 502.0], [50.7, 502.0], [50.8, 502.0], [50.9, 502.0], [51.0, 502.0], [51.1, 502.0], [51.2, 502.0], [51.3, 502.0], [51.4, 502.0], [51.5, 503.0], [51.6, 503.0], [51.7, 503.0], [51.8, 503.0], [51.9, 503.0], [52.0, 503.0], [52.1, 503.0], [52.2, 503.0], [52.3, 503.0], [52.4, 504.0], [52.5, 504.0], [52.6, 504.0], [52.7, 504.0], [52.8, 504.0], [52.9, 504.0], [53.0, 504.0], [53.1, 504.0], [53.2, 504.0], [53.3, 505.0], [53.4, 505.0], [53.5, 505.0], [53.6, 505.0], [53.7, 505.0], [53.8, 505.0], [53.9, 505.0], [54.0, 505.0], [54.1, 505.0], [54.2, 506.0], [54.3, 506.0], [54.4, 506.0], [54.5, 506.0], [54.6, 506.0], [54.7, 506.0], [54.8, 506.0], [54.9, 506.0], [55.0, 507.0], [55.1, 507.0], [55.2, 507.0], [55.3, 507.0], [55.4, 507.0], [55.5, 507.0], [55.6, 507.0], [55.7, 507.0], [55.8, 507.0], [55.9, 508.0], [56.0, 508.0], [56.1, 508.0], [56.2, 508.0], [56.3, 508.0], [56.4, 508.0], [56.5, 508.0], [56.6, 508.0], [56.7, 508.0], [56.8, 509.0], [56.9, 509.0], [57.0, 509.0], [57.1, 509.0], [57.2, 509.0], [57.3, 509.0], [57.4, 509.0], [57.5, 509.0], [57.6, 509.0], [57.7, 510.0], [57.8, 510.0], [57.9, 510.0], [58.0, 510.0], [58.1, 510.0], [58.2, 510.0], [58.3, 510.0], [58.4, 510.0], [58.5, 511.0], [58.6, 511.0], [58.7, 511.0], [58.8, 511.0], [58.9, 511.0], [59.0, 511.0], [59.1, 511.0], [59.2, 511.0], [59.3, 511.0], [59.4, 512.0], [59.5, 512.0], [59.6, 512.0], [59.7, 512.0], [59.8, 512.0], [59.9, 512.0], [60.0, 512.0], [60.1, 512.0], [60.2, 513.0], [60.3, 513.0], [60.4, 513.0], [60.5, 513.0], [60.6, 513.0], [60.7, 513.0], [60.8, 513.0], [60.9, 513.0], [61.0, 514.0], [61.1, 514.0], [61.2, 514.0], [61.3, 514.0], [61.4, 514.0], [61.5, 514.0], [61.6, 514.0], [61.7, 514.0], [61.8, 514.0], [61.9, 515.0], [62.0, 515.0], [62.1, 515.0], [62.2, 515.0], [62.3, 515.0], [62.4, 515.0], [62.5, 515.0], [62.6, 515.0], [62.7, 516.0], [62.8, 516.0], [62.9, 516.0], [63.0, 516.0], [63.1, 516.0], [63.2, 516.0], [63.3, 516.0], [63.4, 516.0], [63.5, 517.0], [63.6, 517.0], [63.7, 517.0], [63.8, 517.0], [63.9, 517.0], [64.0, 517.0], [64.1, 517.0], [64.2, 517.0], [64.3, 518.0], [64.4, 518.0], [64.5, 518.0], [64.6, 518.0], [64.7, 518.0], [64.8, 518.0], [64.9, 518.0], [65.0, 519.0], [65.1, 519.0], [65.2, 519.0], [65.3, 519.0], [65.4, 519.0], [65.5, 519.0], [65.6, 519.0], [65.7, 519.0], [65.8, 520.0], [65.9, 520.0], [66.0, 520.0], [66.1, 520.0], [66.2, 520.0], [66.3, 520.0], [66.4, 520.0], [66.5, 521.0], [66.6, 521.0], [66.7, 521.0], [66.8, 521.0], [66.9, 521.0], [67.0, 521.0], [67.1, 521.0], [67.2, 522.0], [67.3, 522.0], [67.4, 522.0], [67.5, 522.0], [67.6, 522.0], [67.7, 522.0], [67.8, 522.0], [67.9, 523.0], [68.0, 523.0], [68.1, 523.0], [68.2, 523.0], [68.3, 523.0], [68.4, 523.0], [68.5, 523.0], [68.6, 524.0], [68.7, 524.0], [68.8, 524.0], [68.9, 524.0], [69.0, 524.0], [69.1, 524.0], [69.2, 524.0], [69.3, 525.0], [69.4, 525.0], [69.5, 525.0], [69.6, 525.0], [69.7, 525.0], [69.8, 525.0], [69.9, 525.0], [70.0, 526.0], [70.1, 526.0], [70.2, 526.0], [70.3, 526.0], [70.4, 526.0], [70.5, 526.0], [70.6, 527.0], [70.7, 527.0], [70.8, 527.0], [70.9, 527.0], [71.0, 527.0], [71.1, 527.0], [71.2, 527.0], [71.3, 528.0], [71.4, 528.0], [71.5, 528.0], [71.6, 528.0], [71.7, 528.0], [71.8, 528.0], [71.9, 529.0], [72.0, 529.0], [72.1, 529.0], [72.2, 529.0], [72.3, 529.0], [72.4, 529.0], [72.5, 529.0], [72.6, 530.0], [72.7, 530.0], [72.8, 530.0], [72.9, 530.0], [73.0, 530.0], [73.1, 530.0], [73.2, 530.0], [73.3, 531.0], [73.4, 531.0], [73.5, 531.0], [73.6, 531.0], [73.7, 531.0], [73.8, 531.0], [73.9, 532.0], [74.0, 532.0], [74.1, 532.0], [74.2, 532.0], [74.3, 532.0], [74.4, 532.0], [74.5, 532.0], [74.6, 533.0], [74.7, 533.0], [74.8, 533.0], [74.9, 533.0], [75.0, 533.0], [75.1, 533.0], [75.2, 534.0], [75.3, 534.0], [75.4, 534.0], [75.5, 534.0], [75.6, 534.0], [75.7, 534.0], [75.8, 535.0], [75.9, 535.0], [76.0, 535.0], [76.1, 535.0], [76.2, 535.0], [76.3, 536.0], [76.4, 536.0], [76.5, 536.0], [76.6, 536.0], [76.7, 536.0], [76.8, 537.0], [76.9, 537.0], [77.0, 537.0], [77.1, 537.0], [77.2, 537.0], [77.3, 537.0], [77.4, 538.0], [77.5, 538.0], [77.6, 538.0], [77.7, 538.0], [77.8, 538.0], [77.9, 539.0], [78.0, 539.0], [78.1, 539.0], [78.2, 539.0], [78.3, 539.0], [78.4, 540.0], [78.5, 540.0], [78.6, 540.0], [78.7, 540.0], [78.8, 540.0], [78.9, 541.0], [79.0, 541.0], [79.1, 541.0], [79.2, 541.0], [79.3, 541.0], [79.4, 542.0], [79.5, 542.0], [79.6, 542.0], [79.7, 542.0], [79.8, 542.0], [79.9, 543.0], [80.0, 543.0], [80.1, 543.0], [80.2, 543.0], [80.3, 543.0], [80.4, 544.0], [80.5, 544.0], [80.6, 544.0], [80.7, 544.0], [80.8, 545.0], [80.9, 545.0], [81.0, 545.0], [81.1, 545.0], [81.2, 545.0], [81.3, 546.0], [81.4, 546.0], [81.5, 546.0], [81.6, 546.0], [81.7, 546.0], [81.8, 547.0], [81.9, 547.0], [82.0, 547.0], [82.1, 547.0], [82.2, 548.0], [82.3, 548.0], [82.4, 548.0], [82.5, 548.0], [82.6, 549.0], [82.7, 549.0], [82.8, 549.0], [82.9, 549.0], [83.0, 549.0], [83.1, 550.0], [83.2, 550.0], [83.3, 550.0], [83.4, 550.0], [83.5, 551.0], [83.6, 551.0], [83.7, 551.0], [83.8, 551.0], [83.9, 552.0], [84.0, 552.0], [84.1, 552.0], [84.2, 552.0], [84.3, 553.0], [84.4, 553.0], [84.5, 553.0], [84.6, 553.0], [84.7, 554.0], [84.8, 554.0], [84.9, 554.0], [85.0, 555.0], [85.1, 555.0], [85.2, 555.0], [85.3, 555.0], [85.4, 556.0], [85.5, 556.0], [85.6, 556.0], [85.7, 556.0], [85.8, 557.0], [85.9, 557.0], [86.0, 557.0], [86.1, 558.0], [86.2, 558.0], [86.3, 558.0], [86.4, 558.0], [86.5, 559.0], [86.6, 559.0], [86.7, 559.0], [86.8, 560.0], [86.9, 560.0], [87.0, 560.0], [87.1, 561.0], [87.2, 561.0], [87.3, 561.0], [87.4, 562.0], [87.5, 562.0], [87.6, 562.0], [87.7, 563.0], [87.8, 563.0], [87.9, 563.0], [88.0, 563.0], [88.1, 564.0], [88.2, 564.0], [88.3, 564.0], [88.4, 565.0], [88.5, 565.0], [88.6, 565.0], [88.7, 566.0], [88.8, 566.0], [88.9, 567.0], [89.0, 567.0], [89.1, 567.0], [89.2, 568.0], [89.3, 568.0], [89.4, 568.0], [89.5, 569.0], [89.6, 569.0], [89.7, 569.0], [89.8, 570.0], [89.9, 570.0], [90.0, 571.0], [90.1, 571.0], [90.2, 571.0], [90.3, 572.0], [90.4, 572.0], [90.5, 573.0], [90.6, 573.0], [90.7, 574.0], [90.8, 574.0], [90.9, 575.0], [91.0, 575.0], [91.1, 575.0], [91.2, 576.0], [91.3, 576.0], [91.4, 577.0], [91.5, 577.0], [91.6, 578.0], [91.7, 578.0], [91.8, 579.0], [91.9, 579.0], [92.0, 580.0], [92.1, 580.0], [92.2, 581.0], [92.3, 581.0], [92.4, 582.0], [92.5, 582.0], [92.6, 583.0], [92.7, 583.0], [92.8, 584.0], [92.9, 585.0], [93.0, 585.0], [93.1, 586.0], [93.2, 586.0], [93.3, 587.0], [93.4, 588.0], [93.5, 588.0], [93.6, 589.0], [93.7, 590.0], [93.8, 591.0], [93.9, 591.0], [94.0, 592.0], [94.1, 593.0], [94.2, 594.0], [94.3, 595.0], [94.4, 595.0], [94.5, 596.0], [94.6, 597.0], [94.7, 598.0], [94.8, 599.0], [94.9, 600.0], [95.0, 601.0], [95.1, 603.0], [95.2, 604.0], [95.3, 605.0], [95.4, 606.0], [95.5, 607.0], [95.6, 608.0], [95.7, 610.0], [95.8, 611.0], [95.9, 613.0], [96.0, 614.0], [96.1, 615.0], [96.2, 617.0], [96.3, 619.0], [96.4, 620.0], [96.5, 621.0], [96.6, 623.0], [96.7, 624.0], [96.8, 626.0], [96.9, 627.0], [97.0, 629.0], [97.1, 632.0], [97.2, 634.0], [97.3, 637.0], [97.4, 639.0], [97.5, 641.0], [97.6, 645.0], [97.7, 649.0], [97.8, 653.0], [97.9, 657.0], [98.0, 662.0], [98.1, 669.0], [98.2, 674.0], [98.3, 680.0], [98.4, 687.0], [98.5, 697.0], [98.6, 708.0], [98.7, 718.0], [98.8, 734.0], [98.9, 751.0], [99.0, 777.0], [99.1, 793.0], [99.2, 818.0], [99.3, 857.0], [99.4, 905.0], [99.5, 963.0], [99.6, 1017.0], [99.7, 1076.0], [99.8, 1137.0], [99.9, 1225.0]], "isOverall": false, "label": "AuthzRequest-rcdn-3", "isController": false}, {"data": [[0.0, 84.0], [0.1, 417.0], [0.2, 434.0], [0.3, 442.0], [0.4, 448.0], [0.5, 452.0], [0.6, 455.0], [0.7, 459.0], [0.8, 462.0], [0.9, 465.0], [1.0, 467.0], [1.1, 469.0], [1.2, 470.0], [1.3, 472.0], [1.4, 474.0], [1.5, 475.0], [1.6, 477.0], [1.7, 478.0], [1.8, 479.0], [1.9, 480.0], [2.0, 481.0], [2.1, 482.0], [2.2, 483.0], [2.3, 484.0], [2.4, 485.0], [2.5, 486.0], [2.6, 486.0], [2.7, 487.0], [2.8, 488.0], [2.9, 489.0], [3.0, 489.0], [3.1, 490.0], [3.2, 491.0], [3.3, 491.0], [3.4, 492.0], [3.5, 492.0], [3.6, 493.0], [3.7, 494.0], [3.8, 494.0], [3.9, 495.0], [4.0, 495.0], [4.1, 496.0], [4.2, 496.0], [4.3, 497.0], [4.4, 497.0], [4.5, 498.0], [4.6, 498.0], [4.7, 499.0], [4.8, 499.0], [4.9, 500.0], [5.0, 500.0], [5.1, 500.0], [5.2, 501.0], [5.3, 501.0], [5.4, 502.0], [5.5, 502.0], [5.6, 503.0], [5.7, 503.0], [5.8, 503.0], [5.9, 504.0], [6.0, 504.0], [6.1, 504.0], [6.2, 505.0], [6.3, 505.0], [6.4, 506.0], [6.5, 506.0], [6.6, 506.0], [6.7, 507.0], [6.8, 507.0], [6.9, 507.0], [7.0, 508.0], [7.1, 508.0], [7.2, 508.0], [7.3, 509.0], [7.4, 509.0], [7.5, 509.0], [7.6, 510.0], [7.7, 510.0], [7.8, 510.0], [7.9, 511.0], [8.0, 511.0], [8.1, 511.0], [8.2, 512.0], [8.3, 512.0], [8.4, 512.0], [8.5, 513.0], [8.6, 513.0], [8.7, 513.0], [8.8, 513.0], [8.9, 514.0], [9.0, 514.0], [9.1, 514.0], [9.2, 515.0], [9.3, 515.0], [9.4, 515.0], [9.5, 515.0], [9.6, 516.0], [9.7, 516.0], [9.8, 516.0], [9.9, 516.0], [10.0, 517.0], [10.1, 517.0], [10.2, 517.0], [10.3, 517.0], [10.4, 518.0], [10.5, 518.0], [10.6, 518.0], [10.7, 518.0], [10.8, 519.0], [10.9, 519.0], [11.0, 519.0], [11.1, 519.0], [11.2, 520.0], [11.3, 520.0], [11.4, 520.0], [11.5, 520.0], [11.6, 520.0], [11.7, 521.0], [11.8, 521.0], [11.9, 521.0], [12.0, 521.0], [12.1, 522.0], [12.2, 522.0], [12.3, 522.0], [12.4, 522.0], [12.5, 522.0], [12.6, 523.0], [12.7, 523.0], [12.8, 523.0], [12.9, 523.0], [13.0, 524.0], [13.1, 524.0], [13.2, 524.0], [13.3, 524.0], [13.4, 525.0], [13.5, 525.0], [13.6, 525.0], [13.7, 525.0], [13.8, 525.0], [13.9, 526.0], [14.0, 526.0], [14.1, 526.0], [14.2, 526.0], [14.3, 526.0], [14.4, 527.0], [14.5, 527.0], [14.6, 527.0], [14.7, 527.0], [14.8, 527.0], [14.9, 528.0], [15.0, 528.0], [15.1, 528.0], [15.2, 528.0], [15.3, 528.0], [15.4, 529.0], [15.5, 529.0], [15.6, 529.0], [15.7, 529.0], [15.8, 529.0], [15.9, 530.0], [16.0, 530.0], [16.1, 530.0], [16.2, 530.0], [16.3, 530.0], [16.4, 531.0], [16.5, 531.0], [16.6, 531.0], [16.7, 531.0], [16.8, 531.0], [16.9, 532.0], [17.0, 532.0], [17.1, 532.0], [17.2, 532.0], [17.3, 532.0], [17.4, 532.0], [17.5, 533.0], [17.6, 533.0], [17.7, 533.0], [17.8, 533.0], [17.9, 533.0], [18.0, 534.0], [18.1, 534.0], [18.2, 534.0], [18.3, 534.0], [18.4, 534.0], [18.5, 535.0], [18.6, 535.0], [18.7, 535.0], [18.8, 535.0], [18.9, 535.0], [19.0, 536.0], [19.1, 536.0], [19.2, 536.0], [19.3, 536.0], [19.4, 536.0], [19.5, 536.0], [19.6, 537.0], [19.7, 537.0], [19.8, 537.0], [19.9, 537.0], [20.0, 537.0], [20.1, 538.0], [20.2, 538.0], [20.3, 538.0], [20.4, 538.0], [20.5, 538.0], [20.6, 539.0], [20.7, 539.0], [20.8, 539.0], [20.9, 539.0], [21.0, 539.0], [21.1, 539.0], [21.2, 540.0], [21.3, 540.0], [21.4, 540.0], [21.5, 540.0], [21.6, 540.0], [21.7, 541.0], [21.8, 541.0], [21.9, 541.0], [22.0, 541.0], [22.1, 541.0], [22.2, 541.0], [22.3, 542.0], [22.4, 542.0], [22.5, 542.0], [22.6, 542.0], [22.7, 542.0], [22.8, 542.0], [22.9, 543.0], [23.0, 543.0], [23.1, 543.0], [23.2, 543.0], [23.3, 543.0], [23.4, 543.0], [23.5, 544.0], [23.6, 544.0], [23.7, 544.0], [23.8, 544.0], [23.9, 544.0], [24.0, 544.0], [24.1, 545.0], [24.2, 545.0], [24.3, 545.0], [24.4, 545.0], [24.5, 545.0], [24.6, 545.0], [24.7, 546.0], [24.8, 546.0], [24.9, 546.0], [25.0, 546.0], [25.1, 546.0], [25.2, 546.0], [25.3, 547.0], [25.4, 547.0], [25.5, 547.0], [25.6, 547.0], [25.7, 547.0], [25.8, 547.0], [25.9, 548.0], [26.0, 548.0], [26.1, 548.0], [26.2, 548.0], [26.3, 548.0], [26.4, 548.0], [26.5, 549.0], [26.6, 549.0], [26.7, 549.0], [26.8, 549.0], [26.9, 549.0], [27.0, 549.0], [27.1, 549.0], [27.2, 550.0], [27.3, 550.0], [27.4, 550.0], [27.5, 550.0], [27.6, 550.0], [27.7, 550.0], [27.8, 551.0], [27.9, 551.0], [28.0, 551.0], [28.1, 551.0], [28.2, 551.0], [28.3, 551.0], [28.4, 552.0], [28.5, 552.0], [28.6, 552.0], [28.7, 552.0], [28.8, 552.0], [28.9, 552.0], [29.0, 553.0], [29.1, 553.0], [29.2, 553.0], [29.3, 553.0], [29.4, 553.0], [29.5, 553.0], [29.6, 554.0], [29.7, 554.0], [29.8, 554.0], [29.9, 554.0], [30.0, 554.0], [30.1, 554.0], [30.2, 555.0], [30.3, 555.0], [30.4, 555.0], [30.5, 555.0], [30.6, 555.0], [30.7, 555.0], [30.8, 555.0], [30.9, 556.0], [31.0, 556.0], [31.1, 556.0], [31.2, 556.0], [31.3, 556.0], [31.4, 556.0], [31.5, 557.0], [31.6, 557.0], [31.7, 557.0], [31.8, 557.0], [31.9, 557.0], [32.0, 557.0], [32.1, 557.0], [32.2, 558.0], [32.3, 558.0], [32.4, 558.0], [32.5, 558.0], [32.6, 558.0], [32.7, 558.0], [32.8, 558.0], [32.9, 559.0], [33.0, 559.0], [33.1, 559.0], [33.2, 559.0], [33.3, 559.0], [33.4, 559.0], [33.5, 559.0], [33.6, 560.0], [33.7, 560.0], [33.8, 560.0], [33.9, 560.0], [34.0, 560.0], [34.1, 560.0], [34.2, 561.0], [34.3, 561.0], [34.4, 561.0], [34.5, 561.0], [34.6, 561.0], [34.7, 561.0], [34.8, 561.0], [34.9, 562.0], [35.0, 562.0], [35.1, 562.0], [35.2, 562.0], [35.3, 562.0], [35.4, 562.0], [35.5, 562.0], [35.6, 563.0], [35.7, 563.0], [35.8, 563.0], [35.9, 563.0], [36.0, 563.0], [36.1, 563.0], [36.2, 564.0], [36.3, 564.0], [36.4, 564.0], [36.5, 564.0], [36.6, 564.0], [36.7, 564.0], [36.8, 564.0], [36.9, 565.0], [37.0, 565.0], [37.1, 565.0], [37.2, 565.0], [37.3, 565.0], [37.4, 565.0], [37.5, 565.0], [37.6, 566.0], [37.7, 566.0], [37.8, 566.0], [37.9, 566.0], [38.0, 566.0], [38.1, 566.0], [38.2, 566.0], [38.3, 567.0], [38.4, 567.0], [38.5, 567.0], [38.6, 567.0], [38.7, 567.0], [38.8, 567.0], [38.9, 567.0], [39.0, 568.0], [39.1, 568.0], [39.2, 568.0], [39.3, 568.0], [39.4, 568.0], [39.5, 568.0], [39.6, 568.0], [39.7, 569.0], [39.8, 569.0], [39.9, 569.0], [40.0, 569.0], [40.1, 569.0], [40.2, 569.0], [40.3, 569.0], [40.4, 570.0], [40.5, 570.0], [40.6, 570.0], [40.7, 570.0], [40.8, 570.0], [40.9, 570.0], [41.0, 570.0], [41.1, 571.0], [41.2, 571.0], [41.3, 571.0], [41.4, 571.0], [41.5, 571.0], [41.6, 571.0], [41.7, 571.0], [41.8, 572.0], [41.9, 572.0], [42.0, 572.0], [42.1, 572.0], [42.2, 572.0], [42.3, 572.0], [42.4, 572.0], [42.5, 572.0], [42.6, 573.0], [42.7, 573.0], [42.8, 573.0], [42.9, 573.0], [43.0, 573.0], [43.1, 573.0], [43.2, 573.0], [43.3, 574.0], [43.4, 574.0], [43.5, 574.0], [43.6, 574.0], [43.7, 574.0], [43.8, 574.0], [43.9, 574.0], [44.0, 575.0], [44.1, 575.0], [44.2, 575.0], [44.3, 575.0], [44.4, 575.0], [44.5, 575.0], [44.6, 575.0], [44.7, 576.0], [44.8, 576.0], [44.9, 576.0], [45.0, 576.0], [45.1, 576.0], [45.2, 576.0], [45.3, 576.0], [45.4, 577.0], [45.5, 577.0], [45.6, 577.0], [45.7, 577.0], [45.8, 577.0], [45.9, 577.0], [46.0, 577.0], [46.1, 578.0], [46.2, 578.0], [46.3, 578.0], [46.4, 578.0], [46.5, 578.0], [46.6, 578.0], [46.7, 578.0], [46.8, 579.0], [46.9, 579.0], [47.0, 579.0], [47.1, 579.0], [47.2, 579.0], [47.3, 579.0], [47.4, 579.0], [47.5, 580.0], [47.6, 580.0], [47.7, 580.0], [47.8, 580.0], [47.9, 580.0], [48.0, 580.0], [48.1, 581.0], [48.2, 581.0], [48.3, 581.0], [48.4, 581.0], [48.5, 581.0], [48.6, 581.0], [48.7, 581.0], [48.8, 582.0], [48.9, 582.0], [49.0, 582.0], [49.1, 582.0], [49.2, 582.0], [49.3, 582.0], [49.4, 582.0], [49.5, 583.0], [49.6, 583.0], [49.7, 583.0], [49.8, 583.0], [49.9, 583.0], [50.0, 583.0], [50.1, 584.0], [50.2, 584.0], [50.3, 584.0], [50.4, 584.0], [50.5, 584.0], [50.6, 584.0], [50.7, 584.0], [50.8, 585.0], [50.9, 585.0], [51.0, 585.0], [51.1, 585.0], [51.2, 585.0], [51.3, 585.0], [51.4, 586.0], [51.5, 586.0], [51.6, 586.0], [51.7, 586.0], [51.8, 586.0], [51.9, 586.0], [52.0, 586.0], [52.1, 587.0], [52.2, 587.0], [52.3, 587.0], [52.4, 587.0], [52.5, 587.0], [52.6, 587.0], [52.7, 587.0], [52.8, 588.0], [52.9, 588.0], [53.0, 588.0], [53.1, 588.0], [53.2, 588.0], [53.3, 588.0], [53.4, 588.0], [53.5, 589.0], [53.6, 589.0], [53.7, 589.0], [53.8, 589.0], [53.9, 589.0], [54.0, 589.0], [54.1, 589.0], [54.2, 590.0], [54.3, 590.0], [54.4, 590.0], [54.5, 590.0], [54.6, 590.0], [54.7, 590.0], [54.8, 591.0], [54.9, 591.0], [55.0, 591.0], [55.1, 591.0], [55.2, 591.0], [55.3, 591.0], [55.4, 591.0], [55.5, 592.0], [55.6, 592.0], [55.7, 592.0], [55.8, 592.0], [55.9, 592.0], [56.0, 592.0], [56.1, 593.0], [56.2, 593.0], [56.3, 593.0], [56.4, 593.0], [56.5, 593.0], [56.6, 593.0], [56.7, 593.0], [56.8, 594.0], [56.9, 594.0], [57.0, 594.0], [57.1, 594.0], [57.2, 594.0], [57.3, 594.0], [57.4, 595.0], [57.5, 595.0], [57.6, 595.0], [57.7, 595.0], [57.8, 595.0], [57.9, 595.0], [58.0, 596.0], [58.1, 596.0], [58.2, 596.0], [58.3, 596.0], [58.4, 596.0], [58.5, 596.0], [58.6, 596.0], [58.7, 597.0], [58.8, 597.0], [58.9, 597.0], [59.0, 597.0], [59.1, 597.0], [59.2, 597.0], [59.3, 598.0], [59.4, 598.0], [59.5, 598.0], [59.6, 598.0], [59.7, 598.0], [59.8, 598.0], [59.9, 599.0], [60.0, 599.0], [60.1, 599.0], [60.2, 599.0], [60.3, 599.0], [60.4, 599.0], [60.5, 600.0], [60.6, 600.0], [60.7, 600.0], [60.8, 600.0], [60.9, 600.0], [61.0, 600.0], [61.1, 601.0], [61.2, 601.0], [61.3, 601.0], [61.4, 601.0], [61.5, 601.0], [61.6, 601.0], [61.7, 602.0], [61.8, 602.0], [61.9, 602.0], [62.0, 602.0], [62.1, 602.0], [62.2, 603.0], [62.3, 603.0], [62.4, 603.0], [62.5, 603.0], [62.6, 603.0], [62.7, 603.0], [62.8, 604.0], [62.9, 604.0], [63.0, 604.0], [63.1, 604.0], [63.2, 604.0], [63.3, 604.0], [63.4, 605.0], [63.5, 605.0], [63.6, 605.0], [63.7, 605.0], [63.8, 605.0], [63.9, 606.0], [64.0, 606.0], [64.1, 606.0], [64.2, 606.0], [64.3, 606.0], [64.4, 606.0], [64.5, 607.0], [64.6, 607.0], [64.7, 607.0], [64.8, 607.0], [64.9, 607.0], [65.0, 608.0], [65.1, 608.0], [65.2, 608.0], [65.3, 608.0], [65.4, 608.0], [65.5, 608.0], [65.6, 609.0], [65.7, 609.0], [65.8, 609.0], [65.9, 609.0], [66.0, 609.0], [66.1, 610.0], [66.2, 610.0], [66.3, 610.0], [66.4, 610.0], [66.5, 610.0], [66.6, 611.0], [66.7, 611.0], [66.8, 611.0], [66.9, 611.0], [67.0, 611.0], [67.1, 611.0], [67.2, 612.0], [67.3, 612.0], [67.4, 612.0], [67.5, 612.0], [67.6, 612.0], [67.7, 613.0], [67.8, 613.0], [67.9, 613.0], [68.0, 613.0], [68.1, 613.0], [68.2, 614.0], [68.3, 614.0], [68.4, 614.0], [68.5, 614.0], [68.6, 614.0], [68.7, 615.0], [68.8, 615.0], [68.9, 615.0], [69.0, 615.0], [69.1, 616.0], [69.2, 616.0], [69.3, 616.0], [69.4, 616.0], [69.5, 616.0], [69.6, 617.0], [69.7, 617.0], [69.8, 617.0], [69.9, 617.0], [70.0, 617.0], [70.1, 618.0], [70.2, 618.0], [70.3, 618.0], [70.4, 618.0], [70.5, 619.0], [70.6, 619.0], [70.7, 619.0], [70.8, 619.0], [70.9, 620.0], [71.0, 620.0], [71.1, 620.0], [71.2, 620.0], [71.3, 620.0], [71.4, 621.0], [71.5, 621.0], [71.6, 621.0], [71.7, 621.0], [71.8, 622.0], [71.9, 622.0], [72.0, 622.0], [72.1, 622.0], [72.2, 622.0], [72.3, 623.0], [72.4, 623.0], [72.5, 623.0], [72.6, 623.0], [72.7, 624.0], [72.8, 624.0], [72.9, 624.0], [73.0, 624.0], [73.1, 625.0], [73.2, 625.0], [73.3, 625.0], [73.4, 625.0], [73.5, 626.0], [73.6, 626.0], [73.7, 626.0], [73.8, 626.0], [73.9, 627.0], [74.0, 627.0], [74.1, 627.0], [74.2, 627.0], [74.3, 628.0], [74.4, 628.0], [74.5, 628.0], [74.6, 628.0], [74.7, 629.0], [74.8, 629.0], [74.9, 629.0], [75.0, 629.0], [75.1, 630.0], [75.2, 630.0], [75.3, 630.0], [75.4, 631.0], [75.5, 631.0], [75.6, 631.0], [75.7, 632.0], [75.8, 632.0], [75.9, 632.0], [76.0, 632.0], [76.1, 633.0], [76.2, 633.0], [76.3, 633.0], [76.4, 634.0], [76.5, 634.0], [76.6, 634.0], [76.7, 635.0], [76.8, 635.0], [76.9, 635.0], [77.0, 635.0], [77.1, 636.0], [77.2, 636.0], [77.3, 636.0], [77.4, 637.0], [77.5, 637.0], [77.6, 637.0], [77.7, 638.0], [77.8, 638.0], [77.9, 638.0], [78.0, 639.0], [78.1, 639.0], [78.2, 639.0], [78.3, 640.0], [78.4, 640.0], [78.5, 640.0], [78.6, 641.0], [78.7, 641.0], [78.8, 641.0], [78.9, 642.0], [79.0, 642.0], [79.1, 642.0], [79.2, 643.0], [79.3, 643.0], [79.4, 644.0], [79.5, 644.0], [79.6, 644.0], [79.7, 645.0], [79.8, 645.0], [79.9, 645.0], [80.0, 646.0], [80.1, 646.0], [80.2, 646.0], [80.3, 647.0], [80.4, 647.0], [80.5, 648.0], [80.6, 648.0], [80.7, 649.0], [80.8, 649.0], [80.9, 649.0], [81.0, 650.0], [81.1, 650.0], [81.2, 651.0], [81.3, 651.0], [81.4, 652.0], [81.5, 652.0], [81.6, 653.0], [81.7, 653.0], [81.8, 654.0], [81.9, 654.0], [82.0, 654.0], [82.1, 655.0], [82.2, 655.0], [82.3, 656.0], [82.4, 656.0], [82.5, 657.0], [82.6, 657.0], [82.7, 658.0], [82.8, 658.0], [82.9, 659.0], [83.0, 659.0], [83.1, 660.0], [83.2, 660.0], [83.3, 661.0], [83.4, 661.0], [83.5, 662.0], [83.6, 662.0], [83.7, 663.0], [83.8, 664.0], [83.9, 664.0], [84.0, 665.0], [84.1, 665.0], [84.2, 666.0], [84.3, 666.0], [84.4, 667.0], [84.5, 668.0], [84.6, 668.0], [84.7, 669.0], [84.8, 670.0], [84.9, 670.0], [85.0, 671.0], [85.1, 672.0], [85.2, 672.0], [85.3, 673.0], [85.4, 674.0], [85.5, 674.0], [85.6, 675.0], [85.7, 676.0], [85.8, 676.0], [85.9, 677.0], [86.0, 678.0], [86.1, 678.0], [86.2, 679.0], [86.3, 680.0], [86.4, 680.0], [86.5, 681.0], [86.6, 682.0], [86.7, 683.0], [86.8, 683.0], [86.9, 684.0], [87.0, 685.0], [87.1, 686.0], [87.2, 687.0], [87.3, 688.0], [87.4, 689.0], [87.5, 689.0], [87.6, 690.0], [87.7, 691.0], [87.8, 692.0], [87.9, 693.0], [88.0, 694.0], [88.1, 694.0], [88.2, 695.0], [88.3, 696.0], [88.4, 697.0], [88.5, 698.0], [88.6, 699.0], [88.7, 700.0], [88.8, 701.0], [88.9, 702.0], [89.0, 703.0], [89.1, 704.0], [89.2, 705.0], [89.3, 707.0], [89.4, 708.0], [89.5, 709.0], [89.6, 710.0], [89.7, 711.0], [89.8, 713.0], [89.9, 714.0], [90.0, 715.0], [90.1, 717.0], [90.2, 718.0], [90.3, 719.0], [90.4, 721.0], [90.5, 722.0], [90.6, 723.0], [90.7, 725.0], [90.8, 726.0], [90.9, 728.0], [91.0, 729.0], [91.1, 731.0], [91.2, 732.0], [91.3, 734.0], [91.4, 736.0], [91.5, 738.0], [91.6, 739.0], [91.7, 741.0], [91.8, 743.0], [91.9, 744.0], [92.0, 747.0], [92.1, 749.0], [92.2, 750.0], [92.3, 752.0], [92.4, 754.0], [92.5, 756.0], [92.6, 759.0], [92.7, 761.0], [92.8, 764.0], [92.9, 766.0], [93.0, 769.0], [93.1, 771.0], [93.2, 774.0], [93.3, 777.0], [93.4, 781.0], [93.5, 785.0], [93.6, 788.0], [93.7, 793.0], [93.8, 797.0], [93.9, 801.0], [94.0, 804.0], [94.1, 808.0], [94.2, 812.0], [94.3, 816.0], [94.4, 820.0], [94.5, 825.0], [94.6, 829.0], [94.7, 834.0], [94.8, 839.0], [94.9, 843.0], [95.0, 848.0], [95.1, 854.0], [95.2, 858.0], [95.3, 863.0], [95.4, 870.0], [95.5, 876.0], [95.6, 882.0], [95.7, 888.0], [95.8, 895.0], [95.9, 903.0], [96.0, 912.0], [96.1, 921.0], [96.2, 932.0], [96.3, 944.0], [96.4, 961.0], [96.5, 975.0], [96.6, 989.0], [96.7, 1001.0], [96.8, 1017.0], [96.9, 1041.0], [97.0, 1056.0], [97.1, 1077.0], [97.2, 1102.0], [97.3, 1129.0], [97.4, 1149.0], [97.5, 1168.0], [97.6, 1190.0], [97.7, 1208.0], [97.8, 1229.0], [97.9, 1243.0], [98.0, 1259.0], [98.1, 1277.0], [98.2, 1300.0], [98.3, 1329.0], [98.4, 1360.0], [98.5, 1388.0], [98.6, 1419.0], [98.7, 1446.0], [98.8, 1473.0], [98.9, 1500.0], [99.0, 1538.0], [99.1, 1599.0], [99.2, 1673.0], [99.3, 1735.0], [99.4, 1812.0], [99.5, 1897.0], [99.6, 1974.0], [99.7, 2095.0], [99.8, 2469.0], [99.9, 2641.0], [100.0, 2895.0]], "isOverall": false, "label": "AuthzRequest-rcdn-2", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 341335.0, "series": [{"data": [[0.0, 54.0], [600.0, 25997.0], [700.0, 4279.0], [200.0, 649.0], [800.0, 1745.0], [900.0, 1327.0], [1000.0, 1203.0], [1100.0, 1053.0], [300.0, 548.0], [1200.0, 582.0], [1300.0, 186.0], [100.0, 243.0], [400.0, 341335.0], [500.0, 325140.0]], "isOverall": false, "label": "AuthzRequest-rcdn-3", "isController": false}, {"data": [[0.0, 3.0], [600.0, 162801.0], [700.0, 30275.0], [800.0, 11438.0], [900.0, 4821.0], [1000.0, 2881.0], [1100.0, 2664.0], [1200.0, 3180.0], [1300.0, 1954.0], [1400.0, 2090.0], [1500.0, 1172.0], [100.0, 89.0], [1600.0, 815.0], [1700.0, 807.0], [1800.0, 698.0], [1900.0, 742.0], [2000.0, 409.0], [2100.0, 255.0], [2200.0, 97.0], [2300.0, 84.0], [2400.0, 210.0], [2500.0, 327.0], [2600.0, 468.0], [2700.0, 178.0], [2800.0, 101.0], [200.0, 102.0], [300.0, 234.0], [400.0, 27641.0], [500.0, 320984.0]], "isOverall": false, "label": "AuthzRequest-rcdn-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6338.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 896376.0, "series": [{"data": [[0.0, 379147.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 896376.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6338.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 580.9639131360445, "minX": 1.62044166E12, "maxY": 600.0, "series": [{"data": [[1.62044202E12, 600.0], [1.62044184E12, 600.0], [1.6204419E12, 600.0], [1.6204422E12, 600.0], [1.62044172E12, 600.0], [1.62044178E12, 600.0], [1.62044208E12, 600.0], [1.62044226E12, 580.9639131360445], [1.62044166E12, 598.1072201377876], [1.62044196E12, 600.0], [1.62044214E12, 600.0]], "isOverall": false, "label": "Thread Group rcdn-2", "isController": false}, {"data": [[1.62044202E12, 600.0], [1.62044184E12, 600.0], [1.6204419E12, 600.0], [1.6204422E12, 600.0], [1.62044172E12, 600.0], [1.62044178E12, 600.0], [1.62044208E12, 600.0], [1.62044226E12, 581.5161321114936], [1.62044166E12, 596.4668810819678], [1.62044196E12, 600.0], [1.62044214E12, 600.0]], "isOverall": false, "label": "Thread Group rcdn-3", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62044226E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 80.0, "minX": 1.0, "maxY": 1142.0, "series": [{"data": [[2.0, 222.0], [3.0, 218.0], [5.0, 222.0], [6.0, 218.0], [7.0, 218.0], [8.0, 226.0], [9.0, 223.0], [10.0, 219.0], [11.0, 217.0], [12.0, 219.0], [13.0, 214.0], [14.0, 210.0], [16.0, 215.0], [17.0, 214.0], [18.0, 216.0], [19.0, 215.0], [20.0, 223.0], [21.0, 220.0], [22.0, 221.0], [23.0, 237.0], [25.0, 218.0], [26.0, 217.5], [27.0, 221.0], [28.0, 228.0], [29.0, 219.0], [32.0, 225.0], [34.0, 224.0], [37.0, 228.0], [36.0, 229.5], [39.0, 231.66666666666666], [40.0, 234.0], [42.0, 237.5], [45.0, 225.0], [44.0, 230.0], [46.0, 244.0], [49.0, 259.0], [51.0, 242.0], [53.0, 230.4], [55.0, 225.0], [56.0, 228.0], [59.0, 225.0], [58.0, 224.5], [63.0, 230.0], [62.0, 226.0], [67.0, 228.0], [66.0, 226.5], [64.0, 225.0], [71.0, 227.0], [70.0, 227.0], [69.0, 226.0], [68.0, 228.0], [75.0, 239.5], [74.0, 231.0], [72.0, 227.0], [78.0, 232.0], [76.0, 227.0], [83.0, 243.0], [81.0, 233.0], [85.0, 238.0], [91.0, 233.0], [90.0, 241.0], [89.0, 243.0], [88.0, 242.0], [95.0, 243.0], [92.0, 236.0], [99.0, 251.0], [98.0, 236.0], [96.0, 235.0], [103.0, 245.33333333333334], [100.0, 241.0], [107.0, 249.66666666666666], [104.0, 244.0], [110.0, 251.5], [108.0, 249.0], [115.0, 253.0], [114.0, 250.0], [113.0, 251.0], [112.0, 249.5], [119.0, 250.0], [118.0, 250.0], [117.0, 250.0], [116.0, 250.0], [123.0, 249.0], [122.0, 248.0], [121.0, 256.0], [120.0, 254.0], [135.0, 260.0], [134.0, 254.0], [132.0, 260.0], [131.0, 261.0], [130.0, 255.0], [143.0, 258.0], [142.0, 260.83333333333337], [138.0, 261.6666666666667], [137.0, 261.0], [151.0, 256.0], [150.0, 261.0], [149.0, 255.0], [148.0, 254.0], [147.0, 255.0], [146.0, 255.0], [145.0, 255.0], [144.0, 256.0], [159.0, 260.0], [158.0, 261.0], [157.0, 260.0], [155.0, 260.5], [153.0, 260.0], [152.0, 261.0], [167.0, 253.0], [166.0, 254.0], [165.0, 255.0], [164.0, 253.0], [163.0, 254.0], [162.0, 256.5], [160.0, 256.0], [175.0, 251.0], [174.0, 253.0], [173.0, 250.66666666666666], [170.0, 252.0], [169.0, 251.0], [168.0, 251.0], [183.0, 244.0], [182.0, 242.0], [181.0, 246.0], [180.0, 251.0], [179.0, 252.0], [178.0, 251.5], [176.0, 251.0], [191.0, 247.0], [190.0, 246.0], [189.0, 248.0], [188.0, 247.0], [186.0, 246.0], [185.0, 242.0], [199.0, 246.0], [198.0, 246.0], [197.0, 249.0], [196.0, 248.0], [194.0, 248.5], [192.0, 249.0], [206.0, 244.0], [205.0, 245.0], [204.0, 244.0], [203.0, 244.0], [202.0, 245.0], [200.0, 245.0], [215.0, 241.0], [214.0, 241.0], [213.0, 242.0], [212.0, 243.0], [211.0, 243.0], [210.0, 244.0], [209.0, 243.0], [208.0, 244.0], [223.0, 239.0], [222.0, 243.0], [221.0, 238.0], [219.0, 240.0], [218.0, 240.0], [216.0, 241.0], [231.0, 249.0], [229.0, 242.0], [228.0, 238.0], [227.0, 240.0], [226.0, 244.0], [225.0, 241.0], [239.0, 239.0], [238.0, 248.0], [237.0, 243.5], [235.0, 247.0], [234.0, 242.33333333333334], [232.0, 248.0], [240.0, 91.0], [247.0, 139.5], [246.0, 242.0], [245.0, 242.0], [244.0, 243.0], [243.0, 244.5], [241.0, 244.0], [255.0, 241.0], [254.0, 242.0], [253.0, 241.0], [252.0, 243.0], [251.0, 242.0], [250.0, 239.0], [249.0, 241.0], [248.0, 245.0], [258.0, 240.0], [268.0, 234.0], [263.0, 178.33333333333334], [257.0, 241.0], [256.0, 243.0], [269.0, 236.0], [267.0, 238.0], [264.0, 239.0], [261.0, 237.0], [260.0, 237.0], [259.0, 238.0], [284.0, 370.0], [286.0, 504.0], [287.0, 503.0], [285.0, 237.0], [282.0, 238.0], [281.0, 239.5], [279.0, 238.0], [272.0, 236.66666666666666], [275.0, 236.0], [274.0, 240.0], [278.0, 237.0], [277.0, 239.0], [276.0, 238.0], [300.0, 364.0], [302.0, 508.0], [303.0, 512.0], [301.0, 509.5], [297.0, 501.0], [296.0, 503.0], [295.0, 515.0], [289.0, 505.0], [288.0, 502.0], [291.0, 504.0], [290.0, 504.0], [294.0, 510.0], [293.0, 505.0], [292.0, 507.0], [312.0, 82.0], [313.0, 82.0], [319.0, 1036.0], [317.0, 507.0], [310.0, 1039.0], [308.0, 509.5], [304.0, 509.0], [323.0, 85.5], [321.0, 577.5], [333.0, 84.5], [334.0, 311.0], [331.0, 84.0], [329.0, 513.0], [328.0, 511.0], [322.0, 508.0], [320.0, 1035.0], [349.0, 94.0], [336.0, 114.0], [338.0, 97.0], [341.0, 112.5], [346.0, 137.0], [347.0, 125.0], [350.0, 100.5], [348.0, 506.0], [342.0, 1029.0], [352.0, 147.0], [354.0, 113.0], [364.0, 1025.0], [367.0, 1018.75], [366.0, 958.125], [356.0, 124.5], [359.0, 80.0], [360.0, 94.0], [358.0, 90.0], [357.0, 97.0], [361.0, 90.0], [363.0, 109.0], [373.0, 543.3333333333334], [375.0, 559.0], [376.0, 115.0], [378.0, 150.0], [379.0, 757.5], [370.0, 1017.0], [369.0, 1020.0], [368.0, 503.0], [396.0, 95.0], [387.0, 139.0], [393.0, 102.0], [397.0, 221.8571428571429], [399.0, 98.0], [390.0, 1006.0], [389.0, 1006.0], [385.0, 511.0], [384.0, 501.0], [401.0, 111.2], [402.0, 138.0], [403.0, 113.0], [406.0, 120.0], [408.0, 127.5], [411.0, 572.0], [407.0, 516.0], [404.0, 1004.0], [418.0, 526.25], [419.0, 100.0], [423.0, 97.0], [417.0, 1002.0], [416.0, 1002.0], [422.0, 1003.3333333333334], [421.0, 503.0], [424.0, 92.0], [426.0, 98.0], [427.0, 90.5], [429.0, 91.0], [431.0, 93.0], [425.0, 502.0], [432.0, 94.0], [435.0, 98.0], [437.0, 95.0], [436.0, 504.0], [438.0, 96.0], [439.0, 98.0], [443.0, 101.5], [444.0, 103.5], [445.0, 505.0], [441.0, 503.0], [454.0, 310.5], [456.0, 94.0], [460.0, 993.0], [459.0, 751.0], [457.0, 508.0], [455.0, 751.0], [451.0, 510.0], [465.0, 118.0], [469.0, 121.66666666666667], [470.0, 123.0], [471.0, 122.0], [464.0, 508.0], [472.0, 117.0], [473.0, 132.0], [475.0, 117.0], [479.0, 127.0], [478.0, 505.0], [477.0, 506.0], [467.0, 508.0], [480.0, 772.25], [495.0, 976.3333333333334], [492.0, 976.0], [488.0, 980.3333333333334], [484.0, 508.0], [483.0, 985.0], [482.0, 506.0], [508.0, 155.0], [500.0, 135.0], [502.0, 130.75], [503.0, 547.5], [499.0, 974.0], [496.0, 976.0], [504.0, 562.5], [506.0, 145.0], [511.0, 416.5], [510.0, 966.5], [501.0, 972.0], [530.0, 147.0], [528.0, 176.0], [543.0, 873.1666666666666], [541.0, 648.5], [542.0, 150.2], [531.0, 143.0], [533.0, 179.5], [534.0, 320.5], [535.0, 148.0], [536.0, 184.0], [516.0, 967.75], [513.0, 812.3333333333334], [527.0, 496.5], [526.0, 502.0], [525.0, 505.0], [521.0, 500.0], [538.0, 319.5], [539.0, 153.0], [540.0, 140.0], [547.0, 159.25], [544.0, 572.2727272727273], [546.0, 941.0], [545.0, 716.5], [548.0, 214.6], [549.0, 153.0], [550.0, 305.2], [568.0, 714.5], [570.0, 933.0], [569.0, 787.0], [552.0, 320.5], [553.0, 530.0], [557.0, 383.6666666666667], [555.0, 492.0], [558.0, 494.0], [559.0, 495.0], [574.0, 931.5], [562.0, 715.5], [565.0, 716.5], [564.0, 494.0], [571.0, 496.0], [606.0, 197.0], [587.0, 185.5], [585.0, 446.75], [584.0, 492.0], [588.0, 747.5], [604.0, 693.0], [583.0, 933.5], [580.0, 933.5], [578.0, 932.0], [577.0, 932.0], [590.0, 921.0], [592.0, 236.0], [593.0, 187.0], [596.0, 169.0], [598.0, 190.0], [607.0, 893.0], [614.0, 347.25], [609.0, 442.4], [610.0, 677.5], [611.0, 259.75], [613.0, 200.0], [612.0, 486.0], [622.0, 204.0], [621.0, 677.0], [620.0, 864.5], [618.0, 868.0], [623.0, 677.0], [630.0, 182.5], [627.0, 490.0], [631.0, 490.0], [635.0, 185.0], [632.0, 490.0], [615.0, 487.5], [636.0, 490.0], [637.0, 214.5], [638.0, 211.0], [639.0, 227.25], [641.0, 215.0], [640.0, 214.0], [642.0, 364.5], [644.0, 220.5], [645.0, 273.42857142857144], [664.0, 244.0], [670.0, 611.0], [668.0, 856.0], [666.0, 489.0], [665.0, 489.0], [650.0, 240.25], [648.0, 491.0], [652.0, 490.0], [654.0, 247.5], [655.0, 223.0], [658.0, 215.0], [659.0, 369.5], [660.0, 252.66666666666669], [662.0, 249.5], [688.0, 564.5], [673.0, 265.0], [677.0, 547.5], [678.0, 849.0], [696.0, 390.0], [697.0, 206.0], [698.0, 245.0], [699.0, 198.0], [701.0, 210.0], [681.0, 224.0], [684.0, 488.0], [682.0, 847.0], [686.0, 205.0], [687.0, 221.0], [689.0, 363.8], [690.0, 289.0], [691.0, 283.0], [695.0, 205.0], [694.0, 486.0], [730.0, 439.75], [708.0, 201.0], [707.0, 301.6666666666667], [705.0, 487.0], [704.0, 487.0], [719.0, 485.0], [717.0, 662.0], [709.0, 200.0], [711.0, 423.0], [712.0, 201.875], [713.0, 306.33333333333337], [714.0, 367.75], [716.0, 293.6666666666667], [725.0, 524.25], [724.0, 484.0], [723.0, 836.5], [720.0, 661.0], [731.0, 286.6666666666667], [732.0, 487.0], [734.0, 656.5], [733.0, 820.5], [735.0, 241.0], [729.0, 298.0], [728.0, 717.3333333333334], [726.0, 615.5], [727.0, 311.0], [741.0, 511.0], [749.0, 212.0], [737.0, 231.0], [736.0, 267.0], [750.0, 406.66666666666663], [751.0, 211.0], [738.0, 272.0], [740.0, 658.0], [742.0, 690.2], [743.0, 662.5], [761.0, 223.0], [765.0, 562.5], [752.0, 526.0], [763.0, 799.3333333333334], [762.0, 831.0], [753.0, 212.25], [754.0, 265.5], [755.0, 296.5], [756.0, 213.66666666666666], [758.0, 511.0], [759.0, 806.0], [744.0, 203.0], [745.0, 509.0], [747.0, 526.7142857142858], [746.0, 535.0], [793.0, 261.0], [772.0, 240.0], [771.0, 607.6666666666666], [781.0, 786.0], [778.0, 793.5], [777.0, 675.0], [776.0, 554.0], [786.0, 380.58333333333337], [784.0, 555.0], [795.0, 264.0], [794.0, 710.6666666666666], [796.0, 553.0], [799.0, 554.0], [788.0, 504.75], [789.0, 314.0], [790.0, 244.66666666666666], [791.0, 520.5], [792.0, 221.0], [775.0, 556.0], [773.0, 552.0], [812.0, 264.0], [800.0, 442.0], [801.0, 554.0], [803.0, 294.0], [805.0, 290.5], [804.0, 552.0], [807.0, 519.0], [816.0, 252.0], [831.0, 505.0], [827.0, 281.0], [828.0, 774.0], [830.0, 264.0], [818.0, 524.2], [822.0, 449.5], [820.0, 557.0], [823.0, 789.0], [809.0, 421.5], [810.0, 417.5], [811.0, 262.0], [814.0, 446.6], [834.0, 272.0], [833.0, 269.0], [837.0, 298.0], [844.0, 234.0], [843.0, 769.0], [845.0, 519.5], [846.0, 436.33333333333337], [847.0, 761.3333333333334], [852.0, 259.0], [855.0, 504.25], [857.0, 242.0], [861.0, 254.0], [860.0, 755.0], [862.0, 244.85714285714286], [863.0, 234.33333333333334], [850.0, 755.0], [848.0, 762.0], [888.0, 201.0], [867.0, 205.52941176470586], [864.0, 239.66666666666666], [879.0, 699.25], [877.0, 758.5], [873.0, 550.0], [872.0, 549.0], [865.0, 272.0], [866.0, 211.25], [868.0, 190.0], [869.0, 262.0], [871.0, 192.0], [889.0, 559.0], [890.0, 201.0], [891.0, 202.0], [892.0, 468.5], [893.0, 202.0], [894.0, 193.0], [895.0, 192.0], [882.0, 745.5], [887.0, 740.3333333333334], [886.0, 742.0], [900.0, 462.5], [896.0, 518.6], [911.0, 723.0], [908.0, 726.0], [905.0, 724.0], [904.0, 728.0], [897.0, 194.0], [899.0, 462.0], [912.0, 202.0], [913.0, 202.0], [916.0, 721.0], [918.0, 719.0], [917.0, 722.0], [921.0, 461.0], [902.0, 636.5], [922.0, 204.33333333333334], [925.0, 207.0], [926.0, 717.0], [935.0, 208.0], [931.0, 208.0], [930.0, 206.0], [942.0, 205.0], [928.0, 712.5], [940.0, 200.0], [941.0, 212.0], [932.0, 271.5], [933.0, 314.3333333333333], [934.0, 206.66666666666666], [944.0, 215.5], [945.0, 705.0], [955.0, 495.5], [956.0, 527.0], [958.0, 339.6], [952.0, 205.5], [953.0, 526.0], [954.0, 291.25], [946.0, 201.0], [947.0, 534.1666666666666], [948.0, 343.5], [949.0, 207.0], [951.0, 527.0], [936.0, 212.0], [937.0, 370.0], [938.0, 202.0], [939.0, 203.42857142857144], [963.0, 379.5], [961.0, 207.0], [964.0, 468.4], [965.0, 240.0], [966.0, 242.5], [967.0, 377.5], [976.0, 457.5], [986.0, 391.5], [985.0, 687.0], [987.0, 524.0], [980.0, 226.0], [983.0, 689.0], [981.0, 689.0], [969.0, 372.5], [968.0, 528.0], [970.0, 298.25], [974.0, 220.0], [972.0, 527.0], [971.0, 530.0], [1016.0, 237.75], [994.0, 382.0], [993.0, 245.0], [1007.0, 671.0], [995.0, 245.28571428571428], [996.0, 601.75], [997.0, 282.66666666666663], [998.0, 246.5], [999.0, 675.8333333333334], [1017.0, 379.5], [1018.0, 293.2], [1019.0, 372.0], [1021.0, 350.6], [1022.0, 226.0], [1023.0, 397.5], [1008.0, 281.2], [1009.0, 224.75], [1011.0, 631.25], [1010.0, 668.0], [1012.0, 315.6666666666667], [1013.0, 450.3333333333333], [1015.0, 523.0], [1000.0, 533.4], [1002.0, 521.0], [1001.0, 524.0], [1003.0, 219.0], [1004.0, 369.5], [1005.0, 433.5], [1034.0, 423.5], [1038.0, 281.6666666666667], [1024.0, 390.5], [1026.0, 659.3333333333334], [1044.0, 343.2666666666667], [1052.0, 331.0], [1050.0, 643.0], [1048.0, 502.5], [1042.0, 270.0], [1040.0, 310.75], [1028.0, 250.0], [1032.0, 655.5], [1030.0, 658.0], [1036.0, 287.0], [1072.0, 541.75], [1076.0, 348.0], [1078.0, 582.0], [1060.0, 424.0], [1056.0, 645.0], [1062.0, 491.0], [1064.0, 454.6666666666667], [1068.0, 329.0], [1070.0, 581.8571428571428], [1074.0, 357.72727272727275], [1124.0, 539.0], [1144.0, 398.0], [1140.0, 425.3333333333333], [1132.0, 499.0], [1130.0, 520.5], [1128.0, 518.5], [1122.0, 499.0], [1148.0, 527.0], [1150.0, 433.6], [1146.0, 404.0], [1134.0, 456.5], [1136.0, 415.3125], [1098.0, 547.0], [1088.0, 557.0], [1142.0, 395.0], [1154.0, 506.0], [1156.0, 489.0], [1182.0, 554.0], [1178.0, 444.0], [1172.0, 440.6666666666667], [1174.0, 448.75], [1164.0, 444.0], [1162.0, 506.0], [1160.0, 510.14285714285717], [1158.0, 522.0], [1166.0, 488.33333333333337], [1184.0, 471.5], [1200.0, 511.0060237619837], [1190.0, 510.0], [1188.0, 561.3333333333334], [1186.0, 545.5], [1192.0, 553.0], [1196.0, 555.3333333333334], [1198.0, 567.4027777777777], [1168.0, 500.3333333333333], [1170.0, 444.0], [1073.0, 306.2], [1025.0, 594.0], [1045.0, 341.5], [1055.0, 452.6666666666667], [1043.0, 285.0], [1041.0, 298.6666666666667], [1027.0, 260.0], [1035.0, 297.0], [1037.0, 291.75], [1039.0, 283.0], [1075.0, 563.0], [1081.0, 538.0], [1085.0, 558.0], [1083.0, 558.0], [1057.0, 642.6666666666666], [1087.0, 507.0], [1061.0, 320.5], [1063.0, 505.5], [1067.0, 482.5], [1071.0, 438.66666666666663], [1069.0, 535.8333333333333], [1121.0, 386.0], [1129.0, 502.0], [1127.0, 498.0], [1125.0, 539.0], [1151.0, 412.5], [1147.0, 404.0], [1149.0, 507.0], [1145.0, 441.8], [1143.0, 477.0], [1133.0, 398.0], [1135.0, 385.6666666666667], [1095.0, 551.3333333333334], [1089.0, 558.0], [1137.0, 410.5], [1139.0, 429.25], [1141.0, 426.1428571428571], [1161.0, 506.0], [1167.0, 441.0], [1155.0, 493.2], [1153.0, 516.5], [1175.0, 460.8], [1159.0, 505.0], [1157.0, 506.0], [1165.0, 438.3333333333333], [1185.0, 513.4285714285714], [1189.0, 551.0], [1187.0, 566.0], [1191.0, 551.2], [1193.0, 526.5555555555555], [1195.0, 552.0], [1197.0, 552.4], [1199.0, 482.0], [1169.0, 442.0], [1171.0, 444.5], [1.0, 232.0]], "isOverall": false, "label": "AuthzRequest-rcdn-3", "isController": false}, {"data": [[1198.7799588551572, 510.7446691304309]], "isOverall": false, "label": "AuthzRequest-rcdn-3-Aggregated", "isController": false}, {"data": [[220.0, 84.0], [225.0, 132.0], [230.0, 139.0], [232.0, 141.0], [234.0, 96.0], [239.0, 144.66666666666666], [240.0, 133.2], [241.0, 128.0], [242.0, 137.5], [243.0, 151.0], [245.0, 159.0], [255.0, 102.0], [256.0, 162.0], [259.0, 104.5], [261.0, 106.0], [262.0, 127.0], [265.0, 183.0], [266.0, 111.0], [268.0, 118.2], [278.0, 165.0], [279.0, 129.0], [281.0, 121.0], [288.0, 142.0], [289.0, 138.0], [298.0, 139.0], [312.0, 344.5], [310.0, 631.5], [314.0, 190.0], [316.0, 181.33333333333334], [318.0, 171.66666666666666], [317.0, 1081.5], [313.0, 1142.0], [311.0, 1099.0], [309.0, 1131.0], [321.0, 174.0], [323.0, 173.5], [331.0, 494.0], [332.0, 1048.5], [326.0, 1053.0], [322.0, 1081.0], [348.0, 184.0], [336.0, 614.5], [342.0, 620.5], [343.0, 181.0], [344.0, 789.6666666666666], [346.0, 257.0], [351.0, 623.0], [340.0, 1042.0], [339.0, 1050.5], [337.0, 1045.75], [356.0, 212.0], [364.0, 797.6666666666666], [367.0, 1028.0], [366.0, 1032.0], [380.0, 215.0], [373.0, 625.5], [374.0, 290.0], [378.0, 231.0], [383.0, 228.0], [381.0, 754.0], [379.0, 1045.0], [375.0, 1036.0], [371.0, 1026.0], [368.0, 1027.0], [398.0, 484.0], [384.0, 288.75], [389.0, 1038.0], [388.0, 473.5], [385.0, 225.0], [387.0, 236.0], [399.0, 483.0], [396.0, 474.0], [395.0, 474.3333333333333], [394.0, 473.0], [392.0, 472.0], [403.0, 341.0], [404.0, 365.5], [405.0, 328.0], [406.0, 223.0], [408.0, 325.0], [410.0, 323.0], [411.0, 485.0], [409.0, 485.0], [407.0, 485.0], [401.0, 479.0], [400.0, 475.0], [419.0, 291.0], [423.0, 490.6666666666667], [420.0, 260.0], [429.0, 329.5], [430.0, 427.3333333333333], [431.0, 239.66666666666666], [428.0, 481.0], [425.0, 1031.0], [418.0, 484.0], [416.0, 485.0], [444.0, 326.0], [432.0, 261.0], [433.0, 368.0], [435.0, 350.0], [434.0, 752.0], [437.0, 557.0], [439.0, 486.0], [442.0, 297.5], [441.0, 487.0], [445.0, 400.5], [446.0, 335.0], [443.0, 486.5], [449.0, 280.0], [448.0, 626.0], [450.0, 476.0], [451.0, 320.5], [452.0, 387.25], [453.0, 202.0], [455.0, 329.0], [457.0, 286.25], [462.0, 240.0], [460.0, 354.0], [461.0, 223.0], [458.0, 271.2], [459.0, 393.75], [476.0, 1001.0], [464.0, 501.0], [465.0, 264.5], [467.0, 1015.5], [469.0, 233.0], [470.0, 767.6666666666666], [473.0, 786.6666666666666], [475.0, 341.0], [477.0, 307.0], [471.0, 1001.5], [495.0, 990.0], [494.0, 994.0], [492.0, 996.0], [485.0, 998.0], [482.0, 1005.0], [480.0, 1000.0], [508.0, 309.5], [500.0, 394.0], [502.0, 319.0], [503.0, 659.5], [499.0, 987.0], [504.0, 389.0], [506.0, 288.5], [507.0, 269.0], [510.0, 275.6666666666667], [511.0, 357.875], [517.0, 344.0], [513.0, 319.2], [512.0, 982.0], [514.0, 345.5], [516.0, 349.0], [515.0, 983.0], [518.0, 304.5], [519.0, 351.0], [524.0, 408.0], [522.0, 484.0], [521.0, 485.0], [527.0, 484.0], [542.0, 399.5], [541.0, 960.5], [540.0, 970.0], [543.0, 962.0], [529.0, 479.0], [570.0, 335.0], [548.0, 397.25], [544.0, 703.0], [550.0, 729.0], [569.0, 940.0], [568.0, 471.0], [554.0, 380.0], [553.0, 934.0], [555.0, 474.0], [562.0, 544.0], [564.0, 530.25], [566.0, 400.0], [571.0, 400.0], [574.0, 958.0], [582.0, 334.0], [578.0, 335.0], [576.0, 715.5], [583.0, 660.5], [600.0, 417.0], [606.0, 450.75], [604.0, 949.0], [603.0, 928.0], [607.0, 934.0], [594.0, 947.0], [592.0, 950.5], [585.0, 404.0], [587.0, 394.5], [589.0, 349.0], [588.0, 467.0], [591.0, 393.6666666666667], [595.0, 413.0], [596.0, 791.6666666666666], [597.0, 923.0], [598.0, 627.8], [599.0, 427.0], [632.0, 308.0], [609.0, 735.0], [611.0, 478.6666666666667], [610.0, 934.0], [622.0, 378.0], [621.0, 956.5], [624.0, 358.0], [626.0, 440.0], [628.0, 335.6666666666667], [630.0, 351.14285714285717], [633.0, 356.0], [634.0, 362.0], [635.0, 401.0], [636.0, 457.0], [637.0, 406.4], [638.0, 445.3333333333333], [639.0, 452.0], [664.0, 422.0], [642.0, 385.0], [645.0, 370.0], [643.0, 454.0], [650.0, 406.16666666666663], [649.0, 457.0], [652.0, 457.0], [653.0, 372.4], [655.0, 391.0], [654.0, 483.0], [657.0, 436.6666666666667], [662.0, 446.0], [659.0, 467.0], [667.0, 366.0], [666.0, 946.0], [665.0, 467.5], [670.0, 706.5], [668.0, 468.0], [699.0, 405.3333333333333], [675.0, 352.0], [678.0, 417.0], [676.0, 402.0], [677.0, 910.0], [696.0, 459.0], [698.0, 486.6], [700.0, 466.3333333333333], [702.0, 507.5], [688.0, 711.0], [701.0, 510.5], [681.0, 479.2], [682.0, 907.0], [683.0, 528.0], [685.0, 469.25], [686.0, 437.0], [687.0, 778.3333333333334], [673.0, 583.8], [689.0, 654.0], [690.0, 452.5], [691.0, 403.5], [695.0, 349.5], [694.0, 527.0], [693.0, 498.0], [692.0, 504.0], [709.0, 438.1666666666667], [704.0, 333.0], [719.0, 520.0], [717.0, 899.0], [714.0, 517.0], [713.0, 516.0], [705.0, 374.0], [708.0, 422.5], [707.0, 392.0], [706.0, 529.0], [711.0, 483.6666666666667], [710.0, 526.6666666666666], [728.0, 434.0], [729.0, 411.0], [730.0, 562.6666666666666], [735.0, 383.0], [733.0, 519.0], [732.0, 895.0], [720.0, 658.5], [722.0, 705.5], [724.0, 451.0], [725.0, 412.5], [727.0, 404.5], [761.0, 333.0], [738.0, 418.4], [736.0, 366.0], [737.0, 519.0], [740.0, 494.3333333333333], [742.0, 388.0], [745.0, 608.3333333333334], [748.0, 526.0], [749.0, 447.5], [751.0, 395.5], [750.0, 762.0], [754.0, 462.0], [752.0, 899.0], [766.0, 344.0], [767.0, 880.0], [764.0, 338.0], [765.0, 355.66666666666663], [762.0, 602.0], [763.0, 442.0], [760.0, 661.5], [755.0, 561.7142857142857], [756.0, 429.59999999999997], [757.0, 338.0], [758.0, 669.0], [759.0, 431.0], [786.0, 390.4], [772.0, 395.6666666666667], [771.0, 604.5], [769.0, 877.5], [773.0, 339.0], [779.0, 404.0], [778.0, 555.0], [781.0, 548.0], [782.0, 548.0], [788.0, 360.0], [789.0, 547.0], [790.0, 350.75], [791.0, 839.0], [798.0, 654.6666666666666], [785.0, 548.0], [796.0, 546.0], [830.0, 391.5], [810.0, 499.5], [809.0, 549.0], [813.0, 549.3333333333334], [814.0, 388.0], [816.0, 401.0], [817.0, 616.0], [822.0, 712.6666666666666], [820.0, 709.0], [819.0, 550.0], [823.0, 550.0], [824.0, 733.0], [807.0, 548.0], [826.0, 830.0], [825.0, 550.0], [831.0, 703.0], [829.0, 734.6666666666666], [828.0, 550.0], [863.0, 701.8], [836.0, 405.0], [847.0, 816.0], [846.0, 548.5], [845.0, 817.0], [843.0, 818.6666666666666], [841.0, 819.0], [837.0, 408.25], [855.0, 419.0], [860.0, 807.5], [853.0, 810.0], [850.0, 813.0], [849.0, 812.0], [848.0, 813.5], [868.0, 454.0], [867.0, 639.5], [865.0, 546.5], [871.0, 582.6666666666666], [869.0, 546.0], [890.0, 765.0], [892.0, 754.0], [891.0, 766.0], [873.0, 425.0], [874.0, 427.0], [876.0, 438.0], [875.0, 790.0], [877.0, 786.6666666666666], [879.0, 777.0], [881.0, 609.0], [886.0, 607.5], [885.0, 771.0], [887.0, 770.0], [894.0, 764.0], [880.0, 775.0], [893.0, 538.0], [922.0, 565.3333333333334], [900.0, 436.0], [902.0, 603.6666666666666], [901.0, 537.0], [921.0, 735.0], [904.0, 452.0], [905.0, 599.5], [908.0, 647.6666666666666], [911.0, 744.0], [899.0, 752.0], [897.0, 537.0], [909.0, 746.0], [927.0, 479.0], [913.0, 756.0], [916.0, 743.0], [915.0, 533.0], [918.0, 531.0], [917.0, 739.0], [926.0, 731.0], [924.0, 732.0], [934.0, 634.0], [930.0, 478.0], [929.0, 725.0], [928.0, 725.5], [931.0, 673.0], [932.0, 499.3333333333333], [937.0, 514.0], [936.0, 722.5], [938.0, 719.0], [943.0, 719.0], [947.0, 589.0], [945.0, 717.3333333333334], [951.0, 711.0], [948.0, 711.0], [952.0, 470.0], [935.0, 754.0], [955.0, 716.3333333333334], [956.0, 549.6], [958.0, 648.2], [959.0, 705.0], [961.0, 647.3333333333334], [960.0, 545.6666666666666], [963.0, 525.0], [964.0, 627.0], [965.0, 566.0], [967.0, 579.0], [984.0, 521.0], [989.0, 644.5], [991.0, 681.0], [976.0, 663.25], [977.0, 573.6], [978.0, 558.0], [979.0, 627.4], [980.0, 499.0], [982.0, 481.0], [981.0, 685.0], [983.0, 681.0], [969.0, 528.0], [970.0, 537.75], [974.0, 540.5], [972.0, 694.5], [975.0, 578.75], [1017.0, 533.0], [1003.0, 501.3333333333333], [1002.0, 663.0], [1001.0, 664.0], [1005.0, 666.0], [1006.0, 501.0], [1009.0, 504.0], [1022.0, 523.6666666666666], [1023.0, 516.3333333333334], [1020.0, 522.0], [1021.0, 516.0], [1010.0, 535.0], [1015.0, 528.3333333333334], [1013.0, 502.0], [1011.0, 664.0], [1016.0, 523.75], [1007.0, 664.0], [994.0, 675.0], [996.0, 674.0], [1018.0, 517.0], [1019.0, 519.25], [1031.0, 539.0], [1027.0, 518.75], [1024.0, 528.0], [1055.0, 555.5], [1053.0, 536.0], [1054.0, 497.0], [1052.0, 577.0], [1051.0, 610.6666666666666], [1048.0, 595.3333333333333], [1046.0, 528.0], [1043.0, 523.6666666666666], [1042.0, 520.0], [1044.0, 521.7777777777777], [1040.0, 527.5714285714286], [1041.0, 523.0], [1025.0, 518.25], [1026.0, 587.5], [1028.0, 514.5], [1029.0, 521.2], [1030.0, 512.5], [1032.0, 555.4], [1036.0, 512.0], [1034.0, 650.0], [1074.0, 580.6], [1072.0, 626.0], [1083.0, 530.5], [1082.0, 618.0], [1081.0, 502.0], [1080.0, 503.0], [1078.0, 621.5], [1076.0, 580.5], [1086.0, 563.0], [1087.0, 503.0], [1057.0, 498.0], [1056.0, 497.0], [1060.0, 560.0], [1058.0, 541.0], [1062.0, 531.4], [1061.0, 566.6666666666666], [1064.0, 537.7777777777778], [1063.0, 557.0], [1066.0, 545.5], [1065.0, 548.0], [1068.0, 534.0], [1067.0, 556.25], [1071.0, 531.0], [1070.0, 501.0], [1069.0, 617.3333333333334], [1084.0, 539.5], [1102.0, 516.0], [1114.0, 509.5], [1096.0, 533.5], [1088.0, 526.25], [1091.0, 505.0], [1090.0, 505.0], [1119.0, 496.3333333333333], [1117.0, 504.57142857142856], [1118.0, 505.0], [1115.0, 508.3333333333333], [1116.0, 513.6], [1113.0, 511.75], [1110.0, 520.5], [1111.0, 510.0], [1112.0, 521.0], [1108.0, 516.3333333333334], [1109.0, 537.6666666666666], [1105.0, 516.0], [1106.0, 516.5], [1092.0, 523.6666666666666], [1093.0, 565.4285714285714], [1095.0, 560.6666666666666], [1099.0, 557.0], [1098.0, 506.0], [1100.0, 506.5], [1101.0, 509.2], [1103.0, 527.5714285714286], [1136.0, 547.0], [1138.0, 522.0], [1139.0, 529.1111111111111], [1140.0, 534.8571428571428], [1141.0, 519.6666666666666], [1142.0, 523.5], [1144.0, 528.6666666666666], [1143.0, 522.0], [1148.0, 551.3333333333334], [1145.0, 521.0], [1151.0, 536.5], [1149.0, 522.0], [1120.0, 511.2], [1121.0, 508.0], [1122.0, 522.6], [1123.0, 512.5833333333333], [1124.0, 534.2], [1125.0, 514.4615384615385], [1126.0, 514.75], [1127.0, 500.0], [1129.0, 511.0], [1128.0, 598.0], [1132.0, 521.0], [1130.0, 554.25], [1134.0, 523.0], [1133.0, 524.0], [1155.0, 541.8888888888889], [1152.0, 538.25], [1182.0, 728.9], [1177.0, 685.4], [1176.0, 518.0], [1175.0, 905.0], [1178.0, 572.0], [1172.0, 559.75], [1174.0, 717.0], [1170.0, 545.375], [1171.0, 557.5], [1168.0, 650.0], [1169.0, 558.6666666666666], [1153.0, 541.5], [1154.0, 538.5], [1156.0, 548.8], [1157.0, 532.0], [1158.0, 534.3333333333334], [1159.0, 537.6666666666666], [1161.0, 539.3333333333334], [1162.0, 551.5], [1163.0, 546.4], [1164.0, 515.0], [1165.0, 556.0], [1166.0, 529.0], [1200.0, 623.3473035075376], [1184.0, 627.1666666666667], [1185.0, 594.2222222222222], [1186.0, 615.7777777777777], [1189.0, 612.1333333333333], [1188.0, 645.2727272727273], [1187.0, 642.75], [1190.0, 624.3333333333334], [1191.0, 639.6], [1192.0, 621.1666666666666], [1193.0, 623.0909090909091], [1195.0, 652.5833333333334], [1196.0, 638.6], [1199.0, 598.0], [1198.0, 637.6363636363636], [1197.0, 649.0]], "isOverall": false, "label": "AuthzRequest-rcdn-2", "isController": false}, {"data": [[1199.0331711455517, 623.1286847208735]], "isOverall": false, "label": "AuthzRequest-rcdn-2-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 52324.333333333336, "minX": 1.62044166E12, "maxY": 679853.0666666667, "series": [{"data": [[1.62044202E12, 656775.0166666667], [1.62044184E12, 652513.3333333334], [1.6204419E12, 630185.7333333333], [1.6204422E12, 679853.0666666667], [1.62044172E12, 629336.5333333333], [1.62044178E12, 666934.2666666667], [1.62044208E12, 592717.1166666667], [1.62044226E12, 100384.66666666667], [1.62044166E12, 562155.1666666666], [1.62044196E12, 646833.6], [1.62044214E12, 672649.4666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62044202E12, 341532.8], [1.62044184E12, 339436.6666666667], [1.6204419E12, 327681.4666666667], [1.6204422E12, 353646.13333333336], [1.62044172E12, 327294.36666666664], [1.62044178E12, 346781.0333333333], [1.62044208E12, 308326.4666666667], [1.62044226E12, 52324.333333333336], [1.62044166E12, 292307.9], [1.62044196E12, 336484.7], [1.62044214E12, 349751.43333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62044226E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 496.0723767557155, "minX": 1.62044166E12, "maxY": 784.4481007163, "series": [{"data": [[1.62044202E12, 500.89309865034363], [1.62044184E12, 496.79072173481353], [1.6204419E12, 570.6491798082229], [1.6204422E12, 496.0723767557155], [1.62044172E12, 498.8223597668265], [1.62044178E12, 530.2259937801205], [1.62044208E12, 506.5825870226429], [1.62044226E12, 516.682035127908], [1.62044166E12, 499.80138545274474], [1.62044196E12, 509.21653348420176], [1.62044214E12, 504.43383166832206]], "isOverall": false, "label": "AuthzRequest-rcdn-3", "isController": false}, {"data": [[1.62044202E12, 619.1636806972672], [1.62044184E12, 638.1159764572393], [1.6204419E12, 587.1794232242728], [1.6204422E12, 583.791215383617], [1.62044172E12, 687.8941617053982], [1.62044178E12, 565.9295291500791], [1.62044208E12, 784.4481007163], [1.62044226E12, 570.5417287630381], [1.62044166E12, 605.7490123677358], [1.62044196E12, 631.4291971826103], [1.62044214E12, 586.6466979136068]], "isOverall": false, "label": "AuthzRequest-rcdn-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62044226E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 496.050179014045, "minX": 1.62044166E12, "maxY": 784.4203386151551, "series": [{"data": [[1.62044202E12, 500.8716571587616], [1.62044184E12, 496.76860894995644], [1.6204419E12, 570.627862746654], [1.6204422E12, 496.050179014045], [1.62044172E12, 498.79988645647114], [1.62044178E12, 530.2050495968867], [1.62044208E12, 506.561563591301], [1.62044226E12, 516.657789232531], [1.62044166E12, 499.77346198251325], [1.62044196E12, 509.195445866633], [1.62044214E12, 504.4132210561672]], "isOverall": false, "label": "AuthzRequest-rcdn-3", "isController": false}, {"data": [[1.62044202E12, 619.1366686265642], [1.62044184E12, 638.0790667990375], [1.6204419E12, 587.1432647006084], [1.6204422E12, 583.7593553408152], [1.62044172E12, 687.8622239293296], [1.62044178E12, 565.902759938594], [1.62044208E12, 784.4203386151551], [1.62044226E12, 570.5098999361293], [1.62044166E12, 605.7028765410022], [1.62044196E12, 631.398798051655], [1.62044214E12, 586.616818019074]], "isOverall": false, "label": "AuthzRequest-rcdn-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62044226E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.62044166E12, "maxY": 0.19625593075655876, "series": [{"data": [[1.62044202E12, 0.013343536941700066], [1.62044184E12, 0.012939358825801373], [1.6204419E12, 0.013091370156113924], [1.6204422E12, 0.01177361608372342], [1.62044172E12, 0.018748528780515], [1.62044178E12, 0.010656329682963189], [1.62044208E12, 0.02013630731102847], [1.62044226E12, 0.0], [1.62044166E12, 0.07562262906151973], [1.62044196E12, 0.010338731348560889], [1.62044214E12, 0.009990051981897341]], "isOverall": false, "label": "AuthzRequest-rcdn-3", "isController": false}, {"data": [[1.62044202E12, 0.015494760142496556], [1.62044184E12, 0.0484683023684593], [1.6204419E12, 0.08442966368334437], [1.6204422E12, 0.024580063557948402], [1.62044172E12, 0.04814672556174386], [1.62044178E12, 0.025234171861783394], [1.62044208E12, 0.020013023659648223], [1.62044226E12, 0.19182456887374982], [1.62044166E12, 0.19625593075655876], [1.62044196E12, 0.16590741843922235], [1.62044214E12, 0.021937961787585843]], "isOverall": false, "label": "AuthzRequest-rcdn-2", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62044226E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 29.0, "minX": 1.62044166E12, "maxY": 2895.0, "series": [{"data": [[1.62044202E12, 1973.0], [1.62044184E12, 1697.0], [1.6204419E12, 1632.0], [1.6204422E12, 913.0], [1.62044172E12, 2211.0], [1.62044178E12, 1308.0], [1.62044208E12, 2895.0], [1.62044226E12, 1149.0], [1.62044166E12, 930.0], [1.62044196E12, 2066.0], [1.62044214E12, 947.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62044202E12, 646.0], [1.62044184E12, 656.0], [1.6204419E12, 656.0], [1.6204422E12, 769.0], [1.62044172E12, 778.0], [1.62044178E12, 683.0], [1.62044208E12, 708.0], [1.62044226E12, 620.0], [1.62044166E12, 696.0], [1.62044196E12, 780.0], [1.62044214E12, 598.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62044202E12, 1246.0], [1.62044184E12, 719.0], [1.6204419E12, 787.0], [1.6204422E12, 877.0], [1.62044172E12, 1251.0], [1.62044178E12, 738.0], [1.62044208E12, 766.0], [1.62044226E12, 932.2900000000009], [1.62044166E12, 849.0], [1.62044196E12, 2001.0], [1.62044214E12, 644.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62044202E12, 1091.9500000000007], [1.62044184E12, 676.0], [1.6204419E12, 693.0], [1.6204422E12, 847.0], [1.62044172E12, 878.0], [1.62044178E12, 702.0], [1.62044208E12, 727.0], [1.62044226E12, 644.0], [1.62044166E12, 746.0], [1.62044196E12, 1581.7500000000036], [1.62044214E12, 614.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62044202E12, 144.0], [1.62044184E12, 156.0], [1.6204419E12, 144.0], [1.6204422E12, 145.0], [1.62044172E12, 145.0], [1.62044178E12, 150.0], [1.62044208E12, 145.0], [1.62044226E12, 151.0], [1.62044166E12, 29.0], [1.62044196E12, 142.0], [1.62044214E12, 162.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62044202E12, 528.0], [1.62044184E12, 533.0], [1.6204419E12, 558.0], [1.6204422E12, 512.0], [1.62044172E12, 524.0], [1.62044178E12, 548.0], [1.62044208E12, 557.0], [1.62044226E12, 535.0], [1.62044166E12, 550.0], [1.62044196E12, 513.0], [1.62044214E12, 534.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62044226E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 171.0, "minX": 413.0, "maxY": 740.0, "series": [{"data": [[413.0, 171.0], [1161.0, 740.0], [1287.0, 571.0], [1316.0, 536.0], [1380.0, 547.0], [1345.0, 539.0], [1362.0, 682.0], [1372.0, 514.0], [1441.0, 555.0], [1450.0, 519.5], [1427.0, 539.0], [1424.0, 512.0], [1487.0, 532.0], [1512.0, 493.0], [1499.0, 551.0], [1497.0, 539.0], [1531.0, 596.0], [1473.0, 504.0], [1574.0, 522.0], [1591.0, 527.0], [1558.0, 636.5], [1589.0, 500.0], [1564.0, 559.0], [1542.0, 471.0], [1627.0, 504.0], [1639.0, 558.0], [1651.0, 597.0], [1623.0, 520.0], [1624.0, 483.0], [1618.0, 500.0], [1602.0, 598.5], [1662.0, 502.0], [1649.0, 538.0], [1606.0, 517.0], [1722.0, 489.0], [1715.0, 496.0], [1708.0, 564.0], [1727.0, 689.0], [1716.0, 605.0], [1714.0, 497.0], [1702.0, 575.0], [1776.0, 549.0], [1784.0, 511.5], [1791.0, 460.0], [1745.0, 552.0], [1750.0, 552.0], [1752.0, 574.0], [1749.0, 535.0], [1760.0, 486.0], [1762.0, 516.0], [1782.0, 501.0], [1845.0, 641.0], [1849.0, 519.0], [1832.0, 631.0], [1838.0, 527.0], [1825.0, 506.0], [1798.0, 517.0], [1842.0, 623.0], [1803.0, 494.0], [1797.0, 505.0], [1819.0, 542.0], [1907.0, 538.0], [1905.0, 584.0], [1903.0, 578.0], [1859.0, 625.0], [1912.0, 581.0], [1893.0, 628.0], [1913.0, 528.0], [1899.0, 487.0], [1887.0, 577.0], [1869.0, 504.0], [1865.0, 574.0], [1861.0, 494.0], [1910.0, 533.0], [1974.0, 540.0], [1959.0, 647.0], [1973.0, 547.0], [1969.0, 483.0], [1927.0, 593.0], [1925.0, 537.0], [1929.0, 559.0], [1934.0, 571.0], [1938.0, 579.0], [1949.0, 505.0], [1951.0, 571.0], [1945.0, 623.0], [1940.0, 601.0], [1936.0, 543.0], [1922.0, 528.0], [1963.0, 541.0], [1962.0, 543.0], [1961.0, 607.0], [1978.0, 579.0], [1976.0, 590.0], [1952.0, 574.0], [1958.0, 583.0], [1953.0, 599.0], [1957.0, 626.0], [1965.0, 522.0], [1966.0, 617.0], [1964.0, 580.5], [1970.0, 589.0], [1971.0, 481.0], [2041.0, 494.0], [2022.0, 604.5], [2023.0, 485.0], [2019.0, 556.0], [2046.0, 566.0], [2045.0, 520.0], [2034.0, 555.0], [1999.0, 557.0], [2038.0, 576.0], [2039.0, 511.0], [2037.0, 532.0], [1996.0, 617.0], [2009.0, 569.0], [2002.0, 585.0], [2001.0, 581.0], [2004.0, 595.0], [2013.0, 471.0], [2011.0, 566.0], [1986.0, 506.0], [1988.0, 579.0], [1991.0, 487.0], [1984.0, 564.0], [2015.0, 616.0], [2024.0, 594.0], [2027.0, 566.0], [2029.0, 536.0], [2026.0, 579.0], [2110.0, 529.0], [2144.0, 549.0], [2096.0, 568.0], [2092.0, 590.0], [2088.0, 538.0], [2082.0, 571.0], [2080.0, 571.0], [2084.0, 536.0], [2086.0, 553.0], [2090.0, 555.0], [2106.0, 508.0], [2108.0, 579.0], [2100.0, 542.0], [2114.0, 535.0], [2048.0, 561.0], [2122.0, 562.0], [2126.0, 583.0], [2134.0, 560.0], [2138.0, 547.0], [2128.0, 564.0], [2140.0, 560.0], [2052.0, 566.0], [2050.0, 520.0], [2054.0, 519.0], [2170.0, 538.0], [2174.0, 558.0], [2112.0, 532.0], [2172.0, 557.0], [2150.0, 540.0], [2152.0, 560.0], [2070.0, 561.0], [2068.0, 547.5], [2078.0, 531.0], [2154.0, 543.0], [2158.0, 531.0], [2162.0, 568.0], [2166.0, 532.0], [2066.0, 552.0], [2060.0, 560.0], [2056.0, 595.5], [2064.0, 565.0], [2116.0, 541.0], [2120.0, 560.0], [2290.0, 520.0], [2244.0, 541.0], [2248.0, 535.0], [2302.0, 512.0], [2240.0, 531.5], [2300.0, 547.0], [2298.0, 543.0], [2250.0, 537.5], [2252.0, 566.0], [2254.0, 545.0], [2190.0, 533.0], [2294.0, 536.0], [2286.0, 495.0], [2288.0, 514.0], [2282.0, 543.0], [2280.0, 534.0], [2274.0, 510.0], [2276.0, 548.0], [2278.0, 533.5], [2198.0, 545.0], [2206.0, 533.0], [2200.0, 567.0], [2272.0, 536.5], [2230.0, 517.0], [2232.0, 534.0], [2234.0, 554.0], [2238.0, 532.0], [2224.0, 548.0], [2222.0, 530.0], [2226.0, 522.0], [2228.0, 535.0], [2218.0, 534.0], [2214.0, 513.0], [2208.0, 512.0], [2212.0, 533.0], [2180.0, 529.0], [2176.0, 522.0], [2178.0, 574.0], [2188.0, 509.0], [2184.0, 544.0], [2196.0, 519.0], [2262.0, 504.0], [2256.0, 542.0], [2260.0, 523.0], [2258.0, 515.0], [2268.0, 523.0], [2264.0, 546.0], [2310.0, 522.0], [2306.0, 523.0], [2308.0, 512.0], [2364.0, 487.0], [2360.0, 494.0], [2352.0, 513.0], [2362.0, 539.0], [2304.0, 512.0], [2366.0, 502.0], [2314.0, 511.5], [2322.0, 524.0], [2318.0, 519.0], [2334.0, 497.0], [2400.0, 486.0], [2324.0, 491.0], [2326.0, 515.0], [2428.0, 502.0], [2426.0, 487.5], [2422.0, 511.0], [2414.0, 494.0], [2378.0, 489.0], [2368.0, 486.0], [2372.0, 485.0], [2374.0, 486.0], [2392.0, 508.0], [2396.0, 519.5], [2386.0, 489.0], [2384.0, 500.0], [2344.0, 506.0], [2338.0, 511.0], [2336.0, 522.0], [2350.0, 532.0], [2434.0, 468.0], [2438.0, 485.0], [2432.0, 520.0], [2512.0, 454.0], [2476.0, 503.0], [2482.0, 492.0], [2488.0, 482.0], [2450.0, 492.0], [2504.0, 468.0], [2498.0, 462.0], [2574.0, 461.0], [2051.0, 540.0], [2055.0, 548.0], [2093.0, 545.0], [2095.0, 558.0], [2091.0, 531.0], [2089.0, 591.0], [2103.0, 593.0], [2105.0, 548.0], [2109.0, 563.0], [2111.0, 557.0], [2127.0, 582.0], [2123.0, 543.0], [2125.0, 550.0], [2137.0, 553.0], [2133.0, 550.0], [2129.0, 545.0], [2131.0, 533.0], [2139.0, 568.0], [2049.0, 533.0], [2053.0, 546.0], [2169.0, 551.0], [2175.0, 546.0], [2173.0, 531.5], [2171.0, 536.0], [2145.0, 556.0], [2149.0, 566.0], [2153.0, 563.0], [2151.0, 533.0], [2079.0, 554.0], [2067.0, 562.0], [2071.0, 568.0], [2069.0, 588.0], [2155.0, 525.0], [2163.0, 557.0], [2161.0, 561.0], [2159.0, 513.0], [2157.0, 533.0], [2063.0, 586.0], [2117.0, 537.0], [2121.0, 563.0], [2283.0, 536.0], [2197.0, 577.0], [2297.0, 526.0], [2191.0, 539.0], [2249.0, 520.0], [2299.0, 516.0], [2301.0, 550.0], [2243.0, 492.0], [2247.0, 537.0], [2245.0, 518.0], [2241.0, 513.0], [2303.0, 521.0], [2251.0, 502.0], [2253.0, 543.0], [2279.0, 511.0], [2293.0, 509.0], [2289.0, 513.0], [2285.0, 511.0], [2275.0, 515.0], [2273.0, 546.0], [2199.0, 529.5], [2239.0, 535.0], [2231.0, 533.0], [2235.0, 494.0], [2233.0, 530.0], [2229.0, 542.0], [2225.0, 546.0], [2227.0, 544.0], [2221.0, 525.0], [2219.0, 514.0], [2213.0, 525.0], [2217.0, 532.0], [2181.0, 486.0], [2179.0, 540.0], [2183.0, 515.0], [2177.0, 541.0], [2187.0, 507.0], [2255.0, 548.0], [2193.0, 529.0], [2259.0, 533.0], [2261.0, 528.5], [2269.0, 522.0], [2265.0, 550.0], [2263.0, 532.0], [2267.0, 544.0], [2323.0, 524.0], [2329.0, 493.0], [2307.0, 537.0], [2305.0, 519.0], [2365.0, 484.0], [2361.0, 494.0], [2359.0, 506.0], [2353.0, 488.0], [2355.0, 497.0], [2309.0, 517.0], [2313.0, 498.0], [2311.0, 520.0], [2317.0, 530.0], [2335.0, 516.0], [2331.0, 496.0], [2403.0, 502.0], [2327.0, 518.0], [2351.0, 519.0], [2381.0, 496.0], [2411.0, 513.0], [2413.0, 498.0], [2421.0, 505.0], [2377.0, 516.0], [2371.0, 502.0], [2373.0, 522.0], [2375.0, 508.0], [2393.0, 509.0], [2391.0, 513.0], [2395.0, 504.0], [2383.0, 508.0], [2407.0, 492.0], [2337.0, 499.0], [2341.0, 504.0], [2347.0, 510.0], [2345.0, 519.0], [2439.0, 500.0], [2493.0, 508.0], [2559.0, 476.0], [2509.0, 505.0], [2519.0, 470.0], [2471.0, 491.0], [2473.0, 497.0], [2475.0, 487.0], [2497.0, 503.0], [2547.0, 449.0], [2553.0, 477.5], [2441.0, 501.0], [2609.0, 470.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2609.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 171.0, "minX": 413.0, "maxY": 740.0, "series": [{"data": [[413.0, 171.0], [1161.0, 740.0], [1287.0, 571.0], [1316.0, 536.0], [1380.0, 547.0], [1345.0, 539.0], [1362.0, 682.0], [1372.0, 514.0], [1441.0, 555.0], [1450.0, 519.0], [1427.0, 539.0], [1424.0, 512.0], [1487.0, 532.0], [1512.0, 493.0], [1499.0, 551.0], [1497.0, 539.0], [1531.0, 596.0], [1473.0, 504.0], [1574.0, 522.0], [1591.0, 527.0], [1558.0, 636.5], [1589.0, 500.0], [1564.0, 559.0], [1542.0, 471.0], [1627.0, 504.0], [1639.0, 558.0], [1651.0, 597.0], [1623.0, 520.0], [1624.0, 483.0], [1618.0, 500.0], [1602.0, 598.5], [1662.0, 502.0], [1649.0, 538.0], [1606.0, 517.0], [1722.0, 489.0], [1715.0, 496.0], [1708.0, 564.0], [1727.0, 689.0], [1716.0, 605.0], [1714.0, 497.0], [1702.0, 575.0], [1776.0, 549.0], [1784.0, 511.5], [1791.0, 460.0], [1745.0, 552.0], [1750.0, 552.0], [1752.0, 574.0], [1749.0, 535.0], [1760.0, 486.0], [1762.0, 516.0], [1782.0, 501.0], [1845.0, 641.0], [1849.0, 519.0], [1832.0, 631.0], [1838.0, 527.0], [1825.0, 506.0], [1798.0, 517.0], [1842.0, 623.0], [1803.0, 494.0], [1797.0, 505.0], [1819.0, 542.0], [1907.0, 538.0], [1905.0, 584.0], [1903.0, 578.0], [1859.0, 625.0], [1912.0, 581.0], [1893.0, 628.0], [1913.0, 528.0], [1899.0, 487.0], [1887.0, 577.0], [1869.0, 504.0], [1865.0, 574.0], [1861.0, 494.0], [1910.0, 533.0], [1974.0, 540.0], [1959.0, 647.0], [1973.0, 547.0], [1969.0, 483.0], [1927.0, 593.0], [1925.0, 537.0], [1929.0, 559.0], [1934.0, 571.0], [1938.0, 579.0], [1949.0, 505.0], [1951.0, 571.0], [1945.0, 623.0], [1940.0, 601.0], [1936.0, 543.0], [1922.0, 528.0], [1963.0, 541.0], [1962.0, 543.0], [1961.0, 607.0], [1978.0, 579.0], [1976.0, 590.0], [1952.0, 574.0], [1958.0, 583.0], [1953.0, 599.0], [1957.0, 626.0], [1965.0, 522.0], [1966.0, 617.0], [1964.0, 580.5], [1970.0, 589.0], [1971.0, 481.0], [2041.0, 494.0], [2022.0, 604.5], [2023.0, 485.0], [2019.0, 556.0], [2046.0, 566.0], [2045.0, 520.0], [2034.0, 555.0], [1999.0, 557.0], [2038.0, 575.0], [2039.0, 511.0], [2037.0, 532.0], [1996.0, 617.0], [2009.0, 569.0], [2002.0, 585.0], [2001.0, 581.0], [2004.0, 595.0], [2013.0, 471.0], [2011.0, 566.0], [1986.0, 506.0], [1988.0, 579.0], [1991.0, 487.0], [1984.0, 564.0], [2015.0, 616.0], [2024.0, 594.0], [2027.0, 566.0], [2029.0, 536.0], [2026.0, 579.0], [2110.0, 529.0], [2144.0, 549.0], [2096.0, 568.0], [2092.0, 590.0], [2088.0, 538.0], [2082.0, 571.0], [2080.0, 571.0], [2084.0, 536.0], [2086.0, 553.0], [2090.0, 555.0], [2106.0, 508.0], [2108.0, 579.0], [2100.0, 542.0], [2114.0, 535.0], [2048.0, 561.0], [2122.0, 562.0], [2126.0, 583.0], [2134.0, 560.0], [2138.0, 547.0], [2128.0, 564.0], [2140.0, 560.0], [2052.0, 566.0], [2050.0, 520.0], [2054.0, 519.0], [2170.0, 538.0], [2174.0, 558.0], [2112.0, 532.0], [2172.0, 557.0], [2150.0, 540.0], [2152.0, 560.0], [2070.0, 561.0], [2068.0, 547.5], [2078.0, 531.0], [2154.0, 543.0], [2158.0, 530.0], [2162.0, 568.0], [2166.0, 532.0], [2066.0, 552.0], [2060.0, 560.0], [2056.0, 595.5], [2064.0, 565.0], [2116.0, 541.0], [2120.0, 560.0], [2290.0, 520.0], [2244.0, 541.0], [2248.0, 535.0], [2302.0, 512.0], [2240.0, 531.0], [2300.0, 547.0], [2298.0, 543.0], [2250.0, 537.5], [2252.0, 566.0], [2254.0, 545.0], [2190.0, 533.0], [2294.0, 536.0], [2286.0, 495.0], [2288.0, 514.0], [2282.0, 543.0], [2280.0, 534.0], [2274.0, 510.0], [2276.0, 548.0], [2278.0, 533.0], [2198.0, 545.0], [2206.0, 533.0], [2200.0, 567.0], [2272.0, 536.5], [2230.0, 517.0], [2232.0, 534.0], [2234.0, 554.0], [2238.0, 532.0], [2224.0, 548.0], [2222.0, 530.0], [2226.0, 522.0], [2228.0, 535.0], [2218.0, 534.0], [2214.0, 513.0], [2208.0, 512.0], [2212.0, 533.0], [2180.0, 529.0], [2176.0, 522.0], [2178.0, 574.0], [2188.0, 509.0], [2184.0, 544.0], [2196.0, 519.0], [2262.0, 504.0], [2256.0, 542.0], [2260.0, 523.0], [2258.0, 515.0], [2268.0, 523.0], [2264.0, 546.0], [2310.0, 522.0], [2306.0, 523.0], [2308.0, 512.0], [2364.0, 487.0], [2360.0, 494.0], [2352.0, 513.0], [2362.0, 539.0], [2304.0, 512.0], [2366.0, 502.0], [2314.0, 511.5], [2322.0, 524.0], [2318.0, 519.0], [2334.0, 497.0], [2400.0, 486.0], [2324.0, 491.0], [2326.0, 515.0], [2428.0, 502.0], [2426.0, 487.5], [2422.0, 511.0], [2414.0, 494.0], [2378.0, 489.0], [2368.0, 486.0], [2372.0, 485.0], [2374.0, 486.0], [2392.0, 508.0], [2396.0, 519.5], [2386.0, 489.0], [2384.0, 499.0], [2344.0, 506.0], [2338.0, 511.0], [2336.0, 522.0], [2350.0, 532.0], [2434.0, 468.0], [2438.0, 485.0], [2432.0, 520.0], [2512.0, 454.0], [2476.0, 503.0], [2482.0, 492.0], [2488.0, 482.0], [2450.0, 492.0], [2504.0, 468.0], [2498.0, 462.0], [2574.0, 461.0], [2051.0, 540.0], [2055.0, 548.0], [2093.0, 545.0], [2095.0, 558.0], [2091.0, 531.0], [2089.0, 591.0], [2103.0, 593.0], [2105.0, 548.0], [2109.0, 563.0], [2111.0, 557.0], [2127.0, 582.0], [2123.0, 543.0], [2125.0, 550.0], [2137.0, 553.0], [2133.0, 550.0], [2129.0, 545.0], [2131.0, 533.0], [2139.0, 568.0], [2049.0, 533.0], [2053.0, 546.0], [2169.0, 551.0], [2175.0, 546.0], [2173.0, 531.0], [2171.0, 536.0], [2145.0, 556.0], [2149.0, 566.0], [2153.0, 563.0], [2151.0, 533.0], [2079.0, 554.0], [2067.0, 562.0], [2071.0, 568.0], [2069.0, 588.0], [2155.0, 525.0], [2163.0, 557.0], [2161.0, 561.0], [2159.0, 513.0], [2157.0, 533.0], [2063.0, 586.0], [2117.0, 537.0], [2121.0, 563.0], [2283.0, 536.0], [2197.0, 577.0], [2297.0, 526.0], [2191.0, 539.0], [2249.0, 520.0], [2299.0, 516.0], [2301.0, 550.0], [2243.0, 492.0], [2247.0, 537.0], [2245.0, 518.0], [2241.0, 513.0], [2303.0, 521.0], [2251.0, 502.0], [2253.0, 543.0], [2279.0, 511.0], [2293.0, 509.0], [2289.0, 513.0], [2285.0, 511.0], [2275.0, 515.0], [2273.0, 546.0], [2199.0, 529.5], [2239.0, 535.0], [2231.0, 533.0], [2235.0, 494.0], [2233.0, 530.0], [2229.0, 542.0], [2225.0, 546.0], [2227.0, 544.0], [2221.0, 525.0], [2219.0, 514.0], [2213.0, 525.0], [2217.0, 532.0], [2181.0, 486.0], [2179.0, 540.0], [2183.0, 515.0], [2177.0, 541.0], [2187.0, 507.0], [2255.0, 548.0], [2193.0, 529.0], [2259.0, 533.0], [2261.0, 528.5], [2269.0, 522.0], [2265.0, 550.0], [2263.0, 532.0], [2267.0, 544.0], [2323.0, 524.0], [2329.0, 493.0], [2307.0, 537.0], [2305.0, 519.0], [2365.0, 484.0], [2361.0, 494.0], [2359.0, 506.0], [2353.0, 488.0], [2355.0, 497.0], [2309.0, 517.0], [2313.0, 498.0], [2311.0, 520.0], [2317.0, 530.0], [2335.0, 516.0], [2331.0, 496.0], [2403.0, 501.0], [2327.0, 518.0], [2351.0, 519.0], [2381.0, 496.0], [2411.0, 513.0], [2413.0, 498.0], [2421.0, 505.0], [2377.0, 516.0], [2371.0, 502.0], [2373.0, 522.0], [2375.0, 508.0], [2393.0, 509.0], [2391.0, 512.0], [2395.0, 504.0], [2383.0, 508.0], [2407.0, 492.0], [2337.0, 499.0], [2341.0, 504.0], [2347.0, 510.0], [2345.0, 518.0], [2439.0, 500.0], [2493.0, 508.0], [2559.0, 476.0], [2509.0, 505.0], [2519.0, 470.0], [2471.0, 491.0], [2473.0, 497.0], [2475.0, 487.0], [2497.0, 503.0], [2547.0, 449.0], [2553.0, 477.5], [2441.0, 501.0], [2609.0, 470.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2609.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 311.1666666666667, "minX": 1.62044166E12, "maxY": 2238.2833333333333, "series": [{"data": [[1.62044202E12, 2161.6], [1.62044184E12, 2148.3333333333335], [1.6204419E12, 2073.9333333333334], [1.6204422E12, 2238.2833333333333], [1.62044172E12, 2071.483333333333], [1.62044178E12, 2194.8166666666666], [1.62044208E12, 1951.4166666666667], [1.62044226E12, 311.1666666666667], [1.62044166E12, 1870.05], [1.62044196E12, 2129.65], [1.62044214E12, 2213.616666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62044226E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 331.1666666666667, "minX": 1.62044166E12, "maxY": 2238.266666666667, "series": [{"data": [[1.62044202E12, 2161.6], [1.62044184E12, 2148.3333333333335], [1.6204419E12, 2073.9333333333334], [1.6204422E12, 2238.266666666667], [1.62044172E12, 2071.483333333333], [1.62044178E12, 2194.8166666666666], [1.62044208E12, 1951.4333333333334], [1.62044226E12, 331.1666666666667], [1.62044166E12, 1850.05], [1.62044196E12, 2129.65], [1.62044214E12, 2213.616666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62044226E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 156.56666666666666, "minX": 1.62044166E12, "maxY": 1210.3333333333333, "series": [{"data": [[1.62044202E12, 1197.8333333333333], [1.62044184E12, 1208.2], [1.6204419E12, 1051.5833333333333], [1.6204422E12, 1210.3333333333333], [1.62044172E12, 1203.65], [1.62044178E12, 1130.7833333333333], [1.62044208E12, 1183.6], [1.62044226E12, 174.6], [1.62044166E12, 1010.5], [1.62044196E12, 1178.4166666666667], [1.62044214E12, 1189.5166666666667]], "isOverall": false, "label": "AuthzRequest-rcdn-3-success", "isController": false}, {"data": [[1.62044202E12, 963.7666666666667], [1.62044184E12, 940.1333333333333], [1.6204419E12, 1022.35], [1.6204422E12, 1027.9333333333334], [1.62044172E12, 867.8333333333334], [1.62044178E12, 1064.0333333333333], [1.62044208E12, 767.8333333333334], [1.62044226E12, 156.56666666666666], [1.62044166E12, 839.55], [1.62044196E12, 951.2333333333333], [1.62044214E12, 1024.1]], "isOverall": false, "label": "AuthzRequest-rcdn-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62044226E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 331.1666666666667, "minX": 1.62044166E12, "maxY": 2238.266666666667, "series": [{"data": [[1.62044202E12, 2161.6], [1.62044184E12, 2148.3333333333335], [1.6204419E12, 2073.9333333333334], [1.6204422E12, 2238.266666666667], [1.62044172E12, 2071.483333333333], [1.62044178E12, 2194.8166666666666], [1.62044208E12, 1951.4333333333334], [1.62044226E12, 331.1666666666667], [1.62044166E12, 1850.05], [1.62044196E12, 2129.65], [1.62044214E12, 2213.616666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62044226E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

