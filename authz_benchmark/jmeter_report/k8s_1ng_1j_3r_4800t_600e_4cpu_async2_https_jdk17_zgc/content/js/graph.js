/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 13718.0, "series": [{"data": [[0.0, 3.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 7.0], [1.1, 7.0], [1.2, 7.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 8.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 9.0], [3.8, 9.0], [3.9, 9.0], [4.0, 9.0], [4.1, 9.0], [4.2, 9.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 10.0], [5.4, 10.0], [5.5, 10.0], [5.6, 10.0], [5.7, 10.0], [5.8, 10.0], [5.9, 10.0], [6.0, 10.0], [6.1, 10.0], [6.2, 10.0], [6.3, 10.0], [6.4, 10.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 15.0], [14.6, 15.0], [14.7, 15.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 16.0], [15.2, 16.0], [15.3, 16.0], [15.4, 16.0], [15.5, 16.0], [15.6, 16.0], [15.7, 16.0], [15.8, 16.0], [15.9, 16.0], [16.0, 16.0], [16.1, 16.0], [16.2, 16.0], [16.3, 16.0], [16.4, 16.0], [16.5, 16.0], [16.6, 16.0], [16.7, 16.0], [16.8, 16.0], [16.9, 16.0], [17.0, 16.0], [17.1, 16.0], [17.2, 17.0], [17.3, 17.0], [17.4, 17.0], [17.5, 17.0], [17.6, 17.0], [17.7, 17.0], [17.8, 17.0], [17.9, 17.0], [18.0, 17.0], [18.1, 17.0], [18.2, 17.0], [18.3, 17.0], [18.4, 17.0], [18.5, 17.0], [18.6, 17.0], [18.7, 17.0], [18.8, 17.0], [18.9, 17.0], [19.0, 17.0], [19.1, 17.0], [19.2, 17.0], [19.3, 17.0], [19.4, 18.0], [19.5, 18.0], [19.6, 18.0], [19.7, 18.0], [19.8, 18.0], [19.9, 18.0], [20.0, 18.0], [20.1, 18.0], [20.2, 18.0], [20.3, 18.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 18.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 18.0], [21.4, 18.0], [21.5, 18.0], [21.6, 18.0], [21.7, 19.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 19.0], [22.2, 19.0], [22.3, 19.0], [22.4, 19.0], [22.5, 19.0], [22.6, 19.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 19.0], [23.1, 19.0], [23.2, 19.0], [23.3, 19.0], [23.4, 19.0], [23.5, 19.0], [23.6, 19.0], [23.7, 19.0], [23.8, 19.0], [23.9, 19.0], [24.0, 19.0], [24.1, 19.0], [24.2, 20.0], [24.3, 20.0], [24.4, 20.0], [24.5, 20.0], [24.6, 20.0], [24.7, 20.0], [24.8, 20.0], [24.9, 20.0], [25.0, 20.0], [25.1, 20.0], [25.2, 20.0], [25.3, 20.0], [25.4, 20.0], [25.5, 20.0], [25.6, 20.0], [25.7, 20.0], [25.8, 20.0], [25.9, 20.0], [26.0, 20.0], [26.1, 20.0], [26.2, 20.0], [26.3, 20.0], [26.4, 20.0], [26.5, 20.0], [26.6, 20.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 21.0], [28.8, 21.0], [28.9, 21.0], [29.0, 21.0], [29.1, 21.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 22.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 22.0], [31.5, 22.0], [31.6, 22.0], [31.7, 23.0], [31.8, 23.0], [31.9, 23.0], [32.0, 23.0], [32.1, 23.0], [32.2, 23.0], [32.3, 23.0], [32.4, 23.0], [32.5, 23.0], [32.6, 23.0], [32.7, 23.0], [32.8, 23.0], [32.9, 23.0], [33.0, 23.0], [33.1, 23.0], [33.2, 23.0], [33.3, 23.0], [33.4, 23.0], [33.5, 23.0], [33.6, 23.0], [33.7, 23.0], [33.8, 23.0], [33.9, 23.0], [34.0, 23.0], [34.1, 23.0], [34.2, 24.0], [34.3, 24.0], [34.4, 24.0], [34.5, 24.0], [34.6, 24.0], [34.7, 24.0], [34.8, 24.0], [34.9, 24.0], [35.0, 24.0], [35.1, 24.0], [35.2, 24.0], [35.3, 24.0], [35.4, 24.0], [35.5, 24.0], [35.6, 24.0], [35.7, 24.0], [35.8, 24.0], [35.9, 24.0], [36.0, 24.0], [36.1, 24.0], [36.2, 24.0], [36.3, 24.0], [36.4, 24.0], [36.5, 24.0], [36.6, 24.0], [36.7, 25.0], [36.8, 25.0], [36.9, 25.0], [37.0, 25.0], [37.1, 25.0], [37.2, 25.0], [37.3, 25.0], [37.4, 25.0], [37.5, 25.0], [37.6, 25.0], [37.7, 25.0], [37.8, 25.0], [37.9, 25.0], [38.0, 25.0], [38.1, 25.0], [38.2, 25.0], [38.3, 25.0], [38.4, 25.0], [38.5, 25.0], [38.6, 25.0], [38.7, 25.0], [38.8, 25.0], [38.9, 25.0], [39.0, 25.0], [39.1, 25.0], [39.2, 26.0], [39.3, 26.0], [39.4, 26.0], [39.5, 26.0], [39.6, 26.0], [39.7, 26.0], [39.8, 26.0], [39.9, 26.0], [40.0, 26.0], [40.1, 26.0], [40.2, 26.0], [40.3, 26.0], [40.4, 26.0], [40.5, 26.0], [40.6, 26.0], [40.7, 26.0], [40.8, 26.0], [40.9, 26.0], [41.0, 26.0], [41.1, 26.0], [41.2, 26.0], [41.3, 26.0], [41.4, 26.0], [41.5, 26.0], [41.6, 26.0], [41.7, 27.0], [41.8, 27.0], [41.9, 27.0], [42.0, 27.0], [42.1, 27.0], [42.2, 27.0], [42.3, 27.0], [42.4, 27.0], [42.5, 27.0], [42.6, 27.0], [42.7, 27.0], [42.8, 27.0], [42.9, 27.0], [43.0, 27.0], [43.1, 27.0], [43.2, 27.0], [43.3, 27.0], [43.4, 27.0], [43.5, 27.0], [43.6, 27.0], [43.7, 27.0], [43.8, 27.0], [43.9, 27.0], [44.0, 27.0], [44.1, 27.0], [44.2, 28.0], [44.3, 28.0], [44.4, 28.0], [44.5, 28.0], [44.6, 28.0], [44.7, 28.0], [44.8, 28.0], [44.9, 28.0], [45.0, 28.0], [45.1, 28.0], [45.2, 28.0], [45.3, 28.0], [45.4, 28.0], [45.5, 28.0], [45.6, 28.0], [45.7, 28.0], [45.8, 28.0], [45.9, 28.0], [46.0, 28.0], [46.1, 28.0], [46.2, 28.0], [46.3, 28.0], [46.4, 28.0], [46.5, 28.0], [46.6, 29.0], [46.7, 29.0], [46.8, 29.0], [46.9, 29.0], [47.0, 29.0], [47.1, 29.0], [47.2, 29.0], [47.3, 29.0], [47.4, 29.0], [47.5, 29.0], [47.6, 29.0], [47.7, 29.0], [47.8, 29.0], [47.9, 29.0], [48.0, 29.0], [48.1, 29.0], [48.2, 29.0], [48.3, 29.0], [48.4, 29.0], [48.5, 29.0], [48.6, 29.0], [48.7, 29.0], [48.8, 29.0], [48.9, 30.0], [49.0, 30.0], [49.1, 30.0], [49.2, 30.0], [49.3, 30.0], [49.4, 30.0], [49.5, 30.0], [49.6, 30.0], [49.7, 30.0], [49.8, 30.0], [49.9, 30.0], [50.0, 30.0], [50.1, 30.0], [50.2, 30.0], [50.3, 30.0], [50.4, 30.0], [50.5, 30.0], [50.6, 30.0], [50.7, 30.0], [50.8, 30.0], [50.9, 30.0], [51.0, 31.0], [51.1, 31.0], [51.2, 31.0], [51.3, 31.0], [51.4, 31.0], [51.5, 31.0], [51.6, 31.0], [51.7, 31.0], [51.8, 31.0], [51.9, 31.0], [52.0, 31.0], [52.1, 31.0], [52.2, 31.0], [52.3, 31.0], [52.4, 31.0], [52.5, 31.0], [52.6, 31.0], [52.7, 31.0], [52.8, 31.0], [52.9, 32.0], [53.0, 32.0], [53.1, 32.0], [53.2, 32.0], [53.3, 32.0], [53.4, 32.0], [53.5, 32.0], [53.6, 32.0], [53.7, 32.0], [53.8, 32.0], [53.9, 32.0], [54.0, 32.0], [54.1, 32.0], [54.2, 32.0], [54.3, 32.0], [54.4, 32.0], [54.5, 33.0], [54.6, 33.0], [54.7, 33.0], [54.8, 33.0], [54.9, 33.0], [55.0, 33.0], [55.1, 33.0], [55.2, 33.0], [55.3, 33.0], [55.4, 33.0], [55.5, 33.0], [55.6, 33.0], [55.7, 33.0], [55.8, 34.0], [55.9, 34.0], [56.0, 34.0], [56.1, 34.0], [56.2, 34.0], [56.3, 34.0], [56.4, 34.0], [56.5, 34.0], [56.6, 34.0], [56.7, 34.0], [56.8, 35.0], [56.9, 35.0], [57.0, 35.0], [57.1, 35.0], [57.2, 35.0], [57.3, 35.0], [57.4, 35.0], [57.5, 35.0], [57.6, 36.0], [57.7, 36.0], [57.8, 36.0], [57.9, 36.0], [58.0, 36.0], [58.1, 36.0], [58.2, 36.0], [58.3, 37.0], [58.4, 37.0], [58.5, 37.0], [58.6, 37.0], [58.7, 37.0], [58.8, 38.0], [58.9, 38.0], [59.0, 38.0], [59.1, 38.0], [59.2, 39.0], [59.3, 39.0], [59.4, 39.0], [59.5, 40.0], [59.6, 40.0], [59.7, 40.0], [59.8, 41.0], [59.9, 41.0], [60.0, 42.0], [60.1, 43.0], [60.2, 44.0], [60.3, 44.0], [60.4, 45.0], [60.5, 46.0], [60.6, 48.0], [60.7, 49.0], [60.8, 51.0], [60.9, 52.0], [61.0, 54.0], [61.1, 55.0], [61.2, 57.0], [61.3, 59.0], [61.4, 60.0], [61.5, 62.0], [61.6, 64.0], [61.7, 65.0], [61.8, 67.0], [61.9, 69.0], [62.0, 71.0], [62.1, 72.0], [62.2, 74.0], [62.3, 75.0], [62.4, 77.0], [62.5, 78.0], [62.6, 80.0], [62.7, 82.0], [62.8, 84.0], [62.9, 85.0], [63.0, 87.0], [63.1, 89.0], [63.2, 91.0], [63.3, 93.0], [63.4, 96.0], [63.5, 98.0], [63.6, 100.0], [63.7, 102.0], [63.8, 104.0], [63.9, 106.0], [64.0, 109.0], [64.1, 111.0], [64.2, 113.0], [64.3, 116.0], [64.4, 118.0], [64.5, 120.0], [64.6, 122.0], [64.7, 124.0], [64.8, 126.0], [64.9, 128.0], [65.0, 130.0], [65.1, 132.0], [65.2, 134.0], [65.3, 136.0], [65.4, 138.0], [65.5, 140.0], [65.6, 142.0], [65.7, 144.0], [65.8, 146.0], [65.9, 148.0], [66.0, 150.0], [66.1, 152.0], [66.2, 155.0], [66.3, 157.0], [66.4, 159.0], [66.5, 161.0], [66.6, 163.0], [66.7, 165.0], [66.8, 167.0], [66.9, 170.0], [67.0, 172.0], [67.1, 174.0], [67.2, 176.0], [67.3, 178.0], [67.4, 181.0], [67.5, 183.0], [67.6, 185.0], [67.7, 188.0], [67.8, 190.0], [67.9, 192.0], [68.0, 194.0], [68.1, 196.0], [68.2, 198.0], [68.3, 200.0], [68.4, 202.0], [68.5, 204.0], [68.6, 206.0], [68.7, 207.0], [68.8, 209.0], [68.9, 211.0], [69.0, 213.0], [69.1, 214.0], [69.2, 216.0], [69.3, 219.0], [69.4, 221.0], [69.5, 223.0], [69.6, 225.0], [69.7, 227.0], [69.8, 229.0], [69.9, 231.0], [70.0, 233.0], [70.1, 235.0], [70.2, 237.0], [70.3, 239.0], [70.4, 241.0], [70.5, 243.0], [70.6, 245.0], [70.7, 247.0], [70.8, 249.0], [70.9, 251.0], [71.0, 254.0], [71.1, 256.0], [71.2, 258.0], [71.3, 261.0], [71.4, 263.0], [71.5, 266.0], [71.6, 268.0], [71.7, 270.0], [71.8, 273.0], [71.9, 275.0], [72.0, 277.0], [72.1, 279.0], [72.2, 282.0], [72.3, 284.0], [72.4, 286.0], [72.5, 288.0], [72.6, 291.0], [72.7, 293.0], [72.8, 295.0], [72.9, 298.0], [73.0, 300.0], [73.1, 303.0], [73.2, 305.0], [73.3, 308.0], [73.4, 310.0], [73.5, 313.0], [73.6, 315.0], [73.7, 318.0], [73.8, 320.0], [73.9, 322.0], [74.0, 325.0], [74.1, 327.0], [74.2, 330.0], [74.3, 333.0], [74.4, 335.0], [74.5, 338.0], [74.6, 340.0], [74.7, 343.0], [74.8, 346.0], [74.9, 348.0], [75.0, 351.0], [75.1, 353.0], [75.2, 356.0], [75.3, 359.0], [75.4, 362.0], [75.5, 364.0], [75.6, 367.0], [75.7, 370.0], [75.8, 373.0], [75.9, 376.0], [76.0, 378.0], [76.1, 381.0], [76.2, 384.0], [76.3, 387.0], [76.4, 390.0], [76.5, 393.0], [76.6, 396.0], [76.7, 400.0], [76.8, 403.0], [76.9, 406.0], [77.0, 409.0], [77.1, 412.0], [77.2, 414.0], [77.3, 417.0], [77.4, 420.0], [77.5, 423.0], [77.6, 426.0], [77.7, 428.0], [77.8, 431.0], [77.9, 434.0], [78.0, 436.0], [78.1, 440.0], [78.2, 443.0], [78.3, 446.0], [78.4, 449.0], [78.5, 452.0], [78.6, 455.0], [78.7, 458.0], [78.8, 462.0], [78.9, 465.0], [79.0, 468.0], [79.1, 472.0], [79.2, 475.0], [79.3, 479.0], [79.4, 483.0], [79.5, 487.0], [79.6, 490.0], [79.7, 493.0], [79.8, 497.0], [79.9, 500.0], [80.0, 504.0], [80.1, 507.0], [80.2, 511.0], [80.3, 514.0], [80.4, 518.0], [80.5, 522.0], [80.6, 527.0], [80.7, 531.0], [80.8, 534.0], [80.9, 538.0], [81.0, 541.0], [81.1, 545.0], [81.2, 548.0], [81.3, 552.0], [81.4, 556.0], [81.5, 560.0], [81.6, 563.0], [81.7, 567.0], [81.8, 571.0], [81.9, 576.0], [82.0, 580.0], [82.1, 584.0], [82.2, 588.0], [82.3, 592.0], [82.4, 595.0], [82.5, 599.0], [82.6, 603.0], [82.7, 606.0], [82.8, 610.0], [82.9, 613.0], [83.0, 617.0], [83.1, 621.0], [83.2, 625.0], [83.3, 630.0], [83.4, 634.0], [83.5, 638.0], [83.6, 643.0], [83.7, 647.0], [83.8, 651.0], [83.9, 655.0], [84.0, 659.0], [84.1, 663.0], [84.2, 666.0], [84.3, 671.0], [84.4, 676.0], [84.5, 680.0], [84.6, 685.0], [84.7, 690.0], [84.8, 694.0], [84.9, 699.0], [85.0, 703.0], [85.1, 707.0], [85.2, 711.0], [85.3, 716.0], [85.4, 721.0], [85.5, 726.0], [85.6, 730.0], [85.7, 734.0], [85.8, 737.0], [85.9, 741.0], [86.0, 746.0], [86.1, 750.0], [86.2, 755.0], [86.3, 759.0], [86.4, 764.0], [86.5, 769.0], [86.6, 774.0], [86.7, 779.0], [86.8, 784.0], [86.9, 788.0], [87.0, 793.0], [87.1, 797.0], [87.2, 801.0], [87.3, 806.0], [87.4, 810.0], [87.5, 815.0], [87.6, 820.0], [87.7, 825.0], [87.8, 830.0], [87.9, 836.0], [88.0, 841.0], [88.1, 848.0], [88.2, 853.0], [88.3, 857.0], [88.4, 862.0], [88.5, 866.0], [88.6, 870.0], [88.7, 876.0], [88.8, 881.0], [88.9, 887.0], [89.0, 892.0], [89.1, 897.0], [89.2, 902.0], [89.3, 907.0], [89.4, 913.0], [89.5, 919.0], [89.6, 925.0], [89.7, 930.0], [89.8, 935.0], [89.9, 940.0], [90.0, 945.0], [90.1, 951.0], [90.2, 957.0], [90.3, 963.0], [90.4, 969.0], [90.5, 974.0], [90.6, 981.0], [90.7, 987.0], [90.8, 992.0], [90.9, 998.0], [91.0, 1005.0], [91.1, 1010.0], [91.2, 1016.0], [91.3, 1021.0], [91.4, 1027.0], [91.5, 1032.0], [91.6, 1037.0], [91.7, 1043.0], [91.8, 1049.0], [91.9, 1055.0], [92.0, 1062.0], [92.1, 1068.0], [92.2, 1075.0], [92.3, 1081.0], [92.4, 1086.0], [92.5, 1093.0], [92.6, 1099.0], [92.7, 1106.0], [92.8, 1112.0], [92.9, 1118.0], [93.0, 1123.0], [93.1, 1129.0], [93.2, 1135.0], [93.3, 1141.0], [93.4, 1148.0], [93.5, 1154.0], [93.6, 1159.0], [93.7, 1165.0], [93.8, 1171.0], [93.9, 1178.0], [94.0, 1184.0], [94.1, 1190.0], [94.2, 1196.0], [94.3, 1201.0], [94.4, 1207.0], [94.5, 1213.0], [94.6, 1220.0], [94.7, 1227.0], [94.8, 1235.0], [94.9, 1242.0], [95.0, 1250.0], [95.1, 1257.0], [95.2, 1265.0], [95.3, 1271.0], [95.4, 1278.0], [95.5, 1285.0], [95.6, 1293.0], [95.7, 1300.0], [95.8, 1308.0], [95.9, 1316.0], [96.0, 1324.0], [96.1, 1331.0], [96.2, 1339.0], [96.3, 1347.0], [96.4, 1355.0], [96.5, 1362.0], [96.6, 1368.0], [96.7, 1376.0], [96.8, 1383.0], [96.9, 1393.0], [97.0, 1400.0], [97.1, 1409.0], [97.2, 1418.0], [97.3, 1427.0], [97.4, 1436.0], [97.5, 1445.0], [97.6, 1455.0], [97.7, 1466.0], [97.8, 1475.0], [97.9, 1487.0], [98.0, 1498.0], [98.1, 1509.0], [98.2, 1520.0], [98.3, 1531.0], [98.4, 1542.0], [98.5, 1554.0], [98.6, 1566.0], [98.7, 1578.0], [98.8, 1590.0], [98.9, 1604.0], [99.0, 1618.0], [99.1, 1635.0], [99.2, 1654.0], [99.3, 1671.0], [99.4, 1692.0], [99.5, 1713.0], [99.6, 1743.0], [99.7, 1796.0], [99.8, 1873.0], [99.9, 2074.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 576505.0, "series": [{"data": [[0.0, 576505.0], [100.0, 42586.0], [200.0, 42627.0], [300.0, 33846.0], [400.0, 28892.0], [500.0, 23803.0], [600.0, 21863.0], [700.0, 20366.0], [800.0, 17966.0], [900.0, 16145.0], [1000.0, 15210.0], [1100.0, 15152.0], [1200.0, 12885.0], [1300.0, 11755.0], [1400.0, 9282.0], [1500.0, 7699.0], [1600.0, 5294.0], [1700.0, 2335.0], [1800.0, 1127.0], [1900.0, 202.0], [2000.0, 540.0], [2100.0, 188.0], [2200.0, 6.0], [2300.0, 2.0], [2500.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [3000.0, 1.0], [3400.0, 1.0], [3600.0, 1.0], [3700.0, 1.0], [4000.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [4700.0, 1.0], [4800.0, 2.0], [4900.0, 1.0], [5000.0, 1.0], [5300.0, 2.0], [5200.0, 3.0], [5500.0, 2.0], [6100.0, 6.0], [6000.0, 2.0], [5900.0, 2.0], [6300.0, 5.0], [6200.0, 2.0], [6400.0, 9.0], [6600.0, 9.0], [6500.0, 2.0], [6700.0, 3.0], [7000.0, 3.0], [7100.0, 1.0], [7300.0, 4.0], [7400.0, 6.0], [7200.0, 5.0], [7500.0, 2.0], [7900.0, 4.0], [7800.0, 1.0], [7700.0, 3.0], [8000.0, 4.0], [8100.0, 3.0], [8400.0, 6.0], [8500.0, 24.0], [8200.0, 3.0], [8300.0, 8.0], [8600.0, 13.0], [8700.0, 2.0], [9200.0, 12.0], [9000.0, 3.0], [9100.0, 7.0], [8900.0, 2.0], [9300.0, 3.0], [9600.0, 2.0], [9500.0, 4.0], [9400.0, 8.0], [9700.0, 1.0], [10000.0, 3.0], [10100.0, 6.0], [10200.0, 4.0], [10400.0, 2.0], [10700.0, 2.0], [10600.0, 1.0], [10300.0, 4.0], [10500.0, 6.0], [10800.0, 6.0], [10900.0, 7.0], [11000.0, 4.0], [11100.0, 15.0], [11200.0, 12.0], [11300.0, 8.0], [11400.0, 11.0], [11500.0, 7.0], [11600.0, 9.0], [11700.0, 9.0], [11800.0, 6.0], [12100.0, 16.0], [12200.0, 12.0], [12000.0, 10.0], [11900.0, 8.0], [12300.0, 25.0], [12400.0, 17.0], [12500.0, 15.0], [12600.0, 23.0], [12700.0, 18.0], [12800.0, 24.0], [12900.0, 5.0], [13200.0, 17.0], [13100.0, 12.0], [13000.0, 15.0], [13300.0, 18.0], [13400.0, 40.0], [13500.0, 21.0], [13600.0, 14.0], [13700.0, 1.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 17941.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 724743.0, "series": [{"data": [[0.0, 724743.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 164221.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 17941.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4038.9580459770036, "minX": 1.63750482E12, "maxY": 4800.0, "series": [{"data": [[1.63750488E12, 4800.0], [1.63750554E12, 4800.0], [1.63750524E12, 4800.0], [1.63750494E12, 4800.0], [1.63750512E12, 4800.0], [1.63750482E12, 4038.9580459770036], [1.63750548E12, 4800.0], [1.63750518E12, 4800.0], [1.63750536E12, 4800.0], [1.63750506E12, 4800.0], [1.63750572E12, 4088.7286797418387], [1.63750542E12, 4800.0], [1.6375056E12, 4800.0], [1.6375053E12, 4800.0], [1.637505E12, 4800.0], [1.63750566E12, 4799.999765815796]], "isOverall": false, "label": "app1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63750572E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.666666666666667, "minX": 624.0, "maxY": 13359.0, "series": [{"data": [[624.0, 8449.8], [628.0, 8466.0], [630.0, 9296.75], [634.0, 862.8194444444437], [636.0, 868.226351351351], [638.0, 1058.6666666666667], [670.0, 602.0], [656.0, 3042.2], [652.0, 1107.0], [650.0, 12056.0], [700.0, 409.0], [702.0, 440.0], [688.0, 401.75], [690.0, 638.0], [692.0, 569.25], [698.0, 492.0], [696.0, 363.3333333333333], [678.0, 386.0], [674.0, 414.0], [686.0, 601.0], [684.0, 294.0], [682.0, 372.0], [680.0, 364.0], [694.0, 313.5], [732.0, 4375.5], [730.0, 1589.6000000000001], [734.0, 8.0], [704.0, 1875.3333333333333], [718.0, 1911.7142857142858], [720.0, 575.3194444444448], [722.0, 3099.118644067796], [724.0, 934.3375796178344], [740.0, 51.666666666666664], [736.0, 881.0], [750.0, 30.80952380952381], [738.0, 1871.7397260273972], [742.0, 299.16], [756.0, 23.521739130434778], [760.0, 32.0], [762.0, 34.0], [754.0, 6.285714285714286], [746.0, 17.846153846153847], [770.0, 19.0], [768.0, 14.0], [772.0, 21.4], [780.0, 35.857142857142854], [776.0, 29.5], [778.0, 31.0], [784.0, 2107.8518518518517], [788.0, 59.52941176470588], [786.0, 26.0], [796.0, 4559.166666666667], [798.0, 50.4], [824.0, 42.5], [804.0, 4448.666666666666], [802.0, 10.5], [812.0, 36.4], [814.0, 3324.0], [828.0, 13359.0], [826.0, 9.055555555555555], [830.0, 2395.08], [818.0, 21.833333333333336], [820.0, 27.57142857142857], [816.0, 64.5], [836.0, 4480.666666666667], [834.0, 11969.5], [832.0, 5271.614457831324], [846.0, 8443.57142857143], [844.0, 9851.687499999998], [838.0, 2671.4666666666662], [848.0, 935.8000000000001], [860.0, 1915.736842105263], [856.0, 2688.0217391304345], [850.0, 2505.25], [852.0, 4839.290909090909], [854.0, 42.666666666666664], [840.0, 8012.151515151517], [842.0, 17.666666666666668], [870.0, 23.51851851851852], [884.0, 18.333333333333332], [886.0, 31.0], [888.0, 35.87499999999999], [868.0, 2724.666666666666], [866.0, 17.333333333333332], [882.0, 20.666666666666668], [878.0, 27.0], [872.0, 4950.0], [874.0, 4465.333333333334], [876.0, 433.0], [892.0, 48.0], [890.0, 48.0], [920.0, 25.625], [918.0, 22.8], [902.0, 5.0], [898.0, 26.5], [910.0, 12.999999999999998], [922.0, 30.0], [924.0, 97.0], [926.0, 67.66666666666667], [916.0, 18.714285714285715], [934.0, 37.0], [952.0, 40.5], [932.0, 27.2], [930.0, 13.272727272727273], [950.0, 24.869565217391305], [946.0, 19.076923076923077], [936.0, 30.6], [940.0, 5.0], [928.0, 12.100000000000003], [988.0, 27.63636363636364], [980.0, 50.66666666666666], [978.0, 36.0], [976.0, 33.714285714285715], [986.0, 21.444444444444443], [966.0, 36.5], [960.0, 15.0], [964.0, 28.0], [970.0, 34.61538461538461], [968.0, 21.96875], [982.0, 49.0], [1016.0, 21.666666666666668], [1022.0, 27.666666666666668], [1020.0, 41.285714285714285], [1018.0, 30.0], [1004.0, 28.041666666666668], [1002.0, 22.5], [1000.0, 17.94117647058824], [992.0, 31.125], [996.0, 18.4], [1006.0, 23.0], [1014.0, 13.0], [1012.0, 11.0], [1076.0, 18.0], [1024.0, 4.666666666666667], [1028.0, 11.0], [1032.0, 22.416666666666664], [1080.0, 16.5], [1084.0, 34.0], [1068.0, 11.25], [1064.0, 14.0], [1036.0, 30.2], [1052.0, 53.4], [1048.0, 40.66666666666667], [1120.0, 81.66666666666667], [1136.0, 119.0], [1124.0, 77.0], [1104.0, 36.381578947368425], [1108.0, 64.85714285714286], [1096.0, 23.333333333333332], [1100.0, 27.25], [1160.0, 127.0], [1176.0, 162.2857142857143], [1172.0, 150.5], [1168.0, 145.5], [1180.0, 172.0], [1156.0, 6.875], [1204.0, 325.0], [1200.0, 276.2142857142858], [1188.0, 233.0], [1196.0, 10.166666666666664], [1240.0, 293.5], [1244.0, 264.0], [1236.0, 305.22727272727275], [1272.0, 293.0], [1252.0, 320.65116279069764], [1256.0, 358.94999999999993], [1260.0, 382.0], [1232.0, 302.5], [1228.0, 284.0], [1328.0, 338.5], [1292.0, 274.0], [1280.0, 303.75], [1300.0, 314.0], [1340.0, 348.0], [1336.0, 332.25], [1316.0, 338.0], [1324.0, 347.3333333333333], [1320.0, 308.0], [1288.0, 322.0], [1296.0, 303.3333333333333], [1392.0, 428.5], [1348.0, 60.63157894736844], [1352.0, 379.0], [1344.0, 358.0], [1364.0, 425.0], [1360.0, 387.0], [1376.0, 427.5], [1400.0, 447.76923076923083], [1384.0, 399.0], [1380.0, 9.294117647058824], [1420.0, 433.0], [1408.0, 467.3333333333333], [1412.0, 464.0], [1436.0, 434.5], [1432.0, 434.0], [1424.0, 425.0], [1456.0, 410.0], [1464.0, 401.3571428571429], [1468.0, 394.16666666666663], [1460.0, 410.75], [1440.0, 461.8461538461538], [1444.0, 445.0], [1448.0, 450.3793103448276], [1452.0, 407.0], [1416.0, 475.2], [1476.0, 405.0], [1472.0, 381.6666666666667], [1496.0, 379.33333333333337], [1488.0, 427.5], [1516.0, 408.0], [1512.0, 397.0], [1504.0, 358.0], [1524.0, 342.1666666666667], [1520.0, 39.00000000000001], [1596.0, 323.6666666666667], [1588.0, 320.0], [1548.0, 351.0], [1576.0, 336.25], [1592.0, 275.4], [1568.0, 398.3333333333333], [1572.0, 363.0], [1580.0, 358.0], [1584.0, 269.0], [1560.0, 329.6666666666667], [1564.0, 330.85119047619054], [1556.0, 311.5], [1656.0, 194.0], [1632.0, 241.0], [1648.0, 215.2], [1644.0, 213.0], [1640.0, 211.0], [1600.0, 238.5], [1628.0, 239.0], [1616.0, 320.5], [1624.0, 236.42857142857142], [1604.0, 297.0], [1668.0, 224.55172413793105], [1664.0, 249.0], [1688.0, 143.5], [1684.0, 142.0], [1672.0, 173.0], [1700.0, 198.25], [1708.0, 92.33333333333334], [1696.0, 191.5], [1720.0, 99.5], [1724.0, 146.5], [1716.0, 96.8], [1712.0, 96.0], [1676.0, 251.2], [1740.0, 103.8], [1732.0, 99.66666666666666], [1736.0, 102.6], [1728.0, 95.0], [1744.0, 115.5], [1768.0, 104.14814814814815], [1772.0, 99.5], [1776.0, 89.5], [1788.0, 43.0], [1780.0, 62.666666666666664], [1800.0, 44.0], [1804.0, 18.0], [1812.0, 32.666666666666664], [1816.0, 6.6000000000000005], [1808.0, 19.25], [1852.0, 14.0], [1848.0, 157.5], [1840.0, 153.0], [1844.0, 156.0], [1828.0, 136.0], [1832.0, 134.0], [1868.0, 168.8], [1856.0, 38.43478260869565], [1900.0, 44.916666666666664], [1872.0, 139.66666666666666], [1904.0, 89.0], [1908.0, 107.06896551724137], [1892.0, 7.1], [1920.0, 30.0], [1932.0, 149.40625000000006], [1940.0, 195.33333333333334], [1936.0, 61.0], [1960.0, 27.0], [1976.0, 31.0], [2000.0, 34.0], [1996.0, 34.0], [2036.0, 34.0], [2016.0, 140.33333333333334], [2004.0, 35.0], [2056.0, 49.0], [2048.0, 40.5], [2064.0, 143.5], [2136.0, 30.11111111111111], [2112.0, 28.333333333333332], [2144.0, 40.0], [2160.0, 81.2], [2120.0, 20.0], [2088.0, 39.75], [2296.0, 122.0], [2288.0, 30.0], [2248.0, 297.0], [2240.0, 218.0], [2208.0, 8.999999999999998], [2416.0, 81.0], [2424.0, 44.0], [2400.0, 380.0], [2312.0, 86.8], [2392.0, 205.75], [2376.0, 27.888888888888896], [2552.0, 102.5], [2544.0, 123.24390243902437], [2520.0, 91.0], [2432.0, 27.2], [2472.0, 13.5], [2464.0, 308.6666666666667], [2568.0, 58.77777777777778], [2640.0, 445.0], [2600.0, 24.833333333333332], [2592.0, 656.0], [2768.0, 23.0], [2704.0, 205.0], [2880.0, 305.5333333333334], [2928.0, 53.0], [2904.0, 193.7142857142857], [2888.0, 440.8888888888889], [3048.0, 124.0], [3032.0, 16.71428571428572], [2976.0, 28.0], [2992.0, 81.5], [2984.0, 34.0], [2944.0, 109.66666666666667], [3096.0, 104.66666666666667], [3176.0, 27.0], [3168.0, 141.5], [3144.0, 47.75], [3136.0, 41.0], [3112.0, 221.0], [3104.0, 65.0], [3088.0, 78.33333333333334], [3080.0, 48.666666666666664], [3320.0, 21.0], [3312.0, 19.0], [3304.0, 53.0], [3232.0, 62.0], [3216.0, 25.0], [3224.0, 35.5], [3248.0, 8.1], [3368.0, 41.53846153846153], [3360.0, 116.0], [3344.0, 26.0], [3400.0, 8.333333333333334], [3440.0, 21.5], [3512.0, 9.0], [3536.0, 11.0], [3816.0, 252.0], [3712.0, 129.77777777777777], [3832.0, 21.88888888888889], [3792.0, 229.0], [3800.0, 235.0], [3776.0, 229.55555555555554], [3784.0, 228.0], [3760.0, 196.42857142857142], [3768.0, 216.33333333333334], [3872.0, 311.6666666666667], [3880.0, 323.22222222222223], [3912.0, 349.6666666666667], [3928.0, 357.0], [3920.0, 355.5], [3888.0, 329.0], [3848.0, 274.52631578947364], [4072.0, 631.0], [4032.0, 684.0], [4048.0, 623.0], [4024.0, 35.18604651162793], [4016.0, 622.0], [4008.0, 595.3333333333334], [3984.0, 32.3888888888889], [4304.0, 658.0], [4112.0, 32.00000000000001], [4336.0, 21.179487179487175], [4208.0, 22.914893617021278], [4192.0, 18.382978723404257], [4176.0, 31.08415841584157], [4160.0, 21.535714285714295], [4560.0, 646.0], [4576.0, 655.0], [4544.0, 653.5], [4480.0, 124.42592592592592], [4496.0, 643.5], [4448.0, 646.0], [4400.0, 650.0], [4352.0, 652.0], [4432.0, 18.625], [4800.0, 265.4401518575783], [4768.0, 657.0], [4608.0, 696.2222222222223], [4752.0, 151.738219895288], [4273.0, 641.0], [4225.0, 656.0], [4209.0, 36.35051546391751], [4113.0, 632.5], [4241.0, 22.66666666666667], [4193.0, 20.45833333333333], [4177.0, 21.266112266112263], [4145.0, 24.826086956521735], [4449.0, 639.0], [4401.0, 663.75], [4433.0, 673.0], [4369.0, 682.0], [4593.0, 21.74468085106383], [4577.0, 19.883720930232556], [4497.0, 16.690476190476186], [4353.0, 15.975609756097562], [4737.0, 664.0], [4769.0, 412.9285714285715], [4785.0, 658.0], [4753.0, 89.5625], [4689.0, 997.0], [4609.0, 659.0], [4641.0, 659.0], [4721.0, 20.282051282051285], [4705.0, 21.734042553191482], [2153.0, 39.07142857142857], [2065.0, 88.75], [2049.0, 40.0], [2057.0, 7.714285714285714], [2073.0, 25.0], [2161.0, 204.0], [2169.0, 14.5], [2089.0, 39.333333333333336], [2137.0, 30.0], [2121.0, 20.0], [2249.0, 197.0], [2225.0, 232.0], [2257.0, 207.0], [2217.0, 56.0], [2209.0, 56.0], [2185.0, 24.0], [2417.0, 77.5], [2393.0, 364.0], [2377.0, 81.66666666666667], [2385.0, 43.0], [2409.0, 10.950000000000001], [2441.0, 6.0], [2545.0, 135.30434782608697], [2433.0, 38.64], [2457.0, 30.5], [2505.0, 70.0], [2489.0, 35.5], [2481.0, 33.714285714285715], [2473.0, 15.0], [2465.0, 166.5], [2673.0, 27.0], [2681.0, 60.40000000000001], [2569.0, 55.0], [2617.0, 373.0], [2593.0, 170.2777777777778], [2609.0, 660.0], [2601.0, 211.11111111111111], [2769.0, 24.0], [2705.0, 10.0], [2713.0, 221.23076923076925], [2697.0, 10.0], [2937.0, 327.0], [2897.0, 38.0], [2929.0, 118.5], [2913.0, 196.0], [2873.0, 21.0], [2825.0, 9.083333333333332], [2905.0, 298.5], [2889.0, 33.0], [3065.0, 24.0], [3049.0, 41.75], [3025.0, 112.0], [2993.0, 60.0], [2985.0, 146.0], [2945.0, 286.6], [2953.0, 79.0], [3137.0, 42.8], [3193.0, 43.0], [3153.0, 185.0], [3129.0, 37.0], [3121.0, 53.5], [3089.0, 80.6], [3081.0, 41.0], [3217.0, 26.0], [3313.0, 19.0], [3305.0, 32.0], [3281.0, 47.0], [3265.0, 62.6], [3257.0, 46.22222222222222], [3201.0, 17.0], [3209.0, 5.999999999999999], [3225.0, 36.0], [3241.0, 46.0], [3233.0, 80.0], [3369.0, 57.714285714285715], [3361.0, 130.0], [3329.0, 27.4], [3401.0, 13.666666666666666], [3441.0, 9.0], [3569.0, 5.5], [3697.0, 108.5], [3689.0, 10.619047619047619], [3737.0, 182.0], [3713.0, 133.75], [3809.0, 246.0], [3825.0, 252.0], [3817.0, 250.0], [3801.0, 236.33333333333337], [3793.0, 229.0], [3745.0, 194.0], [3761.0, 198.0], [3873.0, 315.91666666666663], [3881.0, 325.0], [3929.0, 358.8], [3921.0, 355.0], [3889.0, 330.0], [3857.0, 280.4166666666667], [3841.0, 259.0], [3945.0, 587.0], [4049.0, 623.5], [4025.0, 649.5999999999999], [4017.0, 604.0], [4001.0, 587.0], [4009.0, 596.0], [3985.0, 570.0], [4081.0, 18.642857142857142], [4338.0, 643.0], [4258.0, 113.01818181818179], [4242.0, 642.0], [4210.0, 191.0793650793651], [4114.0, 627.0], [4146.0, 634.0], [4194.0, 22.445026178010462], [4178.0, 21.383371824480385], [4594.0, 32.76744186046511], [4546.0, 658.0], [4466.0, 646.0], [4482.0, 642.0], [4450.0, 648.3333333333334], [4402.0, 677.0], [4530.0, 15.53846153846154], [4418.0, 22.249999999999996], [4786.0, 36.265306122448976], [4754.0, 457.8333333333333], [4738.0, 35.926829268292686], [4690.0, 657.0], [4706.0, 659.0], [4626.0, 661.0], [4227.0, 36.71910112359549], [4275.0, 28.92708333333334], [4259.0, 39.085106382978736], [4211.0, 669.7], [4147.0, 22.189473684210526], [4131.0, 16.630434782608695], [4099.0, 19.65217391304348], [4195.0, 22.57446808510638], [4243.0, 647.0], [4179.0, 27.145833333333336], [4163.0, 632.0], [4307.0, 20.095238095238095], [4291.0, 15.725000000000001], [4579.0, 657.0], [4547.0, 651.0], [4531.0, 657.0], [4515.0, 36.391304347826086], [4483.0, 642.0], [4467.0, 648.0], [4451.0, 643.6666666666666], [4403.0, 645.0], [4387.0, 15.512820512820511], [4787.0, 342.0], [4755.0, 143.33333333333334], [4659.0, 655.0], [4707.0, 656.0], [4691.0, 1000.0], [4643.0, 697.0], [4771.0, 20.0], [4611.0, 17.909090909090917], [1033.0, 24.357142857142858], [1029.0, 15.833333333333332], [1081.0, 16.750000000000004], [1085.0, 17.0], [1061.0, 11.153846153846155], [1069.0, 14.692307692307695], [1037.0, 35.0], [1049.0, 27.000000000000004], [1053.0, 30.666666666666664], [1041.0, 17.0], [1045.0, 14.0], [1101.0, 27.0], [1097.0, 24.0], [1145.0, 129.0], [1149.0, 130.0], [1133.0, 125.0], [1105.0, 57.333333333333336], [1109.0, 66.875], [1117.0, 71.0], [1113.0, 85.0], [1165.0, 143.5], [1161.0, 141.16666666666669], [1157.0, 129.5], [1177.0, 155.0], [1185.0, 194.0], [1213.0, 297.0], [1201.0, 289.7878787878789], [1205.0, 303.0], [1193.0, 229.66666666666666], [1229.0, 286.0], [1245.0, 298.5], [1241.0, 310.6666666666667], [1233.0, 265.9090909090909], [1249.0, 268.0], [1265.0, 317.0], [1269.0, 339.6666666666667], [1273.0, 282.0], [1253.0, 319.25], [1289.0, 298.0], [1285.0, 309.0], [1293.0, 307.0], [1333.0, 352.0], [1337.0, 351.57142857142856], [1329.0, 324.0], [1325.0, 354.5], [1317.0, 340.4], [1297.0, 304.0], [1349.0, 362.6666666666667], [1357.0, 363.0], [1345.0, 340.0], [1369.0, 370.0], [1373.0, 395.0869565217391], [1365.0, 362.0], [1361.0, 349.6666666666667], [1353.0, 361.2307692307692], [1405.0, 474.1111111111111], [1401.0, 462.0], [1397.0, 443.3333333333333], [1393.0, 423.3934426229507], [1389.0, 413.6666666666667], [1377.0, 408.16666666666663], [1421.0, 419.6666666666667], [1437.0, 432.25], [1433.0, 434.0], [1429.0, 426.0], [1457.0, 409.0], [1461.0, 415.2], [1465.0, 415.6666666666667], [1469.0, 378.6666666666667], [1441.0, 56.111111111111114], [1445.0, 480.75], [1453.0, 449.8955223880597], [1409.0, 465.7142857142857], [1417.0, 438.0], [1413.0, 507.0], [1481.0, 49.999999999999986], [1473.0, 385.0], [1501.0, 357.0], [1497.0, 380.0], [1489.0, 426.0], [1493.0, 395.0], [1513.0, 414.4], [1509.0, 363.0], [1521.0, 385.75], [1525.0, 339.25], [1505.0, 359.0], [1593.0, 277.0], [1545.0, 422.0], [1549.0, 351.0], [1589.0, 274.3333333333333], [1597.0, 238.0], [1573.0, 344.8333333333333], [1569.0, 359.42857142857144], [1577.0, 265.0], [1581.0, 350.0], [1585.0, 292.25], [1561.0, 312.5], [1657.0, 225.66666666666666], [1609.0, 264.5], [1661.0, 273.0], [1653.0, 255.0], [1649.0, 182.0], [1633.0, 269.5999999999999], [1645.0, 248.10999999999999], [1637.0, 253.0], [1613.0, 254.0], [1629.0, 243.0], [1625.0, 333.3333333333333], [1601.0, 236.0], [1669.0, 167.0], [1689.0, 227.0], [1693.0, 176.1904761904762], [1681.0, 140.0], [1685.0, 209.0], [1673.0, 173.0], [1677.0, 220.85714285714286], [1705.0, 176.0], [1709.0, 108.86666666666667], [1721.0, 100.75], [1725.0, 94.0], [1713.0, 95.66666666666667], [1697.0, 190.0], [1777.0, 101.0], [1737.0, 101.0], [1733.0, 99.0], [1729.0, 96.0], [1773.0, 81.0], [1781.0, 87.40178571428575], [1785.0, 23.5], [1789.0, 25.96428571428572], [1801.0, 15.333333333333334], [1841.0, 127.0], [1809.0, 23.0], [1817.0, 18.0], [1849.0, 104.0], [1853.0, 13.0], [1833.0, 120.0], [1909.0, 176.75], [1877.0, 82.0], [1885.0, 95.33333333333334], [1873.0, 183.0], [1901.0, 64.5], [1889.0, 15.333333333333334], [1917.0, 31.0], [1905.0, 105.0], [1893.0, 57.33333333333333], [1925.0, 33.0], [1933.0, 81.0], [1937.0, 126.75], [1941.0, 146.0], [1945.0, 23.0], [1973.0, 5.333333333333334], [2041.0, 35.5], [1993.0, 33.0], [2013.0, 65.33333333333333], [1997.0, 34.666666666666664], [2021.0, 39.0], [2029.0, 337.0], [2045.0, 38.0], [2037.0, 35.0], [2122.0, 20.5], [2050.0, 41.0], [2138.0, 111.0], [2170.0, 82.85714285714286], [2154.0, 162.0], [2090.0, 30.5], [2106.0, 91.0], [2202.0, 65.83333333333334], [2290.0, 169.75], [2282.0, 222.0], [2274.0, 10.8], [2186.0, 25.666666666666668], [2242.0, 183.33333333333334], [2234.0, 290.0], [2218.0, 89.5], [2226.0, 255.0], [2266.0, 225.0], [2394.0, 70.0], [2386.0, 46.0], [2314.0, 38.0], [2442.0, 161.2], [2554.0, 32.0], [2546.0, 75.66666666666667], [2538.0, 105.24999999999999], [2434.0, 87.5], [2514.0, 19.5], [2506.0, 10.153846153846155], [2482.0, 26.166666666666664], [2474.0, 17.42857142857143], [2466.0, 308.0], [2490.0, 261.3333333333333], [2586.0, 196.0], [2666.0, 109.6923076923077], [2570.0, 278.5], [2562.0, 132.125], [2642.0, 20.0], [2682.0, 7.5], [2602.0, 704.0], [2594.0, 223.0], [2794.0, 164.83333333333334], [2706.0, 9.5], [2714.0, 13.0], [2722.0, 8.692307692307692], [2890.0, 184.5], [2930.0, 275.0], [2906.0, 114.6], [2874.0, 75.85714285714285], [2850.0, 43.25], [2858.0, 66.2], [2866.0, 64.0], [2970.0, 22.0], [3034.0, 88.375], [3026.0, 64.0], [3050.0, 112.0], [2994.0, 79.5], [2954.0, 108.71428571428571], [2946.0, 545.2], [2978.0, 28.5], [3010.0, 48.0], [3090.0, 113.6], [3130.0, 37.0], [3194.0, 41.0], [3170.0, 19.333333333333332], [3098.0, 102.0], [3074.0, 28.0], [3154.0, 136.16666666666666], [3146.0, 49.0], [3122.0, 46.71428571428571], [3114.0, 65.5], [3106.0, 112.0], [3314.0, 19.0], [3306.0, 37.5], [3282.0, 42.25], [3266.0, 60.0], [3322.0, 8.0], [3226.0, 37.333333333333336], [3234.0, 40.5], [3218.0, 26.0], [3330.0, 39.166666666666664], [3370.0, 17.0], [3402.0, 13.5], [3394.0, 7.0], [3442.0, 11.0], [3410.0, 6.0], [3506.0, 9.666666666666668], [3474.0, 9.625], [3634.0, 47.333333333333336], [3698.0, 136.0], [3706.0, 118.0], [3714.0, 138.56], [3738.0, 183.0], [3818.0, 251.0], [3826.0, 254.0], [3802.0, 238.0], [3794.0, 232.25], [3762.0, 203.52380952380955], [3810.0, 11.769230769230768], [3898.0, 39.12500000000001], [3882.0, 326.6], [3874.0, 317.6666666666667], [3906.0, 347.0], [3914.0, 351.5], [3930.0, 359.0], [3922.0, 355.0], [3890.0, 331.6363636363636], [3858.0, 281.0], [3954.0, 652.0], [3850.0, 277.0], [3842.0, 261.0], [3970.0, 568.0], [4074.0, 631.0], [4050.0, 810.0], [4058.0, 20.065217391304348], [4026.0, 736.0], [4018.0, 614.25], [4002.0, 655.0], [3994.0, 576.0], [4010.0, 31.97142857142857], [4066.0, 32.23255813953489], [4324.0, 20.809523809523807], [4276.0, 101.58490566037732], [4260.0, 858.0], [4180.0, 38.64583333333334], [4244.0, 19.68888888888889], [4212.0, 21.425531914893618], [4196.0, 18.638297872340427], [4164.0, 18.170212765957444], [4148.0, 23.085106382978715], [4404.0, 645.0], [4564.0, 209.3666666666667], [4548.0, 720.2], [4532.0, 659.0], [4500.0, 736.6666666666666], [4484.0, 46.91304347826087], [4468.0, 33.8], [4452.0, 47.33333333333332], [4356.0, 684.0], [4372.0, 19.880952380952383], [4788.0, 658.0], [4644.0, 668.4], [4708.0, 48.59574468085108], [4756.0, 46.58333333333333], [4676.0, 20.66666666666666], [4149.0, 49.897959183673464], [4325.0, 643.0], [4309.0, 644.0], [4277.0, 642.0], [4213.0, 639.5], [4101.0, 21.022222222222226], [4133.0, 19.65909090909091], [4117.0, 18.952380952380953], [4229.0, 218.66666666666669], [4261.0, 18.93478260869565], [4197.0, 20.297872340425528], [4181.0, 24.020833333333332], [4165.0, 20.893617021276594], [4533.0, 699.875], [4453.0, 649.7777777777778], [4421.0, 670.0], [4437.0, 646.0], [4373.0, 646.0], [4357.0, 869.0], [4773.0, 63.89285714285712], [4757.0, 661.0], [4693.0, 655.0], [4725.0, 689.0], [4709.0, 657.0], [4789.0, 26.363636363636367], [2171.0, 81.75], [2059.0, 59.5], [2051.0, 225.0], [2075.0, 26.5], [2091.0, 15.923076923076922], [2123.0, 22.0], [2115.0, 8.076923076923077], [2155.0, 126.375], [2139.0, 114.0], [2131.0, 26.0], [2083.0, 34.0], [2243.0, 205.66666666666666], [2219.0, 177.33333333333334], [2227.0, 61.0], [2195.0, 38.0], [2187.0, 27.0], [2427.0, 21.0], [2395.0, 273.3333333333333], [2371.0, 25.5], [2379.0, 34.166666666666664], [2315.0, 95.33333333333333], [2307.0, 7.0], [2547.0, 115.46666666666665], [2555.0, 30.090909090909086], [2491.0, 217.5], [2451.0, 41.75], [2443.0, 96.0], [2459.0, 31.5], [2499.0, 361.0], [2475.0, 20.0], [2467.0, 269.8571428571429], [2667.0, 40.84], [2651.0, 193.5], [2643.0, 106.07692307692311], [2659.0, 232.4285714285714], [2635.0, 239.0], [2611.0, 286.0], [2603.0, 358.0], [2595.0, 416.0], [2619.0, 27.0], [2771.0, 109.85714285714286], [2763.0, 182.66666666666666], [2731.0, 866.5], [2915.0, 301.0], [2931.0, 109.87499999999999], [2819.0, 611.0], [2899.0, 39.0], [2875.0, 258.04545454545456], [2867.0, 75.4], [2851.0, 38.55555555555555], [2891.0, 34.0], [2883.0, 340.0], [3067.0, 22.0], [3051.0, 62.666666666666664], [3035.0, 112.0], [2947.0, 79.0], [2971.0, 23.0], [2963.0, 22.0], [2955.0, 50.854651162790674], [3099.0, 168.0], [3171.0, 22.0], [3075.0, 28.666666666666668], [3091.0, 160.5], [3123.0, 11.5], [3107.0, 130.5], [3155.0, 142.5], [3131.0, 38.0], [3299.0, 68.83333333333333], [3315.0, 19.0], [3291.0, 58.333333333333336], [3275.0, 34.25], [3227.0, 39.0], [3219.0, 29.2], [3203.0, 29.5], [3267.0, 57.166666666666664], [3251.0, 33.0], [3243.0, 11.666666666666666], [3235.0, 37.0], [3363.0, 89.0], [3355.0, 443.0], [3339.0, 35.0], [3403.0, 13.0], [3395.0, 10.333333333333334], [3523.0, 41.0], [3699.0, 112.22222222222223], [3627.0, 60.0], [3635.0, 49.0], [3651.0, 75.0], [3707.0, 117.0], [3811.0, 248.2], [3715.0, 144.77777777777777], [3763.0, 209.38095238095238], [3731.0, 170.37500000000003], [3739.0, 189.29411764705884], [3835.0, 257.0], [3803.0, 238.25], [3819.0, 251.0], [3827.0, 253.0], [3795.0, 233.2], [3787.0, 154.0], [3779.0, 226.0], [3859.0, 281.7142857142857], [3899.0, 345.0], [3875.0, 319.3333333333333], [3907.0, 347.0], [3883.0, 327.0], [3891.0, 333.0], [3851.0, 278.0], [3843.0, 261.0], [3955.0, 184.2045454545455], [3947.0, 582.0], [3939.0, 15.499999999999998], [3963.0, 568.0], [4027.0, 601.0], [3987.0, 578.5], [3995.0, 577.0], [3979.0, 620.3333333333334], [4091.0, 21.68085106382978], [3971.0, 20.45714285714286], [4310.0, 642.75], [4214.0, 26.999999999999982], [4118.0, 628.0], [4102.0, 635.0], [4278.0, 20.489361702127667], [4182.0, 21.291666666666675], [4166.0, 20.42105263157894], [4150.0, 22.355555555555554], [4566.0, 645.0], [4550.0, 49.37209302325583], [4534.0, 724.8], [4470.0, 647.2], [4390.0, 646.5], [4582.0, 17.4], [4518.0, 21.91111111111111], [4406.0, 13.833333333333336], [4774.0, 655.0], [4758.0, 72.20833333333333], [4646.0, 659.0], [4614.0, 656.0], [4790.0, 9.94736842105263], [4662.0, 17.04545454545455], [4311.0, 643.0], [4327.0, 643.0], [4295.0, 647.0], [4135.0, 629.0], [4279.0, 20.02173913043479], [4263.0, 22.93478260869566], [4247.0, 23.32631578947368], [4199.0, 19.873684210526314], [4183.0, 24.49473684210525], [4167.0, 24.21276595744681], [4599.0, 659.0], [4583.0, 656.5], [4551.0, 657.0], [4535.0, 675.0], [4375.0, 679.5], [4407.0, 644.6666666666666], [4503.0, 21.10869565217391], [4663.0, 656.0], [4759.0, 656.5], [4695.0, 46.222222222222236], [4631.0, 63.27906976744188], [4791.0, 24.176470588235286], [4711.0, 18.83333333333334], [4679.0, 19.51162790697674], [4647.0, 13.666666666666668], [4615.0, 23.311827956989255], [625.0, 5028.060150375941], [631.0, 1153.0625], [633.0, 1069.7641921397383], [629.0, 9273.0], [635.0, 568.1999999999999], [637.0, 1969.5000000000002], [669.0, 373.0], [671.0, 361.0], [667.0, 481.25], [665.0, 455.0], [661.0, 257.0], [657.0, 210.0], [651.0, 1108.0], [697.0, 441.0], [701.0, 458.0], [689.0, 459.0], [693.0, 516.6666666666666], [699.0, 525.5714285714286], [677.0, 368.0], [675.0, 528.0], [673.0, 562.0], [685.0, 375.0], [683.0, 490.6666666666667], [681.0, 516.0], [695.0, 567.5], [733.0, 79.5], [707.0, 344.0], [715.0, 391.8], [709.0, 104.49999999999999], [735.0, 7.0], [731.0, 3410.25], [717.0, 218.55882352941174], [719.0, 26.0], [721.0, 878.3961352657002], [723.0, 1247.714285714286], [725.0, 1041.3500000000001], [727.0, 146.0], [739.0, 2538.389261744965], [751.0, 2002.5], [747.0, 22.8], [749.0, 26.0], [737.0, 1606.5500000000004], [741.0, 957.9583333333336], [743.0, 558.2692307692308], [759.0, 30.25], [757.0, 29.0], [753.0, 9.166666666666666], [761.0, 31.666666666666668], [767.0, 12.166666666666668], [745.0, 11.0], [773.0, 25.0], [769.0, 18.0], [783.0, 11994.0], [771.0, 21.0], [779.0, 34.0], [785.0, 909.3809523809524], [787.0, 36.7], [789.0, 2833.225806451613], [775.0, 27.0], [795.0, 10179.0], [797.0, 10.549999999999999], [807.0, 16.0], [805.0, 12.9], [801.0, 9.0], [803.0, 10.0], [813.0, 3015.25], [809.0, 21.333333333333332], [825.0, 39.8], [829.0, 7287.0], [831.0, 2887.823529411765], [819.0, 24.714285714285715], [821.0, 29.0], [823.0, 31.142857142857142], [811.0, 20.5], [837.0, 2861.3846153846152], [839.0, 5552.0], [847.0, 3251.0], [843.0, 2578.882352941176], [835.0, 2643.2], [861.0, 1659.8915662650604], [859.0, 3833.7499999999986], [857.0, 7366.250000000001], [851.0, 3637.133333333333], [855.0, 681.7619047619048], [841.0, 3809.5], [893.0, 33.0], [889.0, 60.666666666666664], [883.0, 22.2], [885.0, 30.714285714285715], [871.0, 4014.269230769231], [867.0, 3748.5], [865.0, 44.0], [869.0, 32.2], [881.0, 19.0], [895.0, 26.5], [877.0, 368.25], [875.0, 350.5], [873.0, 6173.0], [879.0, 17.333333333333332], [927.0, 32.666666666666664], [923.0, 53.65217391304348], [917.0, 20.8], [897.0, 25.0], [921.0, 28.75], [915.0, 30.984374999999993], [913.0, 10.0], [953.0, 47.2], [959.0, 19.22222222222222], [957.0, 17.37837837837838], [935.0, 39.6], [933.0, 30.0], [931.0, 21.055555555555557], [951.0, 33.166666666666664], [943.0, 11.999999999999998], [949.0, 23.625], [945.0, 15.0], [937.0, 15.0], [939.0, 18.0], [941.0, 6.0], [987.0, 22.444444444444443], [991.0, 35.60869565217391], [979.0, 41.64705882352942], [977.0, 35.0], [967.0, 67.0], [963.0, 30.27272727272727], [961.0, 24.714285714285715], [965.0, 30.89473684210526], [973.0, 24.88888888888889], [975.0, 29.666666666666668], [989.0, 29.0], [983.0, 14.86206896551724], [981.0, 44.0], [997.0, 7.666666666666667], [1021.0, 16.07142857142857], [1009.0, 17.0], [1011.0, 9.2], [1015.0, 16.666666666666664], [1001.0, 21.0], [1003.0, 23.0], [1007.0, 16.026315789473685], [1005.0, 26.0], [1017.0, 26.0], [1013.0, 12.0], [1070.0, 13.0], [1066.0, 14.235294117647058], [1054.0, 15.285714285714286], [1050.0, 50.75], [1042.0, 7.333333333333333], [1046.0, 17.5], [1090.0, 18.0], [1122.0, 115.33333333333333], [1130.0, 118.40449438202246], [1134.0, 122.88888888888889], [1106.0, 58.6], [1110.0, 116.0], [1118.0, 12.545454545454543], [1098.0, 25.833333333333332], [1094.0, 21.0], [1182.0, 176.0], [1158.0, 130.0], [1178.0, 154.0], [1190.0, 230.6], [1194.0, 259.0], [1198.0, 239.5], [1186.0, 232.0], [1266.0, 380.0], [1242.0, 302.0], [1226.0, 20.92307692307692], [1238.0, 301.44444444444446], [1274.0, 304.0], [1270.0, 253.0], [1254.0, 349.4666666666667], [1278.0, 9.666666666666666], [1250.0, 10.750000000000002], [1230.0, 311.3333333333333], [1338.0, 327.5], [1310.0, 318.0], [1302.0, 323.0], [1294.0, 306.0], [1314.0, 334.2608695652174], [1342.0, 329.6666666666667], [1334.0, 358.0], [1318.0, 358.16759776536327], [1322.0, 323.0], [1326.0, 342.25], [1286.0, 306.0], [1358.0, 376.0], [1350.0, 313.5], [1346.0, 335.0], [1370.0, 349.0], [1374.0, 386.0], [1362.0, 372.0], [1406.0, 473.0], [1402.0, 469.18749999999994], [1398.0, 454.25], [1394.0, 430.0], [1378.0, 418.2142857142857], [1382.0, 377.0], [1386.0, 397.0], [1418.0, 460.32203389830516], [1434.0, 435.42857142857144], [1430.0, 438.77777777777777], [1466.0, 377.0], [1470.0, 380.0], [1462.0, 413.0], [1446.0, 441.5], [1414.0, 473.16666666666663], [1410.0, 473.66666666666663], [1478.0, 439.0], [1502.0, 385.75], [1498.0, 355.7142857142857], [1494.0, 379.0], [1490.0, 428.0], [1482.0, 413.5], [1474.0, 403.4], [1506.0, 366.99999999999994], [1510.0, 366.0], [1518.0, 403.99999999999994], [1526.0, 345.5], [1522.0, 396.0], [1486.0, 426.0], [1594.0, 281.3947368421052], [1546.0, 350.25], [1550.0, 307.3333333333333], [1590.0, 348.6666666666667], [1598.0, 265.25], [1570.0, 354.0], [1574.0, 363.0], [1578.0, 396.3333333333333], [1586.0, 271.0], [1562.0, 333.25], [1558.0, 102.31250000000001], [1658.0, 195.0], [1606.0, 238.0], [1602.0, 260.3333333333333], [1614.0, 242.66666666666669], [1662.0, 260.7586206896551], [1654.0, 229.0], [1650.0, 185.75], [1634.0, 258.57142857142856], [1642.0, 230.15789473684208], [1646.0, 228.0], [1638.0, 28.77777777777778], [1610.0, 281.6666666666667], [1626.0, 235.8], [1622.0, 323.0], [1670.0, 167.0], [1694.0, 161.0], [1690.0, 144.8], [1686.0, 141.33333333333334], [1682.0, 141.0], [1666.0, 266.5], [1678.0, 34.083333333333336], [1702.0, 191.5], [1706.0, 90.0], [1710.0, 157.0], [1718.0, 117.75], [1726.0, 94.25], [1714.0, 100.0], [1674.0, 197.57142857142858], [1786.0, 23.75], [1738.0, 102.0], [1730.0, 98.0], [1746.0, 8.69230769230769], [1774.0, 82.0], [1770.0, 126.0], [1782.0, 23.0], [1790.0, 84.0], [1742.0, 106.4], [1802.0, 15.333333333333334], [1798.0, 24.88888888888889], [1810.0, 18.0], [1818.0, 64.0], [1822.0, 120.0], [1834.0, 138.0], [1854.0, 7.0], [1862.0, 31.333333333333332], [1866.0, 74.0], [1858.0, 198.0], [1902.0, 57.333333333333336], [1906.0, 162.0], [1910.0, 117.0], [1930.0, 11.0], [1946.0, 24.0], [1934.0, 212.28571428571428], [1942.0, 191.4375], [1938.0, 84.66666666666667], [1974.0, 31.0], [2034.0, 212.5], [1994.0, 114.0], [2002.0, 69.8], [2006.0, 36.0], [2038.0, 121.0], [2042.0, 35.0], [2046.0, 39.5], [2014.0, 37.0], [2022.0, 225.0], [2026.0, 40.0], [2068.0, 36.666666666666664], [2052.0, 51.21052631578948], [2076.0, 29.583333333333332], [2140.0, 68.5], [2164.0, 66.28571428571429], [2172.0, 120.0], [2156.0, 112.0], [2124.0, 22.0], [2092.0, 183.0], [2084.0, 35.0], [2284.0, 297.0], [2236.0, 175.0], [2196.0, 73.66666666666667], [2204.0, 50.0], [2180.0, 22.809523809523803], [2404.0, 76.0], [2428.0, 41.92857142857143], [2316.0, 242.41666666666669], [2364.0, 287.0], [2396.0, 237.0], [2380.0, 54.666666666666664], [2372.0, 25.5], [2444.0, 89.6141304347826], [2556.0, 31.0], [2540.0, 124.0], [2524.0, 123.0], [2516.0, 33.846153846153854], [2484.0, 29.333333333333332], [2436.0, 73.0], [2468.0, 318.2857142857143], [2476.0, 19.0], [2660.0, 62.0], [2580.0, 96.5], [2684.0, 932.0], [2572.0, 416.0], [2652.0, 35.0], [2620.0, 100.33333333333334], [2636.0, 15.0], [2596.0, 17.0], [2764.0, 19.5], [2748.0, 9.0], [2716.0, 14.5], [2692.0, 395.75], [2708.0, 10.0], [2924.0, 52.0], [2932.0, 448.6666666666667], [2916.0, 235.57142857142856], [2908.0, 145.0], [2892.0, 7.555555555555555], [2884.0, 294.6666666666667], [2876.0, 394.0], [2820.0, 269.0], [2852.0, 36.333333333333336], [2868.0, 488.0], [3036.0, 105.42857142857143], [3020.0, 107.0], [2996.0, 90.5], [2956.0, 110.0], [3188.0, 46.368421052631575], [3140.0, 44.0], [3100.0, 10.8], [3116.0, 158.0], [3092.0, 56.67415730337078], [3076.0, 30.0], [3172.0, 6.8181818181818175], [3308.0, 82.0], [3324.0, 21.666666666666668], [3300.0, 70.0], [3220.0, 30.2], [3228.0, 39.5], [3244.0, 5.0], [3372.0, 197.22222222222237], [3356.0, 74.4], [3364.0, 106.0], [3332.0, 63.0], [3516.0, 16.0], [3500.0, 23.0], [3556.0, 62.0], [3700.0, 133.5], [3612.0, 6.571428571428571], [3724.0, 166.0], [3716.0, 100.74193548387098], [3732.0, 175.375], [3828.0, 253.66666666666666], [3836.0, 258.0], [3820.0, 251.0], [3812.0, 250.0], [3764.0, 213.0], [3772.0, 8.375], [3860.0, 285.25], [3916.0, 27.692307692307693], [3932.0, 360.25], [3924.0, 356.0], [3892.0, 334.6], [3884.0, 327.0], [3876.0, 15.115384615384615], [3852.0, 277.0], [3844.0, 260.0], [3956.0, 648.1818181818181], [4068.0, 628.0], [4052.0, 60.111111111111114], [3996.0, 578.6666666666666], [4012.0, 597.0], [3988.0, 569.0], [3980.0, 570.0], [4092.0, 16.911111111111108], [4060.0, 16.177777777777777], [4036.0, 17.36842105263158], [4248.0, 129.11111111111111], [4184.0, 38.875], [4216.0, 21.34965034965035], [4200.0, 24.255319148936167], [4168.0, 21.492537313432834], [4104.0, 21.71428571428571], [4552.0, 797.5], [4536.0, 659.5], [4440.0, 122.05769230769229], [4472.0, 32.09756097560976], [4392.0, 659.5714285714286], [4376.0, 644.0], [4600.0, 19.454545454545457], [4488.0, 17.340909090909097], [4360.0, 22.73809523809523], [4792.0, 660.0], [4760.0, 452.94736842105254], [4744.0, 698.0], [4648.0, 660.4285714285714], [4728.0, 660.0], [4345.0, 34.09756097560975], [4249.0, 645.1666666666667], [4217.0, 641.5], [4169.0, 633.0], [4201.0, 21.543478260869556], [4185.0, 20.727272727272723], [4153.0, 32.57731958762887], [4137.0, 17.80555555555556], [4313.0, 20.386363636363633], [4281.0, 20.46666666666666], [4265.0, 22.914893617021278], [4233.0, 21.0], [4601.0, 658.0], [4569.0, 647.2], [4537.0, 668.0], [4489.0, 642.0], [4457.0, 199.03333333333333], [4361.0, 653.0], [4585.0, 18.690476190476197], [4521.0, 22.24444444444445], [4505.0, 19.772727272727273], [4761.0, 87.76923076923077], [4665.0, 656.0], [4649.0, 193.0], [4633.0, 660.0], [4617.0, 664.0], [4777.0, 10.5], [2165.0, 54.54545454545455], [2149.0, 76.25], [2173.0, 88.66666666666666], [2157.0, 108.0], [2061.0, 57.0], [2085.0, 38.5], [2117.0, 18.0], [2141.0, 50.4], [2285.0, 220.5], [2261.0, 239.0], [2229.0, 63.0], [2245.0, 234.0], [2253.0, 193.0], [2197.0, 92.0], [2205.0, 107.0], [2189.0, 32.53846153846153], [2181.0, 21.0], [2429.0, 25.666666666666668], [2373.0, 304.0], [2421.0, 95.0], [2405.0, 187.75], [2365.0, 167.2857142857143], [2317.0, 259.14285714285717], [2397.0, 366.0], [2381.0, 41.5], [2389.0, 208.28571428571428], [2549.0, 61.833333333333336], [2557.0, 187.0], [2541.0, 34.0], [2517.0, 149.07692307692307], [2509.0, 13.0], [2493.0, 60.0], [2453.0, 26.333333333333332], [2437.0, 78.36842105263158], [2461.0, 32.0], [2469.0, 6.0], [2589.0, 81.22222222222223], [2685.0, 517.0], [2581.0, 134.7058823529412], [2645.0, 23.75], [2637.0, 17.0], [2629.0, 254.75], [2597.0, 19.5], [2757.0, 8.749999999999998], [2725.0, 424.42857142857144], [2773.0, 26.0], [2765.0, 20.0], [2709.0, 9.0], [2829.0, 35.0], [2909.0, 37.0], [2877.0, 515.5], [2821.0, 42.0], [2837.0, 38.0], [2853.0, 363.8], [2861.0, 9.882352941176471], [2901.0, 81.25000000000001], [2893.0, 140.27272727272728], [2885.0, 136.0], [2973.0, 23.0], [3037.0, 98.0], [2997.0, 53.0], [2957.0, 76.0], [2965.0, 9.375000000000002], [3101.0, 94.0], [3189.0, 69.45714285714287], [3093.0, 67.30555555555554], [3109.0, 82.66666666666667], [3117.0, 107.0], [3325.0, 24.142857142857146], [3309.0, 16.5], [3285.0, 49.0], [3293.0, 68.0], [3229.0, 40.0], [3245.0, 12.0], [3237.0, 41.2], [3253.0, 19.0], [3341.0, 37.5], [3349.0, 77.0], [3333.0, 58.0], [3437.0, 33.0], [3413.0, 7.0], [3517.0, 29.0], [3501.0, 24.0], [3541.0, 7.0], [3709.0, 120.71428571428571], [3701.0, 115.25], [3653.0, 7.769230769230768], [3829.0, 254.0], [3733.0, 181.63636363636365], [3717.0, 156.33333333333331], [3741.0, 192.33333333333334], [3837.0, 257.0], [3781.0, 5.0], [3805.0, 241.57142857142856], [3821.0, 251.0], [3789.0, 227.5], [3773.0, 218.0], [3861.0, 288.0], [3869.0, 299.2857142857143], [3877.0, 321.0], [3893.0, 339.5], [3917.0, 352.6428571428571], [3925.0, 357.0], [3885.0, 328.0], [3845.0, 261.0], [3957.0, 611.0], [4069.0, 629.0], [4013.0, 596.3333333333334], [3997.0, 49.81081081081081], [3981.0, 569.0], [4077.0, 21.765957446808514], [4346.0, 661.7272727272727], [4298.0, 654.0], [4250.0, 711.6666666666666], [4266.0, 37.020833333333336], [4234.0, 29.0531914893617], [4218.0, 20.333333333333336], [4186.0, 23.347368421052636], [4170.0, 20.260869565217394], [4154.0, 18.000000000000004], [4138.0, 18.404255319148934], [4474.0, 647.5], [4442.0, 646.8], [4570.0, 19.878048780487806], [4426.0, 21.69047619047619], [4378.0, 21.435897435897434], [4698.0, 656.0], [4778.0, 7.333333333333333], [4746.0, 20.234042553191486], [4730.0, 16.450000000000003], [4666.0, 22.04444444444444], [4618.0, 33.18461538461537], [4315.0, 645.0], [4347.0, 675.5], [4299.0, 38.65853658536586], [4155.0, 16.955555555555552], [4139.0, 20.02127659574468], [4123.0, 21.2391304347826], [4251.0, 59.73469387755102], [4203.0, 28.572916666666668], [4187.0, 26.68421052631578], [4171.0, 635.0], [4331.0, 20.20930232558139], [4267.0, 21.957894736842103], [4587.0, 658.5], [4603.0, 659.5], [4555.0, 755.3333333333334], [4539.0, 70.74999999999999], [4507.0, 931.0], [4475.0, 649.0], [4395.0, 889.0], [4363.0, 662.1818181818182], [4795.0, 91.0], [4763.0, 118.20833333333333], [4667.0, 657.0], [4619.0, 658.8], [4635.0, 659.0], [4651.0, 18.432432432432428], [1055.0, 22.217391304347828], [1051.0, 62.166666666666664], [1027.0, 8.75], [1039.0, 27.333333333333332], [1087.0, 17.0], [1063.0, 14.0], [1047.0, 20.0], [1043.0, 14.191489361702127], [1139.0, 127.0], [1095.0, 27.0], [1143.0, 125.5], [1147.0, 131.0], [1123.0, 81.0], [1135.0, 123.5], [1107.0, 59.0], [1111.0, 86.33333333333333], [1115.0, 68.0], [1119.0, 78.5], [1099.0, 26.0], [1091.0, 12.272727272727275], [1163.0, 134.0], [1183.0, 188.5], [1179.0, 175.3], [1171.0, 156.5], [1187.0, 221.0], [1195.0, 244.66666666666666], [1231.0, 264.2], [1247.0, 288.0], [1219.0, 298.0], [1243.0, 297.5], [1239.0, 280.55555555555554], [1271.0, 303.5], [1259.0, 390.0], [1255.0, 372.0], [1251.0, 303.0], [1227.0, 283.0], [1331.0, 332.3333333333333], [1291.0, 313.5], [1283.0, 307.0], [1299.0, 296.5], [1311.0, 72.85714285714286], [1335.0, 316.0], [1339.0, 369.0], [1343.0, 350.6666666666667], [1323.0, 333.6666666666667], [1327.0, 352.6666666666667], [1355.0, 342.0], [1363.0, 333.0], [1371.0, 383.6363636363636], [1375.0, 392.06818181818187], [1359.0, 365.6666666666667], [1407.0, 520.0], [1403.0, 449.0], [1399.0, 466.0], [1395.0, 427.25], [1379.0, 437.0], [1387.0, 423.3333333333333], [1391.0, 434.5], [1383.0, 402.0], [1351.0, 378.4], [1419.0, 419.2676056338029], [1431.0, 433.5], [1423.0, 474.3333333333333], [1471.0, 381.5], [1443.0, 473.5999999999999], [1447.0, 456.0], [1455.0, 414.92857142857144], [1415.0, 474.0], [1411.0, 35.1578947368421], [1483.0, 420.0], [1479.0, 420.0], [1499.0, 356.75], [1495.0, 407.5], [1491.0, 394.2], [1487.0, 429.0], [1507.0, 375.4285714285714], [1515.0, 406.0], [1519.0, 359.5], [1527.0, 346.5], [1595.0, 177.91666666666669], [1551.0, 324.3333333333333], [1547.0, 350.5], [1591.0, 275.0], [1571.0, 405.0], [1575.0, 264.0], [1579.0, 266.0], [1583.0, 381.0], [1587.0, 286.6666666666667], [1563.0, 342.9], [1611.0, 252.66666666666666], [1603.0, 270.25], [1663.0, 319.0], [1659.0, 273.3333333333333], [1651.0, 222.5], [1635.0, 245.0], [1647.0, 208.77777777777774], [1627.0, 238.5], [1679.0, 183.25], [1671.0, 171.94444444444443], [1687.0, 142.0], [1691.0, 150.8888888888889], [1683.0, 141.0], [1699.0, 177.66666666666666], [1707.0, 152.0], [1703.0, 90.0], [1711.0, 96.0], [1719.0, 102.0], [1723.0, 118.85714285714286], [1727.0, 112.0], [1715.0, 17.111111111111107], [1675.0, 271.2307692307692], [1779.0, 69.8], [1731.0, 99.4], [1735.0, 103.0], [1739.0, 103.0], [1775.0, 102.0], [1771.0, 101.0], [1783.0, 171.0], [1743.0, 108.5], [1807.0, 19.0], [1803.0, 18.0], [1843.0, 109.5], [1847.0, 140.0], [1815.0, 22.0], [1811.0, 19.0], [1819.0, 19.0], [1831.0, 161.0], [1855.0, 101.5], [1907.0, 73.55072463768116], [1859.0, 39.0], [1863.0, 131.66666666666666], [1867.0, 103.5], [1887.0, 14.0], [1883.0, 114.0], [1895.0, 22.571428571428573], [1891.0, 17.0], [1919.0, 31.0], [1915.0, 31.0], [1911.0, 174.0], [1875.0, 38.0], [1943.0, 108.5], [1931.0, 39.0], [1939.0, 85.0], [1947.0, 23.0], [2035.0, 139.8], [1991.0, 89.0], [2019.0, 66.33333333333333], [2011.0, 67.0], [2015.0, 5.666666666666666], [2027.0, 40.666666666666664], [2031.0, 278.0], [2047.0, 98.5], [2039.0, 34.0], [2078.0, 31.5], [2110.0, 11.5], [2054.0, 121.5], [2070.0, 156.0], [2134.0, 93.0], [2118.0, 35.57142857142858], [2174.0, 18.5], [2158.0, 171.0], [2166.0, 85.49999999999999], [2150.0, 34.33333333333333], [2094.0, 76.0], [2086.0, 39.0], [2302.0, 32.0], [2270.0, 301.0], [2206.0, 189.4], [2422.0, 87.0], [2406.0, 546.0], [2318.0, 332.0], [2366.0, 23.333333333333332], [2342.0, 9.466666666666669], [2550.0, 32.5], [2502.0, 115.71428571428571], [2494.0, 204.5], [2454.0, 27.0], [2438.0, 58.0], [2462.0, 49.588235294117645], [2542.0, 16.764705882352942], [2510.0, 372.5], [2518.0, 456.0], [2486.0, 129.3], [2470.0, 74.2], [2670.0, 15.5], [2590.0, 75.29166666666666], [2686.0, 682.0], [2582.0, 25.0], [2654.0, 29.0], [2606.0, 174.1], [2574.0, 9.333333333333332], [2598.0, 94.41666666666666], [2790.0, 10.071428571428573], [2766.0, 21.0], [2758.0, 51.5], [2726.0, 557.0], [2710.0, 542.0], [2718.0, 201.0], [2942.0, 158.5], [2886.0, 404.91803278688525], [2918.0, 59.10416666666667], [2822.0, 104.0], [2910.0, 810.0], [2894.0, 141.77777777777777], [2878.0, 247.0], [2870.0, 544.6666666666666], [2862.0, 63.0], [3070.0, 109.0], [3022.0, 46.0], [2982.0, 30.0], [2974.0, 33.90909090909091], [2950.0, 79.0], [2998.0, 8.285714285714285], [3174.0, 26.8], [3094.0, 36.160000000000004], [3126.0, 12.0], [3110.0, 202.0], [3134.0, 7.6000000000000005], [3318.0, 21.0], [3270.0, 28.75], [3230.0, 40.0], [3222.0, 32.0], [3286.0, 9.416666666666666], [3342.0, 50.83333333333333], [3366.0, 91.0], [3390.0, 5.0], [3422.0, 10.333333333333334], [3358.0, 8.142857142857142], [3662.0, 88.5], [3710.0, 120.39999999999999], [3702.0, 116.0], [3734.0, 186.2857142857143], [3718.0, 161.25], [3838.0, 258.0], [3822.0, 251.0], [3814.0, 250.0], [3798.0, 235.0], [3790.0, 231.0], [3742.0, 28.95], [3758.0, 195.0], [3774.0, 219.66666666666666], [3870.0, 311.8], [3862.0, 296.22222222222223], [3942.0, 498.4586466165416], [3950.0, 581.0], [3966.0, 650.0], [3958.0, 574.0], [3878.0, 320.0], [3902.0, 345.0], [3910.0, 350.0], [3926.0, 357.0], [3918.0, 354.3333333333333], [3854.0, 278.3333333333333], [3846.0, 266.16666666666663], [4046.0, 103.65999999999997], [4070.0, 632.5], [4014.0, 615.75], [4022.0, 601.25], [3998.0, 638.8333333333334], [3990.0, 608.0], [4030.0, 18.714285714285708], [4332.0, 647.0], [4300.0, 654.0], [4284.0, 33.73809523809524], [4188.0, 633.0], [4268.0, 21.0], [4220.0, 21.239130434782602], [4204.0, 22.377622377622377], [4172.0, 36.63636363636365], [4140.0, 20.23157894736842], [4572.0, 656.0], [4588.0, 658.0], [4556.0, 646.5], [4508.0, 688.4285714285714], [4476.0, 650.0], [4444.0, 638.0], [4604.0, 18.17777777777778], [4492.0, 20.404255319148934], [4396.0, 16.692307692307693], [4796.0, 94.5], [4780.0, 61.91666666666668], [4764.0, 134.0], [4732.0, 676.6666666666667], [4620.0, 662.0], [4748.0, 78.00813008130085], [4700.0, 19.23255813953488], [4317.0, 122.44897959183668], [4301.0, 642.0], [4253.0, 646.0], [4269.0, 19.02173913043478], [4237.0, 31.014705882352942], [4205.0, 21.770833333333343], [4189.0, 24.872340425531917], [4173.0, 48.0], [4141.0, 20.521739130434778], [4125.0, 18.047619047619047], [4397.0, 648.0], [4589.0, 657.0], [4573.0, 655.7647058823529], [4541.0, 650.0], [4525.0, 36.18181818181819], [4509.0, 19.642857142857146], [4493.0, 21.431818181818183], [4461.0, 647.0], [4445.0, 60.022727272727266], [4365.0, 641.0], [4557.0, 22.14634146341464], [4669.0, 32.380952380952394], [4765.0, 656.0], [4749.0, 62.0], [4733.0, 664.5], [4701.0, 656.0], [4685.0, 42.94871794871795], [4717.0, 31.25531914893616], [4637.0, 987.0], [4797.0, 13.0], [4781.0, 7.5], [2063.0, 64.25], [2055.0, 52.0], [2079.0, 32.666666666666664], [2119.0, 20.0], [2151.0, 59.1875], [2159.0, 159.44444444444446], [2175.0, 172.49999999999997], [2111.0, 16.875], [2295.0, 166.5], [2279.0, 228.0], [2207.0, 223.0], [2191.0, 84.0], [2303.0, 33.0], [2271.0, 240.5], [2247.0, 237.0], [2239.0, 29.57142857142857], [2215.0, 56.0], [2431.0, 25.5], [2399.0, 259.25], [2463.0, 197.8], [2543.0, 152.0], [2551.0, 36.666666666666664], [2519.0, 226.27272727272725], [2439.0, 5.0], [2455.0, 29.833333333333336], [2487.0, 32.0], [2479.0, 20.333333333333332], [2471.0, 8.692307692307692], [2591.0, 49.5], [2647.0, 163.13333333333335], [2583.0, 26.0], [2639.0, 19.0], [2631.0, 229.66666666666669], [2623.0, 196.0], [2615.0, 428.0], [2607.0, 57.21428571428571], [2599.0, 159.4], [2759.0, 12.0], [2719.0, 815.0], [2927.0, 127.75], [2935.0, 67.0], [2919.0, 89.75], [2831.0, 902.0], [2911.0, 812.0], [2879.0, 417.3243243243243], [2887.0, 1043.0], [3063.0, 158.0], [3071.0, 28.0], [2983.0, 94.0], [2951.0, 79.0], [2975.0, 28.0], [3079.0, 34.2], [3175.0, 27.2], [3103.0, 96.0], [3135.0, 40.0], [3087.0, 44.0], [3095.0, 33.57142857142857], [3143.0, 46.0], [3127.0, 72.9839743589744], [3119.0, 59.27777777777778], [3111.0, 109.0], [3167.0, 140.5], [3159.0, 16.0], [3151.0, 51.0], [3271.0, 34.166666666666664], [3223.0, 38.090909090909086], [3231.0, 45.333333333333336], [3263.0, 43.5], [3247.0, 14.5], [3239.0, 58.66666666666667], [3343.0, 68.0], [3351.0, 93.0], [3391.0, 10.0], [3335.0, 36.0], [3415.0, 6.0], [3407.0, 22.0], [3399.0, 8.0], [3439.0, 11.846153846153845], [3543.0, 7.0], [3639.0, 60.0], [3679.0, 98.0], [3687.0, 99.0], [3703.0, 115.0], [3711.0, 128.00000000000006], [3735.0, 189.0], [3719.0, 164.0], [3839.0, 258.5], [3807.0, 245.0], [3815.0, 249.0], [3775.0, 221.76666666666665], [3767.0, 214.25], [3791.0, 230.0], [3783.0, 228.0], [3743.0, 193.0], [3863.0, 294.0], [3871.0, 306.96], [3879.0, 321.0], [3903.0, 346.0], [3927.0, 357.5], [3887.0, 329.0], [3855.0, 40.73333333333334], [3847.0, 270.6], [3943.0, 628.7142857142858], [4079.0, 33.85106382978725], [4095.0, 46.32608695652173], [4063.0, 18.33333333333333], [4031.0, 630.2714285714287], [4071.0, 33.046511627906966], [4023.0, 603.0], [4015.0, 603.5], [3999.0, 582.0], [3983.0, 570.0], [4087.0, 19.977272727272727], [4302.0, 643.0], [4350.0, 653.0], [4222.0, 44.44444444444444], [4158.0, 32.74999999999999], [4110.0, 21.478260869565215], [4254.0, 20.11363636363637], [4238.0, 39.898550724637666], [4206.0, 19.957446808510635], [4190.0, 26.25531914893617], [4174.0, 27.162790697674424], [4574.0, 656.5882352941176], [4558.0, 667.4], [4510.0, 651.4], [4478.0, 647.0], [4430.0, 642.0], [4462.0, 20.500000000000004], [4798.0, 24.776041666666664], [4734.0, 660.0], [4718.0, 657.0], [4622.0, 72.12727272727271], [4766.0, 37.66666666666667], [4750.0, 61.666666666666664], [4638.0, 17.597701149425287], [4239.0, 164.25], [4271.0, 21.068181818181817], [4207.0, 22.76595744680851], [4191.0, 19.08510638297872], [4175.0, 40.372881355932236], [4159.0, 21.319148936170212], [4143.0, 18.936170212765955], [4383.0, 645.0], [4607.0, 34.088888888888896], [4559.0, 677.3000000000001], [4511.0, 651.0], [4495.0, 644.0], [4463.0, 647.0], [4479.0, 649.0], [4367.0, 37.0], [4591.0, 20.58695652173913], [4799.0, 663.25], [4655.0, 655.0], [4639.0, 660.0], [4767.0, 33.13333333333333], [4751.0, 63.0], [4623.0, 8.083333333333334]], "isOverall": false, "label": "AuthzUser", "isController": false}, {"data": [[4742.219093510286, 267.78838356829635]], "isOverall": false, "label": "AuthzUser-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 44419.21666666667, "minX": 1.63750482E12, "maxY": 8433910.966666667, "series": [{"data": [[1.63750488E12, 7983606.6], [1.63750554E12, 7949790.1], [1.63750524E12, 8433910.966666667], [1.63750494E12, 7467368.433333334], [1.63750512E12, 8083534.9], [1.63750482E12, 7181212.0], [1.63750548E12, 8093718.116666666], [1.63750518E12, 7830552.116666666], [1.63750536E12, 7987733.733333333], [1.63750506E12, 7741289.383333334], [1.63750572E12, 2124674.8666666667], [1.63750542E12, 7823081.566666666], [1.6375056E12, 7981065.483333333], [1.6375053E12, 7981992.633333334], [1.637505E12, 8138383.8], [1.63750566E12, 7959061.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63750488E12, 166140.5], [1.63750554E12, 166192.83333333334], [1.63750524E12, 176274.06666666668], [1.63750494E12, 156083.76666666666], [1.63750512E12, 168956.68333333332], [1.63750482E12, 149048.9], [1.63750548E12, 169120.9], [1.63750518E12, 163665.56666666668], [1.63750536E12, 166994.43333333332], [1.63750506E12, 161800.73333333334], [1.63750572E12, 44419.21666666667], [1.63750542E12, 163476.3], [1.6375056E12, 166846.91666666666], [1.6375053E12, 166852.48333333334], [1.637505E12, 170100.63333333333], [1.63750566E12, 166393.23333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63750572E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 22.03988466282228, "minX": 1.63750482E12, "maxY": 513.7204345013199, "series": [{"data": [[1.63750488E12, 26.01188987276337], [1.63750554E12, 470.5791324736197], [1.63750524E12, 333.84631781721714], [1.63750494E12, 391.37094760868615], [1.63750512E12, 304.18340114986154], [1.63750482E12, 292.37840192806806], [1.63750548E12, 31.71936407623169], [1.63750518E12, 485.2655691983266], [1.63750536E12, 22.03988466282228], [1.63750506E12, 381.3116871946589], [1.63750572E12, 23.4834262798422], [1.63750542E12, 513.7204345013199], [1.6375056E12, 207.4400200183485], [1.6375053E12, 22.51113483577161], [1.637505E12, 487.04684687633215], [1.63750566E12, 130.91137800675804]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63750572E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 21.93823127437576, "minX": 1.63750482E12, "maxY": 513.393298600473, "series": [{"data": [[1.63750488E12, 25.912034952557143], [1.63750554E12, 470.36114553676265], [1.63750524E12, 333.68729867997104], [1.63750494E12, 390.66462783979443], [1.63750512E12, 304.02301368960207], [1.63750482E12, 289.9696700037073], [1.63750548E12, 31.526414535400484], [1.63750518E12, 485.0316315771606], [1.63750536E12, 21.93823127437576], [1.63750506E12, 381.0552019541714], [1.63750572E12, 23.368632119807067], [1.63750542E12, 513.393298600473], [1.6375056E12, 207.31313704228666], [1.6375053E12, 22.375798622116267], [1.637505E12, 486.747062866122], [1.63750566E12, 130.72914924224773]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63750572E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.2376814456403733, "minX": 1.63750482E12, "maxY": 142.42002224694187, "series": [{"data": [[1.63750488E12, 1.637767438757984], [1.63750554E12, 5.118740579467437], [1.63750524E12, 1.5340428219541495], [1.63750494E12, 36.04194158136895], [1.63750512E12, 1.7054840782168947], [1.63750482E12, 142.42002224694187], [1.63750548E12, 1.2376814456403733], [1.63750518E12, 4.204295772252617], [1.63750536E12, 1.363362112070403], [1.63750506E12, 6.26801073419111], [1.63750572E12, 2.0108402782129007], [1.63750542E12, 7.873139918956694], [1.6375056E12, 1.3695053799316002], [1.6375053E12, 1.766810682769792], [1.637505E12, 8.972624930457794], [1.63750566E12, 7.445936904084829]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63750572E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.63750482E12, "maxY": 13718.0, "series": [{"data": [[1.63750488E12, 448.0], [1.63750554E12, 2081.0], [1.63750524E12, 1775.0], [1.63750494E12, 2308.0], [1.63750512E12, 1866.0], [1.63750482E12, 13718.0], [1.63750548E12, 835.0], [1.63750518E12, 2203.0], [1.63750536E12, 138.0], [1.63750506E12, 1915.0], [1.63750572E12, 619.0], [1.63750542E12, 2202.0], [1.6375056E12, 1593.0], [1.6375053E12, 248.0], [1.637505E12, 1823.0], [1.63750566E12, 1898.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63750488E12, 40.0], [1.63750554E12, 1440.9900000000016], [1.63750524E12, 45.0], [1.63750494E12, 2033.0], [1.63750512E12, 81.9900000000016], [1.63750482E12, 39.0], [1.63750548E12, 66.0], [1.63750518E12, 1391.9900000000016], [1.63750536E12, 58.0], [1.63750506E12, 1866.0], [1.63750572E12, 84.0], [1.63750542E12, 1326.0], [1.6375056E12, 80.0], [1.6375053E12, 58.9900000000016], [1.637505E12, 1709.0], [1.63750566E12, 1455.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63750488E12, 101.0], [1.63750554E12, 1540.999472732543], [1.63750524E12, 111.0], [1.63750494E12, 2103.999472732543], [1.63750512E12, 172.99947273254293], [1.63750482E12, 99.0], [1.63750548E12, 128.9963091278005], [1.63750518E12, 1450.999472732543], [1.63750536E12, 137.99736366271463], [1.63750506E12, 1914.0], [1.63750572E12, 619.0], [1.63750542E12, 1367.999472732543], [1.6375056E12, 131.0], [1.6375053E12, 140.0], [1.637505E12, 1782.0], [1.63750566E12, 1897.0]], "isOverall": false, "label": "99.99th percentile", "isController": false}, {"data": [[1.63750488E12, 100.0], [1.63750554E12, 1522.0], [1.63750524E12, 98.99861038207746], [1.63750494E12, 2094.0], [1.63750512E12, 104.99930519103873], [1.63750482E12, 49.99861038207746], [1.63750548E12, 106.0], [1.63750518E12, 1432.9993051910387], [1.63750536E12, 118.0], [1.63750506E12, 1907.0], [1.63750572E12, 538.0], [1.63750542E12, 1355.0], [1.6375056E12, 104.0], [1.6375053E12, 133.0], [1.637505E12, 1768.0], [1.63750566E12, 1891.9993051910387]], "isOverall": false, "label": "99.9th percentile", "isController": false}, {"data": [[1.63750488E12, 3.0], [1.63750554E12, 4.0], [1.63750524E12, 4.0], [1.63750494E12, 4.0], [1.63750512E12, 3.0], [1.63750482E12, 3.0], [1.63750548E12, 4.0], [1.63750518E12, 4.0], [1.63750536E12, 3.0], [1.63750506E12, 4.0], [1.63750572E12, 3.0], [1.63750542E12, 4.0], [1.6375056E12, 4.0], [1.6375053E12, 4.0], [1.637505E12, 4.0], [1.63750566E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63750488E12, 22.0], [1.63750554E12, 228.0], [1.63750524E12, 22.0], [1.63750494E12, 601.0], [1.63750512E12, 22.0], [1.63750482E12, 22.0], [1.63750548E12, 22.0], [1.63750518E12, 355.0], [1.63750536E12, 22.0], [1.63750506E12, 415.0], [1.63750572E12, 20.0], [1.63750542E12, 223.0], [1.6375056E12, 22.0], [1.6375053E12, 22.0], [1.637505E12, 582.0], [1.63750566E12, 106.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63750572E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 3.0, "maxY": 8478.5, "series": [{"data": [[3.0, 6.0], [7.0, 7.0], [36.0, 36.5], [52.0, 23.0], [55.0, 12.0], [66.0, 8478.5], [64.0, 15.0], [97.0, 3059.0], [99.0, 24.0], [105.0, 23.0], [115.0, 23.0], [121.0, 23.0], [120.0, 26.0], [123.0, 285.0], [124.0, 59.5], [126.0, 20.5], [131.0, 33.0], [150.0, 419.5], [159.0, 47.0], [156.0, 26.0], [192.0, 20.0], [195.0, 22.0], [194.0, 22.0], [212.0, 22.0], [224.0, 33.0], [237.0, 132.0], [238.0, 23.0], [242.0, 23.0], [240.0, 24.0], [252.0, 8.0], [250.0, 8.0], [269.0, 24.0], [281.0, 22.0], [303.0, 94.0], [291.0, 23.0], [302.0, 9.0], [308.0, 22.0], [329.0, 23.0], [335.0, 22.0], [352.0, 26.0], [357.0, 20.0], [383.0, 27.0], [393.0, 22.0], [391.0, 45.0], [400.0, 23.0], [417.0, 20.0], [419.0, 22.0], [421.0, 23.0], [432.0, 21.0], [434.0, 21.0], [452.0, 13.0], [475.0, 33.0], [472.0, 124.5], [480.0, 110.0], [483.0, 20.0], [504.0, 118.0], [510.0, 23.0], [496.0, 104.0], [501.0, 13.0], [532.0, 413.0], [522.0, 21.0], [519.0, 24.0], [572.0, 59.0], [578.0, 25.0], [628.0, 59.5], [630.0, 21.0], [660.0, 22.0], [642.0, 107.0], [667.0, 269.0], [679.0, 22.0], [683.0, 127.0], [678.0, 21.0], [672.0, 22.0], [721.0, 22.0], [709.0, 22.0], [741.0, 246.0], [756.0, 42.5], [814.0, 26.0], [819.0, 217.0], [830.0, 20.0], [836.0, 22.0], [853.0, 21.0], [862.0, 45.0], [840.0, 21.0], [869.0, 23.0], [893.0, 20.0], [907.0, 147.0], [923.0, 21.0], [903.0, 19.0], [919.0, 20.0], [896.0, 19.0], [954.0, 22.0], [953.0, 225.0], [959.0, 21.0], [955.0, 40.0], [958.0, 21.0], [947.0, 20.0], [989.0, 22.0], [987.0, 22.0], [984.0, 21.0], [968.0, 21.0], [970.0, 21.0], [964.0, 21.0], [961.0, 21.0], [967.0, 22.0], [974.0, 23.0], [972.0, 23.0], [971.0, 21.0], [975.0, 22.0], [983.0, 21.0], [982.0, 22.0], [985.0, 22.0], [986.0, 22.0], [981.0, 21.0], [988.0, 22.0], [978.0, 23.0], [980.0, 22.0], [979.0, 22.0], [990.0, 22.0], [976.0, 21.0], [991.0, 24.0], [977.0, 23.0], [1009.0, 22.0], [994.0, 22.0], [1012.0, 22.0], [1013.0, 22.0], [1014.0, 22.0], [1000.0, 22.0], [1011.0, 22.0], [993.0, 22.0], [992.0, 22.0], [1002.0, 23.0], [1003.0, 22.0], [1006.0, 22.0], [1004.0, 22.0], [1005.0, 22.0], [1007.0, 22.0], [1001.0, 22.0], [1010.0, 22.0], [1008.0, 22.0], [1021.0, 23.0], [999.0, 22.0], [998.0, 22.0], [996.0, 22.0], [995.0, 22.0], [997.0, 22.0], [1027.0, 22.0], [1029.0, 23.0], [1048.0, 22.0], [1034.0, 23.0], [1025.0, 23.0], [1077.0, 23.0], [1051.0, 22.0], [1044.0, 24.0], [1075.0, 24.0], [1102.0, 1438.0], [1153.0, 41.0], [1167.0, 269.0], [1268.0, 90.0], [1226.0, 290.5], [1218.0, 304.0], [1229.0, 28.0], [1225.0, 27.0], [1320.0, 368.0], [1310.0, 250.0], [1343.0, 29.0], [1351.0, 384.0], [1407.0, 285.0], [1404.0, 226.5], [1418.0, 29.0], [1428.0, 29.0], [1452.0, 29.0], [1441.0, 30.0], [1410.0, 363.5], [1454.0, 35.0], [1450.0, 76.5], [1524.0, 144.0], [1483.0, 40.0], [1512.0, 96.0], [1477.0, 80.0], [1486.0, 33.0], [1589.0, 39.0], [1599.0, 292.5], [1610.0, 42.0], [1633.0, 437.0], [1628.0, 291.5], [1709.0, 54.0], [1716.0, 111.0], [1674.0, 157.5], [1690.0, 1337.0], [1772.0, 338.0], [1779.0, 101.0], [1776.0, 166.0], [1775.0, 634.0], [1831.0, 203.0], [1844.0, 196.0], [1812.0, 318.5], [1838.0, 71.0], [1819.0, 324.0], [1903.0, 273.0], [1869.0, 257.0], [1862.0, 364.0], [1872.0, 368.5], [1938.0, 362.0], [1951.0, 356.0], [1974.0, 347.0], [1950.0, 593.5], [1935.0, 52.0], [1942.0, 395.0], [1998.0, 216.0], [2171.0, 297.0], [2175.0, 513.0], [2096.0, 449.0], [2139.0, 323.0], [2166.0, 709.5], [2108.0, 357.0], [2145.0, 307.0], [2148.0, 439.5], [2117.0, 60.0], [2225.0, 392.0], [2269.0, 585.0], [2214.0, 222.0], [2221.0, 210.0], [2213.0, 489.0], [2266.0, 164.0], [2224.0, 331.0], [2293.0, 231.0], [2262.0, 428.0], [2247.0, 337.0], [2243.0, 307.0], [2358.0, 346.0], [2352.0, 506.5], [2384.0, 315.0], [2316.0, 487.0], [2353.0, 207.0], [2375.0, 710.0], [2342.0, 992.0], [2391.0, 977.0], [2335.0, 158.0], [2418.0, 1135.0], [2544.0, 787.5], [2512.0, 317.0], [2478.0, 200.0], [2470.0, 763.5], [2472.0, 976.0], [2525.0, 1320.0], [2521.0, 374.0], [2516.0, 499.0], [2445.0, 85.0], [2531.0, 1018.0], [2537.0, 754.0], [2541.0, 220.0], [2496.0, 246.0], [2549.0, 973.0], [2510.0, 335.0], [2484.0, 451.5], [2481.0, 435.0], [2659.0, 1362.0], [2631.0, 497.0], [2646.0, 174.0], [2610.0, 762.0], [2594.0, 1328.5], [2596.0, 193.0], [2613.0, 1238.0], [2682.0, 1079.0], [2687.0, 1074.0], [2664.0, 847.0], [2673.0, 589.0], [2572.0, 49.0], [2585.0, 1079.0], [2577.0, 1049.0], [2614.0, 239.0], [2563.0, 1131.0], [2561.0, 766.0], [2623.0, 188.0], [2565.0, 801.0], [2719.0, 1314.0], [2739.0, 503.0], [2748.0, 926.0], [2802.0, 505.0], [2770.0, 956.0], [2772.0, 824.5], [2803.0, 1364.0], [2789.0, 715.0], [2796.0, 236.0], [2751.0, 594.0], [2712.0, 1033.0], [2693.0, 806.0], [2692.0, 925.0], [2800.0, 1585.0], [2753.0, 1148.0], [2814.0, 938.5], [2823.0, 1412.0], [2861.0, 1410.0], [2886.0, 1440.0], [2933.0, 995.0], [2879.0, 1349.0], [2923.0, 466.0], [2918.0, 849.5], [2833.0, 894.0], [2820.0, 332.0], [2873.0, 832.5], [2926.0, 960.5], [3000.0, 386.0], [3049.0, 600.0], [3039.0, 1199.0], [3056.0, 1047.0], [2971.0, 1004.0], [3116.0, 1263.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3116.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 3.0, "maxY": 7746.0, "series": [{"data": [[3.0, 6.0], [7.0, 7.0], [36.0, 36.5], [52.0, 22.0], [55.0, 11.0], [66.0, 7746.0], [64.0, 15.0], [97.0, 3059.0], [99.0, 24.0], [105.0, 23.0], [115.0, 23.0], [121.0, 23.0], [120.0, 26.0], [123.0, 285.0], [124.0, 59.5], [126.0, 20.5], [131.0, 33.0], [150.0, 419.5], [159.0, 47.0], [156.0, 26.0], [192.0, 20.0], [195.0, 22.0], [194.0, 21.5], [212.0, 21.5], [224.0, 33.0], [237.0, 122.5], [238.0, 23.0], [242.0, 23.0], [240.0, 23.5], [252.0, 8.0], [250.0, 8.0], [269.0, 24.0], [281.0, 22.0], [303.0, 94.0], [291.0, 23.0], [302.0, 9.0], [308.0, 22.0], [329.0, 23.0], [335.0, 22.0], [352.0, 26.0], [357.0, 20.0], [383.0, 27.0], [393.0, 21.0], [391.0, 45.0], [400.0, 22.0], [417.0, 20.0], [419.0, 21.0], [421.0, 23.0], [432.0, 21.0], [434.0, 21.0], [452.0, 13.0], [475.0, 33.0], [472.0, 124.5], [480.0, 109.5], [483.0, 20.0], [504.0, 117.0], [510.0, 23.0], [496.0, 104.0], [501.0, 13.0], [532.0, 412.0], [522.0, 21.0], [519.0, 24.0], [572.0, 58.5], [578.0, 25.0], [628.0, 59.5], [630.0, 21.0], [660.0, 22.0], [642.0, 107.0], [667.0, 269.0], [679.0, 22.0], [683.0, 127.0], [678.0, 21.0], [672.0, 22.0], [721.0, 22.0], [709.0, 22.0], [741.0, 246.0], [756.0, 42.0], [814.0, 26.0], [819.0, 216.0], [830.0, 20.0], [836.0, 22.0], [853.0, 21.0], [862.0, 44.5], [840.0, 21.0], [869.0, 23.0], [893.0, 20.0], [907.0, 147.0], [923.0, 20.0], [903.0, 19.0], [919.0, 20.0], [896.0, 19.0], [954.0, 22.0], [953.0, 224.0], [959.0, 21.0], [955.0, 40.0], [958.0, 21.0], [947.0, 20.0], [989.0, 22.0], [987.0, 22.0], [984.0, 21.0], [968.0, 21.0], [970.0, 21.0], [964.0, 21.0], [961.0, 21.0], [967.0, 22.0], [974.0, 23.0], [972.0, 23.0], [971.0, 21.0], [975.0, 22.0], [983.0, 21.0], [982.0, 21.0], [985.0, 22.0], [986.0, 22.0], [981.0, 21.0], [988.0, 22.0], [978.0, 23.0], [980.0, 22.0], [979.0, 22.0], [990.0, 22.0], [976.0, 21.0], [991.0, 23.0], [977.0, 23.0], [1009.0, 22.0], [994.0, 22.0], [1012.0, 22.0], [1013.0, 22.0], [1014.0, 22.0], [1000.0, 22.0], [1011.0, 22.0], [993.0, 22.0], [992.0, 22.0], [1002.0, 22.0], [1003.0, 22.0], [1006.0, 22.0], [1004.0, 22.0], [1005.0, 22.0], [1007.0, 22.0], [1001.0, 22.0], [1010.0, 22.0], [1008.0, 22.0], [1021.0, 23.0], [999.0, 22.0], [998.0, 22.0], [996.0, 22.0], [995.0, 22.0], [997.0, 22.0], [1027.0, 22.0], [1029.0, 23.0], [1048.0, 22.0], [1034.0, 22.0], [1025.0, 23.0], [1077.0, 23.0], [1051.0, 22.0], [1044.0, 24.0], [1075.0, 24.0], [1102.0, 1437.5], [1153.0, 41.0], [1167.0, 269.0], [1268.0, 45.0], [1226.0, 290.5], [1218.0, 303.5], [1229.0, 28.0], [1225.0, 26.0], [1320.0, 367.5], [1310.0, 249.5], [1343.0, 29.0], [1351.0, 383.5], [1407.0, 285.0], [1404.0, 226.5], [1418.0, 28.0], [1428.0, 29.0], [1452.0, 29.0], [1441.0, 29.0], [1410.0, 363.5], [1454.0, 35.0], [1450.0, 76.0], [1524.0, 144.0], [1483.0, 40.0], [1512.0, 96.0], [1477.0, 79.0], [1486.0, 33.0], [1589.0, 39.0], [1599.0, 292.5], [1610.0, 42.0], [1633.0, 437.0], [1628.0, 291.5], [1709.0, 51.0], [1716.0, 111.0], [1674.0, 157.5], [1690.0, 1337.0], [1772.0, 338.0], [1779.0, 101.0], [1776.0, 166.0], [1775.0, 633.0], [1831.0, 203.0], [1844.0, 196.0], [1812.0, 318.5], [1838.0, 70.0], [1819.0, 324.0], [1903.0, 273.0], [1869.0, 257.0], [1862.0, 364.0], [1872.0, 368.0], [1938.0, 361.5], [1951.0, 356.0], [1974.0, 346.0], [1950.0, 593.5], [1935.0, 52.0], [1942.0, 395.0], [1998.0, 216.0], [2171.0, 297.0], [2175.0, 513.0], [2096.0, 449.0], [2139.0, 323.0], [2166.0, 709.0], [2108.0, 356.5], [2145.0, 306.0], [2148.0, 439.0], [2117.0, 58.0], [2225.0, 392.0], [2269.0, 583.0], [2214.0, 222.0], [2221.0, 209.0], [2213.0, 489.0], [2266.0, 164.0], [2224.0, 330.5], [2293.0, 230.0], [2262.0, 428.0], [2247.0, 337.0], [2243.0, 307.0], [2358.0, 346.0], [2352.0, 506.0], [2384.0, 315.0], [2316.0, 486.5], [2353.0, 207.0], [2375.0, 710.0], [2342.0, 992.0], [2391.0, 977.0], [2335.0, 158.0], [2418.0, 1134.0], [2544.0, 787.0], [2512.0, 317.0], [2478.0, 200.0], [2470.0, 763.5], [2472.0, 976.0], [2525.0, 1320.0], [2521.0, 374.0], [2516.0, 499.0], [2445.0, 85.0], [2531.0, 1018.0], [2537.0, 754.0], [2541.0, 220.0], [2496.0, 246.0], [2549.0, 973.0], [2510.0, 334.5], [2484.0, 451.5], [2481.0, 435.0], [2659.0, 1362.0], [2631.0, 497.0], [2646.0, 172.0], [2610.0, 762.0], [2594.0, 1328.5], [2596.0, 192.0], [2613.0, 1238.0], [2682.0, 1078.5], [2687.0, 1073.0], [2664.0, 847.0], [2673.0, 589.0], [2572.0, 49.0], [2585.0, 1079.0], [2577.0, 1049.0], [2614.0, 239.0], [2563.0, 1131.0], [2561.0, 766.0], [2623.0, 187.0], [2565.0, 801.0], [2719.0, 1301.0], [2739.0, 502.0], [2748.0, 925.5], [2802.0, 505.0], [2770.0, 956.0], [2772.0, 824.0], [2803.0, 1363.0], [2789.0, 714.0], [2796.0, 235.5], [2751.0, 594.0], [2712.0, 1033.0], [2693.0, 806.0], [2692.0, 924.5], [2800.0, 1584.0], [2753.0, 1148.0], [2814.0, 938.5], [2823.0, 1411.0], [2861.0, 1410.0], [2886.0, 1440.0], [2933.0, 995.0], [2879.0, 1349.0], [2923.0, 466.0], [2918.0, 849.0], [2833.0, 894.0], [2820.0, 332.0], [2873.0, 832.5], [2926.0, 960.5], [3000.0, 386.0], [3049.0, 600.0], [3039.0, 1199.0], [3056.0, 1047.0], [2971.0, 1004.0], [3116.0, 1263.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3116.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 265.31666666666666, "minX": 1.63750482E12, "maxY": 1036.7166666666667, "series": [{"data": [[1.63750488E12, 999.0833333333334], [1.63750554E12, 995.1666666666666], [1.63750524E12, 999.4166666666666], [1.63750494E12, 934.55], [1.63750512E12, 1011.7166666666667], [1.63750482E12, 899.6333333333333], [1.63750548E12, 998.4333333333333], [1.63750518E12, 1036.7166666666667], [1.63750536E12, 999.8], [1.63750506E12, 968.8666666666667], [1.63750572E12, 265.31666666666666], [1.63750542E12, 992.6166666666667], [1.6375056E12, 999.3333333333334], [1.6375053E12, 999.2666666666667], [1.637505E12, 1018.3833333333333], [1.63750566E12, 996.7833333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63750572E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 265.98333333333335, "minX": 1.63750482E12, "maxY": 1055.5333333333333, "series": [{"data": [[1.63750488E12, 999.45], [1.63750554E12, 995.1666666666666], [1.63750524E12, 1055.5333333333333], [1.63750494E12, 934.6333333333333], [1.63750512E12, 1011.7166666666667], [1.63750482E12, 899.0], [1.63750548E12, 1012.7], [1.63750518E12, 980.0333333333333], [1.63750536E12, 999.9666666666667], [1.63750506E12, 968.8666666666667], [1.63750572E12, 265.98333333333335], [1.63750542E12, 978.9], [1.6375056E12, 999.0833333333334], [1.6375053E12, 999.1166666666667], [1.637505E12, 1018.5666666666667], [1.63750566E12, 996.3666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63750572E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 265.98333333333335, "minX": 1.63750482E12, "maxY": 1055.5333333333333, "series": [{"data": [[1.63750488E12, 999.45], [1.63750554E12, 995.1666666666666], [1.63750524E12, 1055.5333333333333], [1.63750494E12, 934.6333333333333], [1.63750512E12, 1011.7166666666667], [1.63750482E12, 899.0], [1.63750548E12, 1012.7], [1.63750518E12, 980.0333333333333], [1.63750536E12, 999.9666666666667], [1.63750506E12, 968.8666666666667], [1.63750572E12, 265.98333333333335], [1.63750542E12, 978.9], [1.6375056E12, 999.0833333333334], [1.6375053E12, 999.1166666666667], [1.637505E12, 1018.5666666666667], [1.63750566E12, 996.3666666666667]], "isOverall": false, "label": "AuthzUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63750572E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 265.98333333333335, "minX": 1.63750482E12, "maxY": 1055.5333333333333, "series": [{"data": [[1.63750488E12, 999.45], [1.63750554E12, 995.1666666666666], [1.63750524E12, 1055.5333333333333], [1.63750494E12, 934.6333333333333], [1.63750512E12, 1011.7166666666667], [1.63750482E12, 899.0], [1.63750548E12, 1012.7], [1.63750518E12, 980.0333333333333], [1.63750536E12, 999.9666666666667], [1.63750506E12, 968.8666666666667], [1.63750572E12, 265.98333333333335], [1.63750542E12, 978.9], [1.6375056E12, 999.0833333333334], [1.6375053E12, 999.1166666666667], [1.637505E12, 1018.5666666666667], [1.63750566E12, 996.3666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63750572E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

