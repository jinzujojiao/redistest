/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 6544.0, "series": [{"data": [[0.0, 3.0], [0.1, 6.0], [0.2, 6.0], [0.3, 7.0], [0.4, 7.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 10.0], [4.2, 10.0], [4.3, 10.0], [4.4, 10.0], [4.5, 10.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 10.0], [5.4, 10.0], [5.5, 10.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 13.0], [12.3, 13.0], [12.4, 13.0], [12.5, 13.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 15.0], [15.6, 15.0], [15.7, 15.0], [15.8, 15.0], [15.9, 15.0], [16.0, 15.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 15.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 16.0], [17.4, 16.0], [17.5, 16.0], [17.6, 16.0], [17.7, 16.0], [17.8, 16.0], [17.9, 16.0], [18.0, 16.0], [18.1, 16.0], [18.2, 16.0], [18.3, 16.0], [18.4, 16.0], [18.5, 16.0], [18.6, 16.0], [18.7, 16.0], [18.8, 16.0], [18.9, 16.0], [19.0, 16.0], [19.1, 16.0], [19.2, 16.0], [19.3, 16.0], [19.4, 16.0], [19.5, 16.0], [19.6, 16.0], [19.7, 16.0], [19.8, 17.0], [19.9, 17.0], [20.0, 17.0], [20.1, 17.0], [20.2, 17.0], [20.3, 17.0], [20.4, 17.0], [20.5, 17.0], [20.6, 17.0], [20.7, 17.0], [20.8, 17.0], [20.9, 17.0], [21.0, 17.0], [21.1, 17.0], [21.2, 17.0], [21.3, 17.0], [21.4, 17.0], [21.5, 17.0], [21.6, 17.0], [21.7, 17.0], [21.8, 17.0], [21.9, 17.0], [22.0, 17.0], [22.1, 17.0], [22.2, 17.0], [22.3, 17.0], [22.4, 18.0], [22.5, 18.0], [22.6, 18.0], [22.7, 18.0], [22.8, 18.0], [22.9, 18.0], [23.0, 18.0], [23.1, 18.0], [23.2, 18.0], [23.3, 18.0], [23.4, 18.0], [23.5, 18.0], [23.6, 18.0], [23.7, 18.0], [23.8, 18.0], [23.9, 18.0], [24.0, 18.0], [24.1, 18.0], [24.2, 18.0], [24.3, 18.0], [24.4, 18.0], [24.5, 18.0], [24.6, 18.0], [24.7, 18.0], [24.8, 18.0], [24.9, 18.0], [25.0, 18.0], [25.1, 18.0], [25.2, 19.0], [25.3, 19.0], [25.4, 19.0], [25.5, 19.0], [25.6, 19.0], [25.7, 19.0], [25.8, 19.0], [25.9, 19.0], [26.0, 19.0], [26.1, 19.0], [26.2, 19.0], [26.3, 19.0], [26.4, 19.0], [26.5, 19.0], [26.6, 19.0], [26.7, 19.0], [26.8, 19.0], [26.9, 19.0], [27.0, 19.0], [27.1, 19.0], [27.2, 19.0], [27.3, 19.0], [27.4, 19.0], [27.5, 19.0], [27.6, 19.0], [27.7, 19.0], [27.8, 19.0], [27.9, 19.0], [28.0, 20.0], [28.1, 20.0], [28.2, 20.0], [28.3, 20.0], [28.4, 20.0], [28.5, 20.0], [28.6, 20.0], [28.7, 20.0], [28.8, 20.0], [28.9, 20.0], [29.0, 20.0], [29.1, 20.0], [29.2, 20.0], [29.3, 20.0], [29.4, 20.0], [29.5, 20.0], [29.6, 20.0], [29.7, 20.0], [29.8, 20.0], [29.9, 20.0], [30.0, 20.0], [30.1, 20.0], [30.2, 20.0], [30.3, 20.0], [30.4, 20.0], [30.5, 20.0], [30.6, 20.0], [30.7, 20.0], [30.8, 20.0], [30.9, 21.0], [31.0, 21.0], [31.1, 21.0], [31.2, 21.0], [31.3, 21.0], [31.4, 21.0], [31.5, 21.0], [31.6, 21.0], [31.7, 21.0], [31.8, 21.0], [31.9, 21.0], [32.0, 21.0], [32.1, 21.0], [32.2, 21.0], [32.3, 21.0], [32.4, 21.0], [32.5, 21.0], [32.6, 21.0], [32.7, 21.0], [32.8, 21.0], [32.9, 21.0], [33.0, 21.0], [33.1, 21.0], [33.2, 21.0], [33.3, 21.0], [33.4, 21.0], [33.5, 21.0], [33.6, 21.0], [33.7, 21.0], [33.8, 21.0], [33.9, 22.0], [34.0, 22.0], [34.1, 22.0], [34.2, 22.0], [34.3, 22.0], [34.4, 22.0], [34.5, 22.0], [34.6, 22.0], [34.7, 22.0], [34.8, 22.0], [34.9, 22.0], [35.0, 22.0], [35.1, 22.0], [35.2, 22.0], [35.3, 22.0], [35.4, 22.0], [35.5, 22.0], [35.6, 22.0], [35.7, 22.0], [35.8, 22.0], [35.9, 22.0], [36.0, 22.0], [36.1, 22.0], [36.2, 22.0], [36.3, 22.0], [36.4, 22.0], [36.5, 22.0], [36.6, 22.0], [36.7, 22.0], [36.8, 22.0], [36.9, 23.0], [37.0, 23.0], [37.1, 23.0], [37.2, 23.0], [37.3, 23.0], [37.4, 23.0], [37.5, 23.0], [37.6, 23.0], [37.7, 23.0], [37.8, 23.0], [37.9, 23.0], [38.0, 23.0], [38.1, 23.0], [38.2, 23.0], [38.3, 23.0], [38.4, 23.0], [38.5, 23.0], [38.6, 23.0], [38.7, 23.0], [38.8, 23.0], [38.9, 23.0], [39.0, 23.0], [39.1, 23.0], [39.2, 23.0], [39.3, 23.0], [39.4, 23.0], [39.5, 23.0], [39.6, 23.0], [39.7, 23.0], [39.8, 24.0], [39.9, 24.0], [40.0, 24.0], [40.1, 24.0], [40.2, 24.0], [40.3, 24.0], [40.4, 24.0], [40.5, 24.0], [40.6, 24.0], [40.7, 24.0], [40.8, 24.0], [40.9, 24.0], [41.0, 24.0], [41.1, 24.0], [41.2, 24.0], [41.3, 24.0], [41.4, 24.0], [41.5, 24.0], [41.6, 24.0], [41.7, 24.0], [41.8, 24.0], [41.9, 24.0], [42.0, 24.0], [42.1, 24.0], [42.2, 24.0], [42.3, 24.0], [42.4, 24.0], [42.5, 24.0], [42.6, 24.0], [42.7, 25.0], [42.8, 25.0], [42.9, 25.0], [43.0, 25.0], [43.1, 25.0], [43.2, 25.0], [43.3, 25.0], [43.4, 25.0], [43.5, 25.0], [43.6, 25.0], [43.7, 25.0], [43.8, 25.0], [43.9, 25.0], [44.0, 25.0], [44.1, 25.0], [44.2, 25.0], [44.3, 25.0], [44.4, 25.0], [44.5, 25.0], [44.6, 25.0], [44.7, 25.0], [44.8, 25.0], [44.9, 25.0], [45.0, 25.0], [45.1, 25.0], [45.2, 25.0], [45.3, 25.0], [45.4, 26.0], [45.5, 26.0], [45.6, 26.0], [45.7, 26.0], [45.8, 26.0], [45.9, 26.0], [46.0, 26.0], [46.1, 26.0], [46.2, 26.0], [46.3, 26.0], [46.4, 26.0], [46.5, 26.0], [46.6, 26.0], [46.7, 26.0], [46.8, 26.0], [46.9, 26.0], [47.0, 26.0], [47.1, 26.0], [47.2, 26.0], [47.3, 26.0], [47.4, 26.0], [47.5, 26.0], [47.6, 26.0], [47.7, 26.0], [47.8, 26.0], [47.9, 26.0], [48.0, 27.0], [48.1, 27.0], [48.2, 27.0], [48.3, 27.0], [48.4, 27.0], [48.5, 27.0], [48.6, 27.0], [48.7, 27.0], [48.8, 27.0], [48.9, 27.0], [49.0, 27.0], [49.1, 27.0], [49.2, 27.0], [49.3, 27.0], [49.4, 27.0], [49.5, 27.0], [49.6, 27.0], [49.7, 27.0], [49.8, 27.0], [49.9, 27.0], [50.0, 27.0], [50.1, 27.0], [50.2, 27.0], [50.3, 27.0], [50.4, 28.0], [50.5, 28.0], [50.6, 28.0], [50.7, 28.0], [50.8, 28.0], [50.9, 28.0], [51.0, 28.0], [51.1, 28.0], [51.2, 28.0], [51.3, 28.0], [51.4, 28.0], [51.5, 28.0], [51.6, 28.0], [51.7, 28.0], [51.8, 28.0], [51.9, 28.0], [52.0, 28.0], [52.1, 28.0], [52.2, 28.0], [52.3, 28.0], [52.4, 28.0], [52.5, 28.0], [52.6, 28.0], [52.7, 29.0], [52.8, 29.0], [52.9, 29.0], [53.0, 29.0], [53.1, 29.0], [53.2, 29.0], [53.3, 29.0], [53.4, 29.0], [53.5, 29.0], [53.6, 29.0], [53.7, 29.0], [53.8, 29.0], [53.9, 29.0], [54.0, 29.0], [54.1, 29.0], [54.2, 29.0], [54.3, 29.0], [54.4, 29.0], [54.5, 29.0], [54.6, 29.0], [54.7, 30.0], [54.8, 30.0], [54.9, 30.0], [55.0, 30.0], [55.1, 30.0], [55.2, 30.0], [55.3, 30.0], [55.4, 30.0], [55.5, 30.0], [55.6, 30.0], [55.7, 30.0], [55.8, 30.0], [55.9, 30.0], [56.0, 30.0], [56.1, 30.0], [56.2, 30.0], [56.3, 30.0], [56.4, 30.0], [56.5, 30.0], [56.6, 31.0], [56.7, 31.0], [56.8, 31.0], [56.9, 31.0], [57.0, 31.0], [57.1, 31.0], [57.2, 31.0], [57.3, 31.0], [57.4, 31.0], [57.5, 31.0], [57.6, 31.0], [57.7, 31.0], [57.8, 31.0], [57.9, 31.0], [58.0, 31.0], [58.1, 31.0], [58.2, 32.0], [58.3, 32.0], [58.4, 32.0], [58.5, 32.0], [58.6, 32.0], [58.7, 32.0], [58.8, 32.0], [58.9, 32.0], [59.0, 32.0], [59.1, 32.0], [59.2, 32.0], [59.3, 32.0], [59.4, 32.0], [59.5, 32.0], [59.6, 33.0], [59.7, 33.0], [59.8, 33.0], [59.9, 33.0], [60.0, 33.0], [60.1, 33.0], [60.2, 33.0], [60.3, 33.0], [60.4, 33.0], [60.5, 33.0], [60.6, 33.0], [60.7, 33.0], [60.8, 34.0], [60.9, 34.0], [61.0, 34.0], [61.1, 34.0], [61.2, 34.0], [61.3, 34.0], [61.4, 34.0], [61.5, 34.0], [61.6, 34.0], [61.7, 34.0], [61.8, 35.0], [61.9, 35.0], [62.0, 35.0], [62.1, 35.0], [62.2, 35.0], [62.3, 35.0], [62.4, 35.0], [62.5, 35.0], [62.6, 36.0], [62.7, 36.0], [62.8, 36.0], [62.9, 36.0], [63.0, 36.0], [63.1, 36.0], [63.2, 36.0], [63.3, 37.0], [63.4, 37.0], [63.5, 37.0], [63.6, 37.0], [63.7, 37.0], [63.8, 38.0], [63.9, 38.0], [64.0, 38.0], [64.1, 38.0], [64.2, 39.0], [64.3, 39.0], [64.4, 39.0], [64.5, 39.0], [64.6, 40.0], [64.7, 40.0], [64.8, 41.0], [64.9, 41.0], [65.0, 42.0], [65.1, 42.0], [65.2, 43.0], [65.3, 44.0], [65.4, 45.0], [65.5, 46.0], [65.6, 47.0], [65.7, 49.0], [65.8, 51.0], [65.9, 52.0], [66.0, 54.0], [66.1, 56.0], [66.2, 58.0], [66.3, 60.0], [66.4, 62.0], [66.5, 64.0], [66.6, 66.0], [66.7, 68.0], [66.8, 70.0], [66.9, 72.0], [67.0, 75.0], [67.1, 77.0], [67.2, 79.0], [67.3, 81.0], [67.4, 83.0], [67.5, 85.0], [67.6, 87.0], [67.7, 89.0], [67.8, 91.0], [67.9, 94.0], [68.0, 96.0], [68.1, 99.0], [68.2, 102.0], [68.3, 104.0], [68.4, 106.0], [68.5, 109.0], [68.6, 112.0], [68.7, 114.0], [68.8, 117.0], [68.9, 120.0], [69.0, 123.0], [69.1, 126.0], [69.2, 129.0], [69.3, 132.0], [69.4, 135.0], [69.5, 137.0], [69.6, 140.0], [69.7, 143.0], [69.8, 145.0], [69.9, 148.0], [70.0, 151.0], [70.1, 154.0], [70.2, 157.0], [70.3, 161.0], [70.4, 164.0], [70.5, 167.0], [70.6, 170.0], [70.7, 172.0], [70.8, 175.0], [70.9, 177.0], [71.0, 180.0], [71.1, 182.0], [71.2, 184.0], [71.3, 187.0], [71.4, 189.0], [71.5, 191.0], [71.6, 194.0], [71.7, 196.0], [71.8, 198.0], [71.9, 201.0], [72.0, 204.0], [72.1, 207.0], [72.2, 209.0], [72.3, 211.0], [72.4, 214.0], [72.5, 216.0], [72.6, 219.0], [72.7, 221.0], [72.8, 223.0], [72.9, 226.0], [73.0, 228.0], [73.1, 231.0], [73.2, 233.0], [73.3, 236.0], [73.4, 239.0], [73.5, 241.0], [73.6, 244.0], [73.7, 247.0], [73.8, 249.0], [73.9, 252.0], [74.0, 255.0], [74.1, 258.0], [74.2, 260.0], [74.3, 262.0], [74.4, 265.0], [74.5, 267.0], [74.6, 269.0], [74.7, 271.0], [74.8, 274.0], [74.9, 276.0], [75.0, 279.0], [75.1, 281.0], [75.2, 284.0], [75.3, 286.0], [75.4, 289.0], [75.5, 291.0], [75.6, 294.0], [75.7, 297.0], [75.8, 300.0], [75.9, 302.0], [76.0, 305.0], [76.1, 308.0], [76.2, 311.0], [76.3, 314.0], [76.4, 317.0], [76.5, 320.0], [76.6, 323.0], [76.7, 326.0], [76.8, 328.0], [76.9, 331.0], [77.0, 334.0], [77.1, 337.0], [77.2, 340.0], [77.3, 343.0], [77.4, 346.0], [77.5, 349.0], [77.6, 352.0], [77.7, 354.0], [77.8, 357.0], [77.9, 360.0], [78.0, 363.0], [78.1, 366.0], [78.2, 369.0], [78.3, 372.0], [78.4, 375.0], [78.5, 378.0], [78.6, 381.0], [78.7, 384.0], [78.8, 387.0], [78.9, 390.0], [79.0, 393.0], [79.1, 397.0], [79.2, 401.0], [79.3, 405.0], [79.4, 408.0], [79.5, 412.0], [79.6, 415.0], [79.7, 419.0], [79.8, 423.0], [79.9, 427.0], [80.0, 430.0], [80.1, 434.0], [80.2, 438.0], [80.3, 442.0], [80.4, 445.0], [80.5, 448.0], [80.6, 452.0], [80.7, 455.0], [80.8, 459.0], [80.9, 462.0], [81.0, 465.0], [81.1, 469.0], [81.2, 472.0], [81.3, 476.0], [81.4, 480.0], [81.5, 484.0], [81.6, 487.0], [81.7, 492.0], [81.8, 496.0], [81.9, 500.0], [82.0, 505.0], [82.1, 509.0], [82.2, 513.0], [82.3, 517.0], [82.4, 521.0], [82.5, 525.0], [82.6, 528.0], [82.7, 533.0], [82.8, 537.0], [82.9, 541.0], [83.0, 545.0], [83.1, 548.0], [83.2, 552.0], [83.3, 556.0], [83.4, 560.0], [83.5, 565.0], [83.6, 569.0], [83.7, 573.0], [83.8, 577.0], [83.9, 582.0], [84.0, 586.0], [84.1, 590.0], [84.2, 595.0], [84.3, 600.0], [84.4, 604.0], [84.5, 609.0], [84.6, 613.0], [84.7, 618.0], [84.8, 623.0], [84.9, 627.0], [85.0, 632.0], [85.1, 637.0], [85.2, 641.0], [85.3, 647.0], [85.4, 651.0], [85.5, 656.0], [85.6, 660.0], [85.7, 665.0], [85.8, 671.0], [85.9, 676.0], [86.0, 682.0], [86.1, 687.0], [86.2, 692.0], [86.3, 696.0], [86.4, 700.0], [86.5, 704.0], [86.6, 709.0], [86.7, 714.0], [86.8, 718.0], [86.9, 722.0], [87.0, 727.0], [87.1, 731.0], [87.2, 735.0], [87.3, 740.0], [87.4, 745.0], [87.5, 750.0], [87.6, 755.0], [87.7, 760.0], [87.8, 765.0], [87.9, 770.0], [88.0, 775.0], [88.1, 780.0], [88.2, 785.0], [88.3, 790.0], [88.4, 795.0], [88.5, 800.0], [88.6, 805.0], [88.7, 810.0], [88.8, 815.0], [88.9, 820.0], [89.0, 826.0], [89.1, 832.0], [89.2, 838.0], [89.3, 843.0], [89.4, 849.0], [89.5, 854.0], [89.6, 859.0], [89.7, 865.0], [89.8, 871.0], [89.9, 877.0], [90.0, 882.0], [90.1, 887.0], [90.2, 892.0], [90.3, 898.0], [90.4, 902.0], [90.5, 908.0], [90.6, 913.0], [90.7, 919.0], [90.8, 924.0], [90.9, 930.0], [91.0, 937.0], [91.1, 944.0], [91.2, 951.0], [91.3, 957.0], [91.4, 963.0], [91.5, 968.0], [91.6, 973.0], [91.7, 980.0], [91.8, 985.0], [91.9, 991.0], [92.0, 997.0], [92.1, 1002.0], [92.2, 1008.0], [92.3, 1014.0], [92.4, 1021.0], [92.5, 1028.0], [92.6, 1034.0], [92.7, 1040.0], [92.8, 1046.0], [92.9, 1052.0], [93.0, 1059.0], [93.1, 1065.0], [93.2, 1071.0], [93.3, 1078.0], [93.4, 1085.0], [93.5, 1091.0], [93.6, 1097.0], [93.7, 1103.0], [93.8, 1109.0], [93.9, 1116.0], [94.0, 1124.0], [94.1, 1131.0], [94.2, 1138.0], [94.3, 1144.0], [94.4, 1150.0], [94.5, 1156.0], [94.6, 1163.0], [94.7, 1170.0], [94.8, 1177.0], [94.9, 1183.0], [95.0, 1188.0], [95.1, 1194.0], [95.2, 1202.0], [95.3, 1210.0], [95.4, 1216.0], [95.5, 1223.0], [95.6, 1229.0], [95.7, 1235.0], [95.8, 1242.0], [95.9, 1250.0], [96.0, 1256.0], [96.1, 1262.0], [96.2, 1269.0], [96.3, 1276.0], [96.4, 1283.0], [96.5, 1290.0], [96.6, 1297.0], [96.7, 1303.0], [96.8, 1310.0], [96.9, 1317.0], [97.0, 1324.0], [97.1, 1332.0], [97.2, 1338.0], [97.3, 1344.0], [97.4, 1352.0], [97.5, 1359.0], [97.6, 1366.0], [97.7, 1373.0], [97.8, 1382.0], [97.9, 1391.0], [98.0, 1400.0], [98.1, 1409.0], [98.2, 1418.0], [98.3, 1428.0], [98.4, 1437.0], [98.5, 1447.0], [98.6, 1458.0], [98.7, 1468.0], [98.8, 1480.0], [98.9, 1492.0], [99.0, 1503.0], [99.1, 1516.0], [99.2, 1529.0], [99.3, 1544.0], [99.4, 1558.0], [99.5, 1584.0], [99.6, 1611.0], [99.7, 1642.0], [99.8, 1786.0], [99.9, 2058.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 617947.0, "series": [{"data": [[0.0, 617947.0], [600.0, 19030.0], [700.0, 19095.0], [800.0, 16673.0], [900.0, 15565.0], [1000.0, 14381.0], [1100.0, 13858.0], [1200.0, 13371.0], [1300.0, 12278.0], [1400.0, 8813.0], [1500.0, 5418.0], [1600.0, 2056.0], [1700.0, 145.0], [1800.0, 315.0], [1900.0, 415.0], [2000.0, 242.0], [2100.0, 331.0], [2200.0, 83.0], [2300.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 3.0], [3600.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [4000.0, 3.0], [4300.0, 1.0], [4200.0, 4.0], [4100.0, 1.0], [4600.0, 2.0], [4400.0, 2.0], [4500.0, 2.0], [4700.0, 9.0], [4800.0, 4.0], [4900.0, 8.0], [5000.0, 7.0], [5100.0, 8.0], [5200.0, 6.0], [5300.0, 6.0], [5500.0, 9.0], [5400.0, 3.0], [5600.0, 15.0], [5700.0, 19.0], [5800.0, 27.0], [5900.0, 42.0], [6000.0, 40.0], [6100.0, 50.0], [6200.0, 36.0], [6300.0, 42.0], [6400.0, 20.0], [6500.0, 2.0], [100.0, 33756.0], [200.0, 35932.0], [300.0, 30616.0], [400.0, 24541.0], [500.0, 21938.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 9305.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 742993.0, "series": [{"data": [[0.0, 742993.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 154885.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 9305.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1917.0380830466445, "minX": 1.63348188E12, "maxY": 4800.0, "series": [{"data": [[1.6334826E12, 4800.0], [1.6334823E12, 4800.0], [1.63348194E12, 4800.0], [1.63348224E12, 4800.0], [1.63348206E12, 4800.0], [1.63348236E12, 4800.0], [1.633482E12, 4800.0], [1.63348266E12, 4800.0], [1.63348212E12, 4800.0], [1.63348278E12, 4638.092780943223], [1.63348272E12, 4800.0], [1.63348242E12, 4800.0], [1.63348188E12, 1917.0380830466445], [1.63348254E12, 4800.0], [1.63348248E12, 4800.0], [1.63348218E12, 4800.0]], "isOverall": false, "label": "app1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63348278E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.0, "minX": 74.0, "maxY": 5356.5, "series": [{"data": [[74.0, 5.5], [120.0, 5.0], [165.0, 8.571428571428571], [206.0, 8.222222222222221], [245.0, 6.0], [289.0, 5.333333333333333], [333.0, 6.285714285714286], [380.0, 2247.583333333334], [382.0, 7.0], [383.0, 4979.0], [374.0, 7.571428571428571], [386.0, 119.5], [385.0, 1904.8541666666667], [387.0, 140.0], [389.0, 1644.6666666666665], [391.0, 679.4375], [392.0, 561.5714285714287], [393.0, 423.6999999999999], [396.0, 5356.5], [395.0, 246.66666666666666], [394.0, 275.0], [412.0, 24.5], [405.0, 105.0], [403.0, 239.0], [407.0, 74.0], [410.0, 8.0], [411.0, 499.3392857142859], [413.0, 641.2222222222222], [414.0, 686.2721088435377], [408.0, 9.083333333333332], [428.0, 125.0], [420.0, 128.66666666666666], [419.0, 161.5], [417.0, 152.5], [423.0, 9.0], [427.0, 48.25], [429.0, 17.333333333333332], [430.0, 113.0], [431.0, 3893.0], [434.0, 48.16666666666667], [433.0, 1358.9251497005985], [435.0, 477.25714285714287], [444.0, 1523.935483870968], [445.0, 2759.000000000001], [446.0, 1092.142857142857], [436.0, 1366.0279720279725], [437.0, 2599.8823529411766], [438.0, 3281.4285714285716], [439.0, 2014.0], [440.0, 1418.0], [442.0, 1987.6585365853662], [441.0, 1987.0], [449.0, 5.0], [450.0, 1583.75], [451.0, 3019.5], [455.0, 41.0], [453.0, 39.75], [452.0, 39.0], [477.0, 16.857142857142858], [465.0, 9.166666666666666], [469.0, 11.2], [473.0, 12.75], [474.0, 13.0], [479.0, 21.933333333333337], [475.0, 14.5], [471.0, 12.0], [466.0, 9.0], [476.0, 8.636363636363637], [482.0, 2622.953488372094], [481.0, 1410.5555555555557], [483.0, 4794.793103448275], [488.0, 2731.0], [494.0, 1562.4701986754972], [495.0, 109.5], [493.0, 759.1052631578948], [484.0, 3378.733333333333], [485.0, 491.9230769230769], [486.0, 1393.7368421052631], [489.0, 2861.75], [487.0, 1617.625], [490.0, 1392.9999999999998], [491.0, 1308.5454545454547], [499.0, 264.0], [496.0, 304.99999999999994], [503.0, 1172.3999999999999], [497.0, 228.0], [506.0, 66.15384615384615], [508.0, 167.03125000000003], [507.0, 27.428571428571427], [510.0, 7.5], [509.0, 35.333333333333336], [528.0, 20.8], [526.0, 13.0], [514.0, 14.5], [516.0, 25.843749999999996], [534.0, 35.142857142857146], [532.0, 31.0], [530.0, 25.25], [536.0, 23.0], [542.0, 12.285714285714286], [540.0, 12.571428571428571], [520.0, 26.0], [524.0, 9.666666666666666], [522.0, 20.0], [550.0, 20.0], [548.0, 22.0], [544.0, 27.0], [554.0, 12.571428571428571], [556.0, 26.166666666666668], [560.0, 27.0], [568.0, 9.2], [574.0, 33.0], [564.0, 17.333333333333332], [562.0, 23.0], [576.0, 27.0], [592.0, 19.0], [600.0, 14.0], [596.0, 13.90909090909091], [580.0, 11.0], [584.0, 24.333333333333332], [586.0, 26.857142857142858], [590.0, 22.0], [588.0, 50.0], [636.0, 15.0], [612.0, 23.066666666666666], [608.0, 25.166666666666664], [616.0, 34.75000000000001], [624.0, 15.8], [626.0, 13.833333333333334], [628.0, 19.08888888888889], [630.0, 29.230769230769237], [614.0, 29.0], [620.0, 58.0], [618.0, 36.0], [644.0, 20.125], [646.0, 25.874999999999996], [642.0, 15.588235294117645], [654.0, 30.999999999999996], [652.0, 17.0], [650.0, 10.5], [664.0, 22.714285714285715], [656.0, 65.0], [670.0, 10.5], [666.0, 32.857142857142854], [660.0, 13.4], [648.0, 40.666666666666664], [678.0, 27.0], [672.0, 12.714285714285714], [676.0, 30.666666666666668], [674.0, 21.0], [698.0, 21.589743589743584], [702.0, 19.0], [700.0, 26.0], [692.0, 19.0], [694.0, 22.5], [684.0, 5.0], [730.0, 13.571428571428571], [710.0, 17.666666666666668], [706.0, 8.5], [728.0, 9.0], [734.0, 24.0], [732.0, 20.5], [704.0, 16.0], [714.0, 27.3], [726.0, 19.0], [722.0, 14.499999999999998], [742.0, 8.0], [740.0, 23.037037037037035], [738.0, 31.749999999999996], [736.0, 26.0], [750.0, 24.7], [748.0, 23.5], [756.0, 22.4], [752.0, 40.33333333333333], [764.0, 23.0], [766.0, 16.0], [758.0, 17.0], [772.0, 28.857142857142858], [776.0, 28.0], [768.0, 21.0], [770.0, 27.5], [774.0, 40.0], [792.0, 30.0], [794.0, 29.75], [790.0, 28.2], [788.0, 24.571428571428573], [786.0, 16.4], [784.0, 10.875], [804.0, 18.0], [826.0, 35.4], [800.0, 16.0], [802.0, 13.848484848484848], [828.0, 34.8], [820.0, 13.0], [818.0, 13.682926829268292], [810.0, 17.0], [814.0, 19.0], [808.0, 33.0], [848.0, 20.000000000000004], [862.0, 15.666666666666666], [850.0, 21.25], [852.0, 26.0], [854.0, 22.5], [858.0, 15.0], [840.0, 42.0], [846.0, 21.53846153846154], [836.0, 27.6], [864.0, 17.0], [888.0, 17.0], [894.0, 15.5], [886.0, 14.0], [872.0, 17.0], [874.0, 21.0], [876.0, 23.07142857142857], [866.0, 17.0], [870.0, 20.26190476190476], [884.0, 19.0], [882.0, 13.862068965517242], [926.0, 24.25], [912.0, 18.0], [916.0, 17.0], [918.0, 12.653846153846152], [914.0, 16.0], [910.0, 18.0], [898.0, 18.666666666666668], [896.0, 17.5], [902.0, 22.2], [900.0, 13.593750000000004], [908.0, 23.0], [956.0, 9.5], [944.0, 37.0], [946.0, 17.0], [948.0, 21.5], [940.0, 21.707317073170724], [936.0, 53.5], [942.0, 52.5], [928.0, 52.03846153846153], [930.0, 75.0], [932.0, 72.75], [950.0, 17.0], [990.0, 23.0], [988.0, 20.6], [980.0, 8.5], [960.0, 12.435897435897438], [962.0, 19.333333333333332], [964.0, 25.41666666666667], [966.0, 21.166666666666668], [972.0, 19.0], [998.0, 28.714285714285715], [1000.0, 17.0], [1006.0, 15.303030303030305], [1008.0, 21.42], [1020.0, 13.666666666666666], [1018.0, 9.0], [992.0, 28.2], [996.0, 32.0], [1014.0, 9.0], [1072.0, 67.16666666666667], [1076.0, 61.714285714285715], [1036.0, 30.05263157894737], [1028.0, 22.0], [1048.0, 50.5], [1056.0, 46.0], [1064.0, 53.63636363636364], [1068.0, 59.5], [1116.0, 21.166666666666668], [1096.0, 199.0], [1104.0, 12.0], [1108.0, 14.0], [1140.0, 41.0], [1148.0, 51.91666666666666], [1128.0, 136.0], [1152.0, 53.0], [1200.0, 159.0], [1176.0, 89.4], [1184.0, 96.3], [1192.0, 33.23333333333334], [1196.0, 121.0], [1172.0, 80.0], [1216.0, 137.0], [1228.0, 160.0], [1236.0, 128.0], [1256.0, 189.9375], [1260.0, 188.0], [1252.0, 162.27272727272728], [1332.0, 236.0], [1280.0, 179.46153846153845], [1308.0, 230.5820895522388], [1328.0, 245.46153846153848], [1336.0, 255.66666666666666], [1340.0, 44.09090909090909], [1320.0, 229.25], [1312.0, 247.14285714285714], [1296.0, 202.0], [1300.0, 207.2], [1304.0, 212.0], [1396.0, 292.5], [1356.0, 261.33333333333337], [1344.0, 258.6666666666667], [1372.0, 271.0], [1368.0, 262.0], [1364.0, 257.5], [1376.0, 270.0], [1400.0, 302.75], [1392.0, 287.85714285714283], [1380.0, 275.0], [1388.0, 279.5], [1384.0, 271.0], [1416.0, 281.6666666666667], [1412.0, 253.0], [1456.0, 265.5], [1440.0, 239.73684210526315], [1444.0, 207.4], [1448.0, 230.4], [1452.0, 255.0], [1424.0, 257.6666666666667], [1432.0, 299.00000000000006], [1436.0, 368.0], [1428.0, 260.0], [1472.0, 116.14285714285714], [1484.0, 215.0], [1488.0, 134.5], [1512.0, 103.14285714285714], [1508.0, 225.0], [1520.0, 107.33333333333333], [1516.0, 328.0], [1496.0, 95.0], [1536.0, 158.92], [1564.0, 72.0], [1596.0, 79.92592592592592], [1584.0, 190.0], [1552.0, 22.166666666666664], [1592.0, 8.25], [1604.0, 34.0], [1600.0, 33.0], [1628.0, 6.714285714285714], [1612.0, 30.25], [1616.0, 40.5], [1620.0, 51.0], [1640.0, 39.0], [1644.0, 37.0], [1636.0, 12.0], [1652.0, 41.0], [1696.0, 36.62499999999999], [1664.0, 65.0], [1700.0, 57.666666666666664], [1708.0, 48.5952380952381], [1684.0, 22.0], [1716.0, 16.666666666666668], [1668.0, 59.0], [1736.0, 28.0], [1756.0, 39.5], [1764.0, 35.0], [1768.0, 37.0], [1752.0, 37.20588235294117], [1744.0, 8.499999999999998], [1760.0, 47.0], [1780.0, 11.307692307692308], [1776.0, 55.0], [1772.0, 43.6], [1804.0, 28.0], [1796.0, 22.8], [1832.0, 24.666666666666664], [1852.0, 20.0], [1844.0, 20.0], [1808.0, 37.333333333333336], [1816.0, 8.0], [1820.0, 52.0], [1904.0, 95.0], [1864.0, 22.0], [1868.0, 23.0], [1860.0, 22.0], [1856.0, 9.7], [1876.0, 63.0], [1880.0, 69.0], [1896.0, 74.0], [1912.0, 38.666666666666664], [1916.0, 44.5], [1908.0, 17.0], [1924.0, 75.0], [1928.0, 39.4], [1936.0, 46.25], [1920.0, 21.5], [1932.0, 137.0], [1960.0, 25.0], [1968.0, 8.454545454545455], [2000.0, 40.142857142857146], [1992.0, 36.0], [1996.0, 34.0], [2020.0, 16.0], [2056.0, 25.0], [2048.0, 24.714285714285715], [2064.0, 31.0], [2096.0, 96.0], [2104.0, 10.0], [2120.0, 62.333333333333336], [2128.0, 153.0], [2144.0, 27.6], [2176.0, 29.0], [2192.0, 313.5], [2288.0, 44.333333333333336], [2296.0, 52.625], [2280.0, 26.0], [2256.0, 15.23076923076923], [2200.0, 86.03571428571428], [2408.0, 16.0], [2384.0, 40.5], [2368.0, 20.5], [2328.0, 54.2], [2456.0, 30.0], [2552.0, 10.0], [2512.0, 39.0], [2528.0, 18.0], [2448.0, 30.5], [2488.0, 13.0], [2464.0, 36.5], [2480.0, 76.0], [2504.0, 28.375], [2496.0, 38.0], [2680.0, 42.0], [2664.0, 121.5], [2592.0, 17.0], [2576.0, 5.0], [2560.0, 15.0], [2584.0, 104.5], [2600.0, 8.75], [2808.0, 105.0], [2712.0, 75.0], [2776.0, 33.0], [2752.0, 69.33333333333333], [2768.0, 24.0], [2744.0, 59.66666666666667], [2736.0, 99.5], [2728.0, 90.0], [2832.0, 108.0], [2864.0, 178.0], [2920.0, 148.62500000000003], [2816.0, 107.5], [2896.0, 29.666666666666668], [2888.0, 7.846153846153845], [2848.0, 43.75], [2856.0, 42.0], [3040.0, 23.5], [3064.0, 43.521739130434774], [3000.0, 136.0], [2992.0, 174.5], [2976.0, 21.0], [2984.0, 21.5], [3048.0, 27.0], [3016.0, 92.80000000000001], [3024.0, 178.0], [3136.0, 309.0], [3128.0, 40.74193548387097], [3144.0, 111.0], [3096.0, 234.8], [3104.0, 141.0], [3112.0, 153.0], [3264.0, 256.5], [3216.0, 199.0], [3224.0, 42.333333333333336], [3256.0, 88.68965517241381], [3248.0, 57.099999999999994], [3240.0, 152.66666666666666], [3232.0, 8.5], [3424.0, 21.166666666666668], [3448.0, 11.0], [3392.0, 35.0], [3432.0, 26.666666666666668], [3344.0, 21.0], [3328.0, 309.24999999999994], [3376.0, 21.0], [3368.0, 91.25], [3360.0, 88.0], [3472.0, 28.0], [3528.0, 14.5], [3544.0, 70.0], [3552.0, 50.0], [3560.0, 14.0], [3568.0, 33.0], [3576.0, 29.0], [3456.0, 15.0], [3512.0, 29.0], [3504.0, 30.13333333333333], [3488.0, 46.5], [3592.0, 41.625], [3632.0, 26.0], [3664.0, 20.666666666666668], [3704.0, 31.666666666666668], [3672.0, 23.5], [3624.0, 21.75], [3688.0, 48.0], [3584.0, 7.307692307692308], [3832.0, 57.0], [3800.0, 27.333333333333332], [3784.0, 114.5], [3728.0, 29.666666666666664], [3720.0, 21.0], [3760.0, 55.0], [3936.0, 53.0], [3888.0, 41.333333333333336], [3904.0, 46.0], [3944.0, 53.0], [3880.0, 10.466666666666667], [4072.0, 98.5], [4064.0, 74.0], [4056.0, 70.0], [4024.0, 45.5], [3976.0, 59.0], [4080.0, 88.25], [4096.0, 199.33333333333334], [4128.0, 13.0], [4160.0, 12.0], [4224.0, 47.0], [4256.0, 16.625], [4272.0, 14.0], [4304.0, 12.0], [4368.0, 21.755555555555553], [4384.0, 14.0], [4416.0, 40.42857142857142], [4432.0, 19.01030927835052], [4448.0, 15.0], [4464.0, 19.0], [4560.0, 17.622222222222227], [4592.0, 12.5], [4528.0, 16.6046511627907], [4496.0, 22.977777777777778], [4576.0, 21.204545454545457], [4624.0, 16.857142857142858], [4608.0, 19.65217391304348], [4656.0, 10.0], [4672.0, 27.6], [4720.0, 81.5], [4752.0, 82.4242424242424], [4768.0, 27.333333333333332], [4784.0, 10.75], [4800.0, 235.48288235919483], [4129.0, 14.5], [4097.0, 44.0], [4145.0, 14.5], [4161.0, 12.0], [4177.0, 12.0], [4225.0, 12.743589743589745], [4209.0, 15.5], [4273.0, 14.0], [4321.0, 17.0], [4337.0, 21.999999999999996], [4401.0, 20.393617021276604], [4417.0, 21.469387755102044], [4449.0, 12.0], [4529.0, 15.0], [4593.0, 21.869565217391305], [4513.0, 21.88636363636364], [4465.0, 16.045454545454543], [4433.0, 19.999999999999993], [4385.0, 17.782608695652176], [4609.0, 23.5], [4673.0, 14.0], [4769.0, 15.0], [4785.0, 22.11363636363637], [4753.0, 75.78571428571429], [4641.0, 17.13636363636364], [2057.0, 25.5], [2081.0, 36.0], [2113.0, 14.0], [2169.0, 50.5], [2145.0, 98.5], [2153.0, 11.230769230769232], [2121.0, 11.4375], [2177.0, 47.53846153846153], [2185.0, 24.5], [2193.0, 140.1506024096385], [2265.0, 52.333333333333336], [2281.0, 25.0], [2249.0, 31.25], [2201.0, 209.66666666666666], [2425.0, 28.0], [2401.0, 19.78571428571429], [2409.0, 16.0], [2377.0, 27.5], [2361.0, 18.666666666666668], [2353.0, 40.0], [2329.0, 14.176470588235292], [2313.0, 11.0], [2457.0, 37.57142857142856], [2505.0, 30.5], [2521.0, 35.666666666666664], [2537.0, 44.0], [2449.0, 29.666666666666668], [2553.0, 28.5], [2497.0, 8.857142857142858], [2545.0, 75.0], [2513.0, 47.0], [2489.0, 15.000000000000002], [2473.0, 41.0], [2465.0, 33.0], [2657.0, 72.5], [2585.0, 86.86046511627907], [2665.0, 159.60000000000002], [2673.0, 9.5], [2609.0, 28.0], [2601.0, 23.571428571428573], [2593.0, 86.33333333333333], [2561.0, 17.0], [2577.0, 117.5], [2761.0, 65.0], [2737.0, 80.0], [2697.0, 195.0], [2777.0, 7.2666666666666675], [2929.0, 77.0], [2921.0, 29.5], [2913.0, 94.0], [2857.0, 41.75], [2825.0, 19.0], [3065.0, 324.0], [3049.0, 28.0], [3025.0, 175.66666666666666], [3009.0, 193.0], [2961.0, 9.333333333333334], [2969.0, 36.0], [3001.0, 123.0], [2985.0, 25.166666666666668], [3129.0, 26.5], [3113.0, 129.5], [3121.0, 21.0], [3105.0, 246.66666666666669], [3225.0, 42.5], [3265.0, 117.85714285714286], [3321.0, 39.0], [3305.0, 8.076923076923077], [3273.0, 184.0], [3257.0, 129.90476190476193], [3209.0, 79.0], [3217.0, 314.0], [3241.0, 30.8], [3425.0, 30.666666666666668], [3441.0, 39.4], [3393.0, 35.63636363636364], [3433.0, 30.25], [3369.0, 67.0], [3329.0, 209.53846153846152], [3353.0, 26.384615384615387], [3345.0, 21.0], [3377.0, 22.5], [3417.0, 231.0], [3537.0, 23.0], [3521.0, 35.0], [3545.0, 50.833333333333336], [3457.0, 15.0], [3473.0, 28.0], [3481.0, 17.0], [3577.0, 50.111111111111114], [3513.0, 39.0], [3505.0, 39.0], [3697.0, 19.0], [3705.0, 25.0], [3633.0, 21.5], [3625.0, 17.0], [3593.0, 41.0], [3585.0, 54.0], [3641.0, 23.0], [3761.0, 35.5], [3825.0, 41.5], [3721.0, 21.0], [3745.0, 35.0], [3889.0, 33.0], [3913.0, 15.92307692307692], [3897.0, 35.0], [3953.0, 56.0], [3881.0, 27.0], [3873.0, 42.0], [3961.0, 9.499999999999998], [3937.0, 11.583333333333334], [4073.0, 102.5], [4049.0, 97.0], [4065.0, 29.666666666666668], [4025.0, 48.5], [4017.0, 38.333333333333336], [4009.0, 54.0], [4089.0, 186.0], [4098.0, 199.4], [4226.0, 35.333333333333336], [4210.0, 17.5], [4242.0, 63.0], [4322.0, 18.0], [4178.0, 12.0], [4306.0, 36.666666666666664], [4258.0, 16.333333333333336], [4114.0, 15.033333333333339], [4354.0, 12.0], [4370.0, 15.0], [4418.0, 22.80769230769231], [4434.0, 14.0], [4450.0, 23.488372093023262], [4482.0, 21.25581395348837], [4514.0, 13.5], [4498.0, 17.0], [4562.0, 16.0], [4546.0, 21.17391304347826], [4658.0, 13.0], [4690.0, 25.0], [4706.0, 14.0], [4722.0, 62.87499999999999], [4738.0, 65.33333333333334], [4786.0, 23.0], [4770.0, 29.2], [4099.0, 121.33333333333333], [4115.0, 16.5], [4147.0, 14.5], [4259.0, 15.0], [4275.0, 14.0], [4291.0, 15.0], [4339.0, 16.0], [4323.0, 16.0], [4387.0, 18.122448979591837], [4403.0, 21.367346938775505], [4355.0, 14.0], [4435.0, 15.0], [4419.0, 19.846473029045633], [4483.0, 13.5], [4467.0, 15.0], [4499.0, 17.0], [4547.0, 20.0], [4563.0, 16.0], [4579.0, 14.25], [4595.0, 22.9375], [4627.0, 11.0], [4643.0, 14.0], [4675.0, 16.0], [4755.0, 36.0], [4739.0, 104.0], [4771.0, 22.333333333333336], [1037.0, 34.0], [1033.0, 23.5], [1029.0, 21.0], [1081.0, 67.64285714285715], [1069.0, 16.48484848484848], [1077.0, 62.25], [1049.0, 17.25], [1141.0, 86.79310344827586], [1093.0, 45.00000000000001], [1121.0, 119.33333333333334], [1125.0, 36.0], [1145.0, 99.125], [1129.0, 151.0], [1201.0, 145.0], [1153.0, 54.0], [1157.0, 57.85714285714286], [1165.0, 11.238095238095237], [1173.0, 81.66666666666667], [1181.0, 84.0], [1205.0, 133.33333333333334], [1213.0, 12.9], [1185.0, 112.494623655914], [1189.0, 118.0], [1193.0, 133.16666666666666], [1169.0, 65.0], [1229.0, 146.375], [1241.0, 80.72222222222221], [1245.0, 158.0], [1217.0, 150.23809523809527], [1257.0, 179.25], [1253.0, 203.28571428571428], [1249.0, 161.92307692307688], [1277.0, 178.5], [1269.0, 7.5], [1337.0, 257.0], [1329.0, 246.33333333333334], [1281.0, 179.0], [1333.0, 250.88888888888889], [1341.0, 260.2], [1321.0, 226.85714285714286], [1325.0, 244.81250000000003], [1313.0, 267.0], [1301.0, 211.28571428571428], [1353.0, 262.3333333333333], [1345.0, 268.0], [1369.0, 134.27999999999994], [1373.0, 274.25], [1365.0, 266.2], [1361.0, 267.5], [1401.0, 309.2380952380953], [1405.0, 49.29411764705882], [1397.0, 291.6666666666667], [1393.0, 289.3333333333333], [1381.0, 272.45454545454544], [1385.0, 279.9375000000001], [1389.0, 285.0], [1417.0, 266.5714285714286], [1409.0, 287.5], [1469.0, 177.30813953488382], [1457.0, 254.0], [1445.0, 234.5], [1449.0, 229.25], [1453.0, 255.0], [1433.0, 293.14285714285717], [1437.0, 297.0], [1429.0, 262.0], [1485.0, 156.5], [1473.0, 66.0], [1505.0, 197.0], [1521.0, 190.5], [1513.0, 129.42857142857144], [1517.0, 6.846153846153845], [1597.0, 64.0], [1565.0, 101.6], [1549.0, 47.666666666666664], [1569.0, 89.57142857142857], [1593.0, 81.0], [1573.0, 131.75000000000003], [1577.0, 74.3448275862069], [1581.0, 54.0], [1557.0, 50.333333333333336], [1561.0, 54.6], [1553.0, 49.0], [1609.0, 36.333333333333336], [1625.0, 79.33333333333333], [1613.0, 45.0], [1617.0, 32.0], [1641.0, 26.0], [1637.0, 14.0], [1661.0, 30.0], [1653.0, 37.0], [1701.0, 63.0], [1709.0, 75.0], [1697.0, 54.2], [1693.0, 34.0], [1713.0, 40.66666666666667], [1669.0, 7.0], [1737.0, 28.0], [1733.0, 24.0], [1729.0, 36.0], [1745.0, 50.875], [1769.0, 40.75], [1761.0, 48.0], [1781.0, 24.5], [1785.0, 15.0], [1789.0, 17.0], [1765.0, 36.0], [1753.0, 40.0], [1797.0, 33.0], [1845.0, 19.0], [1813.0, 45.0], [1805.0, 28.75], [1809.0, 25.0], [1829.0, 21.333333333333336], [1833.0, 20.4], [1837.0, 17.0], [1873.0, 23.8], [1881.0, 72.0], [1901.0, 60.50000000000001], [1909.0, 19.0], [1885.0, 70.33333333333333], [1913.0, 53.5], [1921.0, 22.0], [1949.0, 23.0], [1925.0, 19.666666666666668], [1933.0, 82.0], [1937.0, 18.0], [1961.0, 25.0], [1989.0, 36.0], [2013.0, 12.0], [2001.0, 43.666666666666664], [2033.0, 19.4], [2037.0, 21.0], [2045.0, 7.999999999999999], [2005.0, 7.555555555555555], [2058.0, 24.5], [2106.0, 55.5], [2050.0, 25.0], [2122.0, 88.66666666666667], [2154.0, 58.666666666666664], [2162.0, 90.34782608695652], [2290.0, 33.6], [2178.0, 87.99999999999999], [2298.0, 62.5], [2274.0, 21.0], [2258.0, 30.5], [2218.0, 86.5], [2242.0, 17.0], [2202.0, 366.0], [2194.0, 157.49557522123894], [2426.0, 48.849999999999994], [2418.0, 21.0], [2354.0, 56.45454545454545], [2346.0, 85.0], [2322.0, 53.5], [2330.0, 55.0], [2306.0, 61.5], [2362.0, 8.846153846153847], [2538.0, 27.5], [2522.0, 52.0], [2530.0, 54.0], [2458.0, 38.2], [2490.0, 19.0], [2498.0, 20.0], [2434.0, 50.25], [2682.0, 191.0], [2666.0, 169.0], [2570.0, 11.5], [2578.0, 31.500000000000004], [2602.0, 24.666666666666668], [2610.0, 28.0], [2714.0, 70.0], [2794.0, 80.6], [2698.0, 86.66666666666667], [2802.0, 117.0], [2770.0, 35.666666666666664], [2810.0, 9.833333333333334], [2746.0, 56.0], [2722.0, 94.75], [2730.0, 95.0], [2738.0, 7.888888888888889], [2922.0, 25.666666666666664], [2938.0, 28.333333333333332], [2826.0, 72.33333333333333], [2858.0, 42.0], [2874.0, 229.0], [2930.0, 201.0], [2906.0, 17.0], [2898.0, 166.0], [2890.0, 134.58333333333334], [3034.0, 263.0], [2970.0, 36.166666666666664], [2962.0, 21.636363636363637], [2986.0, 27.0], [3026.0, 7.300000000000001], [3002.0, 8.0], [3186.0, 390.0], [3178.0, 427.0], [3194.0, 198.0], [3090.0, 168.0], [3082.0, 72.07142857142858], [3098.0, 391.0], [3122.0, 21.0], [3114.0, 17.0], [3306.0, 545.0], [3266.0, 106.50000000000001], [3226.0, 44.0], [3218.0, 40.166666666666664], [3290.0, 271.0], [3258.0, 234.0], [3250.0, 269.0], [3338.0, 31.0], [3442.0, 38.888888888888886], [3330.0, 195.69230769230768], [3354.0, 26.0], [3394.0, 37.333333333333336], [3386.0, 220.0], [3370.0, 48.4], [3570.0, 20.0], [3530.0, 15.25], [3538.0, 23.75], [3546.0, 55.0], [3466.0, 20.0], [3474.0, 28.0], [3498.0, 11.666666666666668], [3490.0, 20.5], [3506.0, 35.375], [3586.0, 69.0], [3650.0, 15.666666666666666], [3674.0, 29.333333333333332], [3642.0, 37.5], [3682.0, 23.0], [3626.0, 23.5], [3602.0, 33.0], [3802.0, 30.0], [3762.0, 35.0], [3730.0, 21.5], [3770.0, 69.0], [3714.0, 19.0], [3818.0, 30.0], [3898.0, 37.0], [3890.0, 23.0], [3882.0, 43.61538461538461], [3962.0, 58.0], [3946.0, 50.0], [4058.0, 90.42857142857143], [4050.0, 30.0], [4074.0, 109.33333333333333], [4026.0, 78.0], [4018.0, 71.0], [4010.0, 27.0], [4090.0, 129.33333333333334], [4066.0, 128.0], [4292.0, 15.0], [4132.0, 11.96875], [4180.0, 14.5], [4196.0, 21.5], [4228.0, 16.0], [4244.0, 54.0], [4324.0, 15.5], [4212.0, 14.0], [4164.0, 15.0], [4372.0, 16.531914893617028], [4356.0, 13.333333333333334], [4404.0, 18.254901960784316], [4436.0, 17.901960784313726], [4420.0, 20.574468085106382], [4452.0, 14.0], [4468.0, 18.4], [4500.0, 19.448979591836736], [4532.0, 19.0], [4516.0, 13.0], [4564.0, 16.5], [4580.0, 22.14893617021276], [4596.0, 22.60465116279069], [4644.0, 21.0], [4628.0, 15.0], [4660.0, 15.0], [4676.0, 15.0], [4692.0, 14.0], [4708.0, 17.0], [4772.0, 22.714285714285715], [4788.0, 17.5], [4724.0, 172.75714285714284], [4293.0, 17.0], [4101.0, 201.0], [4229.0, 16.5], [4261.0, 16.75], [4325.0, 12.0], [4309.0, 16.0], [4197.0, 25.0], [4165.0, 14.0], [4133.0, 13.0], [4549.0, 15.933333333333332], [4421.0, 20.54639175257731], [4453.0, 13.0], [4469.0, 17.936170212765955], [4357.0, 21.4], [4405.0, 18.891304347826086], [4389.0, 22.19148936170213], [4533.0, 14.186046511627907], [4581.0, 14.5], [4597.0, 17.5], [4517.0, 19.232558139534884], [4437.0, 22.552447552447557], [4629.0, 13.0], [4645.0, 18.59090909090909], [4693.0, 12.0], [4725.0, 61.0], [4741.0, 18.666666666666668], [4757.0, 23.0], [4789.0, 18.333333333333332], [4773.0, 21.75], [4613.0, 19.72826086956521], [2059.0, 27.5], [2051.0, 24.0], [2067.0, 76.0], [2083.0, 20.08333333333333], [2163.0, 12.5], [2171.0, 25.0], [2139.0, 16.0], [2291.0, 38.53846153846154], [2179.0, 61.69999999999999], [2187.0, 25.0], [2299.0, 68.25], [2275.0, 22.0], [2203.0, 366.5], [2195.0, 62.55555555555556], [2283.0, 26.0], [2259.0, 38.666666666666664], [2251.0, 28.0], [2243.0, 17.166666666666664], [2403.0, 14.0], [2427.0, 61.0], [2411.0, 17.0], [2395.0, 51.666666666666664], [2387.0, 34.42857142857143], [2379.0, 27.5], [2339.0, 29.0], [2347.0, 39.0], [2315.0, 57.352941176470594], [2307.0, 26.0], [2547.0, 50.0], [2523.0, 40.5], [2499.0, 22.8], [2491.0, 19.0], [2467.0, 44.5], [2531.0, 9.23076923076923], [2667.0, 111.33333333333333], [2683.0, 36.0], [2659.0, 71.0], [2563.0, 76.0], [2571.0, 12.0], [2587.0, 51.5], [2579.0, 53.4], [2787.0, 43.142857142857146], [2811.0, 92.0], [2715.0, 89.82352941176472], [2707.0, 75.66666666666667], [2747.0, 56.77777777777778], [2731.0, 71.0], [2795.0, 71.66666666666667], [2755.0, 61.0], [2771.0, 31.999999999999996], [2931.0, 137.0], [2923.0, 95.66666666666667], [2939.0, 28.0], [2915.0, 36.5], [2827.0, 22.0], [2835.0, 28.0], [2819.0, 98.00000000000003], [2899.0, 31.0], [3067.0, 158.8], [2955.0, 144.0], [2963.0, 47.878787878787875], [3059.0, 33.2], [3035.0, 19.5], [3027.0, 6.0], [3011.0, 6.0], [3187.0, 397.0], [3163.0, 43.0], [3123.0, 21.0], [3115.0, 189.0], [3083.0, 69.66666666666667], [3075.0, 215.0], [3219.0, 38.333333333333336], [3291.0, 35.25], [3211.0, 142.75], [3283.0, 36.0], [3267.0, 31.0], [3259.0, 471.0], [3235.0, 193.0], [3443.0, 39.26315789473684], [3411.0, 13.777777777777777], [3435.0, 30.0], [3331.0, 66.0], [3355.0, 27.0], [3371.0, 78.0], [3451.0, 8.533333333333333], [3379.0, 9.125000000000002], [3563.0, 16.0], [3515.0, 70.0], [3547.0, 38.8], [3579.0, 33.0], [3571.0, 22.0], [3483.0, 44.0], [3507.0, 59.666666666666664], [3499.0, 16.0], [3491.0, 8.0], [3667.0, 25.0], [3675.0, 27.0], [3707.0, 17.0], [3651.0, 20.0], [3603.0, 36.0], [3619.0, 11.399999999999997], [3771.0, 70.67567567567565], [3827.0, 29.5], [3763.0, 32.0], [3747.0, 30.0], [3723.0, 24.0], [3819.0, 10.954545454545455], [3755.0, 9.071428571428573], [3899.0, 39.0], [3875.0, 42.9375], [3891.0, 35.0], [4035.0, 83.5], [4011.0, 36.0], [4059.0, 60.0], [4067.0, 121.0], [4051.0, 61.0], [4075.0, 160.0], [4091.0, 180.5], [4083.0, 142.0], [4019.0, 12.652173913043478], [4326.0, 13.0], [4102.0, 111.25], [4166.0, 14.0], [4214.0, 17.0], [4230.0, 13.666666666666666], [4278.0, 16.0], [4342.0, 15.0], [4310.0, 23.11111111111111], [4150.0, 10.583333333333332], [4582.0, 13.5], [4374.0, 16.0], [4518.0, 14.0], [4534.0, 17.0], [4486.0, 13.0], [4566.0, 19.659574468085104], [4438.0, 20.914893617021274], [4422.0, 24.361702127659573], [4390.0, 24.978260869565226], [4646.0, 14.5], [4614.0, 25.0], [4662.0, 18.0], [4710.0, 90.72592592592592], [4742.0, 133.6891891891892], [4758.0, 16.0], [4774.0, 21.916666666666668], [4790.0, 18.680851063829785], [4726.0, 169.4], [4151.0, 19.0], [4103.0, 78.0], [4215.0, 12.0], [4119.0, 17.0], [4135.0, 13.0], [4199.0, 22.333333333333332], [4167.0, 13.0], [4247.0, 48.0], [4279.0, 14.333333333333334], [4231.0, 17.0], [4343.0, 15.630434782608694], [4311.0, 16.0], [4295.0, 16.78048780487805], [4407.0, 17.28260869565218], [4455.0, 16.431818181818183], [4503.0, 17.914893617021274], [4471.0, 32.39240506329114], [4375.0, 21.13333333333334], [4535.0, 15.0], [4599.0, 12.0], [4439.0, 13.0], [4583.0, 18.80434782608696], [4423.0, 21.427083333333343], [4647.0, 15.0], [4663.0, 20.666666666666668], [4743.0, 124.5], [4631.0, 23.97916666666666], [4679.0, 16.25], [4695.0, 12.0], [4711.0, 15.0], [4727.0, 166.0], [4759.0, 35.666666666666664], [4775.0, 19.428571428571427], [4791.0, 18.956521739130434], [541.0, 16.25], [517.0, 33.07692307692308], [513.0, 11.629629629629632], [535.0, 37.666666666666664], [533.0, 32.0], [531.0, 30.2], [539.0, 8.0], [543.0, 24.5], [521.0, 25.0], [527.0, 15.64285714285714], [525.0, 10.0], [551.0, 18.0], [545.0, 30.086956521739133], [555.0, 19.974358974358974], [547.0, 25.0], [571.0, 33.13157894736842], [573.0, 13.272727272727272], [569.0, 13.0], [565.0, 21.0], [601.0, 30.576923076923073], [581.0, 14.0], [603.0, 53.0], [597.0, 16.666666666666668], [599.0, 17.5], [595.0, 13.0], [579.0, 10.5], [577.0, 9.0], [587.0, 32.09090909090909], [591.0, 31.0], [589.0, 25.0], [635.0, 17.333333333333332], [615.0, 28.333333333333332], [639.0, 14.5], [627.0, 21.0], [629.0, 26.5], [625.0, 10.0], [609.0, 16.0], [613.0, 27.0], [617.0, 35.8], [621.0, 33.77777777777778], [619.0, 70.0], [643.0, 18.5], [641.0, 11.8], [655.0, 45.6], [653.0, 20.0], [651.0, 11.33333333333333], [645.0, 21.0], [647.0, 45.0], [659.0, 30.14285714285714], [669.0, 31.0], [667.0, 39.57692307692309], [661.0, 17.0], [665.0, 27.545454545454543], [679.0, 25.0], [675.0, 27.115384615384617], [685.0, 10.0], [673.0, 17.818181818181817], [697.0, 28.941176470588236], [701.0, 24.333333333333332], [693.0, 21.0], [695.0, 24.0], [677.0, 16.928571428571427], [681.0, 19.5], [731.0, 18.0], [711.0, 19.700000000000003], [733.0, 22.0], [735.0, 24.5], [713.0, 23.619047619047617], [707.0, 11.0], [719.0, 21.8], [723.0, 18.0], [725.0, 5.0], [739.0, 32.333333333333336], [737.0, 30.6], [747.0, 19.125], [751.0, 26.0], [753.0, 24.0], [743.0, 10.25], [741.0, 9.0], [765.0, 12.7], [759.0, 16.0], [755.0, 15.793103448275863], [769.0, 24.77777777777778], [799.0, 16.799999999999997], [793.0, 33.166666666666664], [781.0, 16.0], [779.0, 18.75], [783.0, 9.2], [775.0, 38.75], [773.0, 19.44897959183673], [795.0, 15.5], [789.0, 27.0], [791.0, 30.0], [787.0, 20.28571428571429], [785.0, 15.967741935483874], [825.0, 26.89655172413793], [829.0, 23.57142857142857], [805.0, 23.36363636363637], [807.0, 27.93333333333333], [827.0, 16.235294117647058], [823.0, 20.428571428571427], [821.0, 17.5], [811.0, 18.666666666666668], [809.0, 23.6], [851.0, 26.400000000000002], [859.0, 19.5], [847.0, 18.428571428571427], [835.0, 25.709677419354847], [833.0, 20.0], [837.0, 25.352941176470583], [853.0, 17.580645161290324], [843.0, 19.026315789473685], [865.0, 15.0], [895.0, 15.666666666666666], [893.0, 11.923076923076923], [889.0, 20.0], [877.0, 25.4375], [873.0, 17.7], [875.0, 23.571428571428573], [879.0, 14.0], [867.0, 9.0], [869.0, 12.0], [871.0, 15.0], [887.0, 15.0], [885.0, 20.333333333333332], [881.0, 16.5], [903.0, 24.0], [927.0, 55.166666666666664], [899.0, 20.277777777777775], [897.0, 18.0], [925.0, 15.615384615384615], [901.0, 24.6], [953.0, 9.333333333333334], [945.0, 38.9375], [959.0, 11.2], [957.0, 10.0], [941.0, 29.8], [939.0, 58.5], [937.0, 37.333333333333336], [935.0, 17.8], [933.0, 62.0], [987.0, 18.0], [991.0, 26.09090909090909], [977.0, 16.666666666666668], [983.0, 13.0], [981.0, 10.695652173913045], [971.0, 16.0], [969.0, 15.0], [973.0, 17.0], [961.0, 17.2], [963.0, 22.25], [965.0, 27.71428571428571], [967.0, 17.0], [1019.0, 10.5], [995.0, 33.92307692307692], [1021.0, 21.4], [1017.0, 9.0], [1007.0, 40.0], [993.0, 28.0], [1013.0, 7.75], [1015.0, 10.0], [1074.0, 74.0], [1038.0, 34.25], [1058.0, 51.5], [1062.0, 50.0], [1066.0, 57.666666666666664], [1078.0, 62.0], [1086.0, 13.625000000000002], [1034.0, 14.333333333333332], [1138.0, 41.0], [1090.0, 119.93162393162395], [1102.0, 15.029411764705882], [1114.0, 27.0], [1110.0, 18.666666666666668], [1126.0, 229.0], [1146.0, 64.0], [1142.0, 75.28571428571429], [1134.0, 251.0], [1202.0, 147.5], [1182.0, 90.73684210526316], [1210.0, 127.0], [1166.0, 62.0], [1170.0, 72.16666666666667], [1158.0, 63.0], [1162.0, 61.0], [1238.0, 131.0], [1254.0, 182.75384615384613], [1218.0, 163.2702702702702], [1262.0, 172.0], [1334.0, 248.68750000000003], [1286.0, 189.66666666666666], [1282.0, 202.6], [1290.0, 197.66666666666669], [1338.0, 255.0], [1342.0, 257.25], [1330.0, 257.6666666666667], [1318.0, 244.66666666666666], [1322.0, 227.0], [1326.0, 236.0], [1298.0, 203.66666666666666], [1306.0, 212.0], [1354.0, 269.22222222222223], [1358.0, 258.1666666666667], [1366.0, 267.8888888888889], [1362.0, 260.14285714285717], [1346.0, 262.3333333333333], [1406.0, 310.6], [1402.0, 309.7142857142857], [1394.0, 288.0], [1378.0, 275.5], [1386.0, 298.0], [1390.0, 283.5], [1382.0, 282.0], [1414.0, 286.3750000000001], [1418.0, 264.0], [1410.0, 288.0], [1470.0, 164.11111111111111], [1442.0, 238.75], [1450.0, 242.9], [1426.0, 258.0], [1430.0, 280.6190476190476], [1434.0, 291.6470588235294], [1438.0, 7.0], [1478.0, 33.27272727272727], [1534.0, 288.0], [1490.0, 203.33333333333334], [1510.0, 22.0], [1530.0, 23.666666666666668], [1522.0, 183.0], [1498.0, 194.0], [1550.0, 52.0], [1538.0, 69.49999999999999], [1546.0, 45.0], [1562.0, 52.75], [1558.0, 82.42857142857143], [1570.0, 104.0], [1598.0, 82.11413043478262], [1590.0, 81.5], [1586.0, 361.0], [1582.0, 52.0], [1578.0, 52.8], [1606.0, 35.0], [1622.0, 61.0], [1626.0, 90.66666666666667], [1630.0, 69.5], [1610.0, 31.5], [1662.0, 18.0], [1654.0, 43.5], [1650.0, 35.5], [1638.0, 26.2], [1678.0, 15.6], [1710.0, 49.15384615384615], [1682.0, 20.0], [1714.0, 16.0], [1666.0, 19.0], [1750.0, 59.166666666666664], [1746.0, 50.0], [1782.0, 27.833333333333332], [1790.0, 29.5], [1770.0, 46.0], [1794.0, 19.0], [1802.0, 28.000000000000004], [1810.0, 33.875], [1818.0, 48.5], [1814.0, 41.16666666666667], [1830.0, 12.0], [1826.0, 39.0], [1858.0, 21.0], [1874.0, 35.86666666666667], [1866.0, 23.0], [1878.0, 48.0], [1906.0, 17.0], [1918.0, 20.0], [1926.0, 37.142857142857146], [1922.0, 95.0], [1954.0, 23.0], [1974.0, 28.0], [1934.0, 9.999999999999998], [1962.0, 25.0], [1942.0, 52.66666666666667], [1946.0, 22.0], [1994.0, 34.0], [1998.0, 54.41666666666667], [1990.0, 32.0], [2022.0, 45.2], [2046.0, 23.0], [2038.0, 22.0], [2100.0, 112.0], [2116.0, 16.0], [2164.0, 113.0], [2188.0, 116.0227272727273], [2180.0, 20.0], [2300.0, 42.16666666666667], [2260.0, 44.0], [2252.0, 29.333333333333332], [2196.0, 160.1785714285714], [2204.0, 371.0], [2220.0, 7.75], [2428.0, 74.0], [2388.0, 28.0], [2404.0, 66.0], [2412.0, 18.0], [2380.0, 28.5], [2340.0, 34.666666666666664], [2332.0, 45.55813953488371], [2348.0, 114.0], [2396.0, 7.428571428571428], [2460.0, 42.0], [2548.0, 73.0], [2508.0, 34.25], [2540.0, 28.0], [2492.0, 21.571428571428573], [2444.0, 60.125], [2436.0, 38.0], [2468.0, 38.0], [2500.0, 25.0], [2588.0, 16.0], [2676.0, 37.0], [2612.0, 29.5], [2604.0, 24.5], [2580.0, 102.0], [2564.0, 20.0], [2636.0, 7.7272727272727275], [2708.0, 229.0], [2780.0, 34.5], [2804.0, 149.0], [2716.0, 92.33333333333334], [2700.0, 67.44999999999999], [2772.0, 38.6], [2748.0, 70.72727272727273], [2732.0, 82.0], [2724.0, 99.0], [2940.0, 58.21875000000001], [2844.0, 29.0], [2820.0, 153.0], [2892.0, 78.91666666666669], [2860.0, 44.75], [2852.0, 41.0], [2924.0, 8.461538461538462], [3068.0, 233.0], [3044.0, 23.0], [2980.0, 22.0], [3004.0, 201.0], [3060.0, 216.0], [3012.0, 48.15384615384616], [3092.0, 167.0], [3188.0, 112.0], [3148.0, 140.4], [3140.0, 25.0], [3132.0, 30.0], [3076.0, 23.75], [3084.0, 33.0], [3100.0, 136.5], [3116.0, 167.0], [3212.0, 127.0], [3300.0, 139.5], [3292.0, 37.0], [3276.0, 33.5], [3284.0, 36.0], [3260.0, 121.0], [3204.0, 125.0], [3228.0, 131.25], [3220.0, 39.0], [3252.0, 244.66666666666669], [3244.0, 146.53333333333333], [3236.0, 239.76923076923077], [3444.0, 69.0], [3396.0, 40.0], [3332.0, 77.45454545454547], [3364.0, 89.0], [3372.0, 94.09090909090908], [3420.0, 234.0], [3412.0, 35.0], [3436.0, 31.0], [3340.0, 6.777777777777778], [3404.0, 167.0], [3548.0, 40.5], [3532.0, 18.0], [3540.0, 29.0], [3524.0, 34.16666666666667], [3484.0, 12.375], [3500.0, 16.75], [3580.0, 34.0], [3556.0, 53.0], [3644.0, 28.166666666666668], [3684.0, 13.916666666666666], [3692.0, 14.0], [3676.0, 19.0], [3668.0, 29.0], [3660.0, 18.0], [3652.0, 9.812499999999998], [3828.0, 42.5], [3732.0, 29.900000000000006], [3740.0, 30.333333333333332], [3748.0, 20.0], [3724.0, 18.0], [3716.0, 7.444444444444445], [3876.0, 44.0], [3924.0, 48.5], [4052.0, 32.0], [4076.0, 103.5], [4068.0, 84.5], [4036.0, 27.0], [4012.0, 32.0], [4092.0, 168.14285714285714], [4044.0, 18.099999999999998], [4312.0, 14.5], [4104.0, 115.33333333333333], [4152.0, 20.0], [4120.0, 12.0], [4248.0, 60.0], [4280.0, 21.48837209302325], [4328.0, 15.5], [4344.0, 17.0], [4264.0, 21.999999999999996], [4552.0, 17.75], [4392.0, 18.22448979591837], [4408.0, 15.5], [4424.0, 20.216783216783213], [4456.0, 15.0], [4360.0, 16.978723404255323], [4504.0, 14.0], [4568.0, 26.02173913043479], [4584.0, 14.0], [4488.0, 18.74418604651163], [4728.0, 96.0], [4712.0, 15.0], [4744.0, 86.33333333333333], [4760.0, 47.2], [4792.0, 17.0], [4776.0, 16.0], [4632.0, 21.272727272727266], [4616.0, 35.095890410958894], [4169.0, 15.0], [4249.0, 73.0], [4281.0, 17.0], [4313.0, 15.5], [4153.0, 20.0], [4329.0, 21.924999999999997], [4409.0, 19.0], [4377.0, 14.0], [4361.0, 17.0], [4393.0, 20.071428571428573], [4457.0, 13.0], [4473.0, 14.0], [4521.0, 13.0], [4505.0, 18.531914893617028], [4553.0, 18.0], [4569.0, 17.0], [4585.0, 21.583333333333336], [4601.0, 18.645833333333336], [4633.0, 14.0], [4665.0, 14.0], [4697.0, 17.37837837837838], [4729.0, 17.0], [4617.0, 27.0], [4713.0, 101.33333333333333], [4745.0, 20.5], [4793.0, 21.19565217391304], [4777.0, 15.0], [4761.0, 60.166666666666664], [2069.0, 60.0], [2077.0, 93.5], [2053.0, 23.0], [2109.0, 11.0], [2117.0, 31.088235294117645], [2165.0, 25.5], [2125.0, 116.0], [2141.0, 175.0], [2189.0, 148.83333333333337], [2181.0, 21.0], [2293.0, 44.666666666666664], [2277.0, 36.0], [2245.0, 19.25], [2253.0, 33.23076923076923], [2197.0, 27.0], [2205.0, 246.5], [2237.0, 11.333333333333334], [2397.0, 33.0], [2405.0, 14.0], [2413.0, 18.0], [2381.0, 34.87500000000001], [2373.0, 27.700000000000003], [2389.0, 36.5], [2357.0, 25.22222222222222], [2317.0, 53.23076923076923], [2517.0, 48.0], [2461.0, 37.333333333333336], [2509.0, 30.5], [2469.0, 41.16666666666667], [2485.0, 12.0], [2501.0, 34.0], [2445.0, 42.0], [2437.0, 46.0], [2661.0, 122.07999999999998], [2613.0, 29.0], [2581.0, 71.0], [2573.0, 12.0], [2565.0, 21.333333333333332], [2805.0, 63.222222222222236], [2813.0, 84.0], [2749.0, 62.66666666666667], [2765.0, 21.0], [2741.0, 54.0], [2733.0, 113.25], [2709.0, 19.47619047619048], [2925.0, 21.571428571428573], [2941.0, 39.0], [2917.0, 142.25], [2861.0, 117.2], [2853.0, 42.0], [2877.0, 186.0], [2821.0, 74.6304347826087], [2893.0, 90.62499999999999], [2901.0, 81.875], [2909.0, 53.0], [3069.0, 18.0], [3053.0, 29.0], [3037.0, 76.2], [3029.0, 12.285714285714286], [3013.0, 31.500000000000007], [3005.0, 55.33333333333333], [2973.0, 17.2], [2981.0, 22.25], [3189.0, 398.0], [3141.0, 52.8], [3133.0, 28.0], [3101.0, 99.0], [3093.0, 25.07142857142857], [3117.0, 191.0], [3109.0, 10.0], [3205.0, 200.5], [3285.0, 37.0], [3277.0, 35.0], [3261.0, 279.5], [3213.0, 107.6], [3229.0, 162.0], [3221.0, 40.0], [3237.0, 429.0], [3245.0, 38.0], [3253.0, 55.0], [3341.0, 64.14285714285717], [3445.0, 50.75], [3437.0, 32.0], [3421.0, 59.00000000000001], [3373.0, 66.69721115537851], [3365.0, 63.333333333333336], [3381.0, 25.2], [3333.0, 119.33333333333334], [3429.0, 48.0], [3413.0, 223.0], [3397.0, 91.85714285714286], [3581.0, 35.0], [3533.0, 19.4], [3541.0, 37.75], [3517.0, 30.0], [3477.0, 28.5], [3485.0, 43.0], [3557.0, 39.0], [3525.0, 9.666666666666666], [3501.0, 22.5], [3621.0, 22.7], [3637.0, 28.0], [3669.0, 17.4], [3685.0, 16.0], [3605.0, 35.2], [3701.0, 20.0], [3829.0, 32.4], [3765.0, 41.0], [3717.0, 20.0], [3757.0, 49.0], [3789.0, 10.944444444444445], [3893.0, 45.0], [3925.0, 57.0], [3909.0, 44.0], [3845.0, 8.076923076923077], [4005.0, 21.75], [4013.0, 43.285714285714285], [4069.0, 92.66666666666667], [4037.0, 22.0], [4085.0, 110.7857142857143], [4093.0, 107.875], [3989.0, 8.61111111111111], [4138.0, 13.5], [4154.0, 20.0], [4122.0, 13.0], [4170.0, 12.333333333333334], [4266.0, 14.0], [4298.0, 16.5], [4314.0, 14.0], [4250.0, 17.7], [4602.0, 15.6], [4394.0, 18.0], [4474.0, 16.333333333333332], [4426.0, 22.553191489361698], [4490.0, 13.0], [4506.0, 15.5], [4522.0, 20.093023255813957], [4570.0, 15.2], [4362.0, 20.44444444444445], [4554.0, 20.95652173913043], [4410.0, 21.715789473684197], [4650.0, 16.0], [4666.0, 18.5], [4634.0, 15.0], [4730.0, 168.0], [4714.0, 158.25], [4682.0, 16.0], [4698.0, 15.0], [4746.0, 21.0], [4794.0, 15.0], [4762.0, 53.57142857142857], [4778.0, 11.0], [4123.0, 16.0], [4107.0, 71.38461538461539], [4155.0, 17.8], [4299.0, 16.0], [4331.0, 17.0], [4347.0, 18.916666666666664], [4315.0, 13.0], [4187.0, 20.0], [4219.0, 35.5], [4203.0, 15.4], [4267.0, 16.0], [4235.0, 15.0], [4283.0, 14.0], [4411.0, 17.622222222222227], [4363.0, 14.5], [4443.0, 16.75], [4427.0, 19.47916666666667], [4539.0, 21.928571428571434], [4491.0, 13.0], [4603.0, 20.06976744186046], [4507.0, 15.69047619047619], [4379.0, 24.909090909090907], [4667.0, 20.0], [4635.0, 15.0], [4683.0, 22.333333333333332], [4731.0, 145.875], [4779.0, 18.0], [4795.0, 20.21276595744681], [1031.0, 23.666666666666668], [1027.0, 20.8], [1083.0, 73.33333333333333], [1067.0, 60.791666666666664], [1079.0, 62.0], [1107.0, 164.0], [1127.0, 141.5], [1139.0, 22.333333333333336], [1147.0, 25.0], [1135.0, 92.07692307692308], [1115.0, 27.0], [1167.0, 63.0], [1175.0, 82.83333333333333], [1179.0, 88.50000000000001], [1183.0, 91.0], [1215.0, 131.0], [1207.0, 138.44444444444446], [1211.0, 143.7], [1191.0, 120.0], [1171.0, 75.66666666666669], [1247.0, 152.0], [1243.0, 156.0], [1255.0, 191.0], [1263.0, 235.0], [1251.0, 158.0], [1331.0, 238.5], [1287.0, 196.0], [1283.0, 190.91666666666663], [1311.0, 243.75], [1335.0, 249.8], [1315.0, 242.37500000000003], [1323.0, 225.5], [1327.0, 236.77777777777777], [1299.0, 205.0], [1307.0, 9.799999999999999], [1395.0, 289.0], [1355.0, 269.19047619047626], [1367.0, 269.33333333333337], [1351.0, 273.4], [1407.0, 272.25], [1379.0, 275.0], [1387.0, 274.0], [1391.0, 287.0], [1419.0, 259.0], [1411.0, 264.75], [1471.0, 194.5], [1459.0, 172.0], [1443.0, 235.51612903225805], [1447.0, 225.0], [1455.0, 219.0], [1427.0, 259.16666666666663], [1431.0, 278.0], [1435.0, 255.22222222222226], [1439.0, 249.16666666666669], [1531.0, 68.92857142857144], [1487.0, 82.0], [1511.0, 97.5], [1535.0, 20.0], [1507.0, 43.0], [1519.0, 145.5], [1515.0, 38.5], [1539.0, 45.8125], [1595.0, 90.66666666666666], [1575.0, 71.61538461538461], [1583.0, 98.5], [1559.0, 52.0], [1611.0, 36.0], [1607.0, 34.0], [1627.0, 69.5], [1623.0, 63.0], [1619.0, 80.0], [1615.0, 81.66666666666667], [1639.0, 28.232558139534884], [1643.0, 38.333333333333336], [1635.0, 38.0], [1655.0, 40.333333333333336], [1651.0, 45.2], [1719.0, 26.25], [1699.0, 47.0], [1707.0, 22.0], [1691.0, 27.142857142857146], [1695.0, 33.5], [1727.0, 21.6], [1715.0, 17.0], [1667.0, 44.0], [1791.0, 18.0], [1735.0, 28.0], [1767.0, 40.5], [1771.0, 47.0], [1763.0, 38.5], [1747.0, 112.0], [1755.0, 39.0], [1759.0, 41.0], [1799.0, 25.833333333333332], [1795.0, 20.5], [1807.0, 33.333333333333336], [1843.0, 18.0], [1811.0, 35.0], [1839.0, 18.0], [1871.0, 23.0], [1859.0, 21.25], [1895.0, 17.0], [1883.0, 63.875], [1911.0, 19.5], [1919.0, 22.0], [1915.0, 20.5], [1923.0, 73.0], [1947.0, 22.0], [1939.0, 51.214285714285715], [1927.0, 20.0], [1931.0, 22.0], [1935.0, 97.0], [1991.0, 36.0], [1999.0, 39.0], [2011.0, 11.0], [2007.0, 74.66666666666667], [2047.0, 23.666666666666668], [2031.0, 19.0], [2039.0, 21.0], [2035.0, 68.0], [2003.0, 46.5], [2062.0, 29.0], [2078.0, 90.0], [2102.0, 10.0], [2142.0, 17.0], [2150.0, 123.22222222222223], [2174.0, 26.0], [2166.0, 16.0], [2190.0, 146.0952380952381], [2262.0, 33.83333333333333], [2198.0, 28.0], [2238.0, 13.0], [2326.0, 54.0], [2422.0, 24.833333333333332], [2430.0, 13.70588235294118], [2414.0, 19.0], [2398.0, 55.0], [2390.0, 29.666666666666668], [2358.0, 16.0], [2350.0, 77.0], [2366.0, 29.0], [2310.0, 49.666666666666664], [2510.0, 33.0], [2550.0, 75.0], [2446.0, 46.83333333333334], [2478.0, 76.0], [2470.0, 34.333333333333336], [2678.0, 64.0], [2670.0, 118.0], [2686.0, 46.333333333333336], [2614.0, 31.666666666666668], [2566.0, 12.812499999999998], [2574.0, 13.833333333333334], [2662.0, 78.0], [2598.0, 20.0], [2718.0, 104.0], [2806.0, 104.0], [2814.0, 50.5], [2798.0, 88.5], [2710.0, 97.22222222222223], [2694.0, 53.0], [2774.0, 30.0], [2766.0, 21.5], [2750.0, 66.0], [2726.0, 79.5], [2734.0, 101.75], [2830.0, 23.0], [2918.0, 80.25], [2822.0, 97.0], [2846.0, 17.81818181818182], [2878.0, 219.0], [2862.0, 151.0], [2902.0, 26.5], [2894.0, 85.6], [2886.0, 197.0], [3054.0, 32.2], [3070.0, 18.666666666666668], [2974.0, 19.0], [3038.0, 25.5], [3022.0, 307.0], [3030.0, 14.0], [3014.0, 37.5], [2990.0, 27.11111111111111], [3174.0, 36.0], [3198.0, 88.26315789473689], [3134.0, 89.0], [3078.0, 25.0], [3102.0, 285.0], [3126.0, 22.0], [3326.0, 118.33333333333334], [3230.0, 191.07407407407405], [3270.0, 14.999999999999998], [3278.0, 35.0], [3318.0, 219.0], [3286.0, 36.0], [3262.0, 127.76470588235294], [3246.0, 242.77777777777777], [3430.0, 43.0], [3446.0, 57.0], [3438.0, 38.0], [3422.0, 33.0], [3406.0, 179.33333333333331], [3390.0, 32.714285714285715], [3334.0, 52.4], [3342.0, 56.1], [3366.0, 93.0], [3574.0, 33.333333333333336], [3534.0, 20.0], [3550.0, 45.0], [3510.0, 45.666666666666664], [3526.0, 11.5], [3478.0, 35.849999999999994], [3486.0, 26.0], [3558.0, 27.333333333333336], [3566.0, 16.0], [3518.0, 11.5625], [3502.0, 21.75], [3494.0, 22.0], [3598.0, 40.333333333333336], [3590.0, 58.5], [3686.0, 18.0], [3622.0, 22.8], [3630.0, 22.5], [3638.0, 20.333333333333332], [3702.0, 22.0], [3710.0, 32.0], [3694.0, 16.0], [3806.0, 36.0], [3798.0, 25.0], [3734.0, 24.0], [3742.0, 30.0], [4006.0, 34.333333333333336], [4070.0, 137.0], [4062.0, 111.0], [4054.0, 103.0], [4078.0, 27.02941176470588], [4124.0, 16.5], [4108.0, 62.5], [4156.0, 24.0], [4188.0, 22.0], [4172.0, 14.0], [4236.0, 13.0], [4284.0, 14.0], [4300.0, 15.0], [4332.0, 17.0], [4604.0, 13.5], [4428.0, 19.653061224489797], [4444.0, 20.0], [4492.0, 18.5], [4524.0, 15.0], [4540.0, 17.25], [4476.0, 30.999999999999993], [4460.0, 20.543478260869563], [4588.0, 21.65957446808511], [4572.0, 18.909090909090907], [4652.0, 15.4], [4668.0, 15.0], [4700.0, 14.0], [4732.0, 19.0], [4636.0, 16.760869565217387], [4620.0, 14.0], [4780.0, 19.0], [4796.0, 20.437500000000004], [4764.0, 45.0], [4748.0, 110.13197969543147], [4716.0, 146.0], [4301.0, 16.0], [4141.0, 14.0], [4109.0, 62.0], [4157.0, 14.0], [4221.0, 39.0], [4253.0, 32.0], [4237.0, 16.171428571428567], [4349.0, 14.0], [4333.0, 13.5], [4317.0, 20.666666666666668], [4173.0, 11.0], [4205.0, 13.071428571428573], [4189.0, 18.218750000000004], [4477.0, 13.5], [4365.0, 17.333333333333332], [4429.0, 18.46], [4445.0, 16.0], [4461.0, 15.0], [4509.0, 14.0], [4493.0, 20.444444444444446], [4557.0, 24.872340425531917], [4589.0, 16.456521739130434], [4573.0, 13.0], [4669.0, 75.0], [4637.0, 19.0], [4653.0, 18.46666666666667], [4701.0, 15.0], [4717.0, 79.0], [4733.0, 20.0], [4621.0, 67.90243902439025], [4749.0, 85.25], [4765.0, 39.45454545454545], [4781.0, 20.0], [4797.0, 19.562499999999996], [2151.0, 28.5], [2055.0, 27.0], [2095.0, 125.4], [2111.0, 41.25], [2143.0, 17.333333333333332], [2127.0, 47.0], [2167.0, 25.5], [2175.0, 26.0], [2135.0, 164.0], [2295.0, 21.66666666666667], [2287.0, 30.0], [2263.0, 72.0], [2279.0, 24.0], [2247.0, 22.5], [2255.0, 32.666666666666664], [2199.0, 42.789473684210535], [2239.0, 14.0], [2191.0, 12.105263157894736], [2431.0, 44.0], [2407.0, 15.0], [2399.0, 9.0], [2383.0, 37.74999999999999], [2359.0, 17.42857142857143], [2319.0, 52.0], [2311.0, 34.25], [2559.0, 56.0], [2535.0, 29.5], [2463.0, 10.600000000000001], [2551.0, 47.0], [2471.0, 52.5], [2447.0, 20.0], [2439.0, 107.0], [2679.0, 104.0], [2663.0, 114.66666666666667], [2687.0, 62.8], [2615.0, 32.5], [2567.0, 23.0], [2575.0, 29.166666666666664], [2583.0, 50.38461538461539], [2815.0, 46.92307692307692], [2783.0, 78.8], [2791.0, 59.0], [2719.0, 102.88888888888889], [2711.0, 79.63636363636364], [2703.0, 68.0], [2735.0, 62.07142857142857], [2767.0, 22.833333333333336], [2847.0, 40.0], [2927.0, 23.0], [2943.0, 41.0], [2919.0, 40.0], [2831.0, 27.0], [2839.0, 87.0], [2823.0, 100.0], [2871.0, 177.0], [2879.0, 188.5], [3071.0, 57.0], [3039.0, 25.0], [3055.0, 30.0], [2975.0, 19.75], [2983.0, 20.5], [2999.0, 11.0], [2959.0, 31.833333333333332], [3007.0, 7.0], [3031.0, 15.0], [3023.0, 77.66666666666667], [3015.0, 28.88888888888889], [3183.0, 139.0], [3103.0, 136.0], [3191.0, 343.0], [3143.0, 32.0], [3159.0, 7.0], [3119.0, 20.5], [3111.0, 134.85714285714286], [3095.0, 251.0], [3079.0, 25.0], [3303.0, 38.0], [3311.0, 39.0], [3271.0, 245.0], [3327.0, 186.75862068965517], [3295.0, 38.0], [3207.0, 228.0], [3223.0, 42.0], [3255.0, 152.5357142857143], [3247.0, 39.0], [3431.0, 25.0], [3447.0, 11.0], [3439.0, 45.666666666666664], [3407.0, 33.0], [3351.0, 23.333333333333332], [3335.0, 93.88888888888889], [3391.0, 33.75], [3367.0, 8.0], [3399.0, 45.0], [3487.0, 33.5], [3527.0, 13.0], [3535.0, 21.2], [3551.0, 13.1875], [3511.0, 32.75], [3479.0, 46.94117647058824], [3471.0, 24.999999999999996], [3463.0, 17.0], [3575.0, 26.0], [3567.0, 19.0], [3503.0, 23.5], [3591.0, 41.75], [3671.0, 20.0], [3663.0, 23.0], [3599.0, 44.0], [3631.0, 26.0], [3655.0, 51.0], [3711.0, 29.0], [3815.0, 33.0], [3743.0, 31.0], [3727.0, 27.0], [3887.0, 31.5], [3903.0, 44.0], [3911.0, 45.0], [4015.0, 43.57142857142857], [4007.0, 39.25], [4031.0, 80.0], [4063.0, 15.23529411764706], [4055.0, 105.0], [4079.0, 31.333333333333332], [4095.0, 14.866666666666667], [4142.0, 13.0], [4110.0, 22.0], [4158.0, 15.0], [4222.0, 51.0], [4190.0, 22.666666666666668], [4238.0, 16.0], [4254.0, 16.0], [4318.0, 15.5], [4302.0, 33.193548387096754], [4286.0, 22.850000000000005], [4270.0, 21.39473684210526], [4558.0, 15.0], [4398.0, 19.166666666666668], [4414.0, 19.208333333333332], [4462.0, 18.021276595744684], [4446.0, 19.40909090909091], [4430.0, 22.61052631578948], [4478.0, 43.239999999999995], [4494.0, 14.0], [4542.0, 20.0], [4574.0, 14.0], [4606.0, 16.0], [4510.0, 13.0], [4622.0, 35.42857142857143], [4670.0, 14.5], [4686.0, 25.5], [4734.0, 22.666666666666668], [4798.0, 23.734693877551027], [4782.0, 18.0], [4766.0, 37.74999999999999], [4638.0, 18.022222222222222], [4127.0, 14.0], [4159.0, 17.0], [4111.0, 17.75], [4175.0, 20.10810810810811], [4207.0, 14.6], [4271.0, 14.333333333333334], [4239.0, 54.0], [4287.0, 13.5], [4303.0, 25.333333333333336], [4351.0, 19.590909090909093], [4575.0, 14.0], [4383.0, 21.10416666666668], [4399.0, 22.340425531914892], [4415.0, 29.016129032258046], [4431.0, 17.639999999999997], [4447.0, 13.0], [4367.0, 24.749999999999996], [4479.0, 7.666666666666667], [4495.0, 21.0], [4543.0, 18.5], [4607.0, 18.0], [4591.0, 15.0], [4735.0, 156.776], [4671.0, 15.8], [4623.0, 31.666666666666664], [4703.0, 16.0], [4687.0, 23.0], [4719.0, 14.5], [4767.0, 33.31818181818182], [4783.0, 21.477272727272737], [4799.0, 22.702928870292897], [4751.0, 563.7466666666669]], "isOverall": false, "label": "AuthzUser", "isController": false}, {"data": [[4750.224486128784, 233.41193562930275]], "isOverall": false, "label": "AuthzUser-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 34395.46666666667, "minX": 1.63348188E12, "maxY": 8573090.15, "series": [{"data": [[1.6334826E12, 7949325.516666667], [1.6334823E12, 7655949.016666667], [1.63348194E12, 8344930.466666667], [1.63348224E12, 7995390.55], [1.63348206E12, 7958078.983333333], [1.63348236E12, 8077674.9], [1.633482E12, 7983473.466666667], [1.63348266E12, 7615632.9], [1.63348212E12, 7351017.533333333], [1.63348278E12, 7500541.55], [1.63348272E12, 8032980.433333334], [1.63348242E12, 8162888.916666667], [1.63348188E12, 1664033.5333333334], [1.63348254E12, 8106082.166666667], [1.63348248E12, 7861728.6], [1.63348218E12, 8573090.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6334826E12, 166173.35], [1.6334823E12, 159972.08333333334], [1.63348194E12, 173417.43333333332], [1.63348224E12, 166986.08333333334], [1.63348206E12, 166337.56666666668], [1.63348236E12, 168731.23333333334], [1.633482E12, 166491.71666666667], [1.63348266E12, 159212.23333333334], [1.63348212E12, 153584.33333333334], [1.63348278E12, 156804.65], [1.63348272E12, 167937.98333333334], [1.63348242E12, 170512.56666666668], [1.63348188E12, 34395.46666666667], [1.63348254E12, 169312.95], [1.63348248E12, 164213.88333333333], [1.63348218E12, 179057.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63348278E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 22.456704725393852, "minX": 1.63348188E12, "maxY": 473.02088350763836, "series": [{"data": [[1.6334826E12, 122.81555365726832], [1.6334823E12, 354.95636363636623], [1.63348194E12, 78.63757757534113], [1.63348224E12, 22.456704725393852], [1.63348206E12, 262.25926173822427], [1.63348236E12, 473.02088350763836], [1.633482E12, 22.895007170730114], [1.63348266E12, 406.5821649592642], [1.63348212E12, 366.2775099673767], [1.63348278E12, 41.28345492305228], [1.63348272E12, 306.7610587201898], [1.63348242E12, 326.33257157781287], [1.63348188E12, 255.52340187214924], [1.63348254E12, 30.85308477585431], [1.63348248E12, 303.8306242478686], [1.63348218E12, 384.32549897407256]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63348278E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 22.064505375447883, "minX": 1.63348188E12, "maxY": 472.25678796476075, "series": [{"data": [[1.6334826E12, 122.60812689479671], [1.6334823E12, 354.6487864288818], [1.63348194E12, 78.48440516264868], [1.63348224E12, 22.064505375447883], [1.63348206E12, 261.90552525015914], [1.63348236E12, 472.25678796476075], [1.633482E12, 22.74215388720272], [1.63348266E12, 406.31638753889314], [1.63348212E12, 365.9546574845939], [1.63348278E12, 41.12277899071681], [1.63348272E12, 306.54053068597904], [1.63348242E12, 325.828180601351], [1.63348188E12, 253.49171933754747], [1.63348254E12, 30.478555341848725], [1.63348248E12, 303.4285157375528], [1.63348218E12, 383.7635702294344]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63348278E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.8575359370309853, "minX": 1.63348188E12, "maxY": 191.69645571645736, "series": [{"data": [[1.6334826E12, 1.2512101569435452], [1.6334823E12, 1.4063505872118403], [1.63348194E12, 1.483080997431436], [1.63348224E12, 1.2861238436536575], [1.63348206E12, 12.400589003045265], [1.63348236E12, 5.123041140180272], [1.633482E12, 0.8575359370309853], [1.63348266E12, 4.674399496521076], [1.63348212E12, 1.3573758608191522], [1.63348278E12, 1.6247759021602173], [1.63348272E12, 4.320350696918895], [1.63348242E12, 6.097336032124352], [1.63348188E12, 191.69645571645736], [1.63348254E12, 1.1050615640051866], [1.63348248E12, 1.5899083035305595], [1.63348218E12, 6.688832929179888]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63348278E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.63348188E12, "maxY": 6544.0, "series": [{"data": [[1.6334826E12, 2152.0], [1.6334823E12, 2162.0], [1.63348194E12, 1187.0], [1.63348224E12, 151.0], [1.63348206E12, 2038.0], [1.63348236E12, 4947.0], [1.633482E12, 210.0], [1.63348266E12, 2291.0], [1.63348212E12, 2314.0], [1.63348278E12, 861.0], [1.63348272E12, 1490.0], [1.63348242E12, 1588.0], [1.63348188E12, 6544.0], [1.63348254E12, 874.0], [1.63348248E12, 2298.0], [1.63348218E12, 1660.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6334826E12, 55.0], [1.6334823E12, 1657.0], [1.63348194E12, 75.0], [1.63348224E12, 41.0], [1.63348206E12, 61.0], [1.63348236E12, 1647.0], [1.633482E12, 89.0], [1.63348266E12, 1696.9600000000064], [1.63348212E12, 1537.0], [1.63348278E12, 165.9900000000016], [1.63348272E12, 682.0], [1.63348242E12, 1513.0], [1.63348188E12, 6154.0], [1.63348254E12, 43.0], [1.63348248E12, 1632.9900000000016], [1.63348218E12, 922.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6334826E12, 323.0], [1.6334823E12, 1701.999472732543], [1.63348194E12, 205.9957818603434], [1.63348224E12, 66.99947273254293], [1.63348206E12, 137.99947273254293], [1.63348236E12, 4947.0], [1.633482E12, 209.9942000579722], [1.63348266E12, 2272.898764648242], [1.63348212E12, 1584.0], [1.63348278E12, 860.9994727325429], [1.63348272E12, 736.9994727325429], [1.63348242E12, 1558.9989454650859], [1.63348188E12, 6533.739051818848], [1.63348254E12, 80.0], [1.63348248E12, 2294.999472732543], [1.63348218E12, 963.9989454650859]], "isOverall": false, "label": "99.99th percentile", "isController": false}, {"data": [[1.6334826E12, 322.0], [1.6334823E12, 1696.0], [1.63348194E12, 171.99930519103873], [1.63348224E12, 65.0], [1.63348206E12, 95.0], [1.63348236E12, 1683.0], [1.633482E12, 132.0], [1.63348266E12, 1875.0], [1.63348212E12, 1581.9993051910387], [1.63348278E12, 859.0], [1.63348272E12, 721.9993051910387], [1.63348242E12, 1556.0], [1.63348188E12, 6441.500190734863], [1.63348254E12, 79.0], [1.63348248E12, 1660.0], [1.63348218E12, 955.0]], "isOverall": false, "label": "99.9th percentile", "isController": false}, {"data": [[1.6334826E12, 4.0], [1.6334823E12, 4.0], [1.63348194E12, 4.0], [1.63348224E12, 4.0], [1.63348206E12, 4.0], [1.63348236E12, 5.0], [1.633482E12, 4.0], [1.63348266E12, 3.0], [1.63348212E12, 5.0], [1.63348278E12, 4.0], [1.63348272E12, 4.0], [1.63348242E12, 4.0], [1.63348188E12, 5.0], [1.63348254E12, 4.0], [1.63348248E12, 5.0], [1.63348218E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6334826E12, 22.0], [1.6334823E12, 641.0], [1.63348194E12, 22.0], [1.63348224E12, 22.0], [1.63348206E12, 21.0], [1.63348236E12, 662.0], [1.633482E12, 22.0], [1.63348266E12, 424.0], [1.63348212E12, 609.5], [1.63348278E12, 20.0], [1.63348272E12, 25.0], [1.63348242E12, 25.0], [1.63348188E12, 41.0], [1.63348254E12, 21.0], [1.63348248E12, 897.0], [1.63348218E12, 53.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63348278E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 20.0, "maxY": 1488.0, "series": [{"data": [[20.0, 8.0], [72.0, 18.0], [96.0, 25.0], [109.0, 43.0], [116.0, 21.0], [126.0, 22.0], [127.0, 20.0], [129.0, 31.0], [261.0, 263.0], [268.0, 9.0], [263.0, 9.0], [265.0, 9.0], [280.0, 171.5], [291.0, 202.0], [307.0, 17.0], [321.0, 27.0], [339.0, 97.0], [345.0, 10.0], [355.0, 42.0], [401.0, 23.0], [442.0, 20.0], [433.0, 13.0], [448.0, 23.0], [456.0, 20.0], [461.0, 22.0], [475.0, 21.0], [472.0, 38.0], [482.0, 20.0], [480.0, 20.0], [506.0, 22.0], [502.0, 21.0], [525.0, 186.0], [534.0, 22.0], [526.0, 21.0], [521.0, 18.0], [544.0, 133.0], [562.0, 741.0], [561.0, 21.0], [555.0, 19.0], [566.0, 23.0], [557.0, 18.0], [581.0, 15.0], [589.0, 164.0], [597.0, 20.0], [603.0, 19.0], [584.0, 21.0], [619.0, 23.0], [633.0, 159.0], [634.0, 14.0], [663.0, 21.0], [660.0, 22.0], [682.0, 22.0], [688.0, 187.5], [694.0, 185.0], [676.0, 22.0], [720.0, 20.0], [719.0, 183.0], [723.0, 22.0], [744.0, 23.0], [741.0, 23.0], [745.0, 20.0], [742.0, 23.0], [736.0, 17.0], [780.0, 20.0], [777.0, 21.0], [769.0, 21.0], [768.0, 293.0], [773.0, 21.0], [815.0, 33.0], [818.0, 23.0], [860.0, 21.0], [855.0, 220.0], [878.0, 34.0], [893.0, 255.0], [902.0, 22.0], [905.0, 20.0], [925.0, 19.0], [922.0, 21.0], [953.0, 22.0], [951.0, 21.0], [946.0, 21.0], [930.0, 175.0], [933.0, 21.0], [944.0, 22.0], [956.0, 21.0], [945.0, 20.0], [990.0, 21.0], [978.0, 20.0], [981.0, 20.0], [979.0, 22.0], [980.0, 21.0], [970.0, 19.0], [968.0, 21.0], [969.0, 20.0], [971.0, 22.0], [973.0, 21.0], [972.0, 22.0], [982.0, 21.0], [983.0, 22.0], [988.0, 21.0], [989.0, 21.0], [987.0, 22.0], [986.0, 20.0], [985.0, 21.0], [984.0, 21.0], [975.0, 22.0], [960.0, 27.0], [962.0, 21.0], [961.0, 21.0], [967.0, 21.0], [965.0, 21.0], [976.0, 21.0], [977.0, 21.0], [991.0, 21.0], [997.0, 21.0], [1010.0, 21.0], [1001.0, 21.0], [1000.0, 22.0], [1002.0, 22.0], [1012.0, 21.0], [1009.0, 21.0], [1008.0, 21.0], [998.0, 22.0], [1021.0, 26.0], [1018.0, 22.0], [1019.0, 20.0], [1016.0, 21.0], [1017.0, 21.0], [999.0, 21.0], [995.0, 21.0], [996.0, 22.0], [993.0, 21.0], [994.0, 22.0], [1011.0, 21.0], [992.0, 22.0], [1013.0, 21.0], [1015.0, 21.0], [1014.0, 21.0], [1006.0, 21.0], [1007.0, 21.0], [1005.0, 22.0], [1004.0, 22.0], [1003.0, 21.0], [1034.0, 21.0], [1061.0, 21.0], [1062.0, 260.5], [1027.0, 23.0], [1064.0, 21.0], [1036.0, 34.0], [1080.0, 78.0], [1037.0, 22.0], [1048.0, 20.0], [1040.0, 22.0], [1054.0, 19.0], [1148.0, 35.0], [1147.0, 147.0], [1121.0, 61.0], [1099.0, 22.0], [1211.0, 318.0], [1200.0, 288.0], [1182.0, 24.0], [1170.0, 146.5], [1171.0, 114.0], [1250.0, 263.0], [1247.0, 26.0], [1253.0, 25.0], [1246.0, 27.5], [1332.0, 24.0], [1285.0, 26.0], [1379.0, 270.0], [1375.0, 27.0], [1391.0, 117.0], [1400.0, 108.0], [1435.0, 27.0], [1434.0, 35.0], [1443.0, 44.0], [1471.0, 261.0], [1529.0, 38.0], [1494.0, 210.0], [1504.0, 31.0], [1513.0, 385.0], [1590.0, 46.0], [1550.0, 159.5], [1546.0, 318.0], [1587.0, 142.0], [1588.0, 406.0], [1552.0, 32.0], [1541.0, 327.0], [1605.0, 32.0], [1608.0, 390.5], [1612.0, 1488.0], [1686.0, 53.0], [1725.0, 43.0], [1670.0, 167.0], [1674.0, 368.0], [1719.0, 161.0], [1665.0, 355.0], [1712.0, 144.0], [1690.0, 293.0], [1736.0, 142.5], [1799.0, 346.0], [1850.0, 258.0], [1889.0, 238.0], [1865.0, 246.0], [1951.0, 318.0], [1950.0, 341.5], [1982.0, 261.0], [2012.0, 59.0], [2030.0, 420.5], [2028.0, 149.0], [2153.0, 481.0], [2078.0, 434.0], [2112.0, 920.0], [2119.0, 327.0], [2278.0, 253.0], [2191.0, 715.0], [2190.0, 472.0], [2289.0, 351.0], [2334.0, 303.5], [2425.0, 1391.0], [2401.0, 497.0], [2374.0, 209.0], [2467.0, 723.0], [2464.0, 1133.5], [2458.0, 118.0], [2469.0, 241.0], [2470.0, 528.5], [2478.0, 663.5], [2539.0, 240.0], [2577.0, 1197.0], [2567.0, 1256.0], [2618.0, 854.0], [2626.0, 1124.0], [2638.0, 449.0], [2632.0, 277.5], [2655.0, 884.0], [2649.0, 974.0], [2646.0, 270.0], [2609.0, 489.0], [2616.0, 282.0], [2571.0, 727.0], [2574.0, 1004.0], [2658.0, 1347.5], [2589.0, 511.0], [2671.0, 1254.0], [2785.0, 652.0], [2798.0, 653.0], [2806.0, 356.0], [2731.0, 905.0], [2721.0, 1367.0], [2792.0, 657.0], [2786.0, 1185.0], [2787.0, 880.0], [2734.0, 736.0], [2689.0, 846.0], [2739.0, 880.0], [2744.0, 1202.0], [2747.0, 567.0], [2708.0, 243.0], [2714.0, 111.0], [2712.0, 299.0], [2717.0, 828.0], [2807.0, 1382.0], [2759.0, 603.0], [2753.0, 330.0], [2828.0, 183.0], [2859.0, 1372.0], [2851.0, 1210.0], [2898.0, 362.0], [2890.0, 895.5], [2886.0, 378.0], [2896.0, 925.0], [2839.0, 1179.0], [2831.0, 680.0], [2838.0, 908.0], [2877.0, 1245.0], [2817.0, 945.0], [2822.0, 1176.0], [2850.0, 1375.0], [2884.0, 885.5], [2941.0, 1099.0], [2915.0, 952.0], [3032.0, 885.5], [3008.0, 1010.0], [2977.0, 904.0], [2948.0, 592.0], [3056.0, 396.0], [3024.0, 970.0], [3005.0, 860.0], [2983.0, 294.0], [3150.0, 1263.0], [3148.0, 642.0], [3105.0, 535.0], [3870.0, 544.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3870.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 20.0, "maxY": 1487.0, "series": [{"data": [[20.0, 8.0], [72.0, 18.0], [96.0, 25.0], [109.0, 43.0], [116.0, 21.0], [126.0, 22.0], [127.0, 20.0], [129.0, 31.0], [261.0, 263.0], [268.0, 9.0], [263.0, 9.0], [265.0, 9.0], [280.0, 171.0], [291.0, 202.0], [307.0, 17.0], [321.0, 27.0], [339.0, 95.0], [345.0, 10.0], [355.0, 31.0], [401.0, 23.0], [442.0, 20.0], [433.0, 13.0], [448.0, 23.0], [456.0, 19.5], [461.0, 21.0], [475.0, 21.0], [472.0, 38.0], [482.0, 20.0], [480.0, 20.0], [506.0, 22.0], [502.0, 21.0], [525.0, 186.0], [534.0, 22.0], [526.0, 21.0], [521.0, 18.0], [544.0, 132.0], [562.0, 740.5], [561.0, 21.0], [555.0, 19.0], [566.0, 22.0], [557.0, 18.0], [581.0, 15.0], [589.0, 163.0], [597.0, 20.0], [603.0, 19.0], [584.0, 21.0], [619.0, 23.0], [633.0, 158.0], [634.0, 14.0], [663.0, 21.0], [660.0, 21.0], [682.0, 22.0], [688.0, 187.0], [694.0, 185.0], [676.0, 21.0], [720.0, 20.0], [719.0, 183.0], [723.0, 21.0], [744.0, 23.0], [741.0, 22.0], [745.0, 19.0], [742.0, 22.0], [736.0, 17.0], [780.0, 19.0], [777.0, 21.0], [769.0, 21.0], [768.0, 292.0], [773.0, 21.0], [815.0, 33.0], [818.0, 23.0], [860.0, 21.0], [855.0, 220.0], [878.0, 33.0], [893.0, 254.0], [902.0, 22.0], [905.0, 20.0], [925.0, 19.0], [922.0, 21.0], [953.0, 21.0], [951.0, 21.0], [946.0, 21.0], [930.0, 175.0], [933.0, 21.0], [944.0, 21.0], [956.0, 21.0], [945.0, 20.0], [990.0, 21.0], [978.0, 20.0], [981.0, 20.0], [979.0, 22.0], [980.0, 21.0], [970.0, 19.0], [968.0, 20.0], [969.0, 20.0], [971.0, 21.0], [973.0, 21.0], [972.0, 21.0], [982.0, 21.0], [983.0, 21.0], [988.0, 21.0], [989.0, 21.0], [987.0, 21.0], [986.0, 20.0], [985.0, 20.0], [984.0, 21.0], [975.0, 22.0], [960.0, 27.0], [962.0, 21.0], [961.0, 21.0], [967.0, 21.0], [965.0, 21.0], [976.0, 21.0], [977.0, 20.0], [991.0, 21.0], [997.0, 21.0], [1010.0, 21.0], [1001.0, 21.0], [1000.0, 22.0], [1002.0, 22.0], [1012.0, 21.0], [1009.0, 21.0], [1008.0, 21.0], [998.0, 22.0], [1021.0, 25.0], [1018.0, 22.0], [1019.0, 20.0], [1016.0, 21.0], [1017.0, 21.0], [999.0, 21.0], [995.0, 21.0], [996.0, 21.0], [993.0, 21.0], [994.0, 22.0], [1011.0, 21.0], [992.0, 21.0], [1013.0, 21.0], [1015.0, 21.0], [1014.0, 20.0], [1006.0, 21.0], [1007.0, 21.0], [1005.0, 22.0], [1004.0, 22.0], [1003.0, 21.0], [1034.0, 21.0], [1061.0, 21.0], [1062.0, 260.5], [1027.0, 23.0], [1064.0, 21.0], [1036.0, 33.0], [1080.0, 77.0], [1037.0, 22.0], [1048.0, 19.0], [1040.0, 22.0], [1054.0, 19.0], [1148.0, 34.0], [1147.0, 147.0], [1121.0, 60.0], [1099.0, 21.0], [1211.0, 318.0], [1200.0, 288.0], [1182.0, 24.0], [1170.0, 146.5], [1171.0, 113.0], [1250.0, 262.0], [1247.0, 25.0], [1253.0, 25.0], [1246.0, 27.0], [1332.0, 24.0], [1285.0, 26.0], [1379.0, 269.0], [1375.0, 27.0], [1391.0, 117.0], [1400.0, 108.0], [1435.0, 27.0], [1434.0, 34.0], [1443.0, 43.0], [1471.0, 260.0], [1529.0, 37.0], [1494.0, 208.0], [1504.0, 30.0], [1513.0, 385.0], [1590.0, 42.0], [1550.0, 158.0], [1546.0, 317.0], [1587.0, 141.0], [1588.0, 406.0], [1552.0, 32.0], [1541.0, 326.0], [1605.0, 32.0], [1608.0, 390.5], [1612.0, 1487.0], [1686.0, 52.0], [1725.0, 42.0], [1670.0, 167.0], [1674.0, 368.0], [1719.0, 161.0], [1665.0, 355.0], [1712.0, 143.5], [1690.0, 293.0], [1736.0, 142.5], [1799.0, 346.0], [1850.0, 258.0], [1889.0, 237.0], [1865.0, 245.0], [1951.0, 318.0], [1950.0, 341.0], [1982.0, 260.0], [2012.0, 58.0], [2030.0, 420.0], [2028.0, 148.5], [2153.0, 481.0], [2078.0, 434.0], [2112.0, 919.0], [2119.0, 326.0], [2278.0, 252.0], [2191.0, 715.0], [2190.0, 471.0], [2289.0, 351.0], [2334.0, 303.0], [2425.0, 1390.0], [2401.0, 496.0], [2374.0, 209.0], [2467.0, 722.0], [2464.0, 1133.5], [2458.0, 117.0], [2469.0, 240.0], [2470.0, 527.5], [2478.0, 663.5], [2539.0, 239.0], [2577.0, 1197.0], [2567.0, 1256.0], [2618.0, 853.5], [2626.0, 1124.0], [2638.0, 449.0], [2632.0, 277.0], [2655.0, 883.0], [2649.0, 974.0], [2646.0, 269.0], [2609.0, 488.0], [2616.0, 281.0], [2571.0, 727.0], [2574.0, 1004.0], [2658.0, 1347.5], [2589.0, 511.0], [2671.0, 1254.0], [2785.0, 652.0], [2798.0, 652.5], [2806.0, 353.5], [2731.0, 905.0], [2721.0, 1367.0], [2792.0, 656.5], [2786.0, 1185.0], [2787.0, 880.0], [2734.0, 736.0], [2689.0, 846.0], [2739.0, 880.0], [2744.0, 1201.0], [2747.0, 567.0], [2708.0, 242.0], [2714.0, 110.0], [2712.0, 299.0], [2717.0, 828.0], [2807.0, 1382.0], [2759.0, 603.0], [2753.0, 330.0], [2828.0, 182.0], [2859.0, 1372.0], [2851.0, 1210.0], [2898.0, 360.0], [2890.0, 895.5], [2886.0, 378.0], [2896.0, 924.5], [2839.0, 1178.0], [2831.0, 680.0], [2838.0, 908.0], [2877.0, 1245.0], [2817.0, 945.0], [2822.0, 1176.0], [2850.0, 1375.0], [2884.0, 885.0], [2941.0, 1099.0], [2915.0, 952.0], [3032.0, 885.5], [3008.0, 1009.5], [2977.0, 904.0], [2948.0, 591.0], [3056.0, 395.0], [3024.0, 970.0], [3005.0, 860.0], [2983.0, 293.0], [3150.0, 1262.0], [3148.0, 641.0], [3105.0, 534.0], [3870.0, 543.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3870.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 208.31666666666666, "minX": 1.63348188E12, "maxY": 1073.0, "series": [{"data": [[1.6334826E12, 995.85], [1.6334823E12, 957.9166666666666], [1.63348194E12, 1044.6833333333334], [1.63348224E12, 999.1166666666667], [1.63348206E12, 996.3], [1.63348236E12, 1010.3666666666667], [1.633482E12, 999.6333333333333], [1.63348266E12, 952.5666666666667], [1.63348212E12, 919.2], [1.63348278E12, 938.2166666666667], [1.63348272E12, 1006.35], [1.63348242E12, 1021.7833333333333], [1.63348188E12, 208.31666666666666], [1.63348254E12, 999.6166666666667], [1.63348248E12, 996.8], [1.63348218E12, 1073.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63348278E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 208.31666666666666, "minX": 1.63348188E12, "maxY": 1072.2, "series": [{"data": [[1.6334826E12, 995.05], [1.6334823E12, 957.9166666666666], [1.63348194E12, 1044.6833333333334], [1.63348224E12, 999.9166666666666], [1.63348206E12, 996.0333333333333], [1.63348236E12, 1010.3666666666667], [1.633482E12, 999.4333333333333], [1.63348266E12, 953.3666666666667], [1.63348212E12, 919.6666666666666], [1.63348278E12, 938.95], [1.63348272E12, 1005.6166666666667], [1.63348242E12, 1021.0333333333333], [1.63348188E12, 208.31666666666666], [1.63348254E12, 1013.85], [1.63348248E12, 983.3166666666667], [1.63348218E12, 1072.2]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63348278E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 208.31666666666666, "minX": 1.63348188E12, "maxY": 1072.2, "series": [{"data": [[1.6334826E12, 995.05], [1.6334823E12, 957.9166666666666], [1.63348194E12, 1044.6833333333334], [1.63348224E12, 999.9166666666666], [1.63348206E12, 996.0333333333333], [1.63348236E12, 1010.3666666666667], [1.633482E12, 999.4333333333333], [1.63348266E12, 953.3666666666667], [1.63348212E12, 919.6666666666666], [1.63348278E12, 938.95], [1.63348272E12, 1005.6166666666667], [1.63348242E12, 1021.0333333333333], [1.63348188E12, 208.31666666666666], [1.63348254E12, 1013.85], [1.63348248E12, 983.3166666666667], [1.63348218E12, 1072.2]], "isOverall": false, "label": "AuthzUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63348278E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 208.31666666666666, "minX": 1.63348188E12, "maxY": 1072.2, "series": [{"data": [[1.6334826E12, 995.05], [1.6334823E12, 957.9166666666666], [1.63348194E12, 1044.6833333333334], [1.63348224E12, 999.9166666666666], [1.63348206E12, 996.0333333333333], [1.63348236E12, 1010.3666666666667], [1.633482E12, 999.4333333333333], [1.63348266E12, 953.3666666666667], [1.63348212E12, 919.6666666666666], [1.63348278E12, 938.95], [1.63348272E12, 1005.6166666666667], [1.63348242E12, 1021.0333333333333], [1.63348188E12, 208.31666666666666], [1.63348254E12, 1013.85], [1.63348248E12, 983.3166666666667], [1.63348218E12, 1072.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63348278E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

