/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 3952.0, "series": [{"data": [[0.0, 4.0], [0.1, 21.0], [0.2, 23.0], [0.3, 25.0], [0.4, 26.0], [0.5, 27.0], [0.6, 28.0], [0.7, 29.0], [0.8, 30.0], [0.9, 30.0], [1.0, 31.0], [1.1, 31.0], [1.2, 32.0], [1.3, 32.0], [1.4, 33.0], [1.5, 33.0], [1.6, 34.0], [1.7, 34.0], [1.8, 35.0], [1.9, 35.0], [2.0, 35.0], [2.1, 36.0], [2.2, 36.0], [2.3, 36.0], [2.4, 37.0], [2.5, 37.0], [2.6, 37.0], [2.7, 37.0], [2.8, 38.0], [2.9, 38.0], [3.0, 38.0], [3.1, 38.0], [3.2, 39.0], [3.3, 39.0], [3.4, 39.0], [3.5, 39.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 41.0], [4.6, 42.0], [4.7, 42.0], [4.8, 42.0], [4.9, 42.0], [5.0, 42.0], [5.1, 42.0], [5.2, 43.0], [5.3, 43.0], [5.4, 43.0], [5.5, 43.0], [5.6, 43.0], [5.7, 43.0], [5.8, 43.0], [5.9, 43.0], [6.0, 44.0], [6.1, 44.0], [6.2, 44.0], [6.3, 44.0], [6.4, 44.0], [6.5, 44.0], [6.6, 44.0], [6.7, 44.0], [6.8, 45.0], [6.9, 45.0], [7.0, 45.0], [7.1, 45.0], [7.2, 45.0], [7.3, 45.0], [7.4, 45.0], [7.5, 45.0], [7.6, 45.0], [7.7, 46.0], [7.8, 46.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 47.0], [8.9, 47.0], [9.0, 47.0], [9.1, 47.0], [9.2, 47.0], [9.3, 47.0], [9.4, 47.0], [9.5, 47.0], [9.6, 47.0], [9.7, 47.0], [9.8, 47.0], [9.9, 48.0], [10.0, 48.0], [10.1, 48.0], [10.2, 48.0], [10.3, 48.0], [10.4, 48.0], [10.5, 48.0], [10.6, 48.0], [10.7, 48.0], [10.8, 48.0], [10.9, 48.0], [11.0, 49.0], [11.1, 49.0], [11.2, 49.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 49.0], [11.9, 49.0], [12.0, 49.0], [12.1, 50.0], [12.2, 50.0], [12.3, 50.0], [12.4, 50.0], [12.5, 50.0], [12.6, 50.0], [12.7, 50.0], [12.8, 50.0], [12.9, 50.0], [13.0, 50.0], [13.1, 50.0], [13.2, 50.0], [13.3, 51.0], [13.4, 51.0], [13.5, 51.0], [13.6, 51.0], [13.7, 51.0], [13.8, 51.0], [13.9, 51.0], [14.0, 51.0], [14.1, 51.0], [14.2, 51.0], [14.3, 51.0], [14.4, 52.0], [14.5, 52.0], [14.6, 52.0], [14.7, 52.0], [14.8, 52.0], [14.9, 52.0], [15.0, 52.0], [15.1, 52.0], [15.2, 52.0], [15.3, 52.0], [15.4, 52.0], [15.5, 53.0], [15.6, 53.0], [15.7, 53.0], [15.8, 53.0], [15.9, 53.0], [16.0, 53.0], [16.1, 53.0], [16.2, 53.0], [16.3, 53.0], [16.4, 54.0], [16.5, 54.0], [16.6, 54.0], [16.7, 54.0], [16.8, 54.0], [16.9, 54.0], [17.0, 54.0], [17.1, 54.0], [17.2, 55.0], [17.3, 55.0], [17.4, 55.0], [17.5, 55.0], [17.6, 55.0], [17.7, 55.0], [17.8, 55.0], [17.9, 55.0], [18.0, 55.0], [18.1, 56.0], [18.2, 56.0], [18.3, 56.0], [18.4, 56.0], [18.5, 56.0], [18.6, 56.0], [18.7, 56.0], [18.8, 56.0], [18.9, 56.0], [19.0, 56.0], [19.1, 56.0], [19.2, 56.0], [19.3, 57.0], [19.4, 57.0], [19.5, 57.0], [19.6, 57.0], [19.7, 57.0], [19.8, 57.0], [19.9, 57.0], [20.0, 57.0], [20.1, 57.0], [20.2, 57.0], [20.3, 57.0], [20.4, 57.0], [20.5, 57.0], [20.6, 57.0], [20.7, 57.0], [20.8, 58.0], [20.9, 58.0], [21.0, 58.0], [21.1, 58.0], [21.2, 58.0], [21.3, 58.0], [21.4, 58.0], [21.5, 58.0], [21.6, 58.0], [21.7, 58.0], [21.8, 58.0], [21.9, 58.0], [22.0, 58.0], [22.1, 58.0], [22.2, 58.0], [22.3, 58.0], [22.4, 58.0], [22.5, 58.0], [22.6, 59.0], [22.7, 59.0], [22.8, 59.0], [22.9, 59.0], [23.0, 59.0], [23.1, 59.0], [23.2, 59.0], [23.3, 59.0], [23.4, 59.0], [23.5, 59.0], [23.6, 59.0], [23.7, 59.0], [23.8, 59.0], [23.9, 59.0], [24.0, 59.0], [24.1, 59.0], [24.2, 59.0], [24.3, 59.0], [24.4, 59.0], [24.5, 59.0], [24.6, 59.0], [24.7, 59.0], [24.8, 60.0], [24.9, 60.0], [25.0, 60.0], [25.1, 60.0], [25.2, 60.0], [25.3, 60.0], [25.4, 60.0], [25.5, 60.0], [25.6, 60.0], [25.7, 60.0], [25.8, 60.0], [25.9, 60.0], [26.0, 60.0], [26.1, 60.0], [26.2, 60.0], [26.3, 60.0], [26.4, 60.0], [26.5, 60.0], [26.6, 60.0], [26.7, 60.0], [26.8, 60.0], [26.9, 60.0], [27.0, 60.0], [27.1, 61.0], [27.2, 61.0], [27.3, 61.0], [27.4, 61.0], [27.5, 61.0], [27.6, 61.0], [27.7, 61.0], [27.8, 61.0], [27.9, 61.0], [28.0, 61.0], [28.1, 61.0], [28.2, 61.0], [28.3, 61.0], [28.4, 61.0], [28.5, 61.0], [28.6, 61.0], [28.7, 61.0], [28.8, 61.0], [28.9, 61.0], [29.0, 61.0], [29.1, 61.0], [29.2, 61.0], [29.3, 61.0], [29.4, 61.0], [29.5, 61.0], [29.6, 62.0], [29.7, 62.0], [29.8, 62.0], [29.9, 62.0], [30.0, 62.0], [30.1, 62.0], [30.2, 62.0], [30.3, 62.0], [30.4, 62.0], [30.5, 62.0], [30.6, 62.0], [30.7, 62.0], [30.8, 62.0], [30.9, 62.0], [31.0, 62.0], [31.1, 62.0], [31.2, 62.0], [31.3, 62.0], [31.4, 62.0], [31.5, 62.0], [31.6, 62.0], [31.7, 62.0], [31.8, 62.0], [31.9, 62.0], [32.0, 62.0], [32.1, 63.0], [32.2, 63.0], [32.3, 63.0], [32.4, 63.0], [32.5, 63.0], [32.6, 63.0], [32.7, 63.0], [32.8, 63.0], [32.9, 63.0], [33.0, 63.0], [33.1, 63.0], [33.2, 63.0], [33.3, 63.0], [33.4, 63.0], [33.5, 63.0], [33.6, 63.0], [33.7, 63.0], [33.8, 63.0], [33.9, 63.0], [34.0, 63.0], [34.1, 63.0], [34.2, 63.0], [34.3, 63.0], [34.4, 63.0], [34.5, 64.0], [34.6, 64.0], [34.7, 64.0], [34.8, 64.0], [34.9, 64.0], [35.0, 64.0], [35.1, 64.0], [35.2, 64.0], [35.3, 64.0], [35.4, 64.0], [35.5, 64.0], [35.6, 64.0], [35.7, 64.0], [35.8, 64.0], [35.9, 64.0], [36.0, 64.0], [36.1, 64.0], [36.2, 64.0], [36.3, 64.0], [36.4, 64.0], [36.5, 64.0], [36.6, 64.0], [36.7, 64.0], [36.8, 64.0], [36.9, 65.0], [37.0, 65.0], [37.1, 65.0], [37.2, 65.0], [37.3, 65.0], [37.4, 65.0], [37.5, 65.0], [37.6, 65.0], [37.7, 65.0], [37.8, 65.0], [37.9, 65.0], [38.0, 65.0], [38.1, 65.0], [38.2, 65.0], [38.3, 65.0], [38.4, 65.0], [38.5, 65.0], [38.6, 65.0], [38.7, 65.0], [38.8, 65.0], [38.9, 65.0], [39.0, 65.0], [39.1, 65.0], [39.2, 66.0], [39.3, 66.0], [39.4, 66.0], [39.5, 66.0], [39.6, 66.0], [39.7, 66.0], [39.8, 66.0], [39.9, 66.0], [40.0, 66.0], [40.1, 66.0], [40.2, 66.0], [40.3, 66.0], [40.4, 66.0], [40.5, 66.0], [40.6, 66.0], [40.7, 66.0], [40.8, 66.0], [40.9, 66.0], [41.0, 66.0], [41.1, 66.0], [41.2, 66.0], [41.3, 66.0], [41.4, 66.0], [41.5, 67.0], [41.6, 67.0], [41.7, 67.0], [41.8, 67.0], [41.9, 67.0], [42.0, 67.0], [42.1, 67.0], [42.2, 67.0], [42.3, 67.0], [42.4, 67.0], [42.5, 67.0], [42.6, 67.0], [42.7, 67.0], [42.8, 67.0], [42.9, 67.0], [43.0, 67.0], [43.1, 67.0], [43.2, 67.0], [43.3, 67.0], [43.4, 67.0], [43.5, 67.0], [43.6, 68.0], [43.7, 68.0], [43.8, 68.0], [43.9, 68.0], [44.0, 68.0], [44.1, 68.0], [44.2, 68.0], [44.3, 68.0], [44.4, 68.0], [44.5, 68.0], [44.6, 68.0], [44.7, 68.0], [44.8, 68.0], [44.9, 68.0], [45.0, 68.0], [45.1, 68.0], [45.2, 68.0], [45.3, 68.0], [45.4, 68.0], [45.5, 68.0], [45.6, 69.0], [45.7, 69.0], [45.8, 69.0], [45.9, 69.0], [46.0, 69.0], [46.1, 69.0], [46.2, 69.0], [46.3, 69.0], [46.4, 69.0], [46.5, 69.0], [46.6, 69.0], [46.7, 69.0], [46.8, 69.0], [46.9, 69.0], [47.0, 69.0], [47.1, 69.0], [47.2, 69.0], [47.3, 69.0], [47.4, 69.0], [47.5, 70.0], [47.6, 70.0], [47.7, 70.0], [47.8, 70.0], [47.9, 70.0], [48.0, 70.0], [48.1, 70.0], [48.2, 70.0], [48.3, 70.0], [48.4, 70.0], [48.5, 70.0], [48.6, 70.0], [48.7, 70.0], [48.8, 70.0], [48.9, 70.0], [49.0, 70.0], [49.1, 70.0], [49.2, 70.0], [49.3, 71.0], [49.4, 71.0], [49.5, 71.0], [49.6, 71.0], [49.7, 71.0], [49.8, 71.0], [49.9, 71.0], [50.0, 71.0], [50.1, 71.0], [50.2, 71.0], [50.3, 71.0], [50.4, 71.0], [50.5, 71.0], [50.6, 71.0], [50.7, 71.0], [50.8, 71.0], [50.9, 72.0], [51.0, 72.0], [51.1, 72.0], [51.2, 72.0], [51.3, 72.0], [51.4, 72.0], [51.5, 72.0], [51.6, 72.0], [51.7, 72.0], [51.8, 72.0], [51.9, 72.0], [52.0, 72.0], [52.1, 72.0], [52.2, 72.0], [52.3, 72.0], [52.4, 73.0], [52.5, 73.0], [52.6, 73.0], [52.7, 73.0], [52.8, 73.0], [52.9, 73.0], [53.0, 73.0], [53.1, 73.0], [53.2, 73.0], [53.3, 73.0], [53.4, 73.0], [53.5, 73.0], [53.6, 73.0], [53.7, 74.0], [53.8, 74.0], [53.9, 74.0], [54.0, 74.0], [54.1, 74.0], [54.2, 74.0], [54.3, 74.0], [54.4, 74.0], [54.5, 74.0], [54.6, 74.0], [54.7, 74.0], [54.8, 74.0], [54.9, 75.0], [55.0, 75.0], [55.1, 75.0], [55.2, 75.0], [55.3, 75.0], [55.4, 75.0], [55.5, 75.0], [55.6, 75.0], [55.7, 75.0], [55.8, 75.0], [55.9, 75.0], [56.0, 76.0], [56.1, 76.0], [56.2, 76.0], [56.3, 76.0], [56.4, 76.0], [56.5, 76.0], [56.6, 76.0], [56.7, 76.0], [56.8, 76.0], [56.9, 77.0], [57.0, 77.0], [57.1, 77.0], [57.2, 77.0], [57.3, 77.0], [57.4, 77.0], [57.5, 77.0], [57.6, 78.0], [57.7, 78.0], [57.8, 78.0], [57.9, 78.0], [58.0, 78.0], [58.1, 78.0], [58.2, 78.0], [58.3, 79.0], [58.4, 79.0], [58.5, 79.0], [58.6, 79.0], [58.7, 79.0], [58.8, 79.0], [58.9, 80.0], [59.0, 80.0], [59.1, 80.0], [59.2, 80.0], [59.3, 80.0], [59.4, 81.0], [59.5, 81.0], [59.6, 81.0], [59.7, 81.0], [59.8, 81.0], [59.9, 82.0], [60.0, 82.0], [60.1, 82.0], [60.2, 82.0], [60.3, 83.0], [60.4, 83.0], [60.5, 83.0], [60.6, 83.0], [60.7, 84.0], [60.8, 84.0], [60.9, 84.0], [61.0, 84.0], [61.1, 85.0], [61.2, 85.0], [61.3, 85.0], [61.4, 85.0], [61.5, 86.0], [61.6, 86.0], [61.7, 86.0], [61.8, 86.0], [61.9, 86.0], [62.0, 87.0], [62.1, 87.0], [62.2, 87.0], [62.3, 87.0], [62.4, 88.0], [62.5, 88.0], [62.6, 88.0], [62.7, 88.0], [62.8, 88.0], [62.9, 88.0], [63.0, 89.0], [63.1, 89.0], [63.2, 89.0], [63.3, 89.0], [63.4, 89.0], [63.5, 90.0], [63.6, 90.0], [63.7, 90.0], [63.8, 90.0], [63.9, 90.0], [64.0, 90.0], [64.1, 91.0], [64.2, 91.0], [64.3, 91.0], [64.4, 91.0], [64.5, 91.0], [64.6, 91.0], [64.7, 91.0], [64.8, 92.0], [64.9, 92.0], [65.0, 92.0], [65.1, 92.0], [65.2, 92.0], [65.3, 92.0], [65.4, 92.0], [65.5, 93.0], [65.6, 93.0], [65.7, 93.0], [65.8, 93.0], [65.9, 93.0], [66.0, 93.0], [66.1, 94.0], [66.2, 94.0], [66.3, 94.0], [66.4, 94.0], [66.5, 94.0], [66.6, 94.0], [66.7, 95.0], [66.8, 95.0], [66.9, 95.0], [67.0, 95.0], [67.1, 95.0], [67.2, 96.0], [67.3, 96.0], [67.4, 96.0], [67.5, 96.0], [67.6, 97.0], [67.7, 97.0], [67.8, 97.0], [67.9, 97.0], [68.0, 98.0], [68.1, 98.0], [68.2, 98.0], [68.3, 99.0], [68.4, 99.0], [68.5, 99.0], [68.6, 100.0], [68.7, 100.0], [68.8, 100.0], [68.9, 101.0], [69.0, 101.0], [69.1, 102.0], [69.2, 102.0], [69.3, 103.0], [69.4, 103.0], [69.5, 104.0], [69.6, 104.0], [69.7, 105.0], [69.8, 106.0], [69.9, 106.0], [70.0, 107.0], [70.1, 107.0], [70.2, 108.0], [70.3, 108.0], [70.4, 109.0], [70.5, 109.0], [70.6, 110.0], [70.7, 110.0], [70.8, 111.0], [70.9, 111.0], [71.0, 112.0], [71.1, 113.0], [71.2, 113.0], [71.3, 114.0], [71.4, 115.0], [71.5, 115.0], [71.6, 116.0], [71.7, 117.0], [71.8, 118.0], [71.9, 120.0], [72.0, 122.0], [72.1, 124.0], [72.2, 128.0], [72.3, 132.0], [72.4, 137.0], [72.5, 145.0], [72.6, 156.0], [72.7, 167.0], [72.8, 179.0], [72.9, 191.0], [73.0, 206.0], [73.1, 215.0], [73.2, 226.0], [73.3, 236.0], [73.4, 244.0], [73.5, 250.0], [73.6, 256.0], [73.7, 262.0], [73.8, 269.0], [73.9, 275.0], [74.0, 281.0], [74.1, 286.0], [74.2, 291.0], [74.3, 297.0], [74.4, 302.0], [74.5, 307.0], [74.6, 312.0], [74.7, 317.0], [74.8, 322.0], [74.9, 326.0], [75.0, 330.0], [75.1, 336.0], [75.2, 343.0], [75.3, 350.0], [75.4, 355.0], [75.5, 363.0], [75.6, 371.0], [75.7, 378.0], [75.8, 386.0], [75.9, 395.0], [76.0, 405.0], [76.1, 416.0], [76.2, 425.0], [76.3, 433.0], [76.4, 440.0], [76.5, 449.0], [76.6, 457.0], [76.7, 466.0], [76.8, 473.0], [76.9, 479.0], [77.0, 485.0], [77.1, 491.0], [77.2, 497.0], [77.3, 504.0], [77.4, 510.0], [77.5, 515.0], [77.6, 521.0], [77.7, 526.0], [77.8, 531.0], [77.9, 537.0], [78.0, 543.0], [78.1, 550.0], [78.2, 555.0], [78.3, 560.0], [78.4, 566.0], [78.5, 572.0], [78.6, 578.0], [78.7, 585.0], [78.8, 591.0], [78.9, 598.0], [79.0, 606.0], [79.1, 612.0], [79.2, 618.0], [79.3, 625.0], [79.4, 632.0], [79.5, 640.0], [79.6, 647.0], [79.7, 655.0], [79.8, 663.0], [79.9, 670.0], [80.0, 675.0], [80.1, 681.0], [80.2, 687.0], [80.3, 694.0], [80.4, 702.0], [80.5, 709.0], [80.6, 715.0], [80.7, 721.0], [80.8, 728.0], [80.9, 734.0], [81.0, 739.0], [81.1, 745.0], [81.2, 751.0], [81.3, 757.0], [81.4, 762.0], [81.5, 768.0], [81.6, 774.0], [81.7, 780.0], [81.8, 787.0], [81.9, 796.0], [82.0, 803.0], [82.1, 809.0], [82.2, 815.0], [82.3, 822.0], [82.4, 829.0], [82.5, 836.0], [82.6, 842.0], [82.7, 849.0], [82.8, 855.0], [82.9, 861.0], [83.0, 867.0], [83.1, 873.0], [83.2, 879.0], [83.3, 885.0], [83.4, 891.0], [83.5, 898.0], [83.6, 903.0], [83.7, 908.0], [83.8, 913.0], [83.9, 918.0], [84.0, 924.0], [84.1, 929.0], [84.2, 935.0], [84.3, 941.0], [84.4, 946.0], [84.5, 952.0], [84.6, 958.0], [84.7, 964.0], [84.8, 970.0], [84.9, 975.0], [85.0, 981.0], [85.1, 987.0], [85.2, 993.0], [85.3, 999.0], [85.4, 1006.0], [85.5, 1012.0], [85.6, 1020.0], [85.7, 1027.0], [85.8, 1035.0], [85.9, 1043.0], [86.0, 1051.0], [86.1, 1060.0], [86.2, 1068.0], [86.3, 1077.0], [86.4, 1085.0], [86.5, 1092.0], [86.6, 1098.0], [86.7, 1105.0], [86.8, 1113.0], [86.9, 1120.0], [87.0, 1127.0], [87.1, 1133.0], [87.2, 1140.0], [87.3, 1148.0], [87.4, 1157.0], [87.5, 1164.0], [87.6, 1171.0], [87.7, 1178.0], [87.8, 1185.0], [87.9, 1191.0], [88.0, 1198.0], [88.1, 1204.0], [88.2, 1210.0], [88.3, 1217.0], [88.4, 1224.0], [88.5, 1231.0], [88.6, 1238.0], [88.7, 1245.0], [88.8, 1254.0], [88.9, 1262.0], [89.0, 1270.0], [89.1, 1278.0], [89.2, 1285.0], [89.3, 1293.0], [89.4, 1302.0], [89.5, 1310.0], [89.6, 1316.0], [89.7, 1324.0], [89.8, 1331.0], [89.9, 1337.0], [90.0, 1343.0], [90.1, 1350.0], [90.2, 1358.0], [90.3, 1366.0], [90.4, 1372.0], [90.5, 1378.0], [90.6, 1385.0], [90.7, 1393.0], [90.8, 1401.0], [90.9, 1408.0], [91.0, 1414.0], [91.1, 1422.0], [91.2, 1429.0], [91.3, 1437.0], [91.4, 1444.0], [91.5, 1451.0], [91.6, 1458.0], [91.7, 1466.0], [91.8, 1473.0], [91.9, 1480.0], [92.0, 1486.0], [92.1, 1492.0], [92.2, 1500.0], [92.3, 1507.0], [92.4, 1514.0], [92.5, 1522.0], [92.6, 1531.0], [92.7, 1540.0], [92.8, 1549.0], [92.9, 1558.0], [93.0, 1566.0], [93.1, 1576.0], [93.2, 1586.0], [93.3, 1595.0], [93.4, 1607.0], [93.5, 1617.0], [93.6, 1625.0], [93.7, 1633.0], [93.8, 1642.0], [93.9, 1650.0], [94.0, 1657.0], [94.1, 1664.0], [94.2, 1671.0], [94.3, 1677.0], [94.4, 1683.0], [94.5, 1691.0], [94.6, 1699.0], [94.7, 1707.0], [94.8, 1715.0], [94.9, 1722.0], [95.0, 1731.0], [95.1, 1740.0], [95.2, 1749.0], [95.3, 1758.0], [95.4, 1766.0], [95.5, 1775.0], [95.6, 1785.0], [95.7, 1795.0], [95.8, 1804.0], [95.9, 1813.0], [96.0, 1824.0], [96.1, 1835.0], [96.2, 1846.0], [96.3, 1859.0], [96.4, 1872.0], [96.5, 1883.0], [96.6, 1897.0], [96.7, 1912.0], [96.8, 1924.0], [96.9, 1935.0], [97.0, 1945.0], [97.1, 1954.0], [97.2, 1965.0], [97.3, 1977.0], [97.4, 1988.0], [97.5, 2001.0], [97.6, 2015.0], [97.7, 2028.0], [97.8, 2049.0], [97.9, 2069.0], [98.0, 2095.0], [98.1, 2117.0], [98.2, 2157.0], [98.3, 2192.0], [98.4, 2218.0], [98.5, 2238.0], [98.6, 2260.0], [98.7, 2277.0], [98.8, 2296.0], [98.9, 2314.0], [99.0, 2338.0], [99.1, 2366.0], [99.2, 2412.0], [99.3, 2463.0], [99.4, 2508.0], [99.5, 2561.0], [99.6, 2619.0], [99.7, 2665.0], [99.8, 2736.0], [99.9, 3012.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "maxY": 619428.0, "series": [{"data": [[0.0, 619428.0], [600.0, 13080.0], [700.0, 14288.0], [800.0, 14289.0], [900.0, 16026.0], [1000.0, 11859.0], [1100.0, 12741.0], [1200.0, 12157.0], [1300.0, 12759.0], [1400.0, 12733.0], [1500.0, 10307.0], [100.0, 39518.0], [1600.0, 11508.0], [1700.0, 10286.0], [1800.0, 7888.0], [1900.0, 7873.0], [2000.0, 4802.0], [2100.0, 2735.0], [2200.0, 4446.0], [2300.0, 3177.0], [2400.0, 1868.0], [2500.0, 1589.0], [2600.0, 1828.0], [2800.0, 209.0], [2700.0, 768.0], [2900.0, 223.0], [3000.0, 673.0], [3100.0, 115.0], [200.0, 12692.0], [3200.0, 81.0], [3300.0, 57.0], [3400.0, 23.0], [3800.0, 33.0], [3900.0, 14.0], [300.0, 14438.0], [400.0, 11604.0], [500.0, 15219.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 70366.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 697832.0, "series": [{"data": [[0.0, 697832.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 135136.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 70366.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2354.711023142509, "minX": 1.6317102E12, "maxY": 4800.0, "series": [{"data": [[1.63171086E12, 4800.0], [1.63171116E12, 2510.875000000001], [1.6317102E12, 2354.711023142509], [1.6317105E12, 4800.0], [1.6317108E12, 4800.0], [1.6317111E12, 4781.005216403238], [1.63171044E12, 4800.0], [1.63171074E12, 4800.0], [1.63171104E12, 4800.0], [1.63171038E12, 4800.0], [1.63171068E12, 4800.0], [1.63171098E12, 4800.0], [1.63171032E12, 4800.0], [1.63171062E12, 4800.0], [1.63171092E12, 4800.0], [1.63171026E12, 4789.326916587735], [1.63171056E12, 4800.0]], "isOverall": false, "label": "app1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63171116E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 6.5, "minX": 408.0, "maxY": 1757.0, "series": [{"data": [[408.0, 209.66666666666666], [409.0, 233.5], [414.0, 241.0], [416.0, 267.6666666666667], [417.0, 144.0], [420.0, 206.0], [424.0, 278.75], [425.0, 269.0], [427.0, 231.0], [429.0, 267.0], [435.0, 287.0], [438.0, 333.0], [444.0, 293.0], [462.0, 284.0], [480.0, 403.0], [481.0, 387.0], [494.0, 435.0], [496.0, 434.0], [509.0, 454.0], [510.0, 404.0], [514.0, 470.0], [522.0, 448.0], [532.0, 449.0], [536.0, 465.0], [538.0, 489.0], [544.0, 426.0], [546.0, 408.0], [552.0, 531.5], [554.0, 527.0], [560.0, 526.7142857142857], [570.0, 531.5], [568.0, 547.0], [566.0, 531.875], [564.0, 534.0], [580.0, 595.0], [576.0, 566.1111111111111], [590.0, 587.1666666666667], [588.0, 599.0], [602.0, 656.0], [604.0, 606.5625], [606.0, 589.5], [592.0, 612.2], [594.0, 595.75], [596.0, 591.25], [598.0, 636.3333333333334], [584.0, 518.0], [586.0, 578.3333333333333], [638.0, 513.0], [612.0, 649.25], [614.0, 624.0], [630.0, 463.1666666666667], [628.0, 466.0], [626.0, 413.0], [632.0, 496.0], [634.0, 478.5], [636.0, 503.0], [620.0, 647.8947368421053], [622.0, 416.0], [642.0, 411.0], [644.0, 428.5], [640.0, 405.0], [646.0, 434.6666666666667], [648.0, 431.3333333333333], [656.0, 412.4], [666.0, 392.00000000000006], [660.0, 402.59999999999997], [674.0, 382.58620689655186], [676.0, 358.0], [672.0, 383.0], [692.0, 354.5], [696.0, 348.3333333333333], [688.0, 358.0], [698.0, 341.0], [708.0, 339.0], [710.0, 338.5], [704.0, 340.75], [730.0, 330.6666666666667], [734.0, 331.0], [728.0, 336.0], [720.0, 337.3333333333333], [726.0, 341.6666666666667], [712.0, 335.0], [706.0, 340.0], [718.0, 337.6666666666667], [740.0, 312.75], [738.0, 324.5], [742.0, 311.0], [744.0, 311.6666666666667], [746.0, 308.0], [748.0, 313.0], [750.0, 315.5], [752.0, 317.0], [756.0, 317.0], [762.0, 324.0], [768.0, 317.82352941176464], [774.0, 316.1428571428571], [770.0, 318.75], [772.0, 316.85714285714283], [782.0, 315.1], [780.0, 314.41666666666663], [776.0, 316.3636363636363], [778.0, 314.5], [792.0, 316.3333333333333], [798.0, 316.0], [796.0, 317.5], [794.0, 314.75], [784.0, 315.57142857142856], [786.0, 314.5], [788.0, 316.0], [790.0, 316.0], [828.0, 325.0], [802.0, 317.6666666666667], [804.0, 320.5], [800.0, 316.0], [810.0, 321.3333333333333], [818.0, 329.04166666666674], [822.0, 326.3636363636363], [820.0, 324.5], [816.0, 332.0], [830.0, 327.0], [826.0, 323.5], [806.0, 320.0], [808.0, 321.33333333333337], [812.0, 323.0], [836.0, 334.0], [838.0, 333.5], [842.0, 326.8333333333333], [844.0, 325.2], [840.0, 329.0], [860.0, 324.75], [862.0, 322.0], [848.0, 325.3333333333333], [846.0, 326.0], [868.0, 308.6666666666667], [864.0, 314.7142857142857], [876.0, 304.0], [874.0, 303.0], [882.0, 308.6666666666667], [880.0, 306.0], [894.0, 316.6666666666667], [884.0, 312.0], [866.0, 308.0], [900.0, 326.1666666666667], [922.0, 309.3333333333333], [904.0, 327.25], [912.0, 320.2], [920.0, 307.0], [902.0, 334.0], [908.0, 325.0], [906.0, 325.0], [944.0, 307.5], [940.0, 305.6666666666667], [946.0, 309.0], [950.0, 311.0], [956.0, 306.18181818181824], [952.0, 306.8], [966.0, 313.0], [976.0, 313.57142857142856], [972.0, 314.0], [986.0, 293.75], [990.0, 287.3333333333333], [984.0, 296.3333333333333], [980.0, 333.0564516129031], [982.0, 317.0], [962.0, 309.0], [964.0, 311.0], [1020.0, 311.0], [1016.0, 309.0], [994.0, 291.6666666666667], [1014.0, 305.99999999999994], [996.0, 292.0], [1004.0, 300.4], [1012.0, 306.0], [1010.0, 304.0], [1018.0, 309.83333333333337], [1008.0, 302.0], [1022.0, 310.0], [1024.0, 302.7142857142857], [1044.0, 294.0], [1036.0, 289.5], [1076.0, 313.0], [1060.0, 303.0], [1064.0, 308.0], [1068.0, 309.0], [1288.0, 478.5], [1284.0, 483.0], [1280.0, 493.0], [1304.0, 477.0], [1296.0, 478.0], [1292.0, 477.5], [1328.0, 500.33333333333337], [1336.0, 487.6666666666667], [1332.0, 495.0], [1320.0, 492.0], [1324.0, 498.0], [1356.0, 475.0], [1348.0, 476.4], [1372.0, 486.0], [1352.0, 478.0], [1392.0, 503.0], [1404.0, 512.0], [1384.0, 494.0], [1380.0, 491.0], [1408.0, 513.5], [1412.0, 509.5], [1420.0, 516.0], [1432.0, 520.5], [1532.0, 536.0], [1540.0, 540.0], [1544.0, 541.0], [1536.0, 537.0], [1564.0, 542.0], [1560.0, 562.6666666666666], [1556.0, 552.0], [1552.0, 549.0], [1568.0, 542.6666666666666], [1588.0, 552.0], [1584.0, 550.25], [1572.0, 544.0], [1580.0, 548.6666666666666], [1576.0, 547.0], [1548.0, 544.0], [1604.0, 556.0], [1600.0, 557.0], [1628.0, 513.5], [1624.0, 545.6], [1620.0, 551.5], [1616.0, 557.5], [1608.0, 553.0], [1632.0, 501.875], [1656.0, 521.75], [1652.0, 526.6111111111111], [1648.0, 503.5], [1636.0, 473.5], [1612.0, 545.0], [1720.0, 565.0], [1692.0, 576.75], [1688.0, 576.0], [1696.0, 558.2], [1712.0, 557.5], [1724.0, 569.5], [1700.0, 555.0], [1708.0, 555.1666666666667], [1732.0, 554.0], [1756.0, 554.3333333333334], [1776.0, 484.0], [1780.0, 475.0], [1784.0, 478.0], [1768.0, 522.5], [1772.0, 485.3333333333333], [1792.0, 490.0], [1796.0, 493.0], [1820.0, 468.0], [1800.0, 499.0], [1812.0, 472.0], [1816.0, 466.5], [1836.0, 477.0], [1892.0, 523.6666666666666], [1912.0, 519.0], [1908.0, 520.0], [1896.0, 524.5], [1900.0, 519.0], [1944.0, 522.125], [1936.0, 523.3333333333334], [1940.0, 520.75], [1948.0, 526.0], [2040.0, 564.0], [1992.0, 544.6666666666666], [2016.0, 542.8333333333334], [2024.0, 537.0], [2000.0, 549.0], [1988.0, 567.0], [2008.0, 540.5], [2012.0, 546.1666666666667], [2056.0, 557.4], [2048.0, 556.7777777777778], [2096.0, 561.6666666666666], [2088.0, 553.0], [2064.0, 556.5], [2144.0, 562.0], [2120.0, 592.2911392405059], [2136.0, 587.0], [2184.0, 572.6666666666666], [2280.0, 601.0], [2176.0, 575.0], [2224.0, 9.6], [2256.0, 622.0], [2272.0, 610.3333333333334], [2288.0, 602.6666666666666], [2296.0, 607.0], [2416.0, 626.0], [2304.0, 612.25], [2320.0, 616.0], [2368.0, 615.5], [2408.0, 629.2], [2400.0, 629.6666666666666], [2376.0, 618.25], [2384.0, 623.0], [2392.0, 628.0], [2352.0, 622.0], [2360.0, 627.0], [2456.0, 613.8333333333333], [2448.0, 614.5], [2552.0, 625.0], [2504.0, 609.0], [2512.0, 612.3333333333334], [2520.0, 620.0], [2472.0, 591.3333333333334], [2480.0, 593.0], [2584.0, 618.25], [2600.0, 625.6666666666666], [2568.0, 606.0], [2656.0, 611.0], [2784.0, 683.0], [2704.0, 675.0], [2744.0, 693.0], [2712.0, 698.0], [2728.0, 684.5], [2752.0, 692.0], [2792.0, 688.0], [2760.0, 671.5], [2776.0, 679.0], [2840.0, 658.0], [2824.0, 685.0], [2832.0, 206.2], [2848.0, 652.0], [2864.0, 658.0], [2912.0, 658.0], [2928.0, 651.0], [2920.0, 625.0], [2896.0, 648.25], [2904.0, 654.0], [2872.0, 657.0], [2968.0, 649.0], [2960.0, 643.6666666666666], [2944.0, 635.0], [2992.0, 650.0], [3064.0, 680.0], [3048.0, 667.0], [3040.0, 12.299999999999999], [3008.0, 644.4], [3016.0, 643.5], [3024.0, 648.0], [2984.0, 665.0], [3000.0, 184.2727272727273], [3176.0, 754.6], [3088.0, 716.0], [3192.0, 756.0], [3184.0, 748.6666666666667], [3168.0, 757.8], [3104.0, 1747.0], [3144.0, 1270.5], [3152.0, 773.0], [3136.0, 736.0], [3128.0, 735.0], [3200.0, 761.5], [3256.0, 803.0], [3216.0, 776.6666666666666], [3224.0, 777.0], [3296.0, 841.5], [3304.0, 829.5], [3320.0, 839.0], [3232.0, 770.75], [3240.0, 778.5714285714286], [3248.0, 796.6], [3432.0, 874.0], [3344.0, 835.8], [3328.0, 846.3333333333334], [3360.0, 828.0], [3408.0, 861.0], [3400.0, 858.3333333333334], [3448.0, 876.0], [3440.0, 868.0], [3568.0, 919.8333333333334], [3472.0, 846.5], [3480.0, 15.636363636363637], [3520.0, 874.0], [3576.0, 908.0], [3536.0, 863.0], [3496.0, 857.6666666666666], [3488.0, 856.0], [3512.0, 880.5], [3592.0, 907.3333333333334], [3584.0, 909.0], [3600.0, 910.0], [3608.0, 918.6666666666666], [3632.0, 926.6666666666666], [3640.0, 992.0], [3624.0, 930.0], [3616.0, 19.714285714285708], [3648.0, 920.0], [3680.0, 928.0], [3688.0, 931.5], [3696.0, 933.0], [3704.0, 927.6666666666666], [3656.0, 943.3333333333334], [3712.0, 910.1428571428572], [3728.0, 925.6666666666666], [3736.0, 894.6], [3752.0, 905.0], [3776.0, 919.8], [3792.0, 904.75], [3800.0, 913.0], [3808.0, 924.5], [3848.0, 930.6666666666666], [3888.0, 944.5714285714286], [3864.0, 914.0], [3936.0, 11.0], [3944.0, 944.0], [3960.0, 943.0], [3952.0, 9.0], [3880.0, 939.0], [3872.0, 933.0], [3896.0, 949.5], [3904.0, 947.6666666666667], [3912.0, 959.0], [3920.0, 931.0], [3928.0, 930.0], [4064.0, 881.5], [3976.0, 933.5], [3968.0, 927.0], [3984.0, 900.3333333333334], [4072.0, 869.1666666666666], [4088.0, 879.0], [4000.0, 883.7142857142857], [4032.0, 864.5], [4024.0, 868.0], [4040.0, 874.5], [4048.0, 885.0], [4056.0, 891.0], [4288.0, 818.0], [4144.0, 904.6666666666666], [4192.0, 120.74193548387096], [4208.0, 910.0], [4224.0, 902.0], [4240.0, 910.0], [4256.0, 888.5], [4304.0, 827.4166666666666], [4336.0, 858.6666666666666], [4544.0, 581.8333333333333], [4384.0, 889.6666666666666], [4400.0, 910.0], [4416.0, 895.5], [4432.0, 902.9682539682541], [4464.0, 812.0], [4480.0, 826.0], [4528.0, 868.0], [4560.0, 836.4], [4576.0, 813.0], [4592.0, 834.5], [4624.0, 776.75], [4608.0, 801.0], [4640.0, 779.0], [4656.0, 769.0], [4688.0, 770.3333333333334], [4704.0, 777.0], [4720.0, 755.5], [4800.0, 358.924571217172], [4784.0, 95.42857142857144], [4736.0, 36.0], [4097.0, 882.0], [4177.0, 922.75], [4193.0, 938.0], [4209.0, 888.0], [4289.0, 159.68750000000003], [4337.0, 859.5], [4545.0, 843.8333333333334], [4385.0, 158.3939393939394], [4401.0, 910.5], [4417.0, 897.0], [4433.0, 828.0], [4449.0, 826.0], [4497.0, 843.0], [4529.0, 458.0], [4513.0, 49.0], [4561.0, 815.6666666666667], [4593.0, 848.1666666666666], [4577.0, 813.0], [4609.0, 801.5], [4625.0, 594.5], [4641.0, 776.0], [4673.0, 765.0], [4705.0, 777.5], [4721.0, 652.5], [4737.0, 396.0], [4785.0, 116.25], [2065.0, 552.75], [2057.0, 551.7], [2145.0, 563.0], [2137.0, 588.0], [2113.0, 572.5], [2081.0, 549.0], [2249.0, 615.5], [2177.0, 575.0], [2241.0, 610.6], [2273.0, 611.0], [2185.0, 574.0], [2257.0, 621.5], [2401.0, 627.0], [2329.0, 621.5], [2361.0, 623.0], [2321.0, 619.0], [2305.0, 610.6666666666666], [2313.0, 8.0], [2345.0, 622.0], [2425.0, 610.0], [2369.0, 614.0], [2377.0, 616.8], [2385.0, 623.25], [2353.0, 623.0], [2337.0, 622.5], [2537.0, 128.6], [2449.0, 615.3333333333333], [2433.0, 605.0], [2457.0, 608.8], [2553.0, 626.0], [2497.0, 604.0], [2505.0, 612.0], [2521.0, 618.75], [2465.0, 593.125], [2473.0, 589.75], [2577.0, 614.0], [2601.0, 627.0], [2625.0, 632.0], [2649.0, 635.0], [2561.0, 618.0], [2785.0, 684.1666666666666], [2713.0, 702.25], [2801.0, 697.0], [2809.0, 681.5], [2729.0, 686.6666666666666], [2745.0, 692.5], [2753.0, 692.0], [2761.0, 669.3333333333334], [2833.0, 662.0], [2817.0, 684.0], [2873.0, 227.44444444444446], [2825.0, 685.5], [2913.0, 660.0], [2921.0, 668.0], [2929.0, 631.0], [2937.0, 632.0], [2905.0, 652.0], [2897.0, 647.75], [2865.0, 660.5], [2849.0, 651.75], [2857.0, 655.6666666666666], [2993.0, 655.5], [2985.0, 654.1666666666666], [3049.0, 668.5], [2961.0, 644.0], [3001.0, 645.0], [3009.0, 640.0], [3025.0, 650.0], [3193.0, 757.3333333333334], [3089.0, 715.0], [3145.0, 1170.4], [3153.0, 767.0909090909091], [3105.0, 1747.0], [3137.0, 737.0], [3177.0, 749.5714285714286], [3169.0, 760.3333333333334], [3121.0, 1745.5], [3113.0, 15.18181818181818], [3217.0, 775.0], [3225.0, 772.4000000000001], [3233.0, 771.3636363636364], [3265.0, 72.84615384615384], [3321.0, 840.0], [3337.0, 834.75], [3345.0, 829.0], [3361.0, 827.5], [3449.0, 885.8333333333334], [3441.0, 864.0], [3409.0, 84.58333333333334], [3433.0, 874.6666666666667], [3417.0, 867.0], [3473.0, 848.25], [3465.0, 854.2499999999999], [3457.0, 855.5], [3513.0, 877.875], [3553.0, 61.80000000000002], [3521.0, 873.0], [3545.0, 873.0], [3489.0, 855.0], [3481.0, 851.0], [3505.0, 876.25], [3609.0, 918.6666666666666], [3593.0, 905.8], [3585.0, 909.6666666666666], [3601.0, 910.0], [3633.0, 927.6666666666666], [3641.0, 957.0], [3665.0, 914.8], [3657.0, 960.0], [3705.0, 923.3333333333334], [3681.0, 928.0], [3697.0, 932.0], [3673.0, 922.5], [3737.0, 894.0], [3721.0, 918.25], [3713.0, 910.5714285714286], [3729.0, 926.5], [3769.0, 919.9999999999999], [3793.0, 904.0], [3801.0, 917.1666666666667], [3809.0, 347.6818181818182], [3817.0, 920.0], [3777.0, 20.8125], [3945.0, 945.0], [3849.0, 900.0], [3841.0, 930.0], [3865.0, 917.1666666666667], [3889.0, 945.5], [3881.0, 938.0], [3913.0, 961.0], [3921.0, 926.0], [3953.0, 953.5], [3961.0, 934.25], [3985.0, 236.51999999999992], [3993.0, 912.1666666666667], [4001.0, 882.0], [4041.0, 876.5], [4057.0, 892.5], [4049.0, 886.0], [4065.0, 880.0], [4081.0, 874.0], [4146.0, 914.0], [4178.0, 923.75], [4194.0, 939.375], [4210.0, 889.0], [4226.0, 905.0], [4242.0, 910.5], [4258.0, 888.2500000000001], [4274.0, 50.54285714285712], [4290.0, 814.3333333333334], [4306.0, 32.285714285714285], [4338.0, 861.0], [4386.0, 891.0], [4354.0, 873.5], [4402.0, 911.4444444444445], [4418.0, 897.5], [4434.0, 828.0], [4450.0, 824.125], [4498.0, 446.5], [4530.0, 596.0], [4546.0, 443.0], [4562.0, 806.0], [4578.0, 816.1818181818182], [4594.0, 817.3750000000001], [4626.0, 778.1818181818181], [4610.0, 802.6666666666666], [4642.0, 782.0], [4674.0, 764.0], [4690.0, 253.62162162162156], [4706.0, 202.05555555555563], [4738.0, 760.0], [4722.0, 757.3333333333334], [4770.0, 763.0], [4786.0, 109.42857142857143], [4195.0, 940.5714285714286], [4099.0, 883.0], [4179.0, 924.0], [4227.0, 905.0], [4243.0, 903.1333333333333], [4259.0, 885.2], [4275.0, 876.0], [4339.0, 862.0], [4115.0, 23.541666666666664], [4387.0, 893.5555555555555], [4355.0, 877.5], [4403.0, 905.076923076923], [4547.0, 839.0], [4563.0, 823.0], [4579.0, 145.72], [4595.0, 801.1666666666666], [4419.0, 898.0], [4435.0, 864.4], [4451.0, 819.0], [4467.0, 813.0], [4499.0, 579.3333333333333], [4531.0, 869.0], [4483.0, 829.0], [4627.0, 779.6], [4611.0, 803.2727272727274], [4643.0, 778.0], [4659.0, 773.0], [4675.0, 763.0], [4707.0, 774.5], [4723.0, 760.0], [4755.0, 757.0], [4771.0, 761.5], [1073.0, 314.5], [1025.0, 302.8571428571429], [1033.0, 292.6666666666667], [1041.0, 286.5], [1053.0, 300.0], [1057.0, 302.0], [1077.0, 310.0], [1065.0, 309.5], [1069.0, 309.6666666666667], [1293.0, 478.0], [1285.0, 484.5], [1289.0, 473.5], [1301.0, 471.0], [1297.0, 478.0], [1329.0, 490.0], [1341.0, 483.0], [1337.0, 482.5], [1321.0, 495.0], [1353.0, 475.0], [1345.0, 478.0], [1357.0, 477.5], [1361.0, 477.57142857142856], [1373.0, 485.0], [1349.0, 476.5], [1377.0, 487.0], [1385.0, 495.99999999999994], [1381.0, 491.0], [1409.0, 512.0], [1433.0, 520.75], [1533.0, 538.0], [1589.0, 553.0], [1545.0, 542.0], [1541.0, 539.5], [1565.0, 541.0], [1553.0, 549.0], [1569.0, 544.0], [1597.0, 553.0], [1593.0, 555.25], [1585.0, 551.0], [1573.0, 545.0], [1577.0, 548.0], [1581.0, 549.0], [1549.0, 544.5], [1613.0, 559.2678571428573], [1601.0, 556.0], [1629.0, 541.0], [1621.0, 547.5], [1617.0, 552.0], [1609.0, 557.3333333333334], [1657.0, 547.0], [1653.0, 527.25], [1649.0, 539.0], [1633.0, 526.5], [1641.0, 516.0], [1645.0, 520.1428571428572], [1637.0, 505.0], [1693.0, 570.0], [1701.0, 554.6666666666667], [1789.0, 486.125], [1777.0, 477.5], [1753.0, 569.0], [1765.0, 486.0], [1785.0, 480.14285714285717], [1761.0, 556.6], [1769.0, 488.5], [1773.0, 486.6666666666667], [1793.0, 494.0], [1797.0, 493.3333333333333], [1813.0, 465.0], [1809.0, 502.0], [1817.0, 467.0], [1849.0, 486.0], [1845.0, 484.6666666666667], [1913.0, 522.0], [1917.0, 523.5], [1881.0, 515.0], [1885.0, 517.5], [1893.0, 524.0], [1889.0, 520.0], [1909.0, 519.0], [1905.0, 520.0], [1901.0, 520.5], [1937.0, 525.0], [1945.0, 523.6666666666666], [1973.0, 548.0], [1949.0, 526.6666666666666], [1921.0, 525.0], [2041.0, 557.5], [1989.0, 544.8333333333333], [2045.0, 553.6666666666666], [2017.0, 541.9], [2021.0, 533.5], [2025.0, 535.25], [2005.0, 546.0], [2001.0, 546.0], [2013.0, 547.5], [2009.0, 542.4999999999999], [1997.0, 547.0], [2050.0, 558.2857142857142], [2058.0, 548.0], [2090.0, 226.0], [2066.0, 554.0], [2170.0, 569.0], [2162.0, 567.0], [2130.0, 584.0], [2082.0, 550.0], [2242.0, 611.3333333333334], [2250.0, 617.0], [2298.0, 608.1111111111112], [2234.0, 607.0], [2186.0, 574.0], [2282.0, 599.5], [2274.0, 611.0], [2258.0, 624.0], [2266.0, 610.0], [2378.0, 617.0], [2394.0, 628.5], [2426.0, 609.3333333333334], [2418.0, 624.3333333333334], [2530.0, 616.0], [2450.0, 237.00000000000003], [2434.0, 606.0], [2458.0, 603.6666666666666], [2546.0, 624.0], [2538.0, 620.0], [2498.0, 605.0], [2506.0, 610.0], [2514.0, 614.1666666666667], [2522.0, 619.0], [2474.0, 589.0], [2466.0, 594.0], [2562.0, 613.0], [2674.0, 618.0], [2626.0, 632.0], [2650.0, 626.6666666666666], [2578.0, 615.0], [2570.0, 608.0], [2714.0, 686.0], [2706.0, 686.5], [2754.0, 684.75], [2802.0, 698.0], [2786.0, 685.0], [2762.0, 676.75], [2746.0, 694.0], [2738.0, 691.0], [2842.0, 650.3333333333334], [2826.0, 678.8], [2922.0, 650.0], [2850.0, 652.4], [2866.0, 661.0], [2890.0, 665.5], [2898.0, 649.2857142857142], [3042.0, 661.3333333333334], [2954.0, 216.0], [3066.0, 686.6], [2986.0, 648.0], [2978.0, 658.0], [3002.0, 645.0], [3026.0, 649.0], [3010.0, 641.0], [3090.0, 1726.6], [3130.0, 735.0], [3098.0, 1736.6666666666667], [3194.0, 758.25], [3178.0, 746.0], [3186.0, 750.0], [3170.0, 761.25], [3154.0, 768.0], [3122.0, 741.0], [3210.0, 780.0], [3202.0, 764.0], [3218.0, 772.0], [3226.0, 13.444444444444445], [3306.0, 831.6666666666667], [3314.0, 835.0], [3322.0, 840.6666666666666], [3242.0, 780.5], [3346.0, 830.3333333333333], [3330.0, 844.0], [3442.0, 867.3333333333334], [3434.0, 870.6666666666666], [3338.0, 835.0], [3354.0, 829.0], [3426.0, 872.0], [3466.0, 854.0], [3458.0, 857.6], [3474.0, 847.125], [3498.0, 863.8888888888889], [3490.0, 858.0], [3514.0, 865.0], [3522.0, 868.75], [3578.0, 909.0], [3570.0, 909.0], [3538.0, 865.3333333333334], [3610.0, 919.3333333333334], [3594.0, 954.0], [3586.0, 919.3333333333334], [3602.0, 912.0], [3618.0, 923.6666666666666], [3642.0, 974.5], [3658.0, 971.6666666666666], [3650.0, 189.85714285714286], [3698.0, 934.0], [3706.0, 921.5], [3682.0, 928.5], [3690.0, 931.0], [3666.0, 918.0], [3674.0, 923.1666666666666], [3810.0, 922.6666666666666], [3722.0, 919.6666666666666], [3714.0, 912.0], [3730.0, 921.0], [3754.0, 907.0], [3778.0, 913.0], [3786.0, 921.0], [3770.0, 922.0], [3794.0, 905.0], [3834.0, 927.25], [3818.0, 921.0], [3850.0, 905.0], [3842.0, 930.6666666666666], [3866.0, 919.0], [3890.0, 950.0], [3898.0, 942.4444444444443], [3906.0, 954.0], [3914.0, 961.5], [3922.0, 929.5], [3954.0, 955.0], [3962.0, 928.0], [3994.0, 914.0], [3978.0, 934.5], [3970.0, 928.0], [3986.0, 902.0], [4002.0, 882.3333333333334], [4026.0, 870.0], [4058.0, 893.0], [4042.0, 30.875000000000004], [4074.0, 870.5], [4066.0, 875.5], [4082.0, 875.0], [4116.0, 891.4285714285714], [4148.0, 895.6666666666666], [4308.0, 832.0], [4340.0, 864.0], [4180.0, 926.1428571428571], [4196.0, 938.3333333333334], [4212.0, 895.0], [4228.0, 904.0], [4244.0, 887.8571428571428], [4260.0, 879.5714285714286], [4276.0, 880.0], [4548.0, 840.5], [4388.0, 896.75], [4404.0, 900.4999999999999], [4420.0, 898.0], [4436.0, 884.3333333333334], [4452.0, 814.8], [4372.0, 28.71428571428571], [4532.0, 869.0], [4516.0, 49.0], [4580.0, 434.3333333333333], [4564.0, 61.75000000000001], [4612.0, 805.0], [4628.0, 780.6842105263157], [4644.0, 168.12500000000003], [4692.0, 774.0], [4708.0, 295.0400000000001], [4213.0, 896.75], [4117.0, 895.0], [4181.0, 927.5], [4197.0, 936.0], [4229.0, 898.0], [4245.0, 883.3548387096774], [4261.0, 865.8095238095239], [4277.0, 463.0], [4309.0, 833.0], [4341.0, 864.1666666666666], [4357.0, 879.0], [4373.0, 894.0], [4421.0, 901.0], [4437.0, 890.0], [4469.0, 816.5], [4453.0, 808.6666666666666], [4533.0, 871.0], [4597.0, 802.3333333333334], [4549.0, 841.0], [4565.0, 808.0], [4581.0, 821.2857142857143], [4629.0, 782.0], [4613.0, 805.7142857142857], [4645.0, 776.5], [4693.0, 774.0], [4709.0, 768.0], [4741.0, 757.3333333333334], [4789.0, 86.40000000000002], [4725.0, 500.37837837837833], [4677.0, 62.37499999999999], [2059.0, 547.0], [2067.0, 554.3333333333334], [2051.0, 560.25], [2147.0, 560.5], [2139.0, 566.0], [2131.0, 586.0], [2115.0, 575.0], [2091.0, 555.3333333333331], [2083.0, 550.0], [2187.0, 575.0], [2235.0, 608.0], [2227.0, 604.0], [2243.0, 613.0], [2179.0, 120.8], [2267.0, 386.625], [2283.0, 597.0], [2291.0, 606.5], [2299.0, 608.6666666666666], [2323.0, 619.0], [2307.0, 610.5], [2331.0, 619.5], [2371.0, 617.0], [2427.0, 608.5], [2419.0, 622.0], [2403.0, 630.0], [2379.0, 618.1666666666666], [2387.0, 625.0], [2347.0, 623.0], [2355.0, 622.0], [2363.0, 621.0], [2451.0, 616.6666666666666], [2459.0, 599.0], [2483.0, 595.0], [2523.0, 620.3333333333334], [2539.0, 618.5], [2555.0, 627.5], [2579.0, 616.0], [2571.0, 610.5], [2563.0, 621.3333333333334], [2611.0, 628.0], [2603.0, 624.0], [2627.0, 96.71428571428571], [2659.0, 639.0], [2643.0, 631.0], [2651.0, 634.0], [2587.0, 618.0], [2715.0, 705.0], [2699.0, 671.0], [2707.0, 696.5], [2723.0, 696.0], [2731.0, 685.0], [2739.0, 689.0], [2787.0, 685.5], [2795.0, 693.3333333333334], [2803.0, 695.0], [2811.0, 680.0], [2779.0, 679.6666666666666], [2835.0, 673.0], [2819.0, 686.0], [2875.0, 657.7499999999999], [2827.0, 679.0], [2891.0, 654.0], [2931.0, 632.0], [2907.0, 652.5], [2843.0, 651.0], [2915.0, 12.666666666666664], [2867.0, 662.0], [2963.0, 645.0], [2947.0, 635.6666666666666], [3003.0, 651.0], [2955.0, 639.0], [3019.0, 645.3333333333334], [3027.0, 650.5], [3011.0, 641.5], [3067.0, 687.375], [2995.0, 653.75], [2979.0, 661.0], [3179.0, 741.5], [3091.0, 1638.2727272727275], [3099.0, 1733.5], [3123.0, 1250.0], [3139.0, 1005.75], [3195.0, 759.0], [3187.0, 80.00000000000001], [3171.0, 762.0], [3147.0, 837.8666666666667], [3155.0, 1102.904761904762], [3131.0, 737.0], [3115.0, 1755.0], [3219.0, 770.0], [3203.0, 767.0], [3227.0, 772.0], [3243.0, 793.3571428571428], [3235.0, 775.3333333333334], [3323.0, 842.0], [3307.0, 831.0], [3299.0, 848.0], [3251.0, 797.5], [3355.0, 825.0], [3331.0, 842.2857142857143], [3339.0, 837.5], [3347.0, 829.6666666666666], [3403.0, 858.5], [3435.0, 870.3333333333334], [3443.0, 867.0], [3427.0, 874.0], [3419.0, 868.0], [3483.0, 852.0], [3459.0, 858.0], [3571.0, 914.0], [3579.0, 906.875], [3523.0, 868.6666666666666], [3539.0, 868.0], [3499.0, 866.1666666666666], [3491.0, 856.1428571428572], [3515.0, 868.0], [3507.0, 877.0], [3611.0, 919.0], [3587.0, 945.0], [3603.0, 912.6], [3627.0, 928.0], [3635.0, 923.6666666666666], [3659.0, 910.6666666666666], [3675.0, 18.16666666666666], [3651.0, 971.6666666666666], [3683.0, 929.0], [3699.0, 933.75], [3707.0, 927.3333333333334], [3723.0, 922.0], [3731.0, 920.6666666666666], [3763.0, 912.6], [3739.0, 895.0], [3771.0, 922.8333333333334], [3803.0, 920.0], [3795.0, 907.0], [3819.0, 921.3333333333334], [3843.0, 74.12500000000001], [3883.0, 941.0], [3867.0, 919.5], [3891.0, 945.4], [3907.0, 955.0], [3899.0, 942.0], [3923.0, 929.3333333333334], [3947.0, 946.0], [3955.0, 23.166666666666668], [3979.0, 925.2222222222222], [3987.0, 902.5], [3971.0, 928.75], [3995.0, 900.3125], [4003.0, 881.0], [4035.0, 867.5454545454545], [4083.0, 876.0], [4091.0, 880.0], [4075.0, 872.3333333333334], [4067.0, 90.72], [4019.0, 879.0], [4027.0, 879.0], [4043.0, 877.0], [4051.0, 886.0], [4059.0, 891.6666666666666], [4310.0, 832.0], [4198.0, 942.3333333333333], [4182.0, 929.0], [4214.0, 896.3333333333334], [4230.0, 897.25], [4246.0, 877.0], [4262.0, 864.8888888888889], [4278.0, 877.1666666666666], [4342.0, 868.0], [4326.0, 29.391304347826086], [4550.0, 841.0], [4390.0, 899.0], [4406.0, 127.84848484848487], [4422.0, 902.0], [4438.0, 938.3333333333334], [4486.0, 835.0], [4534.0, 870.0], [4566.0, 809.0], [4598.0, 805.0], [4646.0, 775.6666666666666], [4614.0, 250.10416666666663], [4662.0, 771.0], [4694.0, 775.0], [4710.0, 758.0], [4774.0, 761.6666666666666], [4758.0, 762.5], [4742.0, 755.0], [4726.0, 490.0], [4103.0, 888.0], [4151.0, 919.5], [4295.0, 818.0], [4311.0, 833.6666666666666], [4343.0, 865.0], [4167.0, 939.0], [4183.0, 930.0], [4215.0, 127.75862068965517], [4199.0, 945.0], [4231.0, 348.83720930232556], [4247.0, 886.3333333333334], [4263.0, 860.375], [4279.0, 878.3333333333334], [4567.0, 429.0], [4375.0, 895.0], [4423.0, 903.0], [4503.0, 847.0], [4455.0, 807.0], [4471.0, 821.0], [4535.0, 870.5], [4519.0, 48.0], [4551.0, 842.0], [4583.0, 848.0], [4599.0, 809.25], [4615.0, 807.1428571428571], [4631.0, 782.75], [4647.0, 776.5], [4679.0, 763.0], [4711.0, 759.25], [4743.0, 514.6666666666666], [4695.0, 98.0], [515.0, 427.0], [525.0, 471.0], [527.0, 472.0], [569.0, 539.0], [545.0, 511.75], [547.0, 521.8], [553.0, 542.5], [559.0, 548.0], [571.0, 541.6], [561.0, 553.0], [563.0, 563.6666666666666], [565.0, 494.6666666666667], [567.0, 550.0], [581.0, 560.3333333333334], [577.0, 580.0], [587.0, 565.8333333333334], [591.0, 621.5], [589.0, 585.2999999999998], [583.0, 610.5], [601.0, 575.8461538461539], [603.0, 651.0], [605.0, 595.4666666666667], [607.0, 595.75], [593.0, 548.0], [595.0, 582.0], [597.0, 526.6666666666666], [599.0, 583.0], [585.0, 606.0], [615.0, 590.0], [611.0, 590.0], [609.0, 628.3333333333335], [623.0, 447.0], [613.0, 633.5555555555557], [629.0, 460.70000000000005], [631.0, 480.0], [627.0, 459.875], [637.0, 473.5], [639.0, 439.5], [633.0, 482.5], [635.0, 467.5], [617.0, 629.2], [621.0, 620.0377358490566], [643.0, 425.3333333333333], [641.0, 435.8461538461538], [647.0, 437.0], [651.0, 412.5], [653.0, 424.0], [655.0, 413.0], [649.0, 429.8], [665.0, 397.0], [667.0, 384.5], [677.0, 363.6666666666667], [675.0, 357.0], [693.0, 355.0], [695.0, 354.0], [679.0, 361.0], [687.0, 358.5714285714286], [685.0, 361.57142857142856], [683.0, 363.0], [729.0, 332.0], [705.0, 340.0], [709.0, 339.0], [711.0, 336.0], [733.0, 327.0], [735.0, 325.42105263157896], [727.0, 336.0], [721.0, 338.5], [717.0, 339.0], [715.0, 338.0], [737.0, 323.6666666666667], [739.0, 318.1875], [741.0, 313.0], [743.0, 310.0], [763.0, 323.6666666666667], [767.0, 324.3333333333333], [775.0, 314.0], [783.0, 316.0], [773.0, 317.5], [771.0, 319.2], [779.0, 316.3333333333333], [797.0, 318.8], [785.0, 316.0], [787.0, 315.6666666666667], [789.0, 315.22222222222223], [791.0, 316.54545454545456], [821.0, 328.0], [811.0, 322.3333333333333], [823.0, 325.2], [819.0, 328.0], [825.0, 324.0], [815.0, 327.875], [801.0, 318.0], [837.0, 332.3333333333333], [847.0, 342.0], [857.0, 327.5], [863.0, 321.2], [853.0, 326.625], [851.0, 325.0], [843.0, 323.0], [845.0, 325.0], [871.0, 302.6666666666667], [889.0, 314.2], [877.0, 304.5], [875.0, 303.0], [891.0, 315.0], [893.0, 317.0], [887.0, 313.0], [885.0, 311.0], [865.0, 313.0], [867.0, 303.0], [883.0, 310.0], [901.0, 327.3333333333333], [905.0, 328.5], [913.0, 317.33333333333337], [923.0, 309.4], [911.0, 326.3333333333333], [915.0, 304.0], [919.0, 304.0], [943.0, 307.0], [939.0, 305.6666666666667], [937.0, 305.25], [935.0, 304.0], [945.0, 308.0], [947.0, 312.2], [949.0, 307.0], [941.0, 305.8], [955.0, 307.0], [953.0, 309.0], [977.0, 313.72727272727275], [979.0, 308.77777777777777], [987.0, 286.0], [985.0, 294.0], [981.0, 327.14285714285717], [983.0, 301.6666666666667], [975.0, 313.5], [973.0, 315.0], [1003.0, 299.5], [1015.0, 306.0], [1013.0, 306.0], [1021.0, 311.8], [1034.0, 290.6666666666667], [1038.0, 296.0], [1042.0, 289.0], [1026.0, 293.0], [1030.0, 292.6666666666667], [1074.0, 310.0], [1062.0, 305.3333333333333], [1066.0, 309.3333333333333], [1070.0, 312.0], [1290.0, 471.32], [1282.0, 490.25], [1306.0, 480.8301886792453], [1286.0, 480.0], [1294.0, 477.0], [1330.0, 487.0], [1338.0, 483.0], [1334.0, 485.6], [1322.0, 494.3333333333333], [1326.0, 501.0], [1350.0, 474.5], [1346.0, 479.5], [1374.0, 487.5], [1366.0, 481.0], [1406.0, 511.0], [1378.0, 489.0], [1390.0, 501.0], [1386.0, 500.0], [1358.0, 477.0], [1410.0, 509.5], [1434.0, 519.6], [1422.0, 520.0], [1438.0, 519.0], [1430.0, 522.0], [1530.0, 535.0], [1534.0, 536.0], [1546.0, 541.0], [1542.0, 539.0], [1562.0, 542.0], [1554.0, 550.0], [1590.0, 553.0], [1594.0, 555.0], [1574.0, 546.2], [1570.0, 544.0], [1578.0, 548.0], [1582.0, 550.0], [1550.0, 547.0], [1606.0, 556.0], [1630.0, 468.3333333333333], [1622.0, 545.3333333333334], [1626.0, 524.25], [1618.0, 555.7777777777778], [1602.0, 559.0], [1658.0, 556.1538461538462], [1650.0, 514.5], [1634.0, 499.42857142857144], [1646.0, 552.0], [1638.0, 530.0], [1614.0, 560.0], [1698.0, 552.0], [1726.0, 569.5], [1714.0, 558.1428571428571], [1722.0, 565.0], [1778.0, 474.0], [1734.0, 556.0], [1730.0, 568.5], [1758.0, 557.6666666666666], [1754.0, 562.0], [1782.0, 475.0], [1790.0, 490.0], [1762.0, 531.5], [1770.0, 525.0], [1774.0, 480.5], [1798.0, 500.0], [1794.0, 494.5], [1802.0, 498.0], [1806.0, 499.0], [1810.0, 464.5], [1850.0, 487.57142857142856], [1846.0, 485.5], [1842.0, 479.0], [1914.0, 525.0], [1886.0, 518.5], [1894.0, 524.8], [1918.0, 526.0], [1906.0, 520.0], [1898.0, 523.4166666666666], [1902.0, 519.4], [1942.0, 520.8181818181816], [1930.0, 527.5], [1938.0, 520.0], [1946.0, 525.0], [1934.0, 523.0], [1962.0, 543.4], [1954.0, 536.25], [1950.0, 528.4], [2034.0, 544.0], [1998.0, 542.0], [2046.0, 553.0], [2042.0, 554.4], [2018.0, 540.0], [2022.0, 528.0], [2026.0, 539.5], [2006.0, 542.6666666666667], [2010.0, 544.2857142857142], [2014.0, 549.0], [2052.0, 563.5], [2092.0, 557.0], [2068.0, 552.0], [2132.0, 574.5], [2140.0, 591.0], [2084.0, 550.0], [2252.0, 619.0], [2236.0, 609.0], [2260.0, 618.6], [2292.0, 604.0], [2300.0, 609.3333333333334], [2284.0, 598.0], [2420.0, 622.5], [2332.0, 621.6666666666666], [2364.0, 619.0], [2324.0, 620.5], [2428.0, 604.5], [2412.0, 626.0], [2404.0, 6.5], [2372.0, 614.0], [2396.0, 629.0], [2380.0, 620.0], [2340.0, 621.0], [2356.0, 619.0], [2548.0, 623.0], [2444.0, 612.0], [2460.0, 597.6666666666666], [2540.0, 618.5], [2556.0, 624.0], [2452.0, 616.6666666666666], [2508.0, 612.0], [2516.0, 615.0], [2524.0, 618.0], [2500.0, 606.75], [2476.0, 590.0], [2564.0, 610.25], [2588.0, 620.3333333333333], [2596.0, 627.6666666666666], [2572.0, 610.0], [2668.0, 617.0], [2716.0, 697.5], [2708.0, 309.55555555555554], [2748.0, 694.0], [2740.0, 690.0], [2732.0, 689.0], [2724.0, 683.5], [2812.0, 682.0], [2796.0, 694.5], [2804.0, 695.25], [2780.0, 680.0], [2764.0, 672.0], [2756.0, 683.9090909090909], [2820.0, 685.0], [2876.0, 654.0], [2836.0, 650.0], [2852.0, 653.0], [2916.0, 621.0], [2892.0, 656.0], [2900.0, 650.75], [2908.0, 642.8000000000001], [2956.0, 640.3333333333334], [3004.0, 647.0], [2964.0, 647.7777777777777], [3052.0, 673.0], [3020.0, 646.0], [3012.0, 643.5], [2988.0, 648.0], [2996.0, 650.0], [3172.0, 762.3333333333334], [3100.0, 1743.0], [3188.0, 752.75], [3196.0, 760.6666666666666], [3108.0, 1748.5], [3132.0, 735.0], [3140.0, 1249.0], [3148.0, 773.3333333333334], [3116.0, 1756.0], [3204.0, 769.3333333333335], [3252.0, 802.0], [3220.0, 772.0], [3300.0, 842.0], [3316.0, 836.0], [3308.0, 831.5], [3236.0, 775.0], [3244.0, 799.0], [3356.0, 827.0], [3332.0, 838.0], [3340.0, 836.5], [3348.0, 828.0], [3412.0, 865.0], [3452.0, 859.0], [3428.0, 875.0], [3404.0, 860.0], [3468.0, 851.2857142857143], [3460.0, 858.5], [3476.0, 844.0], [3572.0, 915.0], [3524.0, 867.3333333333334], [3540.0, 868.5], [3492.0, 859.0], [3508.0, 875.3333333333334], [3684.0, 930.0], [3596.0, 908.0], [3588.0, 934.0], [3612.0, 921.0], [3636.0, 920.4000000000001], [3628.0, 932.0], [3652.0, 1000.0], [3708.0, 918.4], [3692.0, 930.0], [3700.0, 934.0], [3740.0, 895.0], [3724.0, 922.0], [3732.0, 913.7142857142858], [3764.0, 914.5], [3788.0, 915.6666666666666], [3772.0, 924.6666666666666], [3780.0, 913.0], [3836.0, 928.0], [3812.0, 923.4], [3820.0, 920.6666666666666], [3796.0, 908.1999999999999], [3804.0, 921.0], [3852.0, 901.0], [3884.0, 941.75], [3892.0, 948.0], [3908.0, 956.5], [3900.0, 942.0], [3916.0, 963.0], [3940.0, 940.0], [3932.0, 472.0], [3956.0, 956.6], [3964.0, 929.0833333333334], [3948.0, 946.5], [3972.0, 929.4], [3988.0, 903.5], [4004.0, 879.0], [4028.0, 886.0], [4036.0, 870.0], [4044.0, 878.5], [4068.0, 877.0], [4092.0, 32.76], [4296.0, 819.0], [4104.0, 888.0], [4136.0, 879.0], [4168.0, 94.96153846153847], [4216.0, 899.0769230769231], [4200.0, 637.6666666666667], [4232.0, 902.25], [4248.0, 888.0], [4264.0, 860.5], [4280.0, 48.0], [4312.0, 835.6], [4344.0, 863.4285714285714], [4376.0, 897.5], [4360.0, 878.8], [4392.0, 903.0], [4408.0, 889.5], [4424.0, 904.0], [4440.0, 905.0], [4456.0, 808.0], [4472.0, 822.0], [4520.0, 862.0], [4584.0, 848.5], [4600.0, 812.8333333333334], [4552.0, 225.15384615384625], [4568.0, 429.5], [4632.0, 782.3333333333334], [4616.0, 801.3333333333334], [4648.0, 772.5], [4664.0, 765.0], [4680.0, 362.8], [4696.0, 421.70000000000005], [4712.0, 756.2926829268292], [4744.0, 755.0], [4760.0, 762.0], [4792.0, 72.66176470588235], [4105.0, 888.0], [4169.0, 925.5], [4185.0, 932.0], [4201.0, 635.0], [4233.0, 904.5], [4265.0, 863.3333333333335], [4281.0, 876.375], [4297.0, 820.0], [4553.0, 843.6666666666666], [4377.0, 896.0], [4361.0, 884.5], [4425.0, 156.36363636363635], [4441.0, 832.875], [4537.0, 865.2666666666667], [4569.0, 810.0], [4585.0, 853.0], [4601.0, 817.0], [4489.0, 22.269230769230766], [4617.0, 800.0], [4649.0, 771.0], [4665.0, 765.0], [4681.0, 765.3333333333334], [4697.0, 200.93351063829772], [4729.0, 761.0], [4793.0, 218.55555555555554], [4777.0, 764.0], [2061.0, 551.3333333333334], [2053.0, 564.0], [2069.0, 549.3333333333334], [2141.0, 560.0], [2093.0, 559.0], [2101.0, 565.6666666666666], [2085.0, 553.0], [2293.0, 605.0], [2245.0, 613.0], [2181.0, 571.5], [2301.0, 609.5], [2285.0, 599.5], [2189.0, 575.0], [2253.0, 620.0], [2269.0, 610.5], [2261.0, 619.0], [2421.0, 619.0], [2325.0, 621.0], [2333.0, 625.0], [2405.0, 629.5], [2429.0, 605.0], [2413.0, 627.0], [2373.0, 614.0], [2389.0, 626.0], [2397.0, 630.0], [2357.0, 622.5], [2461.0, 595.0], [2445.0, 612.5], [2549.0, 625.0], [2557.0, 625.0], [2525.0, 618.0], [2493.0, 127.0], [2477.0, 591.0], [2469.0, 591.0], [2589.0, 623.0], [2573.0, 614.0], [2669.0, 163.08333333333331], [2605.0, 625.0], [2597.0, 628.5], [2645.0, 607.0], [2629.0, 627.0], [2565.0, 610.6666666666666], [2717.0, 687.6666666666666], [2709.0, 696.25], [2789.0, 686.75], [2813.0, 678.75], [2797.0, 696.0], [2725.0, 689.5], [2733.0, 687.0], [2829.0, 675.0], [2821.0, 687.75], [2869.0, 661.0], [2877.0, 666.0], [2837.0, 649.0], [2845.0, 649.6666666666666], [2933.0, 631.0], [2893.0, 651.0], [2901.0, 650.0], [2861.0, 657.5], [3053.0, 674.3333333333334], [2949.0, 637.0], [2957.0, 641.0], [2965.0, 648.0], [2989.0, 654.0], [2997.0, 648.6666666666666], [3013.0, 640.0], [3021.0, 646.0], [3037.0, 656.5], [3029.0, 651.0], [3181.0, 744.0], [3093.0, 1395.6666666666667], [3141.0, 1333.8351648351645], [3165.0, 924.8461538461538], [3149.0, 771.3333333333334], [3117.0, 1757.0], [3109.0, 1749.5], [3197.0, 762.5], [3173.0, 763.0], [3133.0, 738.0], [3301.0, 380.48], [3205.0, 771.5], [3237.0, 776.0], [3245.0, 797.6666666666666], [3293.0, 839.0], [3317.0, 837.8], [3325.0, 842.0], [3309.0, 831.6666666666666], [3453.0, 858.0], [3333.0, 839.8888888888889], [3405.0, 860.0], [3437.0, 866.0], [3445.0, 863.0], [3413.0, 866.0], [3429.0, 876.0], [3485.0, 854.0], [3509.0, 873.5], [3517.0, 16.416666666666668], [3565.0, 912.3333333333334], [3581.0, 906.5], [3573.0, 930.0], [3557.0, 878.0], [3525.0, 862.5], [3533.0, 861.6666666666666], [3501.0, 864.5], [3685.0, 929.8], [3597.0, 909.0], [3589.0, 936.75], [3605.0, 912.8333333333333], [3637.0, 915.0], [3661.0, 910.0], [3669.0, 919.25], [3677.0, 924.0], [3701.0, 932.25], [3709.0, 913.6666666666666], [3741.0, 895.5], [3717.0, 913.6666666666666], [3733.0, 911.0909090909091], [3757.0, 908.75], [3765.0, 916.2], [3773.0, 924.6666666666666], [3781.0, 912.0], [3797.0, 908.0], [3821.0, 922.0], [3837.0, 929.0], [3813.0, 924.0], [3853.0, 903.0], [3885.0, 941.5], [3877.0, 28.39130434782609], [3893.0, 948.5], [3901.0, 943.0], [3909.0, 957.0], [3917.0, 965.0], [3933.0, 934.0], [3925.0, 16.92857142857143], [3949.0, 948.0], [3957.0, 957.0], [3989.0, 905.0], [3973.0, 931.25], [3997.0, 879.5000000000001], [4021.0, 875.5], [4029.0, 872.0], [4013.0, 885.0], [4045.0, 879.6666666666666], [4061.0, 892.75], [4077.0, 873.0], [4085.0, 876.5], [4093.0, 879.0], [4069.0, 875.5], [4218.0, 902.5], [4106.0, 889.0], [4170.0, 936.0], [4186.0, 933.0], [4202.0, 715.0], [4234.0, 904.2], [4250.0, 879.8333333333334], [4266.0, 865.0], [4282.0, 668.0], [4410.0, 889.3333333333334], [4378.0, 893.0], [4362.0, 883.0], [4474.0, 26.333333333333332], [4394.0, 903.0], [4426.0, 907.0], [4442.0, 834.5], [4538.0, 859.0], [4586.0, 575.6666666666667], [4602.0, 808.375], [4554.0, 843.8], [4570.0, 810.3333333333334], [4618.0, 797.3333333333334], [4666.0, 79.97435897435895], [4682.0, 765.5], [4714.0, 751.5], [4730.0, 761.5], [4746.0, 758.0], [4762.0, 762.0], [4794.0, 61.52173913043479], [4698.0, 199.0], [4299.0, 821.0], [4187.0, 934.0], [4171.0, 932.5833333333333], [4219.0, 906.0], [4139.0, 16.736842105263158], [4235.0, 905.6666666666666], [4251.0, 883.9166666666666], [4267.0, 870.0769230769231], [4283.0, 874.6666666666666], [4331.0, 856.8333333333333], [4347.0, 868.5], [4395.0, 904.0], [4379.0, 891.909090909091], [4411.0, 891.0], [4555.0, 845.0], [4571.0, 811.0], [4427.0, 907.0], [4443.0, 833.3333333333333], [4491.0, 838.0], [4459.0, 810.0], [4475.0, 823.0], [4523.0, 863.0], [4539.0, 46.60714285714287], [4507.0, 850.0], [4619.0, 795.6666666666666], [4635.0, 125.06976744186049], [4683.0, 766.0], [4699.0, 777.0], [4715.0, 753.0], [4795.0, 36.30000000000001], [4667.0, 50.0], [1055.0, 300.0], [1051.0, 297.5], [1027.0, 294.0], [1035.0, 287.0], [1039.0, 285.0], [1063.0, 306.0], [1071.0, 315.14285714285717], [1279.0, 491.0], [1287.0, 476.55555555555554], [1307.0, 484.8], [1299.0, 476.05882352941177], [1283.0, 484.5], [1291.0, 474.83333333333337], [1295.0, 476.83333333333337], [1319.0, 491.5], [1335.0, 485.0], [1331.0, 488.0], [1323.0, 494.3333333333333], [1327.0, 504.5], [1371.0, 484.0], [1363.0, 478.5], [1347.0, 478.6666666666667], [1359.0, 477.0], [1407.0, 513.0], [1383.0, 494.0], [1379.0, 490.3333333333333], [1411.0, 510.0], [1535.0, 536.0], [1543.0, 542.0], [1539.0, 538.4375], [1567.0, 543.3333333333334], [1559.0, 543.0], [1555.0, 550.0], [1595.0, 554.5], [1591.0, 554.3333333333334], [1587.0, 551.7777777777778], [1571.0, 544.5], [1579.0, 548.0], [1551.0, 548.0], [1547.0, 543.8], [1611.0, 550.0], [1607.0, 554.3333333333334], [1631.0, 475.75], [1619.0, 549.6], [1615.0, 557.5], [1655.0, 557.0], [1647.0, 514.5], [1643.0, 452.0], [1639.0, 487.0], [1635.0, 502.0], [1695.0, 568.0], [1671.0, 571.0], [1687.0, 580.5], [1691.0, 594.0], [1679.0, 572.0], [1707.0, 556.5], [1787.0, 484.25], [1783.0, 478.0], [1731.0, 564.0], [1759.0, 558.0], [1791.0, 491.0], [1779.0, 473.6666666666667], [1763.0, 509.0], [1771.0, 490.0], [1775.0, 485.0], [1803.0, 500.0], [1819.0, 468.0], [1887.0, 519.5], [1891.0, 523.5], [1895.0, 525.0], [1899.0, 519.0], [1923.0, 526.0], [1947.0, 526.0], [1967.0, 544.0], [1971.0, 547.0], [1959.0, 543.0], [2035.0, 557.1666666666666], [2039.0, 561.25], [1987.0, 604.0384615384617], [2047.0, 555.4], [2019.0, 535.0], [2003.0, 544.5], [2015.0, 548.2], [2011.0, 546.0], [2007.0, 539.0], [2054.0, 563.0], [2094.0, 561.0], [2078.0, 549.0], [2118.0, 574.0909090909092], [2134.0, 563.0], [2126.0, 582.75], [2142.0, 563.0], [2086.0, 552.1666666666666], [2246.0, 614.5], [2238.0, 609.75], [2294.0, 605.0], [2262.0, 615.0], [2254.0, 620.0], [2286.0, 599.0], [2430.0, 602.0], [2374.0, 617.75], [2334.0, 623.0], [2406.0, 626.0], [2366.0, 618.0], [2358.0, 8.0], [2326.0, 621.0], [2382.0, 621.0], [2398.0, 629.3333333333334], [2422.0, 621.0], [2414.0, 625.0], [2446.0, 613.0], [2438.0, 608.0], [2454.0, 616.75], [2462.0, 596.0], [2558.0, 623.0], [2510.0, 611.3333333333334], [2470.0, 596.0], [2574.0, 612.25], [2582.0, 388.5], [2566.0, 614.0], [2590.0, 624.2222222222222], [2686.0, 655.2], [2614.0, 627.0], [2606.0, 625.0], [2630.0, 633.0], [2654.0, 611.0], [2710.0, 690.0], [2726.0, 683.0], [2718.0, 678.0], [2814.0, 682.2], [2806.0, 687.875], [2798.0, 697.5], [2790.0, 8.5], [2750.0, 691.0], [2758.0, 679.0], [2782.0, 683.0], [2830.0, 668.0], [2822.0, 687.5], [2934.0, 631.0], [2838.0, 647.0], [2854.0, 655.0], [2870.0, 664.0], [2878.0, 648.0], [2894.0, 650.0], [2902.0, 651.0], [2910.0, 618.0], [2950.0, 636.25], [3006.0, 642.0], [2958.0, 642.0], [3070.0, 687.0], [3054.0, 674.0], [3046.0, 666.0], [2982.0, 658.0], [2990.0, 657.0], [2998.0, 649.0], [3014.0, 642.0], [3022.0, 646.0], [3030.0, 652.5], [3038.0, 659.0], [3102.0, 1745.0], [3094.0, 1737.3333333333333], [3142.0, 761.0], [3198.0, 764.0], [3190.0, 755.0], [3174.0, 765.0588235294117], [3166.0, 820.7222222222222], [3110.0, 1751.0], [3118.0, 740.0], [3126.0, 740.0], [3206.0, 774.0], [3222.0, 770.0], [3238.0, 776.5], [3230.0, 773.0], [3310.0, 833.0], [3318.0, 839.0], [3254.0, 803.0], [3446.0, 872.0], [3334.0, 845.0], [3374.0, 18.153846153846153], [3398.0, 857.25], [3454.0, 858.6666666666666], [3438.0, 868.5], [3342.0, 835.5], [3358.0, 829.0], [3430.0, 876.0909090909091], [3566.0, 912.0], [3462.0, 855.0], [3494.0, 861.0], [3510.0, 878.6666666666667], [3574.0, 908.0], [3582.0, 20.42857142857143], [3526.0, 862.4285714285714], [3542.0, 870.0], [3550.0, 875.0], [3598.0, 909.5], [3590.0, 905.0], [3606.0, 914.0], [3686.0, 930.0], [3702.0, 933.5], [3710.0, 915.625], [3622.0, 926.5], [3638.0, 915.5], [3654.0, 958.3333333333334], [3646.0, 918.0], [3670.0, 921.0], [3678.0, 927.0], [3726.0, 923.3000000000001], [3734.0, 903.75], [3758.0, 911.0], [3750.0, 60.0909090909091], [3774.0, 924.0], [3790.0, 908.0], [3806.0, 923.3333333333334], [3798.0, 909.0], [3814.0, 922.8], [3838.0, 930.0], [3846.0, 928.5], [3902.0, 180.83333333333331], [3918.0, 952.3333333333334], [3926.0, 930.5], [3950.0, 948.5], [3934.0, 934.0], [3958.0, 952.0], [3966.0, 926.5], [3982.0, 909.5454545454545], [3990.0, 904.875], [3974.0, 932.25], [3998.0, 881.0], [4022.0, 877.0], [4038.0, 871.7692307692308], [4070.0, 869.5], [4086.0, 878.0], [4014.0, 101.81818181818178], [4030.0, 884.0], [4054.0, 890.0], [4062.0, 895.0], [4046.0, 881.0], [4108.0, 890.0], [4156.0, 916.0], [4172.0, 921.0], [4188.0, 934.0], [4252.0, 93.25000000000001], [4268.0, 871.0], [4284.0, 643.75], [4300.0, 823.4736842105265], [4332.0, 856.375], [4556.0, 845.3333333333333], [4380.0, 890.0], [4412.0, 892.0], [4428.0, 907.5], [4444.0, 834.0], [4492.0, 840.0], [4460.0, 808.0], [4540.0, 858.0], [4572.0, 429.5], [4588.0, 855.0], [4604.0, 89.02439024390243], [4620.0, 791.5], [4652.0, 770.0], [4684.0, 765.0], [4700.0, 296.5], [4732.0, 758.0], [4716.0, 107.36363636363636], [4125.0, 883.0], [4109.0, 893.3333333333334], [4141.0, 899.0], [4333.0, 854.0], [4173.0, 939.0], [4189.0, 935.0], [4221.0, 908.0], [4237.0, 908.0], [4253.0, 886.0], [4285.0, 822.0], [4413.0, 892.3333333333334], [4381.0, 890.0], [4365.0, 881.0], [4461.0, 31.45714285714286], [4397.0, 906.5], [4429.0, 909.0], [4445.0, 136.45945945945948], [4541.0, 584.0], [4605.0, 800.0], [4525.0, 39.30434782608696], [4557.0, 848.0], [4573.0, 813.0], [4637.0, 781.75], [4621.0, 787.2307692307693], [4653.0, 78.6086956521739], [4669.0, 767.8], [4685.0, 766.0], [4701.0, 777.5], [4717.0, 753.5], [4733.0, 758.0], [4749.0, 757.0], [4797.0, 42.065217391304365], [4781.0, 104.0], [2055.0, 560.8461538461539], [2071.0, 547.0], [2119.0, 582.8571428571429], [2127.0, 583.0], [2087.0, 553.0], [2135.0, 6.75], [2183.0, 572.0], [2247.0, 615.0], [2263.0, 614.0], [2287.0, 608.5], [2295.0, 606.0], [2303.0, 610.6666666666666], [2423.0, 616.5714285714287], [2335.0, 620.1666666666667], [2319.0, 616.0], [2327.0, 618.0], [2431.0, 605.0], [2407.0, 627.0], [2415.0, 627.0], [2375.0, 618.6666666666666], [2383.0, 622.0], [2391.0, 627.0], [2367.0, 618.0], [2351.0, 623.5], [2359.0, 621.3333333333334], [2447.0, 614.0], [2463.0, 593.3333333333334], [2471.0, 593.0], [2495.0, 603.0], [2527.0, 618.6], [2511.0, 613.0], [2559.0, 620.0], [2519.0, 617.1666666666667], [2575.0, 613.0], [2567.0, 607.0], [2583.0, 618.5], [2599.0, 626.0], [2591.0, 625.0], [2663.0, 615.0], [2687.0, 657.1], [2703.0, 678.8], [2727.0, 684.0], [2751.0, 13.0], [2719.0, 695.5], [2815.0, 683.0], [2791.0, 687.0], [2759.0, 675.1428571428571], [2783.0, 682.3333333333334], [2831.0, 666.5], [2879.0, 649.4545454545454], [2871.0, 660.3333333333334], [2823.0, 687.5], [2839.0, 648.0], [2847.0, 651.0], [2927.0, 671.5], [2895.0, 650.0], [2903.0, 652.25], [2855.0, 655.4], [2951.0, 638.0], [3007.0, 645.3333333333334], [2959.0, 642.5], [2975.0, 656.0], [3031.0, 653.0], [3047.0, 667.5], [3015.0, 644.0], [2983.0, 654.0], [2991.0, 648.0], [2999.0, 648.75], [3183.0, 747.5], [3095.0, 1740.3333333333335], [3079.0, 18.785714285714285], [3127.0, 736.0], [3111.0, 1747.0], [3191.0, 755.75], [3175.0, 763.4799999999999], [3143.0, 1160.0000000000002], [3151.0, 166.19999999999996], [3167.0, 756.0], [3103.0, 1744.0], [3327.0, 844.875], [3207.0, 771.0], [3295.0, 841.3333333333334], [3319.0, 840.0], [3311.0, 833.0], [3303.0, 834.125], [3263.0, 805.6923076923076], [3343.0, 836.0], [3335.0, 308.9285714285714], [3431.0, 877.875], [3447.0, 606.5882352941177], [3455.0, 858.0], [3439.0, 866.0], [3407.0, 860.5], [3471.0, 852.0], [3463.0, 857.5], [3583.0, 908.5], [3527.0, 859.6666666666666], [3535.0, 862.3333333333334], [3543.0, 870.5], [3479.0, 849.0], [3519.0, 876.3333333333334], [3615.0, 923.0], [3591.0, 931.8], [3599.0, 909.6666666666666], [3607.0, 914.0], [3663.0, 912.6666666666666], [3655.0, 912.0], [3687.0, 928.3333333333334], [3695.0, 932.6666666666666], [3703.0, 931.5], [3711.0, 175.81818181818187], [3671.0, 920.0], [3679.0, 935.0], [3727.0, 925.7272727272726], [3719.0, 914.0], [3735.0, 901.6666666666666], [3767.0, 917.0], [3807.0, 924.9999999999999], [3799.0, 910.0], [3815.0, 921.5], [3943.0, 942.5], [3863.0, 913.0], [3847.0, 914.0], [3895.0, 951.0], [3903.0, 944.75], [3911.0, 958.0], [3919.0, 937.2727272727274], [3927.0, 11.0], [3951.0, 950.0], [3967.0, 927.2], [3959.0, 941.4285714285714], [3983.0, 905.75], [3975.0, 933.0], [3991.0, 907.7500000000001], [3999.0, 883.1111111111111], [4015.0, 882.0], [4063.0, 886.4999999999999], [4071.0, 866.3333333333334], [4087.0, 878.0], [4110.0, 894.0], [4126.0, 890.0], [4190.0, 935.3333333333334], [4206.0, 939.8333333333333], [4222.0, 908.7142857142858], [4254.0, 888.0], [4270.0, 873.0], [4286.0, 823.7857142857142], [4302.0, 823.3076923076924], [4334.0, 854.5], [4558.0, 847.6], [4382.0, 887.0], [4398.0, 908.0], [4414.0, 894.0], [4462.0, 809.6666666666666], [4526.0, 457.5], [4542.0, 850.3333333333334], [4574.0, 812.3333333333334], [4590.0, 847.0], [4606.0, 800.7142857142858], [4638.0, 781.0], [4670.0, 769.0], [4686.0, 766.6666666666666], [4702.0, 781.7142857142857], [4718.0, 755.5], [4734.0, 278.6666666666667], [4766.0, 762.5], [4798.0, 111.69230769230771], [4782.0, 104.0], [4303.0, 824.0], [4111.0, 892.0], [4143.0, 899.0], [4175.0, 922.6], [4207.0, 930.5], [4223.0, 929.4], [4239.0, 910.0], [4287.0, 820.6], [4335.0, 857.0], [4351.0, 31.296296296296294], [4559.0, 846.8571428571429], [4399.0, 909.3333333333334], [4383.0, 890.4], [4415.0, 894.0], [4431.0, 910.0], [4447.0, 830.0], [4543.0, 861.0], [4511.0, 41.225000000000016], [4575.0, 850.0], [4591.0, 64.05769230769232], [4639.0, 779.0], [4623.0, 80.53846153846153], [4655.0, 770.0], [4671.0, 764.0], [4687.0, 132.52222222222218], [4703.0, 782.0], [4735.0, 216.75], [4719.0, 528.4000000000001], [4767.0, 763.0], [4799.0, 52.128205128205124], [4783.0, 103.0], [4751.0, 759.0]], "isOverall": false, "label": "AuthzUser", "isController": false}, {"data": [[4780.0612696963235, 361.26254630070736]], "isOverall": false, "label": "AuthzUser-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 221.33333333333334, "minX": 1.6317102E12, "maxY": 8519302.1, "series": [{"data": [[1.63171086E12, 7837194.716666667], [1.63171116E12, 10566.15], [1.6317102E12, 867413.8666666667], [1.6317105E12, 7356446.166666667], [1.6317108E12, 8519302.1], [1.6317111E12, 7673839.65], [1.63171044E12, 7917682.183333334], [1.63171074E12, 7209777.716666667], [1.63171104E12, 7837510.633333334], [1.63171038E12, 8368052.966666667], [1.63171068E12, 7922163.7], [1.63171098E12, 7952408.716666667], [1.63171032E12, 7321011.866666666], [1.63171062E12, 7928941.083333333], [1.63171092E12, 7929586.833333333], [1.63171026E12, 8218904.866666666], [1.63171056E12, 8454961.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63171086E12, 164138.03333333333], [1.63171116E12, 221.33333333333334], [1.6317102E12, 17934.083333333332], [1.6317105E12, 154081.2], [1.6317108E12, 178419.56666666668], [1.6317111E12, 160704.6], [1.63171044E12, 165847.83333333334], [1.63171074E12, 151004.66666666666], [1.63171104E12, 164135.26666666666], [1.63171038E12, 175282.16666666666], [1.63171068E12, 165961.26666666666], [1.63171098E12, 166525.66666666666], [1.63171032E12, 152847.43333333332], [1.63171062E12, 166058.1], [1.63171092E12, 166058.1], [1.63171026E12, 171083.56666666668], [1.63171056E12, 177069.43333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63171116E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9.075, "minX": 1.6317102E12, "maxY": 993.6649988161777, "series": [{"data": [[1.63171086E12, 67.09295936082957], [1.63171116E12, 9.075], [1.6317102E12, 661.0741473812423], [1.6317105E12, 443.3694067370526], [1.6317108E12, 900.2817224643], [1.6317111E12, 70.48164790138766], [1.63171044E12, 185.2678121611498], [1.63171074E12, 343.708739465005], [1.63171104E12, 283.68172470754774], [1.63171038E12, 993.6649988161777], [1.63171068E12, 67.17902510585895], [1.63171098E12, 181.62601761089772], [1.63171032E12, 127.09795432406216], [1.63171062E12, 54.01776045050881], [1.63171092E12, 714.6084203861955], [1.63171026E12, 116.33750582488196], [1.63171056E12, 720.977000359367]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63171116E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8.875000000000005, "minX": 1.6317102E12, "maxY": 993.4447636334968, "series": [{"data": [[1.63171086E12, 66.84723650277407], [1.63171116E12, 8.875000000000005], [1.6317102E12, 660.8950974421447], [1.6317105E12, 443.1299468505382], [1.6317108E12, 899.9736699282086], [1.6317111E12, 70.19751747409009], [1.63171044E12, 185.0560013345567], [1.63171074E12, 343.43151337486205], [1.63171104E12, 283.40339817280693], [1.63171038E12, 993.4447636334968], [1.63171068E12, 67.00080018671137], [1.63171098E12, 181.3205183585342], [1.63171032E12, 126.92675975033383], [1.63171062E12, 53.72956132020471], [1.63171092E12, 714.29636293964], [1.63171026E12, 116.15191297221838], [1.63171056E12, 720.6657552225732]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63171116E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6317102E12, "maxY": 6.286236297198523, "series": [{"data": [[1.63171086E12, 0.1580561970097917], [1.63171116E12, 0.0], [1.6317102E12, 6.286236297198523], [1.6317105E12, 0.16569704804999008], [1.6317108E12, 1.7180604444168532], [1.6317111E12, 0.12567572220500636], [1.63171044E12, 0.13502377179080907], [1.63171074E12, 1.2588493953829287], [1.63171104E12, 0.48457674544044077], [1.63171038E12, 2.0746113171809233], [1.63171068E12, 0.1280465441936454], [1.63171098E12, 0.17044359528160838], [1.63171032E12, 0.1343038568387616], [1.63171062E12, 0.13388647306775867], [1.63171092E12, 1.2162243214874782], [1.63171026E12, 0.10266257451834257], [1.63171056E12, 0.9067202074967599]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63171116E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.6317102E12, "maxY": 3952.0, "series": [{"data": [[1.63171086E12, 167.0], [1.63171116E12, 14.0], [1.6317102E12, 1805.0], [1.6317105E12, 3952.0], [1.6317108E12, 3418.0], [1.6317111E12, 760.0], [1.63171044E12, 2014.0], [1.63171074E12, 3332.0], [1.63171104E12, 1934.0], [1.63171038E12, 3203.0], [1.63171068E12, 144.0], [1.63171098E12, 1898.0], [1.63171032E12, 1894.0], [1.63171062E12, 164.0], [1.63171092E12, 2673.0], [1.63171026E12, 1062.0], [1.63171056E12, 3362.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63171086E12, 90.0], [1.63171116E12, 13.0], [1.6317102E12, 920.0], [1.6317105E12, 2043.9000000000015], [1.6317108E12, 319.90000000000146], [1.6317111E12, 100.0], [1.63171044E12, 87.0], [1.63171074E12, 93.0], [1.63171104E12, 1493.0], [1.63171038E12, 1648.9000000000015], [1.63171068E12, 92.0], [1.63171098E12, 1341.0], [1.63171032E12, 954.0], [1.63171062E12, 99.0], [1.63171092E12, 1720.3000000000102], [1.63171026E12, 92.0], [1.63171056E12, 1111.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63171086E12, 114.0], [1.63171116E12, 14.0], [1.6317102E12, 1757.0], [1.6317105E12, 3069.0], [1.6317108E12, 1277.0], [1.6317111E12, 236.0], [1.63171044E12, 111.0], [1.63171074E12, 121.0], [1.63171104E12, 1823.0], [1.63171038E12, 1968.0], [1.63171068E12, 113.0], [1.63171098E12, 1844.0], [1.63171032E12, 1755.0], [1.63171062E12, 119.0], [1.63171092E12, 2289.0], [1.63171026E12, 120.0], [1.63171056E12, 1535.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63171086E12, 96.0], [1.63171116E12, 14.0], [1.6317102E12, 935.0], [1.6317105E12, 2498.0], [1.6317108E12, 838.0], [1.6317111E12, 116.0], [1.63171044E12, 94.0], [1.63171074E12, 105.0], [1.63171104E12, 1643.0], [1.63171038E12, 1810.9000000000015], [1.63171068E12, 98.0], [1.63171098E12, 1641.0], [1.63171032E12, 1417.0], [1.63171062E12, 108.0], [1.63171092E12, 1944.0], [1.63171026E12, 104.0], [1.63171056E12, 1334.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63171086E12, 16.0], [1.63171116E12, 6.0], [1.6317102E12, 144.0], [1.6317105E12, 6.0], [1.6317108E12, 22.0], [1.6317111E12, 4.0], [1.63171044E12, 6.0], [1.63171074E12, 12.0], [1.63171104E12, 7.0], [1.63171038E12, 12.0], [1.63171068E12, 14.0], [1.63171098E12, 12.0], [1.63171032E12, 20.0], [1.63171062E12, 6.0], [1.63171092E12, 21.0], [1.63171026E12, 6.0], [1.63171056E12, 10.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63171086E12, 64.0], [1.63171116E12, 9.0], [1.6317102E12, 622.0], [1.6317105E12, 1047.0], [1.6317108E12, 67.0], [1.6317111E12, 66.0], [1.63171044E12, 61.0], [1.63171074E12, 64.0], [1.63171104E12, 666.0], [1.63171038E12, 867.0], [1.63171068E12, 64.0], [1.63171098E12, 79.0], [1.63171032E12, 67.0], [1.63171062E12, 69.0], [1.63171092E12, 90.0], [1.63171026E12, 64.0], [1.63171056E12, 73.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63171116E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 5.0, "maxY": 2600.0, "series": [{"data": [[5.0, 161.0], [6.0, 13.0], [8.0, 80.5], [12.0, 755.0], [13.0, 71.0], [16.0, 127.5], [42.0, 264.0], [47.0, 115.0], [57.0, 140.0], [80.0, 9.0], [94.0, 119.5], [111.0, 105.0], [137.0, 39.0], [143.0, 43.0], [147.0, 69.0], [155.0, 77.0], [166.0, 74.0], [177.0, 79.0], [213.0, 64.0], [228.0, 60.0], [227.0, 15.0], [264.0, 314.0], [333.0, 63.0], [344.0, 290.0], [412.0, 59.0], [430.0, 71.5], [437.0, 24.0], [479.0, 894.0], [483.0, 64.0], [506.0, 1203.5], [600.0, 65.0], [623.0, 304.0], [612.0, 340.0], [667.0, 324.0], [654.0, 61.0], [640.0, 417.0], [655.0, 379.0], [653.0, 62.0], [677.0, 384.0], [680.0, 262.0], [690.0, 65.0], [708.0, 298.0], [779.0, 261.0], [788.0, 68.0], [824.0, 64.0], [810.0, 1429.0], [849.0, 327.0], [832.0, 67.0], [860.0, 268.0], [865.0, 57.0], [888.0, 65.0], [899.0, 68.0], [914.0, 64.0], [906.0, 66.0], [915.0, 63.0], [925.0, 66.0], [957.0, 64.0], [953.0, 64.0], [945.0, 66.0], [935.0, 64.0], [954.0, 57.0], [932.0, 67.0], [947.0, 66.0], [958.0, 67.0], [951.0, 62.0], [984.0, 64.0], [990.0, 62.0], [975.0, 62.0], [977.0, 67.0], [989.0, 62.0], [988.0, 64.0], [962.0, 66.0], [961.0, 69.0], [960.0, 68.0], [987.0, 69.0], [985.0, 65.0], [986.0, 62.0], [964.0, 66.0], [965.0, 63.0], [967.0, 64.0], [966.0, 71.0], [963.0, 63.0], [972.0, 66.0], [974.0, 60.0], [973.0, 64.0], [991.0, 66.0], [976.0, 65.0], [982.0, 64.0], [983.0, 65.0], [980.0, 61.0], [978.0, 65.0], [979.0, 64.0], [981.0, 63.0], [968.0, 65.0], [971.0, 65.0], [970.0, 34.0], [969.0, 64.0], [999.0, 63.0], [1008.0, 65.0], [1012.0, 65.0], [996.0, 65.0], [997.0, 63.0], [1016.0, 63.0], [1017.0, 66.0], [998.0, 68.0], [1018.0, 61.0], [1021.0, 65.0], [1022.0, 66.0], [1023.0, 66.0], [1020.0, 64.0], [1019.0, 64.0], [1011.0, 61.0], [1009.0, 64.0], [1010.0, 61.0], [992.0, 65.0], [994.0, 63.0], [993.0, 66.0], [1006.0, 65.0], [1003.0, 64.0], [1005.0, 67.0], [1004.0, 64.0], [1007.0, 65.0], [1015.0, 66.0], [1014.0, 65.0], [1013.0, 66.0], [995.0, 66.0], [1000.0, 65.0], [1001.0, 63.0], [1002.0, 65.0], [1028.0, 65.0], [1025.0, 64.0], [1032.0, 63.0], [1033.0, 62.0], [1031.0, 65.0], [1029.0, 66.0], [1030.0, 61.0], [1043.0, 57.0], [1045.0, 68.0], [1048.0, 67.0], [1041.0, 61.0], [1026.0, 65.0], [1036.0, 62.0], [1038.0, 63.0], [1037.0, 64.0], [1073.0, 46.0], [1075.0, 66.0], [1061.0, 67.0], [1060.0, 65.0], [1039.0, 65.0], [1027.0, 61.0], [1054.0, 70.0], [1024.0, 64.0], [1055.0, 63.0], [1035.0, 63.0], [1119.0, 319.0], [1115.0, 70.0], [1204.0, 1223.0], [1160.0, 137.0], [1219.0, 328.0], [1216.0, 300.0], [1260.0, 328.5], [1314.0, 717.0], [1292.0, 204.0], [1335.0, 2600.0], [1315.0, 1803.0], [1377.0, 467.0], [1443.0, 328.0], [1411.0, 918.0], [1422.0, 1568.0], [1498.0, 543.0], [1522.0, 1093.0], [1520.0, 112.0], [1555.0, 510.0], [1548.0, 89.5], [1572.0, 565.5], [1649.0, 117.0], [1615.0, 799.0], [1644.0, 2289.5], [1614.0, 207.0], [1684.0, 278.0], [1722.0, 1508.0], [1720.0, 2448.0], [1671.0, 1420.0], [1689.0, 1892.0], [1786.0, 906.0], [1731.0, 1447.0], [1788.0, 1737.0], [1790.0, 491.0], [1799.0, 1129.0], [1832.0, 935.0], [1821.0, 727.0], [1796.0, 1027.0], [1798.0, 1187.0], [1800.0, 1973.0], [1805.0, 1217.0], [1809.0, 967.0], [1811.0, 392.0], [1831.0, 549.0], [1827.0, 395.0], [1804.0, 1768.0], [1859.0, 964.0], [1899.0, 2247.0], [1876.0, 1177.0], [1902.0, 404.0], [1892.0, 1579.0], [1895.0, 1430.0], [1873.0, 367.0], [1874.0, 557.0], [1919.0, 1472.0], [1888.0, 1166.0], [1886.0, 458.0], [1878.0, 384.5], [1968.0, 2089.5], [1938.0, 551.0], [1943.0, 2064.0], [1927.0, 1554.0], [2041.0, 552.0], [2039.0, 1723.0], [2015.0, 563.0], [2033.0, 2085.0], [2021.0, 654.0], [1990.0, 547.0], [2153.0, 1715.0], [2062.0, 1927.0], [2088.0, 1224.0], [2138.0, 555.0], [2172.0, 779.0], [2179.0, 1767.0], [2204.0, 842.0], [2236.0, 1896.5], [2265.0, 1164.0], [2284.0, 1022.5], [2211.0, 2442.0], [2218.0, 940.5], [2295.0, 937.0], [2255.0, 1622.0], [2275.0, 1178.0], [2278.0, 692.5], [2329.0, 914.0], [2409.0, 522.0], [2411.0, 847.0], [2413.0, 1331.0], [2356.0, 1131.0], [2319.0, 818.0], [2365.0, 1172.0], [2364.0, 1477.0], [2378.0, 1230.5], [2387.0, 1072.0], [2392.0, 1744.0], [2336.0, 562.0], [2337.0, 1376.0], [2343.0, 1599.0], [2347.0, 1476.0], [2441.0, 1756.0], [2466.0, 928.0], [2513.0, 860.0], [2486.0, 1836.0], [2455.0, 1646.0], [2512.0, 967.5], [2514.0, 814.5], [2499.0, 1684.0], [2470.0, 1139.5], [2628.0, 1429.0], [2608.0, 995.5], [2562.0, 1690.0], [2632.0, 772.0], [2716.0, 1628.0], [2723.0, 772.0], [2699.0, 912.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2723.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.5, "minX": 5.0, "maxY": 2600.0, "series": [{"data": [[5.0, 161.0], [6.0, 13.0], [8.0, 80.5], [12.0, 755.0], [13.0, 71.0], [16.0, 127.0], [42.0, 263.5], [47.0, 115.0], [57.0, 140.0], [80.0, 8.5], [94.0, 118.0], [111.0, 105.0], [137.0, 39.0], [143.0, 43.0], [147.0, 68.0], [155.0, 77.0], [166.0, 74.0], [177.0, 79.0], [213.0, 63.0], [228.0, 60.0], [227.0, 15.0], [264.0, 314.0], [333.0, 63.0], [344.0, 290.0], [412.0, 59.0], [430.0, 71.0], [437.0, 24.0], [479.0, 894.0], [483.0, 64.0], [506.0, 1203.0], [600.0, 65.0], [623.0, 304.0], [612.0, 340.0], [667.0, 324.0], [654.0, 61.0], [640.0, 417.0], [655.0, 379.0], [653.0, 61.0], [677.0, 383.0], [680.0, 261.0], [690.0, 65.0], [708.0, 298.0], [779.0, 261.0], [788.0, 68.0], [824.0, 64.0], [810.0, 1429.0], [849.0, 326.0], [832.0, 66.0], [860.0, 268.0], [865.0, 57.0], [888.0, 64.0], [899.0, 68.0], [914.0, 63.0], [906.0, 66.0], [915.0, 63.0], [925.0, 66.0], [957.0, 64.0], [953.0, 64.0], [945.0, 66.0], [935.0, 64.0], [954.0, 57.0], [932.0, 67.0], [947.0, 65.0], [958.0, 67.0], [951.0, 61.0], [984.0, 64.0], [990.0, 62.0], [975.0, 62.0], [977.0, 67.0], [989.0, 62.0], [988.0, 64.0], [962.0, 66.0], [961.0, 68.0], [960.0, 68.0], [987.0, 68.0], [985.0, 65.0], [986.0, 62.0], [964.0, 65.0], [965.0, 63.0], [967.0, 64.0], [966.0, 71.0], [963.0, 63.0], [972.0, 66.0], [974.0, 60.0], [973.0, 64.0], [991.0, 66.0], [976.0, 64.0], [982.0, 64.0], [983.0, 64.0], [980.0, 61.0], [978.0, 65.0], [979.0, 64.0], [981.0, 63.0], [968.0, 64.0], [971.0, 65.0], [970.0, 34.0], [969.0, 64.0], [999.0, 63.0], [1008.0, 65.0], [1012.0, 65.0], [996.0, 65.0], [997.0, 63.0], [1016.0, 62.0], [1017.0, 66.0], [998.0, 67.0], [1018.0, 61.0], [1021.0, 65.0], [1022.0, 65.0], [1023.0, 65.0], [1020.0, 64.0], [1019.0, 64.0], [1011.0, 61.0], [1009.0, 64.0], [1010.0, 61.0], [992.0, 64.0], [994.0, 63.0], [993.0, 65.0], [1006.0, 65.0], [1003.0, 63.0], [1005.0, 66.0], [1004.0, 64.0], [1007.0, 64.0], [1015.0, 66.0], [1014.0, 65.0], [1013.0, 66.0], [995.0, 65.0], [1000.0, 65.0], [1001.0, 62.0], [1002.0, 65.0], [1028.0, 64.0], [1025.0, 63.5], [1032.0, 63.0], [1033.0, 62.0], [1031.0, 65.0], [1029.0, 66.0], [1030.0, 61.0], [1043.0, 57.0], [1045.0, 68.0], [1048.0, 67.0], [1041.0, 61.0], [1026.0, 65.0], [1036.0, 61.0], [1038.0, 62.5], [1037.0, 64.0], [1073.0, 46.0], [1075.0, 65.0], [1061.0, 67.0], [1060.0, 64.0], [1039.0, 64.0], [1027.0, 61.0], [1054.0, 69.0], [1024.0, 64.0], [1055.0, 63.0], [1035.0, 63.0], [1119.0, 319.0], [1115.0, 69.0], [1204.0, 1223.0], [1160.0, 137.0], [1219.0, 328.0], [1216.0, 300.0], [1260.0, 328.5], [1314.0, 717.0], [1292.0, 204.0], [1335.0, 2600.0], [1315.0, 1803.0], [1377.0, 467.0], [1443.0, 328.0], [1411.0, 918.0], [1422.0, 1568.0], [1498.0, 543.0], [1522.0, 1092.5], [1520.0, 111.0], [1555.0, 509.0], [1548.0, 89.5], [1572.0, 565.0], [1649.0, 117.0], [1615.0, 798.0], [1644.0, 2289.0], [1614.0, 207.0], [1684.0, 278.0], [1722.0, 1507.0], [1720.0, 2447.0], [1671.0, 1420.0], [1689.0, 1892.0], [1786.0, 906.0], [1731.0, 1447.0], [1788.0, 1737.0], [1790.0, 490.0], [1799.0, 1129.0], [1832.0, 934.0], [1821.0, 727.0], [1796.0, 1027.0], [1798.0, 1186.0], [1800.0, 1973.0], [1805.0, 1217.0], [1809.0, 965.0], [1811.0, 391.0], [1831.0, 549.0], [1827.0, 395.0], [1804.0, 1768.0], [1859.0, 964.0], [1899.0, 2246.0], [1876.0, 1177.0], [1902.0, 404.0], [1892.0, 1579.0], [1895.0, 1429.0], [1873.0, 367.0], [1874.0, 556.5], [1919.0, 1471.0], [1888.0, 1165.0], [1886.0, 457.5], [1878.0, 384.0], [1968.0, 2089.5], [1938.0, 551.0], [1943.0, 2063.0], [1927.0, 1553.0], [2041.0, 552.0], [2039.0, 1723.0], [2015.0, 563.0], [2033.0, 2085.0], [2021.0, 654.0], [1990.0, 547.0], [2153.0, 1714.0], [2062.0, 1927.0], [2088.0, 1224.0], [2138.0, 555.0], [2172.0, 778.5], [2179.0, 1767.0], [2204.0, 842.0], [2236.0, 1896.0], [2265.0, 1164.0], [2284.0, 1022.0], [2211.0, 2441.0], [2218.0, 940.0], [2295.0, 937.0], [2255.0, 1621.0], [2275.0, 1177.0], [2278.0, 692.5], [2329.0, 913.0], [2409.0, 522.0], [2411.0, 847.0], [2413.0, 1330.0], [2356.0, 1130.0], [2319.0, 818.0], [2365.0, 1172.0], [2364.0, 1477.0], [2378.0, 1230.0], [2387.0, 1072.0], [2392.0, 1744.0], [2336.0, 562.0], [2337.0, 1376.0], [2343.0, 1599.0], [2347.0, 1476.0], [2441.0, 1756.0], [2466.0, 928.0], [2513.0, 860.0], [2486.0, 1835.0], [2455.0, 1646.0], [2512.0, 967.5], [2514.0, 814.0], [2499.0, 1683.0], [2470.0, 1139.0], [2628.0, 1429.0], [2608.0, 995.0], [2562.0, 1690.0], [2632.0, 772.0], [2716.0, 1627.5], [2723.0, 772.0], [2699.0, 912.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2723.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.3, "minX": 1.6317102E12, "maxY": 1068.2, "series": [{"data": [[1.63171086E12, 987.3666666666667], [1.63171116E12, 1.3], [1.6317102E12, 136.76666666666668], [1.6317105E12, 926.6], [1.6317108E12, 1049.85], [1.6317111E12, 966.9], [1.63171044E12, 999.8833333333333], [1.63171074E12, 935.2333333333333], [1.63171104E12, 988.9666666666667], [1.63171038E12, 997.75], [1.63171068E12, 999.7833333333333], [1.63171098E12, 1002.6166666666667], [1.63171032E12, 982.1333333333333], [1.63171062E12, 999.6333333333333], [1.63171092E12, 1001.9333333333333], [1.63171026E12, 1010.65], [1.63171056E12, 1068.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63171116E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.3333333333333333, "minX": 1.6317102E12, "maxY": 1074.8166666666666, "series": [{"data": [[1.63171086E12, 988.7833333333333], [1.63171116E12, 1.3333333333333333], [1.6317102E12, 109.46666666666667], [1.6317105E12, 928.2], [1.6317108E12, 1074.8166666666666], [1.6317111E12, 968.1], [1.63171044E12, 999.0833333333334], [1.63171074E12, 909.6666666666666], [1.63171104E12, 988.7666666666667], [1.63171038E12, 1055.9166666666667], [1.63171068E12, 999.7666666666667], [1.63171098E12, 1003.1666666666666], [1.63171032E12, 923.9], [1.63171062E12, 1000.35], [1.63171092E12, 1000.35], [1.63171026E12, 1037.2166666666667], [1.63171056E12, 1066.6833333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63171116E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.3333333333333333, "minX": 1.6317102E12, "maxY": 1074.8166666666666, "series": [{"data": [[1.63171086E12, 988.7833333333333], [1.63171116E12, 1.3333333333333333], [1.6317102E12, 109.46666666666667], [1.6317105E12, 928.2], [1.6317108E12, 1074.8166666666666], [1.6317111E12, 968.1], [1.63171044E12, 999.0833333333334], [1.63171074E12, 909.6666666666666], [1.63171104E12, 988.7666666666667], [1.63171038E12, 1055.9166666666667], [1.63171068E12, 999.7666666666667], [1.63171098E12, 1003.1666666666666], [1.63171032E12, 923.9], [1.63171062E12, 1000.35], [1.63171092E12, 1000.35], [1.63171026E12, 1037.2166666666667], [1.63171056E12, 1066.6833333333334]], "isOverall": false, "label": "AuthzUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63171116E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.3333333333333333, "minX": 1.6317102E12, "maxY": 1074.8166666666666, "series": [{"data": [[1.63171086E12, 988.7833333333333], [1.63171116E12, 1.3333333333333333], [1.6317102E12, 109.46666666666667], [1.6317105E12, 928.2], [1.6317108E12, 1074.8166666666666], [1.6317111E12, 968.1], [1.63171044E12, 999.0833333333334], [1.63171074E12, 909.6666666666666], [1.63171104E12, 988.7666666666667], [1.63171038E12, 1055.9166666666667], [1.63171068E12, 999.7666666666667], [1.63171098E12, 1003.1666666666666], [1.63171032E12, 923.9], [1.63171062E12, 1000.35], [1.63171092E12, 1000.35], [1.63171026E12, 1037.2166666666667], [1.63171056E12, 1066.6833333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63171116E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

