/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 3087.0, "series": [{"data": [[0.0, 3.0], [0.1, 6.0], [0.2, 6.0], [0.3, 7.0], [0.4, 7.0], [0.5, 7.0], [0.6, 7.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 10.0], [4.2, 10.0], [4.3, 10.0], [4.4, 10.0], [4.5, 10.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 10.0], [5.4, 10.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 12.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 15.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 15.0], [14.6, 15.0], [14.7, 15.0], [14.8, 15.0], [14.9, 16.0], [15.0, 16.0], [15.1, 16.0], [15.2, 16.0], [15.3, 16.0], [15.4, 16.0], [15.5, 16.0], [15.6, 16.0], [15.7, 16.0], [15.8, 16.0], [15.9, 16.0], [16.0, 16.0], [16.1, 16.0], [16.2, 16.0], [16.3, 16.0], [16.4, 16.0], [16.5, 16.0], [16.6, 16.0], [16.7, 16.0], [16.8, 16.0], [16.9, 17.0], [17.0, 17.0], [17.1, 17.0], [17.2, 17.0], [17.3, 17.0], [17.4, 17.0], [17.5, 17.0], [17.6, 17.0], [17.7, 17.0], [17.8, 17.0], [17.9, 17.0], [18.0, 17.0], [18.1, 17.0], [18.2, 17.0], [18.3, 17.0], [18.4, 17.0], [18.5, 17.0], [18.6, 17.0], [18.7, 17.0], [18.8, 17.0], [18.9, 18.0], [19.0, 18.0], [19.1, 18.0], [19.2, 18.0], [19.3, 18.0], [19.4, 18.0], [19.5, 18.0], [19.6, 18.0], [19.7, 18.0], [19.8, 18.0], [19.9, 18.0], [20.0, 18.0], [20.1, 18.0], [20.2, 18.0], [20.3, 18.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 18.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 19.0], [21.3, 19.0], [21.4, 19.0], [21.5, 19.0], [21.6, 19.0], [21.7, 19.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 19.0], [22.2, 19.0], [22.3, 19.0], [22.4, 19.0], [22.5, 19.0], [22.6, 19.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 19.0], [23.1, 19.0], [23.2, 19.0], [23.3, 19.0], [23.4, 20.0], [23.5, 20.0], [23.6, 20.0], [23.7, 20.0], [23.8, 20.0], [23.9, 20.0], [24.0, 20.0], [24.1, 20.0], [24.2, 20.0], [24.3, 20.0], [24.4, 20.0], [24.5, 20.0], [24.6, 20.0], [24.7, 20.0], [24.8, 20.0], [24.9, 20.0], [25.0, 20.0], [25.1, 20.0], [25.2, 20.0], [25.3, 20.0], [25.4, 20.0], [25.5, 20.0], [25.6, 20.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 21.0], [26.5, 21.0], [26.6, 21.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 22.0], [28.2, 22.0], [28.3, 22.0], [28.4, 22.0], [28.5, 22.0], [28.6, 22.0], [28.7, 22.0], [28.8, 22.0], [28.9, 22.0], [29.0, 22.0], [29.1, 22.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 23.0], [30.7, 23.0], [30.8, 23.0], [30.9, 23.0], [31.0, 23.0], [31.1, 23.0], [31.2, 23.0], [31.3, 23.0], [31.4, 23.0], [31.5, 23.0], [31.6, 23.0], [31.7, 23.0], [31.8, 23.0], [31.9, 23.0], [32.0, 23.0], [32.1, 23.0], [32.2, 23.0], [32.3, 23.0], [32.4, 23.0], [32.5, 23.0], [32.6, 23.0], [32.7, 23.0], [32.8, 23.0], [32.9, 23.0], [33.0, 23.0], [33.1, 24.0], [33.2, 24.0], [33.3, 24.0], [33.4, 24.0], [33.5, 24.0], [33.6, 24.0], [33.7, 24.0], [33.8, 24.0], [33.9, 24.0], [34.0, 24.0], [34.1, 24.0], [34.2, 24.0], [34.3, 24.0], [34.4, 24.0], [34.5, 24.0], [34.6, 24.0], [34.7, 24.0], [34.8, 24.0], [34.9, 24.0], [35.0, 24.0], [35.1, 24.0], [35.2, 24.0], [35.3, 24.0], [35.4, 24.0], [35.5, 24.0], [35.6, 25.0], [35.7, 25.0], [35.8, 25.0], [35.9, 25.0], [36.0, 25.0], [36.1, 25.0], [36.2, 25.0], [36.3, 25.0], [36.4, 25.0], [36.5, 25.0], [36.6, 25.0], [36.7, 25.0], [36.8, 25.0], [36.9, 25.0], [37.0, 25.0], [37.1, 25.0], [37.2, 25.0], [37.3, 25.0], [37.4, 25.0], [37.5, 25.0], [37.6, 25.0], [37.7, 25.0], [37.8, 25.0], [37.9, 25.0], [38.0, 25.0], [38.1, 26.0], [38.2, 26.0], [38.3, 26.0], [38.4, 26.0], [38.5, 26.0], [38.6, 26.0], [38.7, 26.0], [38.8, 26.0], [38.9, 26.0], [39.0, 26.0], [39.1, 26.0], [39.2, 26.0], [39.3, 26.0], [39.4, 26.0], [39.5, 26.0], [39.6, 26.0], [39.7, 26.0], [39.8, 26.0], [39.9, 26.0], [40.0, 26.0], [40.1, 26.0], [40.2, 26.0], [40.3, 26.0], [40.4, 26.0], [40.5, 27.0], [40.6, 27.0], [40.7, 27.0], [40.8, 27.0], [40.9, 27.0], [41.0, 27.0], [41.1, 27.0], [41.2, 27.0], [41.3, 27.0], [41.4, 27.0], [41.5, 27.0], [41.6, 27.0], [41.7, 27.0], [41.8, 27.0], [41.9, 27.0], [42.0, 27.0], [42.1, 27.0], [42.2, 27.0], [42.3, 27.0], [42.4, 27.0], [42.5, 27.0], [42.6, 27.0], [42.7, 27.0], [42.8, 27.0], [42.9, 28.0], [43.0, 28.0], [43.1, 28.0], [43.2, 28.0], [43.3, 28.0], [43.4, 28.0], [43.5, 28.0], [43.6, 28.0], [43.7, 28.0], [43.8, 28.0], [43.9, 28.0], [44.0, 28.0], [44.1, 28.0], [44.2, 28.0], [44.3, 28.0], [44.4, 28.0], [44.5, 28.0], [44.6, 28.0], [44.7, 28.0], [44.8, 28.0], [44.9, 28.0], [45.0, 29.0], [45.1, 29.0], [45.2, 29.0], [45.3, 29.0], [45.4, 29.0], [45.5, 29.0], [45.6, 29.0], [45.7, 29.0], [45.8, 29.0], [45.9, 29.0], [46.0, 29.0], [46.1, 29.0], [46.2, 29.0], [46.3, 29.0], [46.4, 29.0], [46.5, 29.0], [46.6, 29.0], [46.7, 29.0], [46.8, 29.0], [46.9, 29.0], [47.0, 29.0], [47.1, 30.0], [47.2, 30.0], [47.3, 30.0], [47.4, 30.0], [47.5, 30.0], [47.6, 30.0], [47.7, 30.0], [47.8, 30.0], [47.9, 30.0], [48.0, 30.0], [48.1, 30.0], [48.2, 30.0], [48.3, 30.0], [48.4, 30.0], [48.5, 30.0], [48.6, 30.0], [48.7, 30.0], [48.8, 30.0], [48.9, 30.0], [49.0, 31.0], [49.1, 31.0], [49.2, 31.0], [49.3, 31.0], [49.4, 31.0], [49.5, 31.0], [49.6, 31.0], [49.7, 31.0], [49.8, 31.0], [49.9, 31.0], [50.0, 31.0], [50.1, 31.0], [50.2, 31.0], [50.3, 31.0], [50.4, 31.0], [50.5, 31.0], [50.6, 32.0], [50.7, 32.0], [50.8, 32.0], [50.9, 32.0], [51.0, 32.0], [51.1, 32.0], [51.2, 32.0], [51.3, 32.0], [51.4, 32.0], [51.5, 32.0], [51.6, 32.0], [51.7, 32.0], [51.8, 32.0], [51.9, 32.0], [52.0, 32.0], [52.1, 33.0], [52.2, 33.0], [52.3, 33.0], [52.4, 33.0], [52.5, 33.0], [52.6, 33.0], [52.7, 33.0], [52.8, 33.0], [52.9, 33.0], [53.0, 33.0], [53.1, 33.0], [53.2, 33.0], [53.3, 33.0], [53.4, 34.0], [53.5, 34.0], [53.6, 34.0], [53.7, 34.0], [53.8, 34.0], [53.9, 34.0], [54.0, 34.0], [54.1, 34.0], [54.2, 34.0], [54.3, 34.0], [54.4, 35.0], [54.5, 35.0], [54.6, 35.0], [54.7, 35.0], [54.8, 35.0], [54.9, 35.0], [55.0, 35.0], [55.1, 35.0], [55.2, 35.0], [55.3, 36.0], [55.4, 36.0], [55.5, 36.0], [55.6, 36.0], [55.7, 36.0], [55.8, 36.0], [55.9, 36.0], [56.0, 37.0], [56.1, 37.0], [56.2, 37.0], [56.3, 37.0], [56.4, 37.0], [56.5, 38.0], [56.6, 38.0], [56.7, 38.0], [56.8, 38.0], [56.9, 39.0], [57.0, 39.0], [57.1, 39.0], [57.2, 40.0], [57.3, 40.0], [57.4, 41.0], [57.5, 42.0], [57.6, 43.0], [57.7, 44.0], [57.8, 45.0], [57.9, 47.0], [58.0, 49.0], [58.1, 52.0], [58.2, 55.0], [58.3, 58.0], [58.4, 60.0], [58.5, 63.0], [58.6, 66.0], [58.7, 69.0], [58.8, 71.0], [58.9, 74.0], [59.0, 77.0], [59.1, 81.0], [59.2, 85.0], [59.3, 89.0], [59.4, 93.0], [59.5, 99.0], [59.6, 104.0], [59.7, 109.0], [59.8, 113.0], [59.9, 117.0], [60.0, 120.0], [60.1, 124.0], [60.2, 129.0], [60.3, 132.0], [60.4, 136.0], [60.5, 140.0], [60.6, 144.0], [60.7, 147.0], [60.8, 151.0], [60.9, 154.0], [61.0, 157.0], [61.1, 161.0], [61.2, 164.0], [61.3, 168.0], [61.4, 171.0], [61.5, 175.0], [61.6, 178.0], [61.7, 181.0], [61.8, 185.0], [61.9, 188.0], [62.0, 191.0], [62.1, 195.0], [62.2, 198.0], [62.3, 202.0], [62.4, 205.0], [62.5, 208.0], [62.6, 212.0], [62.7, 215.0], [62.8, 219.0], [62.9, 222.0], [63.0, 226.0], [63.1, 229.0], [63.2, 233.0], [63.3, 236.0], [63.4, 240.0], [63.5, 243.0], [63.6, 247.0], [63.7, 250.0], [63.8, 254.0], [63.9, 257.0], [64.0, 260.0], [64.1, 263.0], [64.2, 266.0], [64.3, 270.0], [64.4, 273.0], [64.5, 277.0], [64.6, 280.0], [64.7, 284.0], [64.8, 288.0], [64.9, 291.0], [65.0, 295.0], [65.1, 298.0], [65.2, 302.0], [65.3, 305.0], [65.4, 308.0], [65.5, 312.0], [65.6, 316.0], [65.7, 320.0], [65.8, 324.0], [65.9, 327.0], [66.0, 331.0], [66.1, 334.0], [66.2, 338.0], [66.3, 341.0], [66.4, 345.0], [66.5, 349.0], [66.6, 353.0], [66.7, 357.0], [66.8, 361.0], [66.9, 364.0], [67.0, 367.0], [67.1, 370.0], [67.2, 374.0], [67.3, 377.0], [67.4, 381.0], [67.5, 385.0], [67.6, 389.0], [67.7, 393.0], [67.8, 397.0], [67.9, 400.0], [68.0, 404.0], [68.1, 408.0], [68.2, 411.0], [68.3, 414.0], [68.4, 418.0], [68.5, 421.0], [68.6, 425.0], [68.7, 430.0], [68.8, 434.0], [68.9, 438.0], [69.0, 442.0], [69.1, 446.0], [69.2, 450.0], [69.3, 453.0], [69.4, 456.0], [69.5, 459.0], [69.6, 462.0], [69.7, 465.0], [69.8, 469.0], [69.9, 472.0], [70.0, 476.0], [70.1, 479.0], [70.2, 483.0], [70.3, 486.0], [70.4, 490.0], [70.5, 493.0], [70.6, 496.0], [70.7, 500.0], [70.8, 503.0], [70.9, 507.0], [71.0, 510.0], [71.1, 514.0], [71.2, 518.0], [71.3, 521.0], [71.4, 525.0], [71.5, 528.0], [71.6, 531.0], [71.7, 535.0], [71.8, 539.0], [71.9, 543.0], [72.0, 546.0], [72.1, 550.0], [72.2, 554.0], [72.3, 557.0], [72.4, 561.0], [72.5, 564.0], [72.6, 567.0], [72.7, 571.0], [72.8, 574.0], [72.9, 578.0], [73.0, 582.0], [73.1, 586.0], [73.2, 589.0], [73.3, 593.0], [73.4, 597.0], [73.5, 600.0], [73.6, 604.0], [73.7, 607.0], [73.8, 611.0], [73.9, 614.0], [74.0, 618.0], [74.1, 622.0], [74.2, 625.0], [74.3, 629.0], [74.4, 633.0], [74.5, 636.0], [74.6, 640.0], [74.7, 645.0], [74.8, 648.0], [74.9, 652.0], [75.0, 656.0], [75.1, 660.0], [75.2, 663.0], [75.3, 667.0], [75.4, 671.0], [75.5, 675.0], [75.6, 678.0], [75.7, 681.0], [75.8, 684.0], [75.9, 688.0], [76.0, 692.0], [76.1, 695.0], [76.2, 699.0], [76.3, 702.0], [76.4, 706.0], [76.5, 709.0], [76.6, 713.0], [76.7, 716.0], [76.8, 719.0], [76.9, 723.0], [77.0, 727.0], [77.1, 731.0], [77.2, 735.0], [77.3, 738.0], [77.4, 742.0], [77.5, 746.0], [77.6, 749.0], [77.7, 753.0], [77.8, 757.0], [77.9, 760.0], [78.0, 764.0], [78.1, 768.0], [78.2, 772.0], [78.3, 776.0], [78.4, 780.0], [78.5, 783.0], [78.6, 787.0], [78.7, 790.0], [78.8, 794.0], [78.9, 797.0], [79.0, 801.0], [79.1, 804.0], [79.2, 808.0], [79.3, 811.0], [79.4, 815.0], [79.5, 818.0], [79.6, 821.0], [79.7, 824.0], [79.8, 828.0], [79.9, 831.0], [80.0, 834.0], [80.1, 837.0], [80.2, 841.0], [80.3, 845.0], [80.4, 849.0], [80.5, 852.0], [80.6, 856.0], [80.7, 859.0], [80.8, 863.0], [80.9, 867.0], [81.0, 871.0], [81.1, 875.0], [81.2, 878.0], [81.3, 882.0], [81.4, 885.0], [81.5, 888.0], [81.6, 892.0], [81.7, 895.0], [81.8, 899.0], [81.9, 903.0], [82.0, 907.0], [82.1, 911.0], [82.2, 915.0], [82.3, 919.0], [82.4, 922.0], [82.5, 926.0], [82.6, 930.0], [82.7, 934.0], [82.8, 937.0], [82.9, 941.0], [83.0, 946.0], [83.1, 950.0], [83.2, 953.0], [83.3, 957.0], [83.4, 961.0], [83.5, 965.0], [83.6, 968.0], [83.7, 972.0], [83.8, 976.0], [83.9, 980.0], [84.0, 985.0], [84.1, 989.0], [84.2, 993.0], [84.3, 997.0], [84.4, 1001.0], [84.5, 1005.0], [84.6, 1009.0], [84.7, 1013.0], [84.8, 1016.0], [84.9, 1021.0], [85.0, 1025.0], [85.1, 1029.0], [85.2, 1033.0], [85.3, 1036.0], [85.4, 1040.0], [85.5, 1045.0], [85.6, 1049.0], [85.7, 1053.0], [85.8, 1058.0], [85.9, 1063.0], [86.0, 1067.0], [86.1, 1071.0], [86.2, 1075.0], [86.3, 1079.0], [86.4, 1083.0], [86.5, 1087.0], [86.6, 1091.0], [86.7, 1096.0], [86.8, 1099.0], [86.9, 1103.0], [87.0, 1107.0], [87.1, 1111.0], [87.2, 1115.0], [87.3, 1119.0], [87.4, 1123.0], [87.5, 1128.0], [87.6, 1132.0], [87.7, 1136.0], [87.8, 1139.0], [87.9, 1143.0], [88.0, 1146.0], [88.1, 1150.0], [88.2, 1154.0], [88.3, 1159.0], [88.4, 1162.0], [88.5, 1166.0], [88.6, 1170.0], [88.7, 1174.0], [88.8, 1177.0], [88.9, 1181.0], [89.0, 1185.0], [89.1, 1189.0], [89.2, 1192.0], [89.3, 1196.0], [89.4, 1199.0], [89.5, 1203.0], [89.6, 1207.0], [89.7, 1211.0], [89.8, 1214.0], [89.9, 1218.0], [90.0, 1222.0], [90.1, 1226.0], [90.2, 1229.0], [90.3, 1233.0], [90.4, 1237.0], [90.5, 1241.0], [90.6, 1245.0], [90.7, 1249.0], [90.8, 1253.0], [90.9, 1256.0], [91.0, 1260.0], [91.1, 1263.0], [91.2, 1268.0], [91.3, 1272.0], [91.4, 1276.0], [91.5, 1280.0], [91.6, 1283.0], [91.7, 1287.0], [91.8, 1291.0], [91.9, 1295.0], [92.0, 1298.0], [92.1, 1303.0], [92.2, 1307.0], [92.3, 1311.0], [92.4, 1316.0], [92.5, 1320.0], [92.6, 1324.0], [92.7, 1329.0], [92.8, 1333.0], [92.9, 1337.0], [93.0, 1340.0], [93.1, 1345.0], [93.2, 1349.0], [93.3, 1354.0], [93.4, 1358.0], [93.5, 1363.0], [93.6, 1367.0], [93.7, 1371.0], [93.8, 1376.0], [93.9, 1380.0], [94.0, 1384.0], [94.1, 1389.0], [94.2, 1394.0], [94.3, 1398.0], [94.4, 1403.0], [94.5, 1407.0], [94.6, 1411.0], [94.7, 1417.0], [94.8, 1421.0], [94.9, 1425.0], [95.0, 1430.0], [95.1, 1434.0], [95.2, 1438.0], [95.3, 1443.0], [95.4, 1449.0], [95.5, 1453.0], [95.6, 1457.0], [95.7, 1462.0], [95.8, 1466.0], [95.9, 1471.0], [96.0, 1475.0], [96.1, 1480.0], [96.2, 1484.0], [96.3, 1489.0], [96.4, 1493.0], [96.5, 1497.0], [96.6, 1502.0], [96.7, 1506.0], [96.8, 1511.0], [96.9, 1515.0], [97.0, 1520.0], [97.1, 1524.0], [97.2, 1530.0], [97.3, 1536.0], [97.4, 1542.0], [97.5, 1548.0], [97.6, 1554.0], [97.7, 1560.0], [97.8, 1565.0], [97.9, 1571.0], [98.0, 1577.0], [98.1, 1583.0], [98.2, 1589.0], [98.3, 1594.0], [98.4, 1598.0], [98.5, 1604.0], [98.6, 1611.0], [98.7, 1618.0], [98.8, 1624.0], [98.9, 1630.0], [99.0, 1637.0], [99.1, 1645.0], [99.2, 1654.0], [99.3, 1663.0], [99.4, 1677.0], [99.5, 1694.0], [99.6, 1710.0], [99.7, 1750.0], [99.8, 1832.0], [99.9, 1980.0], [100.0, 3087.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 13.0, "minX": 0.0, "maxY": 538481.0, "series": [{"data": [[0.0, 538481.0], [2100.0, 466.0], [2200.0, 53.0], [600.0, 24808.0], [700.0, 24758.0], [3000.0, 13.0], [200.0, 26224.0], [800.0, 25834.0], [900.0, 23057.0], [1000.0, 22023.0], [1100.0, 23639.0], [300.0, 24814.0], [1200.0, 23617.0], [1300.0, 20868.0], [1400.0, 20092.0], [1500.0, 16887.0], [100.0, 24610.0], [400.0, 25449.0], [1600.0, 10134.0], [1700.0, 1982.0], [1800.0, 709.0], [1900.0, 686.0], [500.0, 25248.0], [2000.0, 269.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 31016.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 639854.0, "series": [{"data": [[0.0, 639854.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 233851.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 31016.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3696.3622912602873, "minX": 1.6334184E12, "maxY": 4800.0, "series": [{"data": [[1.63341858E12, 4800.0], [1.63341888E12, 4800.0], [1.63341894E12, 4800.0], [1.63341924E12, 4800.0], [1.63341864E12, 4800.0], [1.6334193E12, 4775.680781383329], [1.6334187E12, 4800.0], [1.633419E12, 4800.0], [1.63341906E12, 4800.0], [1.6334184E12, 3696.3622912602873], [1.63341846E12, 4800.0], [1.63341876E12, 4800.0], [1.63341882E12, 4800.0], [1.63341912E12, 4800.0], [1.63341918E12, 4800.0], [1.63341852E12, 4800.0]], "isOverall": false, "label": "app1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6334193E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 188.0, "maxY": 447.0, "series": [{"data": [[188.0, 91.875], [190.0, 97.83333333333334], [189.0, 90.0], [195.0, 121.33333333333333], [197.0, 99.8125], [200.0, 108.0], [203.0, 87.0], [207.0, 128.5], [209.0, 121.5], [210.0, 139.0], [212.0, 136.33333333333334], [213.0, 139.0], [229.0, 156.71428571428572], [230.0, 148.5], [231.0, 142.2], [232.0, 149.0], [234.0, 154.0], [235.0, 149.66666666666666], [236.0, 162.75], [239.0, 138.5], [240.0, 170.66666666666666], [242.0, 136.5], [243.0, 86.66666666666667], [244.0, 170.0], [245.0, 173.0], [246.0, 160.75], [247.0, 138.0], [248.0, 207.0], [249.0, 168.875], [251.0, 152.0], [253.0, 212.0], [254.0, 176.4], [255.0, 175.0], [259.0, 194.0], [265.0, 194.50000000000003], [267.0, 219.0], [268.0, 204.75], [269.0, 202.83333333333337], [270.0, 186.66666666666666], [271.0, 112.0], [273.0, 161.66666666666666], [272.0, 92.0], [274.0, 114.0], [275.0, 115.75], [276.0, 117.9], [277.0, 114.0], [278.0, 120.0], [280.0, 129.0], [284.0, 136.0], [285.0, 138.5], [286.0, 130.29166666666666], [287.0, 133.0], [283.0, 118.85714285714286], [288.0, 127.25], [317.0, 204.0], [306.0, 155.0], [307.0, 146.0], [309.0, 155.0], [310.0, 167.5], [311.0, 171.4], [312.0, 166.33333333333334], [314.0, 193.0], [315.0, 160.66666666666666], [318.0, 165.5], [319.0, 153.66666666666666], [320.0, 155.75], [322.0, 159.5], [332.0, 160.33333333333334], [333.0, 163.75], [334.0, 175.0], [324.0, 160.0], [325.0, 165.0], [326.0, 161.5], [327.0, 162.0], [328.0, 162.44444444444446], [329.0, 170.0], [330.0, 161.57142857142858], [331.0, 156.33333333333334], [337.0, 186.0], [336.0, 170.00000000000003], [338.0, 190.2], [339.0, 188.0], [341.0, 194.16666666666666], [342.0, 191.0], [343.0, 198.0], [344.0, 200.0], [350.0, 211.0], [345.0, 200.5], [347.0, 193.57142857142858], [366.0, 166.5], [369.0, 177.33333333333334], [368.0, 167.0], [370.0, 173.5], [371.0, 183.0], [372.0, 176.0], [373.0, 190.0], [374.0, 201.0], [375.0, 203.0], [376.0, 195.5], [382.0, 218.4375], [383.0, 222.44444444444446], [377.0, 205.4], [379.0, 211.0], [397.0, 206.0], [385.0, 220.5], [384.0, 221.0], [395.0, 207.4], [394.0, 204.125], [386.0, 216.33333333333337], [396.0, 203.33333333333334], [387.0, 220.0], [393.0, 216.0], [392.0, 205.0], [399.0, 207.0], [390.0, 211.5], [388.0, 216.25], [402.0, 194.0], [413.0, 181.57142857142858], [411.0, 188.76923076923077], [410.0, 184.0], [403.0, 198.66666666666666], [409.0, 182.05555555555554], [404.0, 198.33333333333334], [408.0, 200.0], [414.0, 194.42857142857142], [405.0, 191.5], [407.0, 198.0], [401.0, 198.25], [400.0, 192.5], [445.0, 199.0909090909091], [433.0, 188.16666666666666], [435.0, 179.75], [439.0, 195.27272727272725], [438.0, 194.83333333333331], [432.0, 198.5], [441.0, 199.5], [440.0, 200.5], [446.0, 188.33333333333334], [447.0, 187.0], [451.0, 192.0], [448.0, 201.0], [455.0, 199.0], [456.0, 191.66666666666666], [463.0, 195.1111111111111], [462.0, 194.0], [458.0, 198.5], [457.0, 203.0], [449.0, 190.0], [450.0, 188.8], [454.0, 204.0], [452.0, 198.33333333333334], [460.0, 195.33333333333334], [461.0, 196.25], [465.0, 196.2380952380952], [467.0, 194.625], [469.0, 194.6], [468.0, 192.8], [466.0, 193.0], [464.0, 193.0], [470.0, 186.42857142857142], [471.0, 188.0], [474.0, 179.49999999999997], [475.0, 158.4375], [473.0, 187.5], [476.0, 161.84615384615387], [508.0, 161.99999999999997], [499.0, 182.125], [501.0, 178.8], [500.0, 176.25], [507.0, 177.6923076923077], [510.0, 156.5], [511.0, 158.0], [509.0, 155.5], [505.0, 176.0], [514.0, 161.0], [526.0, 179.5], [516.0, 164.0], [520.0, 171.28571428571428], [522.0, 175.0], [528.0, 178.5], [542.0, 173.33333333333334], [538.0, 179.0], [532.0, 201.27272727272725], [534.0, 179.00000000000003], [546.0, 161.00000000000003], [560.0, 183.30769230769232], [544.0, 161.85714285714286], [568.0, 164.0], [562.0, 182.47368421052633], [570.0, 152.6315789473684], [572.0, 148.25], [566.0, 170.0], [564.0, 172.33333333333334], [576.0, 125.0], [604.0, 145.9090909090909], [578.0, 116.66666666666667], [602.0, 141.25], [582.0, 116.0], [614.0, 159.0], [610.0, 154.0], [608.0, 153.0], [620.0, 164.5], [632.0, 135.64705882352945], [634.0, 137.25], [624.0, 166.5], [628.0, 151.33333333333334], [630.0, 155.14285714285714], [626.0, 159.66666666666666], [618.0, 160.66666666666666], [616.0, 160.0], [664.0, 91.0], [640.0, 138.5], [662.0, 94.5], [646.0, 104.0], [650.0, 110.5], [658.0, 119.0], [654.0, 113.6], [642.0, 102.5], [644.0, 103.0], [696.0, 79.57142857142858], [676.0, 107.64285714285714], [680.0, 104.33333333333333], [684.0, 106.0], [682.0, 105.0], [678.0, 102.0], [688.0, 107.16666666666666], [702.0, 61.4], [700.0, 75.8], [692.0, 75.72727272727273], [694.0, 78.71428571428571], [690.0, 97.66666666666667], [686.0, 105.99999999999999], [704.0, 47.0], [708.0, 56.0], [706.0, 52.8], [712.0, 54.714285714285715], [760.0, 65.5], [764.0, 68.0], [758.0, 64.33333333333333], [742.0, 76.66666666666667], [748.0, 70.33333333333333], [746.0, 72.0], [770.0, 73.0], [792.0, 89.0], [768.0, 70.0], [778.0, 80.0], [776.0, 78.0], [790.0, 88.33333333333333], [788.0, 86.0], [796.0, 91.0], [784.0, 84.0], [828.0, 81.5], [804.0, 86.75], [820.0, 75.6], [822.0, 74.0], [812.0, 77.0], [814.0, 73.0], [830.0, 82.0], [818.0, 72.33333333333333], [816.0, 75.0], [826.0, 78.5], [824.0, 77.0], [834.0, 85.0], [832.0, 84.0], [842.0, 92.0], [840.0, 89.66666666666667], [852.0, 104.16666666666667], [850.0, 103.0], [860.0, 103.33333333333333], [862.0, 103.66666666666667], [858.0, 108.5], [856.0, 107.5], [888.0, 92.0], [892.0, 88.0], [866.0, 99.0], [864.0, 99.0], [876.0, 99.0], [878.0, 99.5], [882.0, 96.0], [884.0, 93.25], [886.0, 92.0], [894.0, 90.0], [898.0, 92.0], [896.0, 91.5], [908.0, 102.5714285714286], [910.0, 148.8], [900.0, 94.0], [904.0, 99.66666666666667], [924.0, 80.0], [922.0, 77.3076923076923], [920.0, 82.25], [902.0, 98.0], [906.0, 102.5], [928.0, 72.0], [942.0, 69.6], [932.0, 73.85714285714285], [930.0, 72.5], [934.0, 74.25], [936.0, 77.0], [938.0, 77.625], [940.0, 78.2], [946.0, 78.5], [944.0, 32.0], [954.0, 39.0], [952.0, 91.0], [956.0, 42.0], [986.0, 76.0], [962.0, 47.0], [966.0, 49.0], [976.0, 54.0], [972.0, 51.0], [984.0, 114.0], [990.0, 63.0], [988.0, 61.599999999999994], [980.0, 105.0], [982.0, 55.5], [996.0, 81.33333333333333], [994.0, 65.0], [998.0, 60.15789473684211], [1002.0, 45.4], [1004.0, 44.333333333333336], [1000.0, 46.0], [1010.0, 42.0], [1080.0, 69.14285714285714], [1076.0, 80.5], [1084.0, 56.0], [1072.0, 84.5], [1048.0, 72.0], [1044.0, 68.0], [1040.0, 65.0], [1064.0, 81.33333333333333], [1068.0, 87.0], [1108.0, 36.6], [1092.0, 64.77777777777777], [1104.0, 45.333333333333336], [1116.0, 40.75], [1148.0, 49.25], [1140.0, 60.5], [1100.0, 53.94117647058824], [1164.0, 33.5], [1184.0, 47.0], [1204.0, 74.5], [1212.0, 60.0], [1192.0, 66.0], [1196.0, 58.5], [1264.0, 38.666666666666664], [1220.0, 69.0], [1216.0, 58.0], [1240.0, 23.2], [1272.0, 41.0], [1256.0, 34.0], [1336.0, 72.5], [1332.0, 71.0], [1284.0, 54.0], [1280.0, 50.0], [1308.0, 52.0], [1340.0, 71.0], [1328.0, 69.0], [1316.0, 60.57142857142857], [1324.0, 68.0], [1320.0, 63.0], [1296.0, 48.5], [1288.0, 51.0], [1348.0, 48.0], [1372.0, 39.0], [1344.0, 65.2], [1368.0, 47.00000000000001], [1364.0, 50.333333333333336], [1360.0, 47.833333333333336], [1352.0, 42.5], [1400.0, 30.0], [1396.0, 43.0], [1380.0, 23.0], [1356.0, 44.666666666666664], [1456.0, 36.0], [1464.0, 42.0], [1420.0, 39.4], [1452.0, 40.125], [1448.0, 43.0], [1444.0, 48.0], [1424.0, 44.0], [1428.0, 46.666666666666664], [1408.0, 33.5], [1484.0, 45.0], [1496.0, 44.0], [1476.0, 40.0], [1480.0, 43.0], [1488.0, 47.8], [1492.0, 48.0], [1520.0, 55.666666666666664], [1532.0, 14.0], [1504.0, 42.0], [1512.0, 35.5], [1516.0, 34.0], [1508.0, 37.5], [1588.0, 35.5], [1540.0, 25.0], [1544.0, 29.11111111111111], [1548.0, 29.4], [1572.0, 19.333333333333332], [1568.0, 17.25], [1592.0, 36.0], [1596.0, 35.0], [1576.0, 28.0], [1580.0, 31.5], [1552.0, 9.333333333333334], [1556.0, 11.0], [1600.0, 25.0], [1628.0, 37.27272727272727], [1640.0, 15.0], [1644.0, 20.0], [1636.0, 15.5], [1632.0, 22.0], [1624.0, 35.0], [1604.0, 14.0], [1616.0, 23.5], [1672.0, 36.0], [1688.0, 49.1764705882353], [1680.0, 40.5], [1692.0, 49.5], [1684.0, 42.8], [1704.0, 45.5], [1708.0, 40.0], [1716.0, 40.333333333333336], [1720.0, 37.6], [1724.0, 39.85714285714287], [1712.0, 45.0], [1756.0, 17.0], [1728.0, 21.666666666666668], [1744.0, 21.666666666666668], [1788.0, 13.0], [1768.0, 8.0], [1752.0, 27.4], [1748.0, 25.999999999999996], [1740.0, 19.0], [1800.0, 25.0], [1816.0, 23.0], [1804.0, 30.666666666666668], [1812.0, 36.44444444444444], [1848.0, 19.333333333333332], [1852.0, 11.0], [1844.0, 24.5], [1840.0, 25.142857142857142], [1832.0, 18.5], [1836.0, 22.0], [1868.0, 11.5], [1916.0, 32.5], [1876.0, 9.333333333333334], [1892.0, 24.0], [1872.0, 8.0], [1924.0, 35.0], [1920.0, 31.0], [1936.0, 38.5], [1940.0, 29.5], [1928.0, 36.666666666666664], [1932.0, 37.625], [1972.0, 36.0], [1976.0, 31.2], [1956.0, 32.0], [1992.0, 23.0], [2016.0, 33.0], [1988.0, 21.0], [2024.0, 36.5], [2004.0, 28.333333333333332], [2036.0, 39.5], [2040.0, 48.666666666666664], [2044.0, 64.8333333333333], [2012.0, 31.545454545454547], [1984.0, 20.0], [2008.0, 30.0], [2104.0, 23.0], [2080.0, 54.0], [2088.0, 56.0], [2096.0, 26.5], [2192.0, 46.333333333333336], [2184.0, 57.0], [2176.0, 66.66666666666667], [2232.0, 38.0], [2240.0, 32.5], [2296.0, 40.0], [2272.0, 43.0], [2280.0, 25.833333333333336], [2256.0, 45.0], [2264.0, 52.5], [2208.0, 57.0], [2224.0, 63.0], [2304.0, 44.666666666666664], [2312.0, 50.0], [2320.0, 47.666666666666664], [2352.0, 36.0], [2432.0, 102.0], [2520.0, 156.5], [2496.0, 145.0], [2504.0, 149.0], [2480.0, 133.0], [2664.0, 132.0], [2680.0, 169.0], [2640.0, 137.33333333333334], [2672.0, 132.0], [2632.0, 135.0], [2624.0, 48.0], [2600.0, 122.0], [2592.0, 144.0], [2584.0, 155.25], [2568.0, 159.66666666666666], [2560.0, 145.57142857142858], [2808.0, 130.0], [2800.0, 153.85714285714286], [2768.0, 144.33333333333334], [2792.0, 156.0], [2752.0, 139.5], [2760.0, 145.66666666666666], [2720.0, 127.0], [2696.0, 212.0], [2712.0, 27.166666666666664], [2840.0, 123.25], [2928.0, 165.25], [2936.0, 171.0], [2912.0, 167.5], [2864.0, 133.66666666666666], [2872.0, 140.0], [2856.0, 127.66666666666667], [2832.0, 125.2], [2824.0, 129.5], [3056.0, 38.625], [3064.0, 74.0], [3048.0, 93.0], [3040.0, 89.44444444444444], [3032.0, 112.33333333333333], [3016.0, 59.599999999999994], [3008.0, 140.0], [3000.0, 134.0], [2944.0, 169.0], [2960.0, 164.57142857142856], [2968.0, 169.5], [2992.0, 151.44444444444449], [2984.0, 161.1860465116279], [2976.0, 199.5], [3192.0, 18.142857142857142], [3184.0, 43.64], [3160.0, 36.5], [3128.0, 28.0], [3152.0, 45.0], [3144.0, 42.0], [3136.0, 35.0], [3120.0, 45.6], [3104.0, 43.5], [3088.0, 25.0], [3072.0, 31.25], [3224.0, 21.0], [3288.0, 72.0], [3280.0, 33.0], [3264.0, 20.333333333333332], [3256.0, 26.142857142857142], [3248.0, 42.75], [3240.0, 32.0], [3216.0, 24.0], [3200.0, 27.333333333333332], [3432.0, 12.0], [3448.0, 26.5], [3424.0, 36.83333333333333], [3352.0, 32.0], [3336.0, 32.5], [3328.0, 37.0], [3344.0, 31.5], [3416.0, 39.333333333333336], [3400.0, 27.5], [3384.0, 53.0], [3392.0, 43.5], [3376.0, 51.0], [3360.0, 35.0], [3480.0, 8.4], [3568.0, 23.0], [3552.0, 5.5], [3544.0, 37.0], [3512.0, 19.6], [3528.0, 23.0], [3520.0, 22.0], [3504.0, 38.5], [3488.0, 23.0], [3464.0, 16.375], [3456.0, 34.0], [3696.0, 29.666666666666668], [3704.0, 24.0], [3640.0, 29.0], [3648.0, 37.5], [3632.0, 21.0], [3616.0, 14.5], [3624.0, 16.0], [3600.0, 13.0], [3592.0, 18.5], [3816.0, 20.428571428571427], [3832.0, 31.0], [3808.0, 43.333333333333336], [3792.0, 35.6], [3800.0, 34.0], [3784.0, 43.42857142857143], [3736.0, 20.0], [3776.0, 52.666666666666664], [3768.0, 43.333333333333336], [3712.0, 15.0], [3944.0, 33.0], [3960.0, 9.8], [3952.0, 32.66666666666667], [3920.0, 6.333333333333333], [3936.0, 27.0], [3864.0, 27.5], [3840.0, 19.857142857142854], [3928.0, 15.0], [3904.0, 28.5], [3896.0, 20.5], [3888.0, 10.666666666666666], [3880.0, 16.222222222222225], [3872.0, 35.0], [4064.0, 54.0], [4080.0, 58.0], [4088.0, 82.0], [4072.0, 57.0], [4008.0, 37.4], [4024.0, 22.0], [4000.0, 32.5], [3976.0, 12.333333333333334], [3992.0, 24.0], [4304.0, 45.0], [4336.0, 38.0], [4320.0, 30.666666666666668], [4240.0, 13.516129032258064], [4160.0, 17.25], [4176.0, 14.5], [4128.0, 29.0], [4112.0, 40.4], [4096.0, 60.0], [4256.0, 10.666666666666666], [4352.0, 45.333333333333336], [4464.0, 15.14705882352941], [4368.0, 58.125], [4384.0, 24.0], [4576.0, 16.0], [4400.0, 35.0], [4560.0, 20.714285714285715], [4480.0, 10.666666666666666], [4496.0, 20.74285714285714], [4448.0, 14.5], [4432.0, 17.5], [4416.0, 8.0], [4800.0, 360.7535045040826], [4640.0, 31.0], [4784.0, 7.5], [4768.0, 17.0], [4720.0, 39.6], [4736.0, 31.0], [4704.0, 52.333333333333336], [4672.0, 74.0], [4624.0, 144.0], [4145.0, 25.0], [4225.0, 22.0], [4305.0, 45.5], [4289.0, 31.0], [4129.0, 25.666666666666668], [4097.0, 59.8], [4257.0, 13.0], [4241.0, 31.0], [4209.0, 19.333333333333332], [4161.0, 14.0], [4177.0, 14.0], [4193.0, 15.482758620689655], [4465.0, 6.0], [4449.0, 12.0], [4417.0, 14.0], [4385.0, 24.0], [4369.0, 58.0], [4353.0, 46.0], [4737.0, 31.0], [4769.0, 80.0], [4625.0, 26.25], [4785.0, 19.702127659574465], [4753.0, 24.0], [4721.0, 39.0], [4609.0, 15.5], [4689.0, 64.5], [4673.0, 74.5], [4657.0, 80.0], [4641.0, 100.52755905511808], [2153.0, 48.0], [2129.0, 28.0], [2121.0, 29.0], [2185.0, 53.0], [2177.0, 64.25], [2233.0, 36.0], [2225.0, 63.0], [2193.0, 49.5], [2217.0, 60.0], [2209.0, 57.5], [2201.0, 51.0], [2273.0, 39.900000000000006], [2281.0, 22.75], [2297.0, 40.0], [2241.0, 34.0], [2257.0, 46.0], [2265.0, 54.0], [2249.0, 41.0], [2305.0, 45.0], [2313.0, 51.5], [2321.0, 48.0], [2337.0, 49.0], [2425.0, 101.0], [2553.0, 159.25], [2529.0, 155.5], [2513.0, 151.0], [2489.0, 139.5], [2465.0, 123.0], [2473.0, 127.0], [2449.0, 114.0], [2665.0, 132.5], [2681.0, 160.75], [2641.0, 170.33333333333334], [2673.0, 137.0], [2625.0, 133.0], [2617.0, 129.0], [2585.0, 168.5], [2577.0, 154.42857142857142], [2569.0, 150.0], [2561.0, 130.33333333333334], [2713.0, 128.0], [2801.0, 153.66666666666666], [2809.0, 130.0], [2793.0, 156.0], [2769.0, 145.0], [2745.0, 137.0], [2753.0, 140.0], [2729.0, 131.0], [2721.0, 127.0], [2737.0, 132.0], [2697.0, 210.5], [2689.0, 203.0], [2913.0, 167.0], [2937.0, 170.66666666666666], [2929.0, 166.0], [2921.0, 169.2], [2865.0, 136.0], [2825.0, 129.0], [2881.0, 142.5], [2849.0, 122.66666666666667], [2857.0, 128.5], [2841.0, 122.0], [2833.0, 126.25], [2961.0, 165.66666666666666], [3057.0, 24.571428571428577], [3049.0, 93.72727272727275], [3017.0, 86.5], [3033.0, 105.66666666666666], [3009.0, 139.66666666666666], [2993.0, 139.7], [2985.0, 156.0], [2977.0, 169.0], [2953.0, 167.0], [2945.0, 168.0], [3193.0, 20.0], [3185.0, 66.19696969696972], [3121.0, 40.30769230769231], [3073.0, 74.33333333333333], [3081.0, 18.5], [3177.0, 8.5], [3217.0, 21.5], [3321.0, 32.0], [3305.0, 22.0], [3281.0, 34.5], [3265.0, 20.0], [3257.0, 24.8], [3249.0, 44.22222222222222], [3209.0, 36.0], [3201.0, 27.8], [3233.0, 29.0], [3241.0, 33.0], [3441.0, 18.0], [3433.0, 20.0], [3345.0, 31.5], [3329.0, 37.0], [3449.0, 28.5], [3417.0, 39.0], [3409.0, 31.0], [3401.0, 29.0], [3385.0, 51.0], [3393.0, 40.0], [3369.0, 42.0], [3361.0, 36.0], [3569.0, 23.0], [3545.0, 31.8], [3537.0, 30.0], [3529.0, 23.5], [3513.0, 18.666666666666668], [3505.0, 40.333333333333336], [3497.0, 32.4], [3489.0, 23.0], [3481.0, 16.0], [3553.0, 9.642857142857142], [3465.0, 15.0], [3681.0, 17.0], [3697.0, 31.0], [3705.0, 26.333333333333332], [3689.0, 21.57142857142857], [3673.0, 12.5], [3649.0, 35.666666666666664], [3641.0, 30.5], [3601.0, 14.0], [3593.0, 16.25], [3633.0, 22.0], [3625.0, 17.0], [3825.0, 23.0], [3833.0, 33.2], [3817.0, 15.0], [3809.0, 46.692307692307686], [3801.0, 35.0], [3793.0, 25.0], [3777.0, 53.333333333333336], [3761.0, 32.0], [3737.0, 21.0], [3721.0, 17.0], [3713.0, 18.333333333333332], [3937.0, 27.0], [3961.0, 11.0], [3953.0, 16.894736842105264], [3913.0, 7.333333333333333], [3921.0, 8.0], [3905.0, 28.666666666666668], [3881.0, 11.5], [3873.0, 35.83333333333333], [3865.0, 28.0], [3841.0, 10.0], [3857.0, 21.0], [3985.0, 21.0], [4089.0, 83.0], [4081.0, 64.28571428571429], [4073.0, 58.0], [4001.0, 33.75], [4049.0, 44.0], [4009.0, 35.0], [3977.0, 13.0], [3969.0, 7.0], [4017.0, 12.380952380952381], [3993.0, 25.0], [4322.0, 29.75], [4338.0, 35.666666666666664], [4146.0, 26.0], [4130.0, 24.8], [4114.0, 41.833333333333336], [4162.0, 16.0], [4098.0, 92.66666666666667], [4242.0, 32.0], [4226.0, 21.0], [4482.0, 12.0], [4450.0, 13.702702702702702], [4498.0, 21.0], [4370.0, 59.0], [4386.0, 25.0], [4434.0, 19.333333333333332], [4418.0, 6.0], [4402.0, 35.42857142857143], [4594.0, 19.0], [4642.0, 79.0], [4738.0, 68.0], [4770.0, 80.0], [4706.0, 51.0], [4674.0, 73.0], [4626.0, 145.5], [4147.0, 27.0], [4323.0, 27.6], [4131.0, 23.125], [4115.0, 43.5], [4243.0, 33.0], [4259.0, 11.000000000000002], [4227.0, 22.0], [4163.0, 13.0], [4099.0, 56.875], [4467.0, 6.0], [4435.0, 18.5], [4579.0, 16.0], [4419.0, 7.0], [4387.0, 24.25], [4355.0, 47.0], [4595.0, 19.5], [4547.0, 17.54285714285714], [4739.0, 42.5], [4627.0, 28.0], [4787.0, 26.16216216216217], [4771.0, 17.0], [4723.0, 37.0], [4707.0, 50.0], [4691.0, 62.0], [4675.0, 73.0], [4643.0, 94.5], [1077.0, 79.92307692307692], [1057.0, 77.0], [1081.0, 64.9090909090909], [1085.0, 58.0], [1073.0, 84.5], [1049.0, 73.0], [1041.0, 65.0], [1061.0, 79.33333333333333], [1053.0, 75.0], [1065.0, 82.0], [1089.0, 61.27272727272727], [1117.0, 42.5], [1093.0, 66.71428571428571], [1109.0, 38.0], [1113.0, 38.0], [1105.0, 45.0], [1097.0, 68.66666666666667], [1149.0, 44.5], [1145.0, 51.0], [1141.0, 55.75], [1101.0, 49.0], [1201.0, 67.50000000000001], [1165.0, 40.0], [1185.0, 61.666666666666664], [1213.0, 79.0], [1193.0, 70.0], [1197.0, 63.0], [1177.0, 46.5], [1169.0, 34.0], [1273.0, 43.0], [1221.0, 56.14285714285714], [1249.0, 30.0], [1269.0, 41.0], [1225.0, 16.0], [1253.0, 31.0], [1261.0, 39.0], [1257.0, 35.0], [1293.0, 48.666666666666664], [1309.0, 53.5], [1281.0, 51.6], [1289.0, 48.0], [1313.0, 56.5], [1341.0, 72.0], [1337.0, 72.5], [1321.0, 64.66666666666667], [1285.0, 54.5], [1297.0, 48.0], [1353.0, 43.0], [1345.0, 61.38461538461538], [1349.0, 47.42857142857143], [1361.0, 49.714285714285715], [1397.0, 37.0], [1377.0, 36.62499999999999], [1381.0, 30.0], [1357.0, 46.0], [1421.0, 40.0], [1465.0, 39.0], [1469.0, 36.0], [1441.0, 50.666666666666664], [1445.0, 45.333333333333336], [1449.0, 41.5], [1425.0, 43.5], [1429.0, 45.5], [1433.0, 44.5], [1417.0, 38.4], [1481.0, 43.0], [1473.0, 38.0], [1501.0, 44.0], [1477.0, 41.0], [1485.0, 45.0], [1489.0, 48.0], [1493.0, 44.0], [1533.0, 14.333333333333334], [1521.0, 49.0], [1505.0, 40.5], [1513.0, 36.0], [1517.0, 35.0], [1509.0, 38.0], [1549.0, 21.076923076923077], [1537.0, 22.5], [1565.0, 15.0], [1541.0, 26.0], [1557.0, 8.0], [1577.0, 29.0], [1593.0, 36.0], [1597.0, 33.0], [1573.0, 21.0], [1629.0, 33.375], [1601.0, 25.8], [1625.0, 36.0], [1621.0, 30.0], [1617.0, 24.0], [1633.0, 20.142857142857142], [1637.0, 15.0], [1645.0, 19.0], [1641.0, 14.0], [1713.0, 41.0], [1665.0, 29.0], [1669.0, 32.0], [1689.0, 51.2], [1673.0, 36.5], [1717.0, 35.6], [1721.0, 38.66666666666667], [1725.0, 32.07142857142857], [1697.0, 45.0], [1685.0, 44.0], [1701.0, 43.666666666666664], [1705.0, 44.666666666666664], [1733.0, 13.0], [1729.0, 18.571428571428573], [1785.0, 13.0], [1789.0, 14.333333333333334], [1773.0, 6.0], [1761.0, 25.0], [1745.0, 22.0], [1741.0, 19.0], [1753.0, 24.42857142857143], [1757.0, 8.0], [1841.0, 25.5], [1805.0, 31.555555555555557], [1809.0, 33.66666666666667], [1813.0, 35.0], [1825.0, 12.8], [1849.0, 15.0], [1845.0, 21.5], [1817.0, 21.5], [1829.0, 14.0], [1833.0, 19.0], [1837.0, 23.0], [1881.0, 14.666666666666666], [1877.0, 12.5], [1873.0, 10.333333333333334], [1921.0, 31.5], [1977.0, 30.8], [1933.0, 38.0], [1973.0, 32.75], [1937.0, 36.75], [2009.0, 30.0], [2021.0, 35.0], [2005.0, 28.5], [2037.0, 39.0], [2041.0, 59.0], [2050.0, 41.0], [2058.0, 42.0], [2082.0, 54.4], [2130.0, 29.0], [2154.0, 47.0], [2170.0, 59.0], [2146.0, 42.0], [2090.0, 56.5], [2186.0, 52.25], [2178.0, 66.38000000000001], [2234.0, 39.333333333333336], [2226.0, 61.333333333333336], [2194.0, 43.8], [2202.0, 51.0], [2242.0, 35.75], [2290.0, 37.0], [2298.0, 41.0], [2266.0, 54.0], [2258.0, 47.0], [2210.0, 59.0], [2306.0, 45.333333333333336], [2346.0, 35.0], [2338.0, 49.666666666666664], [2314.0, 49.5], [2322.0, 47.0], [2426.0, 102.0], [2538.0, 154.0], [2554.0, 162.0], [2530.0, 155.5], [2498.0, 146.0], [2482.0, 134.0], [2474.0, 129.0], [2682.0, 167.0], [2674.0, 133.66666666666666], [2642.0, 180.0], [2634.0, 136.33333333333334], [2626.0, 133.0], [2610.0, 127.0], [2570.0, 153.5], [2562.0, 146.25], [2802.0, 156.33333333333334], [2794.0, 156.2], [2730.0, 130.25], [2762.0, 144.7142857142857], [2698.0, 238.66666666666666], [2706.0, 134.0], [2714.0, 130.0], [2690.0, 228.0], [2914.0, 168.0], [2938.0, 170.0], [2930.0, 165.5], [2922.0, 169.0], [2874.0, 139.0], [2866.0, 136.0], [2858.0, 129.25], [2850.0, 122.0], [2842.0, 48.72727272727273], [2818.0, 132.0], [3042.0, 91.59090909090911], [3058.0, 38.83333333333333], [3066.0, 91.0], [3050.0, 54.54545454545455], [3026.0, 107.0], [3010.0, 141.0], [3002.0, 134.5], [2970.0, 184.62937062937064], [2954.0, 166.0], [2994.0, 136.62500000000003], [2978.0, 168.0], [3170.0, 28.25], [3154.0, 46.8], [3130.0, 30.0], [3146.0, 43.0], [3162.0, 34.5], [3138.0, 13.272727272727272], [3122.0, 26.5], [3106.0, 45.25], [3074.0, 89.2], [3082.0, 19.5], [3098.0, 7.222222222222222], [3210.0, 37.0], [3322.0, 33.0], [3306.0, 23.0], [3218.0, 6.749999999999999], [3282.0, 35.0], [3258.0, 13.681818181818185], [3274.0, 26.333333333333332], [3250.0, 45.0], [3234.0, 30.0], [3242.0, 33.0], [3202.0, 29.0], [3442.0, 21.333333333333332], [3450.0, 30.0], [3426.0, 37.00000000000001], [3354.0, 32.0], [3338.0, 31.0], [3330.0, 38.666666666666664], [3346.0, 31.0], [3418.0, 40.0], [3402.0, 25.333333333333332], [3410.0, 12.562500000000002], [3386.0, 48.0], [3394.0, 39.0], [3370.0, 41.666666666666664], [3362.0, 37.333333333333336], [3546.0, 23.933333333333334], [3538.0, 31.5], [3514.0, 8.1], [3506.0, 39.0], [3482.0, 18.666666666666668], [3498.0, 34.0], [3458.0, 36.0], [3602.0, 19.0], [3650.0, 35.0], [3706.0, 25.25], [3690.0, 7.636363636363637], [3658.0, 11.263157894736844], [3642.0, 31.0], [3634.0, 23.5], [3618.0, 13.333333333333334], [3626.0, 18.0], [3594.0, 16.0], [3586.0, 33.65], [3826.0, 24.0], [3834.0, 35.0], [3818.0, 15.833333333333334], [3810.0, 44.0], [3802.0, 36.0], [3794.0, 13.500000000000004], [3786.0, 37.6], [3778.0, 51.2], [3770.0, 45.0], [3762.0, 33.0], [3954.0, 11.0], [3962.0, 12.0], [3946.0, 34.666666666666664], [3842.0, 7.5], [3850.0, 10.333333333333334], [3922.0, 10.0], [3914.0, 10.0], [3906.0, 28.0], [3898.0, 22.0], [3882.0, 8.0], [3890.0, 12.0], [3874.0, 37.90909090909091], [4090.0, 72.0], [4058.0, 51.0], [4050.0, 44.5], [4042.0, 37.5], [4010.0, 35.0], [3986.0, 20.5], [3994.0, 25.0], [3978.0, 13.0], [4148.0, 27.0], [4340.0, 35.0], [4308.0, 17.3448275862069], [4132.0, 18.8], [4116.0, 42.875], [4100.0, 52.142857142857146], [4276.0, 21.333333333333332], [4260.0, 12.0], [4228.0, 23.0], [4180.0, 18.833333333333332], [4196.0, 34.0], [4388.0, 25.5], [4356.0, 48.25], [4468.0, 8.0], [4484.0, 13.0], [4596.0, 21.93023255813954], [4372.0, 57.0], [4436.0, 14.142857142857144], [4420.0, 8.5], [4580.0, 17.0], [4404.0, 37.5], [4628.0, 86.0], [4676.0, 61.333333333333336], [4708.0, 49.66666666666667], [4788.0, 13.714285714285715], [4660.0, 76.8], [4293.0, 32.75], [4245.0, 33.666666666666664], [4341.0, 36.0], [4309.0, 48.333333333333336], [4149.0, 17.4], [4133.0, 14.25], [4117.0, 43.16666666666667], [4101.0, 16.12], [4213.0, 11.0], [4197.0, 30.0], [4261.0, 12.0], [4373.0, 55.666666666666664], [4501.0, 25.180952380952377], [4485.0, 14.0], [4437.0, 22.0], [4421.0, 11.0], [4405.0, 37.5], [4357.0, 51.0], [4389.0, 26.0], [4645.0, 31.0], [4741.0, 59.5], [4677.0, 71.0], [4661.0, 78.0], [2147.0, 42.0], [2059.0, 43.666666666666664], [2155.0, 49.0], [2171.0, 59.333333333333336], [2163.0, 51.5], [2051.0, 41.6], [2083.0, 55.0], [2123.0, 29.0], [2091.0, 56.0], [2131.0, 29.0], [2203.0, 51.0], [2187.0, 51.5], [2227.0, 59.0], [2235.0, 33.5], [2195.0, 44.5], [2275.0, 34.714285714285715], [2291.0, 37.0], [2243.0, 38.0], [2259.0, 48.875], [2267.0, 52.85714285714286], [2211.0, 60.0], [2307.0, 46.25], [2315.0, 49.0], [2323.0, 47.0], [2339.0, 53.0], [2347.0, 36.0], [2331.0, 51.0], [2443.0, 112.0], [2555.0, 159.6], [2539.0, 153.0], [2491.0, 140.0], [2459.0, 118.33333333333333], [2659.0, 132.0], [2675.0, 133.0], [2683.0, 187.66666666666666], [2667.0, 132.0], [2643.0, 144.0], [2627.0, 133.0], [2595.0, 122.0], [2603.0, 124.2], [2611.0, 127.5], [2563.0, 154.25], [2587.0, 156.75], [2579.0, 63.8], [2571.0, 152.66666666666666], [2707.0, 132.0], [2795.0, 156.0], [2803.0, 156.5], [2787.0, 158.0], [2747.0, 137.0], [2763.0, 145.0], [2755.0, 6.25], [2739.0, 134.0], [2699.0, 134.5], [2691.0, 204.33333333333331], [2723.0, 127.0], [2915.0, 167.0], [2931.0, 164.66666666666666], [2939.0, 171.0], [2923.0, 170.0], [2883.0, 45.57142857142858], [2875.0, 140.0], [2835.0, 124.0], [2867.0, 137.0], [2859.0, 130.33333333333334], [2851.0, 123.0], [3059.0, 48.45454545454545], [3067.0, 65.33333333333333], [3051.0, 72.24999999999999], [3043.0, 93.0], [3027.0, 109.0], [3035.0, 101.0], [3011.0, 140.25], [2995.0, 134.0], [2971.0, 200.25], [2955.0, 166.5], [2947.0, 167.5], [2987.0, 159.2222222222222], [3131.0, 30.0], [3123.0, 22.0], [3107.0, 48.699999999999996], [3099.0, 39.0], [3075.0, 109.0], [3083.0, 20.0], [3291.0, 12.2], [3283.0, 36.8], [3275.0, 28.333333333333332], [3251.0, 41.3125], [3211.0, 33.333333333333336], [3243.0, 34.0], [3203.0, 30.0], [3435.0, 17.0], [3443.0, 11.153846153846153], [3427.0, 27.666666666666668], [3355.0, 32.0], [3331.0, 39.0], [3347.0, 30.0], [3419.0, 41.0], [3411.0, 32.5], [3403.0, 26.0], [3395.0, 36.875], [3387.0, 53.5], [3371.0, 43.0], [3363.0, 38.5], [3483.0, 17.0], [3579.0, 29.8], [3547.0, 15.166666666666666], [3571.0, 25.0], [3531.0, 25.0], [3507.0, 39.0], [3499.0, 35.0], [3491.0, 25.5], [3467.0, 11.5], [3459.0, 35.0], [3699.0, 31.375], [3691.0, 27.333333333333332], [3651.0, 35.2], [3635.0, 24.625], [3627.0, 18.57142857142857], [3595.0, 16.0], [3587.0, 8.25], [3835.0, 36.0], [3827.0, 25.6], [3819.0, 17.0], [3803.0, 37.6], [3787.0, 38.0], [3779.0, 49.25], [3763.0, 37.0], [3715.0, 13.0], [3947.0, 35.0], [3963.0, 12.0], [3955.0, 9.624999999999998], [3939.0, 29.0], [3859.0, 11.16666666666667], [3843.0, 8.0], [3923.0, 9.647058823529411], [3907.0, 22.0], [3899.0, 22.75], [3891.0, 14.4], [3883.0, 10.0], [3875.0, 36.42857142857143], [4091.0, 75.75], [4075.0, 13.304347826086957], [4067.0, 54.0], [4051.0, 45.83333333333333], [4003.0, 34.0], [3987.0, 15.555555555555555], [4294.0, 34.0], [4342.0, 37.0], [4246.0, 33.5], [4310.0, 48.0], [4150.0, 28.25], [4134.0, 17.0], [4118.0, 42.16666666666667], [4102.0, 45.25], [4278.0, 23.0], [4406.0, 35.42857142857142], [4486.0, 15.333333333333334], [4374.0, 19.714285714285715], [4390.0, 27.0], [4454.0, 12.333333333333334], [4438.0, 23.0], [4582.0, 17.333333333333332], [4630.0, 27.0], [4646.0, 63.0], [4694.0, 55.666666666666664], [4790.0, 8.0], [4742.0, 29.5], [4726.0, 36.75], [4710.0, 50.0], [4678.0, 71.0], [4662.0, 76.0], [4343.0, 38.0], [4231.0, 24.0], [4151.0, 29.333333333333332], [4327.0, 13.740740740740739], [4135.0, 17.0], [4119.0, 43.333333333333336], [4103.0, 43.0], [4215.0, 11.0], [4279.0, 23.5], [4247.0, 34.8], [4375.0, 51.5], [4471.0, 8.333333333333334], [4487.0, 16.0], [4455.0, 11.0], [4359.0, 52.6], [4391.0, 18.290322580645157], [4439.0, 22.5], [4423.0, 39.2295081967213], [4567.0, 14.333333333333334], [4407.0, 34.5], [4631.0, 29.0], [4647.0, 62.5], [4775.0, 59.33333333333333], [4759.0, 21.0], [4727.0, 36.0], [4711.0, 48.333333333333336], [4679.0, 69.83333333333333], [517.0, 165.66666666666666], [513.0, 160.0], [525.0, 176.5], [515.0, 163.0], [521.0, 172.83333333333334], [519.0, 169.0], [543.0, 165.0], [539.0, 189.44444444444446], [537.0, 181.0], [541.0, 196.625], [529.0, 183.66666666666669], [531.0, 194.75], [533.0, 186.0], [535.0, 195.5], [571.0, 165.60377358490567], [561.0, 185.18181818181822], [547.0, 161.0], [573.0, 128.57142857142858], [563.0, 182.0], [567.0, 167.0], [569.0, 157.4], [583.0, 118.0], [577.0, 120.5], [605.0, 150.33333333333334], [603.0, 142.0], [635.0, 138.0], [613.0, 157.66666666666666], [621.0, 166.0], [623.0, 166.75], [637.0, 139.11111111111111], [639.0, 140.0], [631.0, 137.00000000000003], [625.0, 167.5], [627.0, 157.28571428571428], [619.0, 163.0], [611.0, 155.0], [647.0, 105.69999999999999], [641.0, 109.1875], [657.0, 117.33333333333333], [659.0, 105.42857142857142], [661.0, 98.33333333333333], [663.0, 98.5], [665.0, 105.66666666666667], [653.0, 111.33333333333333], [649.0, 108.4], [643.0, 103.0], [701.0, 68.5], [685.0, 108.42857142857143], [681.0, 104.0], [683.0, 107.0], [703.0, 47.0], [697.0, 80.0], [699.0, 79.83333333333334], [689.0, 103.83333333333333], [691.0, 86.375], [693.0, 76.85714285714285], [687.0, 111.6], [705.0, 52.27777777777777], [709.0, 54.0], [707.0, 53.75], [711.0, 53.666666666666664], [713.0, 47.87500000000001], [765.0, 68.0], [763.0, 67.0], [767.0, 70.0], [755.0, 71.0], [757.0, 65.0], [751.0, 69.0], [745.0, 74.0], [753.0, 71.0], [743.0, 82.0], [773.0, 77.0], [783.0, 81.0], [781.0, 81.0], [779.0, 79.0], [777.0, 78.75], [775.0, 77.0], [771.0, 75.0], [787.0, 84.0], [789.0, 86.0], [793.0, 93.0], [797.0, 92.33333333333333], [799.0, 90.0], [791.0, 88.0], [805.0, 85.5], [801.0, 90.25], [807.0, 80.875], [803.0, 92.0], [823.0, 75.5], [831.0, 82.0], [819.0, 72.0], [817.0, 73.0], [827.0, 79.0], [825.0, 77.0], [811.0, 74.5], [809.0, 77.0], [839.0, 87.0], [843.0, 95.6], [841.0, 91.0], [863.0, 102.375], [855.0, 105.0], [853.0, 104.0], [871.0, 98.66666666666667], [865.0, 100.25], [889.0, 87.5], [891.0, 90.75], [867.0, 98.0], [877.0, 99.0], [879.0, 96.0], [881.0, 96.5], [883.0, 94.0], [887.0, 92.0], [895.0, 91.0], [893.0, 89.5], [903.0, 99.0], [897.0, 91.5], [901.0, 96.0], [899.0, 93.0], [907.0, 103.66666666666667], [917.0, 86.625], [925.0, 71.0], [923.0, 78.0], [915.0, 90.0], [905.0, 101.0], [931.0, 73.0], [929.0, 72.33333333333334], [943.0, 29.0], [941.0, 79.5], [951.0, 58.0], [949.0, 34.0], [945.0, 56.5], [959.0, 43.0], [955.0, 40.0], [935.0, 75.5], [967.0, 50.0], [961.0, 46.0], [975.0, 54.0], [963.0, 45.5], [973.0, 54.0], [985.0, 60.0], [991.0, 64.0], [977.0, 55.0], [979.0, 56.0], [993.0, 91.0], [1005.0, 42.5], [999.0, 48.857142857142854], [1015.0, 43.0], [1011.0, 42.5], [1013.0, 41.0], [1074.0, 83.8], [1038.0, 65.0], [1086.0, 57.5], [1082.0, 67.5], [1078.0, 76.6], [1042.0, 66.33333333333333], [1054.0, 74.75], [1050.0, 73.0], [1066.0, 84.66666666666667], [1070.0, 84.5], [1118.0, 43.0], [1110.0, 36.0], [1106.0, 41.8], [1114.0, 39.2], [1090.0, 63.5], [1098.0, 67.0], [1102.0, 47.83333333333333], [1138.0, 63.5], [1150.0, 45.0], [1142.0, 54.0], [1146.0, 48.0], [1210.0, 76.0], [1206.0, 75.75], [1182.0, 58.666666666666664], [1162.0, 36.0], [1214.0, 59.0], [1190.0, 65.0], [1198.0, 68.0], [1186.0, 56.0], [1158.0, 48.666666666666664], [1170.0, 42.0], [1222.0, 72.5], [1266.0, 39.0], [1226.0, 11.0], [1294.0, 48.5], [1282.0, 53.5], [1342.0, 68.5], [1330.0, 70.5], [1338.0, 73.0], [1314.0, 57.0], [1318.0, 61.5], [1306.0, 52.0], [1286.0, 57.0], [1346.0, 51.0], [1366.0, 48.5], [1362.0, 51.0], [1370.0, 51.0], [1350.0, 45.45454545454545], [1354.0, 43.75], [1398.0, 42.0], [1378.0, 38.83333333333333], [1382.0, 28.0], [1358.0, 45.33333333333333], [1414.0, 36.0], [1422.0, 41.5], [1466.0, 39.666666666666664], [1470.0, 37.0], [1446.0, 44.0], [1454.0, 36.0], [1426.0, 45.0], [1430.0, 45.0], [1434.0, 44.0], [1410.0, 36.0], [1486.0, 46.93333333333334], [1498.0, 42.0], [1482.0, 44.0], [1478.0, 42.5], [1490.0, 48.0], [1494.0, 45.666666666666664], [1522.0, 34.25], [1534.0, 17.0], [1506.0, 38.666666666666664], [1510.0, 38.0], [1586.0, 36.666666666666664], [1550.0, 15.75], [1542.0, 27.0], [1546.0, 30.09090909090909], [1570.0, 18.0], [1590.0, 36.0], [1594.0, 34.75], [1578.0, 29.5], [1574.0, 21.0], [1582.0, 32.0], [1566.0, 16.0], [1554.0, 7.0], [1562.0, 11.0], [1602.0, 19.1], [1630.0, 25.0], [1614.0, 22.0], [1638.0, 16.0], [1626.0, 37.0], [1606.0, 17.5], [1618.0, 25.0], [1718.0, 38.75], [1678.0, 39.5], [1666.0, 29.0], [1670.0, 34.0], [1690.0, 51.5], [1694.0, 49.0], [1698.0, 44.0], [1702.0, 44.0], [1710.0, 42.0], [1706.0, 44.0], [1726.0, 26.0], [1722.0, 39.0], [1674.0, 37.0], [1686.0, 45.0], [1738.0, 17.333333333333332], [1730.0, 15.0], [1758.0, 33.0], [1754.0, 15.0], [1734.0, 14.0], [1746.0, 23.0], [1742.0, 19.5], [1762.0, 7.0], [1790.0, 12.5], [1786.0, 13.0], [1778.0, 6.0], [1770.0, 7.0], [1774.0, 7.0], [1750.0, 27.8], [1806.0, 32.0], [1814.0, 36.142857142857146], [1826.0, 13.0], [1854.0, 8.5], [1850.0, 9.0], [1846.0, 17.0], [1842.0, 25.2], [1830.0, 16.0], [1834.0, 19.333333333333332], [1810.0, 34.666666666666664], [1818.0, 15.0], [1822.0, 11.75], [1866.0, 7.75], [1858.0, 8.0], [1878.0, 13.0], [1914.0, 33.0], [1870.0, 11.0], [1874.0, 10.0], [1974.0, 34.0], [1922.0, 33.42857142857143], [1938.0, 34.75], [1978.0, 30.0], [1930.0, 36.900000000000006], [1934.0, 38.75], [1958.0, 32.0], [1954.0, 30.5], [1982.0, 17.0], [1966.0, 36.0], [1962.0, 33.0], [1986.0, 20.0], [2006.0, 29.0], [2038.0, 60.0], [2042.0, 45.81818181818182], [2046.0, 39.5], [2124.0, 32.0], [2132.0, 28.0], [2092.0, 56.0], [2164.0, 55.0], [2172.0, 59.0], [2196.0, 45.0], [2228.0, 48.0], [2236.0, 33.0], [2188.0, 51.666666666666664], [2204.0, 53.0], [2300.0, 42.0], [2276.0, 36.875], [2268.0, 49.75], [2260.0, 50.0], [2212.0, 61.0], [2220.0, 62.0], [2308.0, 47.5], [2348.0, 36.333333333333336], [2324.0, 46.0], [2340.0, 48.5], [2428.0, 101.0], [2500.0, 145.0], [2492.0, 141.0], [2476.0, 130.0], [2452.0, 115.0], [2628.0, 134.0], [2684.0, 201.0], [2652.0, 138.0], [2644.0, 148.0], [2636.0, 136.0], [2620.0, 130.0], [2596.0, 122.0], [2588.0, 120.0], [2572.0, 148.5], [2564.0, 153.0], [2580.0, 126.0], [2804.0, 152.0], [2788.0, 157.0], [2764.0, 270.0], [2756.0, 141.0], [2732.0, 131.0], [2740.0, 134.0], [2724.0, 128.0], [2844.0, 122.0], [2924.0, 168.0], [2932.0, 165.0], [2916.0, 167.5], [2876.0, 141.0], [2860.0, 131.25], [2884.0, 144.0], [2852.0, 123.5], [2836.0, 125.0], [2828.0, 127.75], [2820.0, 135.0], [3044.0, 95.0], [3060.0, 85.28571428571429], [3068.0, 72.5], [3052.0, 40.5], [3036.0, 101.71428571428572], [3012.0, 144.0], [3004.0, 136.33333333333334], [2956.0, 166.85714285714286], [2964.0, 166.5], [2996.0, 134.0], [2988.0, 162.0], [2980.0, 167.0], [3196.0, 22.0], [3164.0, 32.87500000000001], [3140.0, 37.0], [3148.0, 43.0], [3124.0, 23.6], [3116.0, 54.99999999999999], [3108.0, 49.333333333333336], [3084.0, 21.0], [3324.0, 34.0], [3316.0, 27.0], [3284.0, 54.581395348837205], [3276.0, 29.5], [3252.0, 41.0], [3244.0, 37.5], [3212.0, 33.0], [3204.0, 30.0], [3444.0, 23.0], [3452.0, 31.5], [3428.0, 23.857142857142858], [3420.0, 41.2], [3404.0, 26.75], [3396.0, 34.333333333333336], [3372.0, 46.88888888888889], [3380.0, 54.0], [3340.0, 32.0], [3332.0, 36.0], [3348.0, 31.0], [3356.0, 32.0], [3572.0, 27.0], [3548.0, 10.833333333333334], [3540.0, 32.5], [3556.0, 7.0], [3532.0, 26.25], [3508.0, 43.5], [3492.0, 26.5], [3476.0, 15.5], [3468.0, 11.0], [3460.0, 36.0], [3484.0, 20.0], [3500.0, 35.5], [3708.0, 22.666666666666668], [3692.0, 27.0], [3652.0, 32.6], [3644.0, 33.0], [3636.0, 27.0], [3596.0, 15.0], [3588.0, 35.5], [3828.0, 10.222222222222221], [3836.0, 37.0], [3812.0, 38.333333333333336], [3804.0, 40.0], [3796.0, 29.0], [3788.0, 40.66666666666666], [3780.0, 52.75], [3772.0, 47.666666666666664], [3732.0, 18.0], [3740.0, 21.5], [3868.0, 31.0], [3956.0, 12.0], [3964.0, 12.5], [3940.0, 29.4], [3916.0, 6.571428571428572], [3908.0, 17.4], [3892.0, 9.88888888888889], [3884.0, 6.666666666666667], [3876.0, 28.77777777777778], [3860.0, 24.0], [3844.0, 4.0], [4092.0, 75.4], [4068.0, 55.0], [4076.0, 58.0], [4084.0, 61.0], [4052.0, 46.0], [4044.0, 13.899999999999999], [4312.0, 51.0], [4344.0, 39.0], [4232.0, 24.0], [4248.0, 36.1], [4296.0, 36.0], [4136.0, 18.0], [4120.0, 41.93333333333334], [4104.0, 39.0], [4280.0, 25.0], [4264.0, 14.0], [4392.0, 28.0], [4456.0, 11.0], [4488.0, 17.0], [4360.0, 55.0], [4376.0, 52.25], [4408.0, 30.75], [4552.0, 10.0], [4584.0, 18.0], [4440.0, 24.833333333333336], [4424.0, 13.0], [4696.0, 57.0], [4648.0, 32.5], [4632.0, 129.29696969696963], [4792.0, 17.670103092783506], [4776.0, 10.0], [4744.0, 29.0], [4712.0, 47.142857142857146], [4153.0, 31.8], [4313.0, 44.285714285714285], [4345.0, 40.0], [4297.0, 37.0], [4121.0, 39.0], [4105.0, 35.33333333333333], [4249.0, 45.0], [4233.0, 26.0], [4217.0, 13.0], [4201.0, 32.0], [4169.0, 12.708333333333332], [4409.0, 16.230769230769234], [4489.0, 17.0], [4585.0, 18.5], [4569.0, 14.0], [4457.0, 11.0], [4441.0, 25.0], [4425.0, 13.0], [4393.0, 29.0], [4377.0, 40.5], [4361.0, 53.5], [4633.0, 102.8], [4793.0, 18.466666666666672], [4761.0, 22.0], [4729.0, 35.333333333333336], [4745.0, 29.0], [4713.0, 45.0], [4697.0, 60.0], [4681.0, 68.0], [2053.0, 42.0], [2157.0, 50.666666666666664], [2093.0, 25.0], [2085.0, 54.0], [2125.0, 31.5], [2133.0, 31.0], [2173.0, 60.5], [2141.0, 42.0], [2197.0, 46.875], [2181.0, 58.0], [2237.0, 32.0], [2221.0, 64.0], [2189.0, 47.6], [2213.0, 60.0], [2293.0, 38.0], [2245.0, 38.5], [2261.0, 51.0], [2269.0, 49.0], [2309.0, 47.5], [2349.0, 36.0], [2533.0, 80.5], [2557.0, 136.75], [2509.0, 150.0], [2485.0, 135.0], [2469.0, 125.0], [2461.0, 120.0], [2453.0, 116.0], [2685.0, 188.2], [2677.0, 132.66666666666666], [2653.0, 136.0], [2669.0, 131.5], [2645.0, 153.5], [2637.0, 137.0], [2629.0, 133.0], [2597.0, 122.0], [2565.0, 155.0], [2805.0, 155.0], [2765.0, 272.0], [2725.0, 128.0], [2741.0, 136.0], [2749.0, 138.0], [2701.0, 188.0], [2717.0, 129.5], [2693.0, 200.33333333333334], [2829.0, 127.75], [2941.0, 170.75], [2925.0, 168.16666666666669], [2861.0, 132.6], [2909.0, 165.5], [2877.0, 142.33333333333334], [2853.0, 125.0], [2837.0, 125.5], [2821.0, 131.75], [3061.0, 54.900000000000006], [3069.0, 52.5], [3053.0, 38.6], [3045.0, 94.0], [3037.0, 95.0], [3029.0, 109.5], [3013.0, 139.06451612903228], [3005.0, 138.0], [2965.0, 166.5], [2949.0, 167.6], [2997.0, 133.5], [2989.0, 162.5], [2981.0, 166.5], [3197.0, 23.0], [3189.0, 24.666666666666668], [3165.0, 28.666666666666668], [3141.0, 38.5], [3149.0, 43.666666666666664], [3157.0, 46.0], [3133.0, 32.0], [3125.0, 24.0], [3101.0, 40.857142857142854], [3085.0, 22.0], [3309.0, 24.0], [3325.0, 34.0], [3317.0, 28.666666666666668], [3285.0, 70.5], [3277.0, 29.0], [3253.0, 37.5], [3245.0, 40.0], [3237.0, 31.0], [3221.0, 21.0], [3213.0, 27.25], [3205.0, 31.0], [3445.0, 24.0], [3437.0, 16.0], [3453.0, 32.5], [3421.0, 42.0], [3429.0, 16.5], [3413.0, 34.0], [3397.0, 33.6], [3389.0, 47.142857142857146], [3341.0, 33.8], [3333.0, 36.0], [3357.0, 33.0], [3349.0, 32.0], [3381.0, 54.5], [3365.0, 40.0], [3581.0, 30.5], [3541.0, 33.111111111111114], [3533.0, 27.0], [3509.0, 38.666666666666664], [3525.0, 26.0], [3501.0, 36.5], [3477.0, 11.5], [3485.0, 21.0], [3461.0, 33.666666666666664], [3701.0, 32.0], [3677.0, 14.0], [3693.0, 27.0], [3589.0, 33.800000000000004], [3669.0, 10.5], [3661.0, 7.0], [3653.0, 31.5], [3637.0, 27.333333333333332], [3645.0, 34.0], [3629.0, 21.0], [3621.0, 15.0], [3829.0, 27.0], [3837.0, 35.42857142857143], [3821.0, 20.666666666666668], [3805.0, 40.75], [3789.0, 32.33333333333333], [3781.0, 45.5], [3773.0, 49.0], [3765.0, 38.333333333333336], [3717.0, 15.0], [3941.0, 32.0], [3957.0, 9.0], [3949.0, 37.5], [3909.0, 18.181818181818176], [3933.0, 23.0], [3901.0, 25.8], [3885.0, 7.5], [3877.0, 20.5], [3861.0, 24.5], [3869.0, 32.0], [4093.0, 70.66666666666667], [4077.0, 58.0], [4069.0, 55.333333333333336], [4053.0, 47.0], [4005.0, 35.5], [3997.0, 27.0], [4298.0, 39.0], [4346.0, 41.0], [4330.0, 34.0], [4314.0, 47.333333333333336], [4154.0, 32.416666666666664], [4138.0, 19.5], [4122.0, 38.0], [4218.0, 13.6], [4170.0, 17.0], [4202.0, 33.0], [4282.0, 26.0], [4266.0, 13.0], [4250.0, 38.0], [4362.0, 54.0], [4458.0, 11.0], [4378.0, 39.57142857142858], [4394.0, 29.75], [4442.0, 26.0], [4426.0, 14.0], [4410.0, 23.0], [4586.0, 19.0], [4602.0, 18.902439024390237], [4634.0, 60.0], [4682.0, 61.0], [4698.0, 46.0], [4778.0, 44.5], [4794.0, 8.0], [4730.0, 35.25], [4666.0, 75.72727272727272], [4650.0, 192.3255813953488], [4299.0, 39.5], [4315.0, 42.333333333333336], [4155.0, 32.4], [4123.0, 39.0], [4107.0, 36.6], [4139.0, 20.0], [4267.0, 12.0], [4251.0, 26.5625], [4203.0, 33.833333333333336], [4459.0, 9.0], [4443.0, 27.0], [4427.0, 14.0], [4411.0, 21.846153846153847], [4363.0, 54.5], [4619.0, 32.98507462686568], [4667.0, 55.0], [4731.0, 64.42857142857143], [4699.0, 51.5], [4795.0, 17.65957446808511], [4747.0, 29.0], [4651.0, 447.0], [1083.0, 55.0], [1039.0, 64.42857142857143], [1055.0, 76.0], [1087.0, 58.0], [1079.0, 77.0], [1075.0, 82.0], [1059.0, 77.66666666666667], [1063.0, 80.0], [1051.0, 73.66666666666667], [1067.0, 87.0], [1091.0, 60.0], [1107.0, 38.0], [1119.0, 41.0], [1115.0, 39.666666666666664], [1111.0, 36.333333333333336], [1095.0, 71.5], [1099.0, 66.66666666666667], [1151.0, 41.5], [1143.0, 52.0], [1147.0, 50.0], [1163.0, 37.666666666666664], [1159.0, 46.333333333333336], [1207.0, 75.0], [1215.0, 60.0], [1187.0, 60.0], [1199.0, 71.0], [1195.0, 68.0], [1183.0, 56.5], [1179.0, 51.0], [1223.0, 66.65740740740742], [1267.0, 40.333333333333336], [1219.0, 59.0], [1243.0, 25.0], [1251.0, 31.0], [1227.0, 11.0], [1231.0, 106.0], [1271.0, 41.0], [1339.0, 72.0], [1291.0, 48.0], [1343.0, 67.2], [1335.0, 73.0], [1315.0, 59.25], [1319.0, 62.25], [1327.0, 68.75], [1347.0, 51.75], [1375.0, 37.285714285714285], [1371.0, 43.0], [1363.0, 53.0], [1351.0, 41.44444444444444], [1359.0, 46.0], [1407.0, 32.0], [1395.0, 35.0], [1391.0, 31.0], [1379.0, 24.333333333333332], [1355.0, 45.0], [1463.0, 42.5], [1467.0, 37.83333333333333], [1423.0, 42.666666666666664], [1471.0, 38.25], [1451.0, 41.0], [1447.0, 42.5], [1443.0, 48.0], [1427.0, 46.5], [1439.0, 50.0], [1419.0, 39.4], [1415.0, 38.0], [1475.0, 40.0], [1479.0, 43.0], [1503.0, 42.5], [1495.0, 43.0], [1499.0, 43.0], [1491.0, 50.0], [1523.0, 51.224999999999994], [1515.0, 36.0], [1519.0, 40.2], [1507.0, 39.0], [1539.0, 24.571428571428573], [1547.0, 30.88888888888889], [1567.0, 16.0], [1563.0, 12.0], [1559.0, 10.0], [1551.0, 10.0], [1555.0, 7.0], [1583.0, 33.0], [1579.0, 31.0], [1575.0, 29.0], [1571.0, 19.0], [1587.0, 36.09090909090909], [1595.0, 33.0], [1599.0, 32.4], [1607.0, 17.0], [1627.0, 37.0], [1631.0, 24.2], [1603.0, 16.0], [1623.0, 34.300000000000004], [1619.0, 28.2], [1615.0, 23.0], [1663.0, 26.0], [1639.0, 17.0], [1643.0, 20.0], [1715.0, 43.0], [1667.0, 30.0], [1695.0, 51.0], [1671.0, 34.333333333333336], [1719.0, 36.666666666666664], [1723.0, 39.0], [1699.0, 44.5], [1683.0, 42.0], [1703.0, 44.5], [1707.0, 43.25], [1711.0, 40.0], [1743.0, 20.5], [1731.0, 19.75], [1779.0, 8.8], [1771.0, 6.0], [1791.0, 13.0], [1755.0, 15.857142857142856], [1759.0, 21.625], [1751.0, 27.6], [1747.0, 24.0], [1847.0, 17.8], [1815.0, 32.38461538461538], [1811.0, 35.5], [1851.0, 31.0], [1843.0, 28.5], [1819.0, 24.076923076923077], [1823.0, 14.0], [1827.0, 13.0], [1831.0, 18.0], [1835.0, 20.333333333333332], [1839.0, 24.0], [1867.0, 10.0], [1879.0, 13.0], [1931.0, 37.5], [1971.0, 35.5], [1951.0, 34.333333333333336], [1927.0, 34.666666666666664], [1923.0, 33.0], [1959.0, 30.0], [1939.0, 34.0], [1963.0, 32.0], [1979.0, 30.0], [1983.0, 18.0], [1995.0, 23.0], [2023.0, 35.0], [2011.0, 30.0], [2019.0, 35.0], [2043.0, 42.0], [2047.0, 39.0], [2054.0, 43.0], [2086.0, 55.0], [2078.0, 53.0], [2094.0, 56.0], [2158.0, 53.0], [2166.0, 56.0], [2174.0, 62.75], [2134.0, 30.0], [2198.0, 48.2], [2190.0, 45.666666666666664], [2182.0, 57.333333333333336], [2238.0, 34.0], [2230.0, 40.333333333333336], [2222.0, 60.0], [2206.0, 55.0], [2278.0, 29.25], [2254.0, 44.666666666666664], [2270.0, 44.333333333333336], [2214.0, 59.0], [2310.0, 49.166666666666664], [2318.0, 49.0], [2350.0, 36.0], [2326.0, 47.0], [2334.0, 49.0], [2430.0, 104.0], [2342.0, 48.0], [2534.0, 154.0], [2558.0, 164.5], [2510.0, 150.0], [2518.0, 153.0], [2478.0, 131.0], [2470.0, 126.0], [2462.0, 121.0], [2678.0, 130.5], [2654.0, 134.33333333333334], [2662.0, 132.0], [2646.0, 138.33333333333334], [2606.0, 125.5], [2590.0, 120.0], [2574.0, 148.0], [2670.0, 6.833333333333333], [2798.0, 154.5], [2814.0, 131.5], [2806.0, 151.0], [2766.0, 143.25], [2758.0, 141.5], [2726.0, 128.5], [2734.0, 131.0], [2718.0, 125.83333333333333], [2710.0, 133.0], [2846.0, 122.75], [2926.0, 167.0], [2942.0, 169.5], [2918.0, 168.0], [2910.0, 164.75], [2878.0, 141.0], [2870.0, 140.0], [2862.0, 135.0], [2854.0, 125.625], [2838.0, 123.77777777777777], [2830.0, 126.77777777777777], [2822.0, 130.0], [3046.0, 93.75], [3062.0, 31.333333333333332], [3070.0, 25.8], [3054.0, 48.8], [3038.0, 93.5], [3030.0, 111.0], [2998.0, 132.0], [2990.0, 161.0], [2974.0, 199.0], [2958.0, 163.0], [2950.0, 168.14285714285714], [2966.0, 168.0], [3182.0, 37.5], [3190.0, 46.0], [3174.0, 28.0], [3086.0, 23.0], [3142.0, 39.0], [3158.0, 47.0], [3150.0, 46.0], [3134.0, 33.0], [3126.0, 25.11111111111111], [3118.0, 42.25], [3326.0, 35.6], [3294.0, 9.928571428571427], [3302.0, 20.0], [3286.0, 71.66666666666667], [3318.0, 29.0], [3270.0, 24.0], [3278.0, 32.0], [3254.0, 26.0], [3214.0, 28.333333333333332], [3206.0, 31.0], [3222.0, 21.0], [3246.0, 40.0], [3446.0, 24.0], [3454.0, 33.0], [3430.0, 15.4], [3438.0, 16.0], [3422.0, 41.25], [3414.0, 36.0], [3406.0, 28.0], [3358.0, 33.5], [3334.0, 13.454545454545455], [3342.0, 32.0], [3350.0, 33.0], [3382.0, 55.0], [3374.0, 14.857142857142858], [3366.0, 40.0], [3566.0, 21.0], [3582.0, 30.6], [3542.0, 35.0], [3550.0, 7.0], [3510.0, 33.333333333333336], [3494.0, 27.0], [3502.0, 37.0], [3470.0, 11.0], [3462.0, 30.0], [3702.0, 30.5], [3694.0, 28.333333333333332], [3662.0, 7.0], [3654.0, 31.0], [3646.0, 37.0], [3630.0, 21.0], [3622.0, 16.0], [3590.0, 22.727272727272727], [3598.0, 13.0], [3830.0, 29.333333333333332], [3838.0, 31.333333333333332], [3814.0, 34.5], [3806.0, 42.333333333333336], [3790.0, 35.375], [3798.0, 31.0], [3782.0, 43.0], [3774.0, 51.0], [3766.0, 9.75], [3726.0, 16.333333333333332], [3734.0, 19.0], [3942.0, 32.0], [3966.0, 56.86363636363637], [3950.0, 38.6], [3934.0, 24.666666666666668], [3918.0, 4.0], [3902.0, 27.0], [3878.0, 19.0], [3870.0, 32.0], [3846.0, 7.0], [4086.0, 75.66666666666666], [4094.0, 69.5], [3998.0, 27.5], [4054.0, 49.0], [4014.0, 92.0], [4006.0, 36.333333333333336], [4046.0, 40.0], [3974.0, 20.285714285714285], [3990.0, 23.0], [4316.0, 41.5], [4332.0, 36.0], [4156.0, 30.0], [4140.0, 21.0], [4124.0, 40.0], [4108.0, 37.5], [4252.0, 19.666666666666668], [4348.0, 11.227272727272728], [4396.0, 30.0], [4476.0, 8.0], [4492.0, 19.0], [4604.0, 21.0], [4460.0, 10.0], [4364.0, 56.0], [4380.0, 37.5], [4444.0, 26.166666666666668], [4428.0, 15.0], [4412.0, 17.0], [4572.0, 15.5], [4668.0, 64.75], [4636.0, 30.5], [4780.0, 84.0], [4732.0, 56.0], [4796.0, 24.54166666666666], [4764.0, 19.0], [4700.0, 55.5], [4684.0, 66.0], [4620.0, 49.2], [4349.0, 42.5], [4317.0, 34.4], [4237.0, 28.6], [4157.0, 28.5], [4125.0, 37.666666666666664], [4109.0, 39.0], [4205.0, 35.0], [4269.0, 12.0], [4285.0, 28.0], [4573.0, 17.941176470588232], [4413.0, 14.333333333333332], [4493.0, 18.0], [4525.0, 11.307692307692307], [4509.0, 15.499999999999998], [4589.0, 20.906976744186046], [4605.0, 22.0], [4461.0, 9.5], [4445.0, 22.5], [4397.0, 33.0], [4381.0, 30.428571428571427], [4621.0, 34.0], [4669.0, 63.42857142857143], [4797.0, 20.723404255319156], [4733.0, 35.5], [4653.0, 80.0], [2151.0, 48.0], [2063.0, 44.0], [2175.0, 61.5], [2159.0, 52.333333333333336], [2055.0, 43.0], [2127.0, 32.5], [2135.0, 33.0], [2191.0, 44.666666666666664], [2183.0, 56.5], [2239.0, 33.0], [2231.0, 40.0], [2199.0, 49.5], [2207.0, 55.0], [2287.0, 35.5], [2303.0, 44.5], [2279.0, 28.5], [2247.0, 39.5], [2271.0, 42.0], [2215.0, 60.0], [2311.0, 47.0], [2343.0, 35.0], [2319.0, 48.0], [2351.0, 35.5], [2335.0, 49.0], [2559.0, 124.0], [2527.0, 156.0], [2519.0, 153.33333333333331], [2503.0, 147.5], [2495.0, 144.0], [2511.0, 151.0], [2479.0, 132.0], [2447.0, 113.0], [2463.0, 122.0], [2671.0, 131.0], [2687.0, 198.0], [2679.0, 199.57142857142858], [2655.0, 136.5], [2647.0, 139.5], [2631.0, 133.0], [2599.0, 123.0], [2615.0, 129.0], [2591.0, 120.0], [2567.0, 155.0], [2607.0, 125.0], [2799.0, 48.57142857142857], [2807.0, 136.66666666666666], [2815.0, 131.0], [2767.0, 148.0], [2735.0, 132.0], [2759.0, 142.0], [2727.0, 129.5], [2703.0, 132.0], [2695.0, 151.0], [2711.0, 130.0], [2719.0, 127.0], [2847.0, 123.0], [2927.0, 78.33333333333333], [2911.0, 165.5], [2919.0, 168.0], [2863.0, 134.0], [2879.0, 141.0], [2887.0, 144.0], [2855.0, 127.0], [2839.0, 123.66666666666667], [2831.0, 125.0], [2823.0, 129.0], [2975.0, 168.5], [3015.0, 99.88235294117648], [3055.0, 54.625], [3031.0, 110.4], [2999.0, 131.8], [3007.0, 139.0], [2991.0, 152.66666666666666], [2983.0, 167.0], [2967.0, 169.0], [2959.0, 164.0], [3199.0, 26.333333333333332], [3191.0, 16.0], [3159.0, 45.0], [3127.0, 28.0], [3119.0, 39.5], [3087.0, 24.5], [3111.0, 51.5], [3103.0, 42.0], [3311.0, 25.0], [3327.0, 36.0], [3319.0, 31.0], [3287.0, 72.33333333333333], [3279.0, 32.5], [3255.0, 26.0], [3247.0, 41.333333333333336], [3215.0, 30.0], [3223.0, 21.0], [3207.0, 33.54545454545454], [3239.0, 32.0], [3455.0, 33.2], [3447.0, 25.0], [3415.0, 37.666666666666664], [3407.0, 29.333333333333332], [3399.0, 35.14285714285714], [3383.0, 55.8], [3375.0, 50.0], [3367.0, 40.0], [3335.0, 35.666666666666664], [3575.0, 27.0], [3543.0, 36.2], [3559.0, 12.0], [3463.0, 23.666666666666668], [3551.0, 7.0], [3535.0, 29.25], [3511.0, 24.0], [3527.0, 24.0], [3503.0, 38.0], [3495.0, 28.333333333333332], [3695.0, 29.0], [3703.0, 28.733333333333334], [3711.0, 18.5], [3679.0, 19.666666666666668], [3687.0, 21.0], [3615.0, 15.0], [3607.0, 13.0], [3655.0, 27.444444444444436], [3647.0, 35.666666666666664], [3631.0, 20.5], [3623.0, 9.875], [3831.0, 30.0], [3839.0, 24.0], [3823.0, 22.0], [3815.0, 29.333333333333332], [3791.0, 28.6], [3799.0, 32.5], [3783.0, 42.333333333333336], [3775.0, 52.0], [3735.0, 20.0], [3727.0, 8.4], [3767.0, 40.0], [3967.0, 67.0], [3951.0, 38.5], [3871.0, 33.5], [3863.0, 27.0], [3911.0, 8.25], [3927.0, 14.5], [3935.0, 26.0], [3919.0, 5.0], [3903.0, 28.0], [3895.0, 19.5], [3879.0, 19.0], [4071.0, 56.0], [4095.0, 62.0], [4055.0, 48.333333333333336], [4079.0, 60.0], [4063.0, 52.0], [4047.0, 42.0], [4023.0, 21.0], [3991.0, 23.5], [3983.0, 20.0], [3975.0, 12.0], [4302.0, 43.0], [4318.0, 33.5], [4350.0, 43.0], [4238.0, 30.0], [4206.0, 44.20370370370369], [4158.0, 23.833333333333332], [4126.0, 16.037037037037038], [4110.0, 39.5], [4174.0, 16.0], [4286.0, 28.5], [4254.0, 18.857142857142858], [4478.0, 10.0], [4494.0, 19.0], [4462.0, 9.0], [4366.0, 57.0], [4398.0, 32.75], [4382.0, 28.0], [4446.0, 16.4], [4414.0, 14.4], [4590.0, 21.0], [4670.0, 39.0], [4686.0, 58.0], [4798.0, 24.375], [4766.0, 48.5], [4750.0, 26.25], [4734.0, 33.875], [4622.0, 107.70714285714286], [4718.0, 42.0], [4702.0, 54.333333333333336], [4782.0, 16.0], [4319.0, 28.5], [4351.0, 44.0], [4239.0, 30.0], [4335.0, 35.0], [4303.0, 43.333333333333336], [4159.0, 18.333333333333332], [4127.0, 31.5], [4111.0, 39.5], [4207.0, 32.5], [4175.0, 18.0], [4287.0, 17.59375], [4255.0, 13.714285714285714], [4383.0, 24.75], [4495.0, 19.0], [4607.0, 23.0], [4479.0, 13.212121212121211], [4463.0, 9.0], [4431.0, 16.5], [4415.0, 9.666666666666666], [4399.0, 33.0], [4783.0, 14.333333333333332], [4735.0, 32.5], [4719.0, 42.333333333333336], [4703.0, 53.0], [4671.0, 74.25], [4655.0, 78.0], [4623.0, 144.5]], "isOverall": false, "label": "AuthzUser", "isController": false}, {"data": [[4773.1941515672015, 356.8650932165745]], "isOverall": false, "label": "AuthzUser-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 57967.46666666667, "minX": 1.6334184E12, "maxY": 8428262.633333333, "series": [{"data": [[1.63341858E12, 7352268.9], [1.63341888E12, 7914229.233333333], [1.63341894E12, 7895141.066666666], [1.63341924E12, 7852829.083333333], [1.63341864E12, 8428262.633333333], [1.6334193E12, 5731587.1], [1.6334187E12, 7976291.716666667], [1.633419E12, 7926596.35], [1.63341906E12, 7895677.716666667], [1.6334184E12, 2777445.05], [1.63341846E12, 8238097.983333333], [1.63341876E12, 7896417.95], [1.63341882E12, 7905189.65], [1.63341912E12, 7911149.233333333], [1.63341918E12, 7914032.7], [1.63341852E12, 7966689.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63341858E12, 154825.7], [1.63341888E12, 166707.75], [1.63341894E12, 166312.51666666666], [1.63341924E12, 165338.35], [1.63341864E12, 177451.41666666666], [1.6334193E12, 120682.55], [1.6334187E12, 167940.76666666666], [1.633419E12, 166974.95], [1.63341906E12, 166229.01666666666], [1.6334184E12, 57967.46666666667], [1.63341846E12, 172404.83333333334], [1.63341876E12, 166382.1], [1.63341882E12, 166512.91666666666], [1.63341912E12, 166526.83333333334], [1.63341918E12, 166596.41666666666], [1.63341852E12, 167434.78333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6334193E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 22.33718391091986, "minX": 1.6334184E12, "maxY": 630.1803823357499, "series": [{"data": [[1.63341858E12, 354.84160284758855], [1.63341888E12, 630.1803823357499], [1.63341894E12, 406.58892440546856], [1.63341924E12, 472.302055451746], [1.63341864E12, 601.1282409222782], [1.6334193E12, 459.3638460296575], [1.6334187E12, 22.985829825317303], [1.633419E12, 22.33718391091986], [1.63341906E12, 600.8546456139198], [1.6334184E12, 365.43527284837563], [1.63341846E12, 587.4543849795307], [1.63341876E12, 121.79653049616883], [1.63341882E12, 305.30970330129503], [1.63341912E12, 461.9477185358481], [1.63341918E12, 231.83780803608263], [1.63341852E12, 80.0871448486461]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6334193E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 22.159790635261807, "minX": 1.6334184E12, "maxY": 629.9589782118736, "series": [{"data": [[1.63341858E12, 354.526390536802], [1.63341888E12, 629.9589782118736], [1.63341894E12, 406.3770187270931], [1.63341924E12, 471.95500227261135], [1.63341864E12, 600.7526625362722], [1.6334193E12, 458.9756451947642], [1.6334187E12, 22.68954887467294], [1.633419E12, 22.159790635261807], [1.63341906E12, 600.4831304522529], [1.6334184E12, 364.6617346210568], [1.63341846E12, 587.0569525796325], [1.63341876E12, 121.65848639967864], [1.63341882E12, 305.0951776013367], [1.63341912E12, 461.536703994648], [1.63341918E12, 231.48234901010628], [1.63341852E12, 79.7146840148695]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6334193E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.06617520194494475, "minX": 1.6334184E12, "maxY": 0.7999904847994567, "series": [{"data": [[1.63341858E12, 0.21358717146658057], [1.63341888E12, 0.2706402871692107], [1.63341894E12, 0.09718340501732087], [1.63341924E12, 0.31777856337222216], [1.63341864E12, 0.06617520194494475], [1.6334193E12, 0.3762079383749595], [1.6334187E12, 0.1578938645629629], [1.633419E12, 0.07214415495657592], [1.63341906E12, 0.10019590442542889], [1.6334184E12, 0.7999904847994567], [1.63341846E12, 0.10426061140977219], [1.63341876E12, 0.5976780755461858], [1.63341882E12, 0.4258587547012126], [1.63341912E12, 0.09450108641149894], [1.63341918E12, 0.23348091220449568], [1.63341852E12, 0.09273765268189076]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6334193E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.6334184E12, "maxY": 3087.0, "series": [{"data": [[1.63341858E12, 3087.0], [1.63341888E12, 1696.0], [1.63341894E12, 1703.0], [1.63341924E12, 1796.0], [1.63341864E12, 1722.0], [1.6334193E12, 1695.0], [1.6334187E12, 195.0], [1.633419E12, 119.0], [1.63341906E12, 2226.0], [1.6334184E12, 1991.0], [1.63341846E12, 1752.0], [1.63341876E12, 1982.0], [1.63341882E12, 1615.0], [1.63341912E12, 1843.0], [1.63341918E12, 1678.0], [1.63341852E12, 1120.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63341858E12, 2088.9900000000016], [1.63341888E12, 1638.0], [1.63341894E12, 1195.0], [1.63341924E12, 1634.9900000000016], [1.63341864E12, 1617.0], [1.6334193E12, 1646.0], [1.6334187E12, 126.0], [1.633419E12, 46.0], [1.63341906E12, 1712.0], [1.6334184E12, 1901.9800000000032], [1.63341846E12, 1622.0], [1.63341876E12, 1493.0], [1.63341882E12, 1474.0], [1.63341912E12, 1283.0], [1.63341918E12, 41.0], [1.63341852E12, 43.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63341858E12, 3083.998418197629], [1.63341888E12, 1694.9984181976288], [1.63341894E12, 1315.9973636627146], [1.63341924E12, 1686.0], [1.63341864E12, 1661.0], [1.6334193E12, 1693.9989454650859], [1.6334187E12, 192.0], [1.633419E12, 72.0], [1.63341906E12, 1755.9989454650859], [1.6334184E12, 1989.999472732543], [1.63341846E12, 1691.9989454650859], [1.63341876E12, 1970.0], [1.63341882E12, 1558.0], [1.63341912E12, 1433.9984181976288], [1.63341918E12, 70.0], [1.63341852E12, 113.0]], "isOverall": false, "label": "99.99th percentile", "isController": false}, {"data": [[1.63341858E12, 2230.0], [1.63341888E12, 1687.9993051910387], [1.63341894E12, 1291.0], [1.63341924E12, 1678.9993051910387], [1.63341864E12, 1658.0], [1.6334193E12, 1683.9993051910387], [1.6334187E12, 179.99930519103873], [1.633419E12, 71.0], [1.63341906E12, 1751.0], [1.6334184E12, 1982.9993051910387], [1.63341846E12, 1678.0], [1.63341876E12, 1935.9993051910387], [1.63341882E12, 1552.0], [1.63341912E12, 1424.0], [1.63341918E12, 69.0], [1.63341852E12, 110.99583114623238]], "isOverall": false, "label": "99.9th percentile", "isController": false}, {"data": [[1.63341858E12, 3.0], [1.63341888E12, 5.0], [1.63341894E12, 5.0], [1.63341924E12, 4.0], [1.63341864E12, 5.0], [1.6334193E12, 5.0], [1.6334187E12, 4.0], [1.633419E12, 4.0], [1.63341906E12, 4.0], [1.6334184E12, 4.0], [1.63341846E12, 4.0], [1.63341876E12, 3.0], [1.63341882E12, 5.0], [1.63341912E12, 5.0], [1.63341918E12, 4.0], [1.63341852E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63341858E12, 751.0], [1.63341888E12, 624.0], [1.63341894E12, 26.0], [1.63341924E12, 728.0], [1.63341864E12, 30.0], [1.6334193E12, 119.0], [1.6334187E12, 23.0], [1.633419E12, 22.0], [1.63341906E12, 634.0], [1.6334184E12, 119.5], [1.63341846E12, 610.5], [1.63341876E12, 29.0], [1.63341882E12, 533.0], [1.63341912E12, 23.0], [1.63341918E12, 22.0], [1.63341852E12, 22.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6334193E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 2.0, "maxY": 1518.5, "series": [{"data": [[2.0, 10.0], [21.0, 12.0], [41.0, 21.0], [44.0, 16.0], [53.0, 22.0], [74.0, 34.5], [85.0, 7.0], [94.0, 24.5], [93.0, 22.0], [98.0, 17.0], [135.0, 24.0], [133.0, 74.0], [154.0, 24.5], [175.0, 81.0], [186.0, 24.5], [185.0, 146.0], [191.0, 18.0], [231.0, 22.0], [241.0, 21.0], [270.0, 9.0], [281.0, 23.0], [287.0, 20.0], [274.0, 18.0], [290.0, 44.0], [296.0, 184.0], [300.0, 19.0], [305.0, 21.0], [308.0, 29.0], [334.0, 20.0], [330.0, 185.0], [329.0, 20.0], [348.0, 130.0], [383.0, 112.0], [371.0, 21.0], [368.0, 32.0], [376.0, 24.0], [386.0, 119.0], [385.0, 21.0], [404.0, 24.0], [401.0, 133.0], [428.0, 19.0], [438.0, 24.0], [443.0, 22.0], [441.0, 23.0], [455.0, 20.0], [458.0, 22.0], [482.0, 21.0], [505.0, 25.0], [497.0, 23.0], [510.0, 14.0], [525.0, 21.0], [534.0, 161.0], [524.0, 134.0], [555.0, 22.0], [558.0, 21.0], [570.0, 23.0], [561.0, 24.0], [575.0, 23.0], [549.0, 22.0], [603.0, 955.0], [594.0, 237.0], [626.0, 23.0], [615.0, 20.0], [632.0, 24.5], [666.0, 177.0], [671.0, 23.0], [725.0, 24.0], [715.0, 173.0], [761.0, 21.0], [775.0, 22.0], [778.0, 23.0], [798.0, 184.5], [848.0, 240.5], [923.0, 22.0], [915.0, 21.0], [924.0, 289.5], [927.0, 279.0], [910.0, 187.0], [911.0, 22.0], [928.0, 22.0], [959.0, 21.0], [991.0, 22.0], [984.0, 22.0], [985.0, 22.0], [986.0, 22.5], [972.0, 23.0], [971.0, 23.0], [975.0, 21.0], [965.0, 23.0], [964.0, 23.0], [967.0, 23.0], [960.0, 23.0], [973.0, 21.0], [980.0, 22.0], [987.0, 22.0], [979.0, 22.0], [990.0, 22.0], [989.0, 22.0], [988.0, 22.0], [983.0, 22.0], [978.0, 22.0], [976.0, 22.0], [977.0, 22.0], [981.0, 22.0], [982.0, 22.0], [999.0, 22.0], [992.0, 23.0], [1002.0, 22.0], [1001.0, 22.0], [1009.0, 22.0], [1000.0, 22.0], [1011.0, 21.0], [1013.0, 22.0], [1014.0, 21.0], [1015.0, 21.0], [1012.0, 22.0], [1010.0, 22.0], [1008.0, 22.0], [1020.0, 21.0], [1018.0, 23.0], [1017.0, 20.0], [1016.0, 22.0], [1003.0, 22.0], [1004.0, 22.0], [1005.0, 22.0], [1007.0, 24.0], [1006.0, 22.0], [996.0, 22.0], [993.0, 22.0], [994.0, 22.0], [995.0, 22.0], [998.0, 22.0], [997.0, 22.0], [1044.0, 22.0], [1060.0, 23.0], [1030.0, 239.0], [1026.0, 23.0], [1036.0, 21.0], [1047.0, 375.0], [1078.0, 23.0], [1125.0, 21.0], [1089.0, 276.0], [1151.0, 203.0], [1119.0, 25.0], [1106.0, 22.0], [1229.0, 312.0], [1285.0, 22.0], [1287.0, 28.0], [1342.0, 70.5], [1405.0, 30.0], [1387.0, 312.0], [1386.0, 390.0], [1384.0, 33.0], [1399.0, 31.0], [1357.0, 369.0], [1446.0, 357.0], [1449.0, 29.0], [1455.0, 36.0], [1433.0, 103.0], [1509.0, 153.0], [1480.0, 1275.5], [1488.0, 309.0], [1517.0, 301.0], [1505.0, 344.0], [1472.0, 35.0], [1556.0, 44.0], [1645.0, 1469.0], [1613.0, 118.0], [1610.0, 222.0], [1618.0, 1073.0], [1650.0, 120.0], [1663.0, 119.0], [1646.0, 112.0], [1714.0, 160.0], [1678.0, 119.5], [1686.0, 380.0], [1709.0, 143.0], [1703.0, 374.0], [1706.0, 774.0], [1738.0, 142.0], [1783.0, 397.0], [1741.0, 132.0], [1772.0, 314.0], [1750.0, 148.0], [1745.0, 189.0], [1815.0, 344.0], [1821.0, 200.0], [1796.0, 237.0], [1831.0, 273.0], [1801.0, 177.0], [1905.0, 465.0], [1872.0, 429.0], [1868.0, 260.5], [1908.0, 229.5], [1901.0, 306.0], [1919.0, 253.0], [1893.0, 393.0], [1878.0, 321.0], [1920.0, 547.5], [1935.0, 373.0], [2046.0, 123.0], [2020.0, 34.0], [2023.0, 394.0], [2035.0, 366.0], [2103.0, 390.0], [2098.0, 49.0], [2062.0, 700.0], [2087.0, 1494.0], [2111.0, 521.0], [2167.0, 530.0], [2100.0, 484.0], [2173.0, 448.0], [2056.0, 379.0], [2246.0, 517.5], [2185.0, 565.0], [2294.0, 451.0], [2283.0, 444.0], [2400.0, 522.5], [2336.0, 440.0], [2406.0, 608.5], [2347.0, 310.0], [2359.0, 614.0], [2366.0, 623.5], [2335.0, 782.0], [2390.0, 1433.0], [2386.0, 1088.0], [2441.0, 652.0], [2544.0, 1164.0], [2509.0, 1039.0], [2517.0, 742.0], [2465.0, 432.0], [2477.0, 500.0], [2480.0, 720.0], [2537.0, 1067.0], [2487.0, 480.0], [2488.0, 1459.0], [2551.0, 780.0], [2549.0, 1512.0], [2462.0, 575.5], [2662.0, 984.0], [2644.0, 357.0], [2648.0, 1025.5], [2658.0, 1384.5], [2632.0, 890.0], [2671.0, 681.0], [2626.0, 635.5], [2674.0, 1275.0], [2591.0, 1265.0], [2637.0, 1188.5], [2595.0, 656.0], [2594.0, 993.5], [2573.0, 555.0], [2706.0, 1131.0], [2726.0, 853.0], [2742.0, 755.0], [2749.0, 1029.0], [2730.0, 672.0], [2779.0, 1204.0], [2777.0, 893.0], [2703.0, 1043.0], [2702.0, 1210.0], [2788.0, 685.0], [2718.0, 850.0], [2766.0, 1130.0], [2770.0, 821.0], [2776.0, 1117.5], [2798.0, 1081.5], [2811.0, 935.0], [2793.0, 1248.0], [2716.0, 680.0], [2708.0, 640.0], [2699.0, 1191.0], [2725.0, 908.0], [2722.0, 1201.0], [2923.0, 1207.0], [2941.0, 994.0], [2875.0, 935.0], [2872.0, 1290.0], [2822.0, 1064.0], [2820.0, 976.0], [2816.0, 1306.5], [2849.0, 1256.0], [2862.0, 1518.5], [2869.0, 741.0], [2865.0, 1275.0], [2855.0, 1352.0], [2871.0, 1323.0], [2886.0, 1325.0], [2943.0, 1345.0], [2929.0, 1347.0], [2925.0, 1042.0], [2926.0, 1035.5], [2928.0, 853.0], [2824.0, 1228.0], [2908.0, 1031.0], [2902.0, 925.0], [2842.0, 1292.0], [2834.0, 765.0], [2967.0, 1314.0], [3017.0, 1193.0], [2990.0, 1339.0], [3021.0, 922.0], [2988.0, 653.0], [2982.0, 1374.0], [2975.0, 671.0], [3025.0, 1395.0], [2948.0, 991.5], [3148.0, 1156.5], [3135.0, 1153.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3148.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 2.0, "maxY": 1517.5, "series": [{"data": [[2.0, 10.0], [21.0, 12.0], [41.0, 21.0], [44.0, 16.0], [53.0, 21.0], [74.0, 34.0], [85.0, 7.0], [94.0, 24.5], [93.0, 22.0], [98.0, 17.0], [135.0, 24.0], [133.0, 74.0], [154.0, 24.0], [175.0, 81.0], [186.0, 24.0], [185.0, 145.0], [191.0, 17.0], [231.0, 22.0], [241.0, 21.0], [270.0, 8.0], [281.0, 23.0], [287.0, 20.0], [274.0, 17.0], [290.0, 44.0], [296.0, 184.0], [300.0, 18.0], [305.0, 20.0], [308.0, 29.0], [334.0, 19.0], [330.0, 185.0], [329.0, 20.0], [348.0, 130.0], [383.0, 111.0], [371.0, 20.0], [368.0, 31.0], [376.0, 24.0], [386.0, 118.0], [385.0, 21.0], [404.0, 24.0], [401.0, 132.0], [428.0, 19.0], [438.0, 23.0], [443.0, 22.0], [441.0, 22.0], [455.0, 20.0], [458.0, 22.0], [482.0, 20.0], [505.0, 25.0], [497.0, 23.0], [510.0, 14.0], [525.0, 21.0], [534.0, 161.0], [524.0, 133.0], [555.0, 22.0], [558.0, 20.0], [570.0, 23.0], [561.0, 23.0], [575.0, 23.0], [549.0, 22.0], [603.0, 954.0], [594.0, 236.0], [626.0, 23.0], [615.0, 20.0], [632.0, 24.0], [666.0, 176.0], [671.0, 22.0], [725.0, 24.0], [715.0, 173.0], [761.0, 21.0], [775.0, 22.0], [778.0, 23.0], [798.0, 183.5], [848.0, 240.0], [923.0, 21.0], [915.0, 21.0], [924.0, 289.5], [927.0, 279.0], [910.0, 187.0], [911.0, 21.0], [928.0, 22.0], [959.0, 21.0], [991.0, 22.0], [984.0, 22.0], [985.0, 22.0], [986.0, 22.0], [972.0, 23.0], [971.0, 23.0], [975.0, 21.0], [965.0, 23.0], [964.0, 22.0], [967.0, 22.0], [960.0, 23.0], [973.0, 21.0], [980.0, 22.0], [987.0, 22.0], [979.0, 21.0], [990.0, 21.0], [989.0, 21.0], [988.0, 22.0], [983.0, 22.0], [978.0, 22.0], [976.0, 21.0], [977.0, 22.0], [981.0, 22.0], [982.0, 22.0], [999.0, 21.0], [992.0, 23.0], [1002.0, 22.0], [1001.0, 21.0], [1009.0, 22.0], [1000.0, 22.0], [1011.0, 21.0], [1013.0, 21.0], [1014.0, 21.0], [1015.0, 21.0], [1012.0, 22.0], [1010.0, 22.0], [1008.0, 22.0], [1020.0, 21.0], [1018.0, 23.0], [1017.0, 20.0], [1016.0, 22.0], [1003.0, 22.0], [1004.0, 22.0], [1005.0, 22.0], [1007.0, 23.0], [1006.0, 21.0], [996.0, 21.0], [993.0, 21.0], [994.0, 21.0], [995.0, 22.0], [998.0, 22.0], [997.0, 21.0], [1044.0, 22.0], [1060.0, 23.0], [1030.0, 239.0], [1026.0, 23.0], [1036.0, 21.0], [1047.0, 375.0], [1078.0, 23.0], [1125.0, 21.0], [1089.0, 275.0], [1151.0, 203.0], [1119.0, 25.0], [1106.0, 21.0], [1229.0, 310.0], [1285.0, 22.0], [1287.0, 27.0], [1342.0, 70.0], [1405.0, 30.0], [1387.0, 312.0], [1386.0, 389.5], [1384.0, 33.0], [1399.0, 31.0], [1357.0, 369.0], [1446.0, 357.0], [1449.0, 29.0], [1455.0, 36.0], [1433.0, 103.0], [1509.0, 153.0], [1480.0, 1275.5], [1488.0, 309.0], [1517.0, 300.0], [1505.0, 344.0], [1472.0, 35.0], [1556.0, 43.0], [1645.0, 1468.0], [1613.0, 117.0], [1610.0, 221.5], [1618.0, 1073.0], [1650.0, 120.0], [1663.0, 119.0], [1646.0, 112.0], [1714.0, 160.0], [1678.0, 118.0], [1686.0, 379.5], [1709.0, 143.0], [1703.0, 374.0], [1706.0, 774.0], [1738.0, 141.0], [1783.0, 397.0], [1741.0, 131.0], [1772.0, 313.0], [1750.0, 147.5], [1745.0, 189.0], [1815.0, 344.0], [1821.0, 200.0], [1796.0, 237.0], [1831.0, 273.0], [1801.0, 177.0], [1905.0, 449.0], [1872.0, 429.0], [1868.0, 260.0], [1908.0, 229.0], [1901.0, 306.0], [1919.0, 252.0], [1893.0, 392.0], [1878.0, 320.5], [1920.0, 547.0], [1935.0, 373.0], [2046.0, 123.0], [2020.0, 34.0], [2023.0, 393.0], [2035.0, 365.0], [2103.0, 390.0], [2098.0, 49.0], [2062.0, 699.0], [2087.0, 1494.0], [2111.0, 521.0], [2167.0, 530.0], [2100.0, 483.5], [2173.0, 448.0], [2056.0, 378.5], [2246.0, 517.5], [2185.0, 565.0], [2294.0, 451.0], [2283.0, 443.0], [2400.0, 522.0], [2336.0, 440.0], [2406.0, 608.0], [2347.0, 310.0], [2359.0, 614.0], [2366.0, 623.0], [2335.0, 781.0], [2390.0, 1433.0], [2386.0, 1088.0], [2441.0, 652.0], [2544.0, 1163.5], [2509.0, 1039.0], [2517.0, 742.0], [2465.0, 432.0], [2477.0, 499.0], [2480.0, 720.0], [2537.0, 1067.0], [2487.0, 479.0], [2488.0, 1458.0], [2551.0, 779.0], [2549.0, 1511.0], [2462.0, 575.5], [2662.0, 983.5], [2644.0, 356.0], [2648.0, 1025.0], [2658.0, 1384.0], [2632.0, 890.0], [2671.0, 681.0], [2626.0, 635.0], [2674.0, 1274.5], [2591.0, 1265.0], [2637.0, 1187.0], [2595.0, 655.0], [2594.0, 993.0], [2573.0, 554.0], [2706.0, 1131.0], [2726.0, 853.0], [2742.0, 754.5], [2749.0, 1028.0], [2730.0, 672.0], [2779.0, 1203.0], [2777.0, 892.0], [2703.0, 1043.0], [2702.0, 1210.0], [2788.0, 684.5], [2718.0, 849.5], [2766.0, 1130.0], [2770.0, 821.0], [2776.0, 1117.0], [2798.0, 1081.0], [2811.0, 934.0], [2793.0, 1247.0], [2716.0, 680.0], [2708.0, 640.0], [2699.0, 1191.0], [2725.0, 907.0], [2722.0, 1200.0], [2923.0, 1207.0], [2941.0, 994.0], [2875.0, 935.0], [2872.0, 1290.0], [2822.0, 1063.0], [2820.0, 975.5], [2816.0, 1306.0], [2849.0, 1256.0], [2862.0, 1517.5], [2869.0, 740.0], [2865.0, 1275.0], [2855.0, 1352.0], [2871.0, 1323.0], [2886.0, 1325.0], [2943.0, 1344.0], [2929.0, 1347.0], [2925.0, 1042.0], [2926.0, 1035.0], [2928.0, 853.0], [2824.0, 1227.0], [2908.0, 1031.0], [2902.0, 924.0], [2842.0, 1291.5], [2834.0, 764.5], [2967.0, 1313.0], [3017.0, 1193.0], [2990.0, 1339.0], [3021.0, 922.0], [2988.0, 652.5], [2982.0, 1374.0], [2975.0, 671.0], [3025.0, 1395.0], [2948.0, 991.0], [3148.0, 1156.5], [3135.0, 1153.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3148.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 350.31666666666666, "minX": 1.6334184E12, "maxY": 1062.5833333333333, "series": [{"data": [[1.63341858E12, 927.1], [1.63341888E12, 998.8], [1.63341894E12, 995.7333333333333], [1.63341924E12, 990.55], [1.63341864E12, 1062.5833333333333], [1.6334193E12, 722.15], [1.6334187E12, 1006.4166666666666], [1.633419E12, 999.2833333333333], [1.63341906E12, 995.8666666666667], [1.6334184E12, 350.31666666666666], [1.63341846E12, 1038.5833333333333], [1.63341876E12, 996.3166666666667], [1.63341882E12, 996.5333333333333], [1.63341912E12, 997.4166666666666], [1.63341918E12, 996.7666666666667], [1.63341852E12, 1004.2666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6334193E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 350.31666666666666, "minX": 1.6334184E12, "maxY": 1062.5833333333333, "series": [{"data": [[1.63341858E12, 927.1], [1.63341888E12, 998.25], [1.63341894E12, 995.8833333333333], [1.63341924E12, 990.05], [1.63341864E12, 1062.5833333333333], [1.6334193E12, 722.65], [1.6334187E12, 1005.6333333333333], [1.633419E12, 999.85], [1.63341906E12, 995.3833333333333], [1.6334184E12, 350.31666666666666], [1.63341846E12, 1038.5833333333333], [1.63341876E12, 996.3], [1.63341882E12, 997.0833333333334], [1.63341912E12, 997.1666666666666], [1.63341918E12, 997.5833333333334], [1.63341852E12, 1004.2666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6334193E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 350.31666666666666, "minX": 1.6334184E12, "maxY": 1062.5833333333333, "series": [{"data": [[1.63341858E12, 927.1], [1.63341888E12, 998.25], [1.63341894E12, 995.8833333333333], [1.63341924E12, 990.05], [1.63341864E12, 1062.5833333333333], [1.6334193E12, 722.65], [1.6334187E12, 1005.6333333333333], [1.633419E12, 999.85], [1.63341906E12, 995.3833333333333], [1.6334184E12, 350.31666666666666], [1.63341846E12, 1038.5833333333333], [1.63341876E12, 996.3], [1.63341882E12, 997.0833333333334], [1.63341912E12, 997.1666666666666], [1.63341918E12, 997.5833333333334], [1.63341852E12, 1004.2666666666667]], "isOverall": false, "label": "AuthzUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6334193E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 350.31666666666666, "minX": 1.6334184E12, "maxY": 1062.5833333333333, "series": [{"data": [[1.63341858E12, 927.1], [1.63341888E12, 998.25], [1.63341894E12, 995.8833333333333], [1.63341924E12, 990.05], [1.63341864E12, 1062.5833333333333], [1.6334193E12, 722.65], [1.6334187E12, 1005.6333333333333], [1.633419E12, 999.85], [1.63341906E12, 995.3833333333333], [1.6334184E12, 350.31666666666666], [1.63341846E12, 1038.5833333333333], [1.63341876E12, 996.3], [1.63341882E12, 997.0833333333334], [1.63341912E12, 997.1666666666666], [1.63341918E12, 997.5833333333334], [1.63341852E12, 1004.2666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6334193E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

