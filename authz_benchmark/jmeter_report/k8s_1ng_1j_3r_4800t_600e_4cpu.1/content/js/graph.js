/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 4931.0, "series": [{"data": [[0.0, 5.0], [0.1, 19.0], [0.2, 20.0], [0.3, 21.0], [0.4, 22.0], [0.5, 23.0], [0.6, 23.0], [0.7, 23.0], [0.8, 24.0], [0.9, 24.0], [1.0, 24.0], [1.1, 25.0], [1.2, 25.0], [1.3, 25.0], [1.4, 26.0], [1.5, 26.0], [1.6, 26.0], [1.7, 26.0], [1.8, 26.0], [1.9, 27.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 28.0], [2.5, 28.0], [2.6, 28.0], [2.7, 28.0], [2.8, 28.0], [2.9, 28.0], [3.0, 29.0], [3.1, 29.0], [3.2, 29.0], [3.3, 29.0], [3.4, 29.0], [3.5, 29.0], [3.6, 30.0], [3.7, 30.0], [3.8, 30.0], [3.9, 30.0], [4.0, 30.0], [4.1, 30.0], [4.2, 30.0], [4.3, 30.0], [4.4, 31.0], [4.5, 31.0], [4.6, 31.0], [4.7, 31.0], [4.8, 31.0], [4.9, 31.0], [5.0, 31.0], [5.1, 31.0], [5.2, 31.0], [5.3, 32.0], [5.4, 32.0], [5.5, 32.0], [5.6, 32.0], [5.7, 32.0], [5.8, 32.0], [5.9, 32.0], [6.0, 32.0], [6.1, 33.0], [6.2, 33.0], [6.3, 33.0], [6.4, 33.0], [6.5, 33.0], [6.6, 33.0], [6.7, 33.0], [6.8, 33.0], [6.9, 33.0], [7.0, 33.0], [7.1, 34.0], [7.2, 34.0], [7.3, 34.0], [7.4, 34.0], [7.5, 34.0], [7.6, 34.0], [7.7, 34.0], [7.8, 34.0], [7.9, 34.0], [8.0, 35.0], [8.1, 35.0], [8.2, 35.0], [8.3, 35.0], [8.4, 35.0], [8.5, 35.0], [8.6, 35.0], [8.7, 35.0], [8.8, 35.0], [8.9, 35.0], [9.0, 36.0], [9.1, 36.0], [9.2, 36.0], [9.3, 36.0], [9.4, 36.0], [9.5, 36.0], [9.6, 36.0], [9.7, 36.0], [9.8, 36.0], [9.9, 36.0], [10.0, 37.0], [10.1, 37.0], [10.2, 37.0], [10.3, 37.0], [10.4, 37.0], [10.5, 37.0], [10.6, 37.0], [10.7, 37.0], [10.8, 37.0], [10.9, 37.0], [11.0, 38.0], [11.1, 38.0], [11.2, 38.0], [11.3, 38.0], [11.4, 38.0], [11.5, 38.0], [11.6, 38.0], [11.7, 38.0], [11.8, 38.0], [11.9, 39.0], [12.0, 39.0], [12.1, 39.0], [12.2, 39.0], [12.3, 39.0], [12.4, 39.0], [12.5, 39.0], [12.6, 39.0], [12.7, 39.0], [12.8, 39.0], [12.9, 40.0], [13.0, 40.0], [13.1, 40.0], [13.2, 40.0], [13.3, 40.0], [13.4, 40.0], [13.5, 40.0], [13.6, 40.0], [13.7, 40.0], [13.8, 40.0], [13.9, 41.0], [14.0, 41.0], [14.1, 41.0], [14.2, 41.0], [14.3, 41.0], [14.4, 41.0], [14.5, 41.0], [14.6, 41.0], [14.7, 41.0], [14.8, 42.0], [14.9, 42.0], [15.0, 42.0], [15.1, 42.0], [15.2, 42.0], [15.3, 42.0], [15.4, 42.0], [15.5, 42.0], [15.6, 42.0], [15.7, 42.0], [15.8, 42.0], [15.9, 43.0], [16.0, 43.0], [16.1, 43.0], [16.2, 43.0], [16.3, 43.0], [16.4, 43.0], [16.5, 43.0], [16.6, 43.0], [16.7, 43.0], [16.8, 43.0], [16.9, 44.0], [17.0, 44.0], [17.1, 44.0], [17.2, 44.0], [17.3, 44.0], [17.4, 44.0], [17.5, 44.0], [17.6, 44.0], [17.7, 44.0], [17.8, 44.0], [17.9, 44.0], [18.0, 45.0], [18.1, 45.0], [18.2, 45.0], [18.3, 45.0], [18.4, 45.0], [18.5, 45.0], [18.6, 45.0], [18.7, 45.0], [18.8, 45.0], [18.9, 45.0], [19.0, 45.0], [19.1, 45.0], [19.2, 46.0], [19.3, 46.0], [19.4, 46.0], [19.5, 46.0], [19.6, 46.0], [19.7, 46.0], [19.8, 46.0], [19.9, 46.0], [20.0, 46.0], [20.1, 46.0], [20.2, 46.0], [20.3, 46.0], [20.4, 46.0], [20.5, 47.0], [20.6, 47.0], [20.7, 47.0], [20.8, 47.0], [20.9, 47.0], [21.0, 47.0], [21.1, 47.0], [21.2, 47.0], [21.3, 47.0], [21.4, 47.0], [21.5, 47.0], [21.6, 48.0], [21.7, 48.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 48.0], [22.2, 48.0], [22.3, 48.0], [22.4, 48.0], [22.5, 48.0], [22.6, 48.0], [22.7, 49.0], [22.8, 49.0], [22.9, 49.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 50.0], [24.0, 50.0], [24.1, 50.0], [24.2, 50.0], [24.3, 50.0], [24.4, 50.0], [24.5, 50.0], [24.6, 50.0], [24.7, 50.0], [24.8, 50.0], [24.9, 50.0], [25.0, 51.0], [25.1, 51.0], [25.2, 51.0], [25.3, 51.0], [25.4, 51.0], [25.5, 51.0], [25.6, 51.0], [25.7, 51.0], [25.8, 51.0], [25.9, 51.0], [26.0, 51.0], [26.1, 51.0], [26.2, 52.0], [26.3, 52.0], [26.4, 52.0], [26.5, 52.0], [26.6, 52.0], [26.7, 52.0], [26.8, 52.0], [26.9, 52.0], [27.0, 52.0], [27.1, 52.0], [27.2, 53.0], [27.3, 53.0], [27.4, 53.0], [27.5, 53.0], [27.6, 53.0], [27.7, 53.0], [27.8, 53.0], [27.9, 53.0], [28.0, 54.0], [28.1, 54.0], [28.2, 54.0], [28.3, 54.0], [28.4, 54.0], [28.5, 54.0], [28.6, 54.0], [28.7, 55.0], [28.8, 55.0], [28.9, 55.0], [29.0, 55.0], [29.1, 55.0], [29.2, 55.0], [29.3, 55.0], [29.4, 55.0], [29.5, 56.0], [29.6, 56.0], [29.7, 56.0], [29.8, 56.0], [29.9, 56.0], [30.0, 56.0], [30.1, 56.0], [30.2, 56.0], [30.3, 56.0], [30.4, 56.0], [30.5, 57.0], [30.6, 57.0], [30.7, 57.0], [30.8, 57.0], [30.9, 57.0], [31.0, 57.0], [31.1, 57.0], [31.2, 57.0], [31.3, 57.0], [31.4, 57.0], [31.5, 57.0], [31.6, 57.0], [31.7, 57.0], [31.8, 57.0], [31.9, 58.0], [32.0, 58.0], [32.1, 58.0], [32.2, 58.0], [32.3, 58.0], [32.4, 58.0], [32.5, 58.0], [32.6, 58.0], [32.7, 58.0], [32.8, 58.0], [32.9, 58.0], [33.0, 58.0], [33.1, 58.0], [33.2, 58.0], [33.3, 58.0], [33.4, 59.0], [33.5, 59.0], [33.6, 59.0], [33.7, 59.0], [33.8, 59.0], [33.9, 59.0], [34.0, 59.0], [34.1, 59.0], [34.2, 59.0], [34.3, 59.0], [34.4, 59.0], [34.5, 59.0], [34.6, 59.0], [34.7, 59.0], [34.8, 59.0], [34.9, 59.0], [35.0, 59.0], [35.1, 59.0], [35.2, 59.0], [35.3, 60.0], [35.4, 60.0], [35.5, 60.0], [35.6, 60.0], [35.7, 60.0], [35.8, 60.0], [35.9, 60.0], [36.0, 60.0], [36.1, 60.0], [36.2, 60.0], [36.3, 60.0], [36.4, 60.0], [36.5, 60.0], [36.6, 60.0], [36.7, 60.0], [36.8, 60.0], [36.9, 60.0], [37.0, 60.0], [37.1, 60.0], [37.2, 61.0], [37.3, 61.0], [37.4, 61.0], [37.5, 61.0], [37.6, 61.0], [37.7, 61.0], [37.8, 61.0], [37.9, 61.0], [38.0, 61.0], [38.1, 61.0], [38.2, 61.0], [38.3, 61.0], [38.4, 61.0], [38.5, 61.0], [38.6, 61.0], [38.7, 61.0], [38.8, 61.0], [38.9, 61.0], [39.0, 61.0], [39.1, 61.0], [39.2, 61.0], [39.3, 62.0], [39.4, 62.0], [39.5, 62.0], [39.6, 62.0], [39.7, 62.0], [39.8, 62.0], [39.9, 62.0], [40.0, 62.0], [40.1, 62.0], [40.2, 62.0], [40.3, 62.0], [40.4, 62.0], [40.5, 62.0], [40.6, 62.0], [40.7, 62.0], [40.8, 62.0], [40.9, 62.0], [41.0, 62.0], [41.1, 62.0], [41.2, 62.0], [41.3, 63.0], [41.4, 63.0], [41.5, 63.0], [41.6, 63.0], [41.7, 63.0], [41.8, 63.0], [41.9, 63.0], [42.0, 63.0], [42.1, 63.0], [42.2, 63.0], [42.3, 63.0], [42.4, 63.0], [42.5, 63.0], [42.6, 63.0], [42.7, 63.0], [42.8, 63.0], [42.9, 63.0], [43.0, 63.0], [43.1, 63.0], [43.2, 63.0], [43.3, 64.0], [43.4, 64.0], [43.5, 64.0], [43.6, 64.0], [43.7, 64.0], [43.8, 64.0], [43.9, 64.0], [44.0, 64.0], [44.1, 64.0], [44.2, 64.0], [44.3, 64.0], [44.4, 64.0], [44.5, 64.0], [44.6, 64.0], [44.7, 64.0], [44.8, 64.0], [44.9, 64.0], [45.0, 64.0], [45.1, 64.0], [45.2, 64.0], [45.3, 65.0], [45.4, 65.0], [45.5, 65.0], [45.6, 65.0], [45.7, 65.0], [45.8, 65.0], [45.9, 65.0], [46.0, 65.0], [46.1, 65.0], [46.2, 65.0], [46.3, 65.0], [46.4, 65.0], [46.5, 65.0], [46.6, 65.0], [46.7, 65.0], [46.8, 65.0], [46.9, 65.0], [47.0, 65.0], [47.1, 65.0], [47.2, 66.0], [47.3, 66.0], [47.4, 66.0], [47.5, 66.0], [47.6, 66.0], [47.7, 66.0], [47.8, 66.0], [47.9, 66.0], [48.0, 66.0], [48.1, 66.0], [48.2, 66.0], [48.3, 66.0], [48.4, 66.0], [48.5, 66.0], [48.6, 66.0], [48.7, 66.0], [48.8, 66.0], [48.9, 66.0], [49.0, 67.0], [49.1, 67.0], [49.2, 67.0], [49.3, 67.0], [49.4, 67.0], [49.5, 67.0], [49.6, 67.0], [49.7, 67.0], [49.8, 67.0], [49.9, 67.0], [50.0, 67.0], [50.1, 67.0], [50.2, 67.0], [50.3, 67.0], [50.4, 67.0], [50.5, 67.0], [50.6, 67.0], [50.7, 68.0], [50.8, 68.0], [50.9, 68.0], [51.0, 68.0], [51.1, 68.0], [51.2, 68.0], [51.3, 68.0], [51.4, 68.0], [51.5, 68.0], [51.6, 68.0], [51.7, 68.0], [51.8, 68.0], [51.9, 68.0], [52.0, 68.0], [52.1, 68.0], [52.2, 68.0], [52.3, 69.0], [52.4, 69.0], [52.5, 69.0], [52.6, 69.0], [52.7, 69.0], [52.8, 69.0], [52.9, 69.0], [53.0, 69.0], [53.1, 69.0], [53.2, 69.0], [53.3, 69.0], [53.4, 69.0], [53.5, 69.0], [53.6, 69.0], [53.7, 69.0], [53.8, 69.0], [53.9, 70.0], [54.0, 70.0], [54.1, 70.0], [54.2, 70.0], [54.3, 70.0], [54.4, 70.0], [54.5, 70.0], [54.6, 70.0], [54.7, 70.0], [54.8, 70.0], [54.9, 70.0], [55.0, 70.0], [55.1, 70.0], [55.2, 70.0], [55.3, 71.0], [55.4, 71.0], [55.5, 71.0], [55.6, 71.0], [55.7, 71.0], [55.8, 71.0], [55.9, 71.0], [56.0, 71.0], [56.1, 71.0], [56.2, 71.0], [56.3, 71.0], [56.4, 71.0], [56.5, 71.0], [56.6, 72.0], [56.7, 72.0], [56.8, 72.0], [56.9, 72.0], [57.0, 72.0], [57.1, 72.0], [57.2, 72.0], [57.3, 72.0], [57.4, 72.0], [57.5, 72.0], [57.6, 72.0], [57.7, 72.0], [57.8, 73.0], [57.9, 73.0], [58.0, 73.0], [58.1, 73.0], [58.2, 73.0], [58.3, 73.0], [58.4, 73.0], [58.5, 73.0], [58.6, 73.0], [58.7, 73.0], [58.8, 74.0], [58.9, 74.0], [59.0, 74.0], [59.1, 74.0], [59.2, 74.0], [59.3, 74.0], [59.4, 74.0], [59.5, 74.0], [59.6, 74.0], [59.7, 75.0], [59.8, 75.0], [59.9, 75.0], [60.0, 75.0], [60.1, 75.0], [60.2, 75.0], [60.3, 75.0], [60.4, 75.0], [60.5, 76.0], [60.6, 76.0], [60.7, 76.0], [60.8, 76.0], [60.9, 76.0], [61.0, 76.0], [61.1, 76.0], [61.2, 77.0], [61.3, 77.0], [61.4, 77.0], [61.5, 77.0], [61.6, 77.0], [61.7, 77.0], [61.8, 78.0], [61.9, 78.0], [62.0, 78.0], [62.1, 78.0], [62.2, 78.0], [62.3, 79.0], [62.4, 79.0], [62.5, 79.0], [62.6, 79.0], [62.7, 79.0], [62.8, 80.0], [62.9, 80.0], [63.0, 80.0], [63.1, 80.0], [63.2, 81.0], [63.3, 81.0], [63.4, 81.0], [63.5, 81.0], [63.6, 82.0], [63.7, 82.0], [63.8, 82.0], [63.9, 82.0], [64.0, 83.0], [64.1, 83.0], [64.2, 83.0], [64.3, 84.0], [64.4, 84.0], [64.5, 84.0], [64.6, 85.0], [64.7, 85.0], [64.8, 85.0], [64.9, 85.0], [65.0, 86.0], [65.1, 86.0], [65.2, 86.0], [65.3, 86.0], [65.4, 87.0], [65.5, 87.0], [65.6, 87.0], [65.7, 87.0], [65.8, 88.0], [65.9, 88.0], [66.0, 88.0], [66.1, 88.0], [66.2, 89.0], [66.3, 89.0], [66.4, 89.0], [66.5, 89.0], [66.6, 89.0], [66.7, 90.0], [66.8, 90.0], [66.9, 90.0], [67.0, 90.0], [67.1, 90.0], [67.2, 91.0], [67.3, 91.0], [67.4, 91.0], [67.5, 91.0], [67.6, 91.0], [67.7, 92.0], [67.8, 92.0], [67.9, 92.0], [68.0, 92.0], [68.1, 92.0], [68.2, 93.0], [68.3, 93.0], [68.4, 93.0], [68.5, 93.0], [68.6, 93.0], [68.7, 94.0], [68.8, 94.0], [68.9, 94.0], [69.0, 94.0], [69.1, 94.0], [69.2, 95.0], [69.3, 95.0], [69.4, 95.0], [69.5, 95.0], [69.6, 96.0], [69.7, 96.0], [69.8, 96.0], [69.9, 97.0], [70.0, 97.0], [70.1, 98.0], [70.2, 98.0], [70.3, 98.0], [70.4, 99.0], [70.5, 99.0], [70.6, 100.0], [70.7, 100.0], [70.8, 101.0], [70.9, 101.0], [71.0, 102.0], [71.1, 103.0], [71.2, 104.0], [71.3, 104.0], [71.4, 105.0], [71.5, 106.0], [71.6, 106.0], [71.7, 107.0], [71.8, 108.0], [71.9, 108.0], [72.0, 109.0], [72.1, 110.0], [72.2, 110.0], [72.3, 111.0], [72.4, 112.0], [72.5, 113.0], [72.6, 114.0], [72.7, 115.0], [72.8, 116.0], [72.9, 117.0], [73.0, 119.0], [73.1, 121.0], [73.2, 125.0], [73.3, 130.0], [73.4, 137.0], [73.5, 142.0], [73.6, 153.0], [73.7, 164.0], [73.8, 172.0], [73.9, 181.0], [74.0, 197.0], [74.1, 207.0], [74.2, 218.0], [74.3, 226.0], [74.4, 232.0], [74.5, 239.0], [74.6, 246.0], [74.7, 254.0], [74.8, 261.0], [74.9, 267.0], [75.0, 271.0], [75.1, 277.0], [75.2, 282.0], [75.3, 287.0], [75.4, 292.0], [75.5, 298.0], [75.6, 303.0], [75.7, 308.0], [75.8, 313.0], [75.9, 318.0], [76.0, 324.0], [76.1, 330.0], [76.2, 338.0], [76.3, 347.0], [76.4, 353.0], [76.5, 361.0], [76.6, 369.0], [76.7, 377.0], [76.8, 386.0], [76.9, 395.0], [77.0, 404.0], [77.1, 411.0], [77.2, 419.0], [77.3, 428.0], [77.4, 436.0], [77.5, 445.0], [77.6, 452.0], [77.7, 458.0], [77.8, 465.0], [77.9, 472.0], [78.0, 478.0], [78.1, 484.0], [78.2, 490.0], [78.3, 496.0], [78.4, 502.0], [78.5, 508.0], [78.6, 513.0], [78.7, 518.0], [78.8, 523.0], [78.9, 527.0], [79.0, 532.0], [79.1, 538.0], [79.2, 544.0], [79.3, 550.0], [79.4, 556.0], [79.5, 562.0], [79.6, 568.0], [79.7, 574.0], [79.8, 581.0], [79.9, 588.0], [80.0, 594.0], [80.1, 600.0], [80.2, 607.0], [80.3, 616.0], [80.4, 624.0], [80.5, 632.0], [80.6, 638.0], [80.7, 646.0], [80.8, 654.0], [80.9, 661.0], [81.0, 667.0], [81.1, 674.0], [81.2, 681.0], [81.3, 689.0], [81.4, 696.0], [81.5, 704.0], [81.6, 711.0], [81.7, 720.0], [81.8, 729.0], [81.9, 735.0], [82.0, 742.0], [82.1, 749.0], [82.2, 757.0], [82.3, 765.0], [82.4, 773.0], [82.5, 780.0], [82.6, 787.0], [82.7, 796.0], [82.8, 805.0], [82.9, 812.0], [83.0, 818.0], [83.1, 824.0], [83.2, 832.0], [83.3, 839.0], [83.4, 847.0], [83.5, 854.0], [83.6, 860.0], [83.7, 869.0], [83.8, 877.0], [83.9, 884.0], [84.0, 892.0], [84.1, 899.0], [84.2, 906.0], [84.3, 914.0], [84.4, 923.0], [84.5, 930.0], [84.6, 938.0], [84.7, 945.0], [84.8, 953.0], [84.9, 961.0], [85.0, 968.0], [85.1, 976.0], [85.2, 983.0], [85.3, 991.0], [85.4, 998.0], [85.5, 1005.0], [85.6, 1012.0], [85.7, 1019.0], [85.8, 1027.0], [85.9, 1034.0], [86.0, 1041.0], [86.1, 1048.0], [86.2, 1055.0], [86.3, 1063.0], [86.4, 1072.0], [86.5, 1080.0], [86.6, 1086.0], [86.7, 1094.0], [86.8, 1101.0], [86.9, 1109.0], [87.0, 1116.0], [87.1, 1125.0], [87.2, 1133.0], [87.3, 1139.0], [87.4, 1146.0], [87.5, 1153.0], [87.6, 1161.0], [87.7, 1169.0], [87.8, 1177.0], [87.9, 1184.0], [88.0, 1193.0], [88.1, 1199.0], [88.2, 1206.0], [88.3, 1212.0], [88.4, 1218.0], [88.5, 1224.0], [88.6, 1230.0], [88.7, 1237.0], [88.8, 1243.0], [88.9, 1250.0], [89.0, 1258.0], [89.1, 1268.0], [89.2, 1276.0], [89.3, 1283.0], [89.4, 1290.0], [89.5, 1297.0], [89.6, 1305.0], [89.7, 1312.0], [89.8, 1318.0], [89.9, 1326.0], [90.0, 1333.0], [90.1, 1341.0], [90.2, 1350.0], [90.3, 1357.0], [90.4, 1365.0], [90.5, 1371.0], [90.6, 1378.0], [90.7, 1385.0], [90.8, 1393.0], [90.9, 1401.0], [91.0, 1409.0], [91.1, 1418.0], [91.2, 1426.0], [91.3, 1434.0], [91.4, 1442.0], [91.5, 1451.0], [91.6, 1459.0], [91.7, 1467.0], [91.8, 1475.0], [91.9, 1483.0], [92.0, 1491.0], [92.1, 1498.0], [92.2, 1507.0], [92.3, 1515.0], [92.4, 1523.0], [92.5, 1531.0], [92.6, 1539.0], [92.7, 1548.0], [92.8, 1555.0], [92.9, 1563.0], [93.0, 1571.0], [93.1, 1577.0], [93.2, 1585.0], [93.3, 1593.0], [93.4, 1601.0], [93.5, 1609.0], [93.6, 1616.0], [93.7, 1622.0], [93.8, 1629.0], [93.9, 1635.0], [94.0, 1642.0], [94.1, 1648.0], [94.2, 1654.0], [94.3, 1660.0], [94.4, 1666.0], [94.5, 1673.0], [94.6, 1682.0], [94.7, 1690.0], [94.8, 1699.0], [94.9, 1707.0], [95.0, 1717.0], [95.1, 1729.0], [95.2, 1739.0], [95.3, 1751.0], [95.4, 1765.0], [95.5, 1775.0], [95.6, 1785.0], [95.7, 1798.0], [95.8, 1808.0], [95.9, 1817.0], [96.0, 1825.0], [96.1, 1835.0], [96.2, 1844.0], [96.3, 1852.0], [96.4, 1859.0], [96.5, 1871.0], [96.6, 1882.0], [96.7, 1892.0], [96.8, 1901.0], [96.9, 1911.0], [97.0, 1922.0], [97.1, 1933.0], [97.2, 1943.0], [97.3, 1956.0], [97.4, 1970.0], [97.5, 1982.0], [97.6, 1996.0], [97.7, 2012.0], [97.8, 2028.0], [97.9, 2044.0], [98.0, 2060.0], [98.1, 2076.0], [98.2, 2095.0], [98.3, 2111.0], [98.4, 2130.0], [98.5, 2152.0], [98.6, 2182.0], [98.7, 2214.0], [98.8, 2256.0], [98.9, 2293.0], [99.0, 2354.0], [99.1, 2393.0], [99.2, 2514.0], [99.3, 2591.0], [99.4, 2676.0], [99.5, 2879.0], [99.6, 3068.0], [99.7, 3209.0], [99.8, 3465.0], [99.9, 3834.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 634432.0, "series": [{"data": [[0.0, 634432.0], [600.0, 12174.0], [700.0, 11666.0], [800.0, 12284.0], [900.0, 11858.0], [1000.0, 12182.0], [1100.0, 11895.0], [1200.0, 12854.0], [1300.0, 12129.0], [1400.0, 11143.0], [1500.0, 11363.0], [1600.0, 12831.0], [1700.0, 8116.0], [1800.0, 9598.0], [1900.0, 7532.0], [2000.0, 5499.0], [2100.0, 3868.0], [2300.0, 1862.0], [2200.0, 2281.0], [2400.0, 589.0], [2500.0, 1179.0], [2600.0, 825.0], [2700.0, 127.0], [2800.0, 933.0], [2900.0, 463.0], [3000.0, 420.0], [3100.0, 631.0], [3200.0, 415.0], [3300.0, 305.0], [3400.0, 350.0], [3500.0, 308.0], [3600.0, 194.0], [3700.0, 187.0], [3800.0, 166.0], [3900.0, 103.0], [4000.0, 99.0], [4300.0, 70.0], [4200.0, 45.0], [4100.0, 133.0], [4600.0, 14.0], [4500.0, 174.0], [4400.0, 119.0], [4800.0, 16.0], [4700.0, 39.0], [4900.0, 4.0], [100.0, 31077.0], [200.0, 13579.0], [300.0, 12731.0], [400.0, 12735.0], [500.0, 15486.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 70742.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 704700.0, "series": [{"data": [[0.0, 704700.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 123641.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 70742.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4241.13105905214, "minX": 1.631709E12, "maxY": 4800.0, "series": [{"data": [[1.63170912E12, 4800.0], [1.63170978E12, 4800.0], [1.63170948E12, 4800.0], [1.63170918E12, 4800.0], [1.63170984E12, 4800.0], [1.63170954E12, 4800.0], [1.63170924E12, 4800.0], [1.6317099E12, 4672.237860506211], [1.6317096E12, 4800.0], [1.6317093E12, 4800.0], [1.631709E12, 4241.13105905214], [1.63170966E12, 4800.0], [1.63170936E12, 4800.0], [1.63170906E12, 4800.0], [1.63170972E12, 4800.0], [1.63170942E12, 4800.0]], "isOverall": false, "label": "app1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6317099E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 7.5, "minX": 1.0, "maxY": 2524.0, "series": [{"data": [[3.0, 1416.0], [6.0, 1417.0], [8.0, 1421.0], [11.0, 1413.0], [15.0, 1414.5], [16.0, 1409.0], [20.0, 1415.0], [25.0, 1407.1666666666667], [26.0, 1405.5], [30.0, 1405.0], [31.0, 1403.6666666666667], [32.0, 1402.0], [34.0, 1399.0], [37.0, 1400.0], [42.0, 1398.8], [45.0, 1396.5], [46.0, 1394.0], [48.0, 1396.0], [50.0, 1393.25], [53.0, 1393.0], [54.0, 1392.0], [58.0, 1392.0], [61.0, 1391.0], [62.0, 1389.0], [66.0, 1387.6], [71.0, 1386.5], [242.0, 131.5], [254.0, 154.0], [250.0, 195.0], [264.0, 180.0], [275.0, 116.0], [277.0, 201.0], [281.0, 213.66666666666666], [283.0, 227.5], [284.0, 220.0], [285.0, 203.5], [289.0, 214.0], [291.0, 224.0], [292.0, 189.5], [293.0, 159.0], [299.0, 237.0], [317.0, 287.0], [318.0, 289.0], [347.0, 315.5], [348.0, 309.0], [349.0, 330.0000000000001], [351.0, 338.0], [336.0, 7.5], [356.0, 342.0], [357.0, 306.6666666666667], [359.0, 304.0], [363.0, 374.0], [364.0, 325.0], [365.0, 377.0], [367.0, 348.3636363636364], [370.0, 351.3333333333333], [369.0, 347.6666666666667], [371.0, 322.0], [381.0, 380.0], [382.0, 15.272727272727272], [372.0, 305.5], [373.0, 385.4], [374.0, 396.0], [375.0, 397.0], [376.0, 397.0], [379.0, 325.5], [397.0, 337.0], [392.0, 405.75], [384.0, 396.5], [393.0, 399.57142857142856], [398.0, 396.8], [399.0, 382.6666666666667], [395.0, 392.5], [389.0, 362.3333333333333], [388.0, 395.0], [390.0, 323.0], [394.0, 395.0], [387.0, 307.0], [402.0, 408.0], [401.0, 418.0], [403.0, 377.6666666666667], [414.0, 435.0], [404.0, 428.5], [405.0, 390.0], [406.0, 454.0], [407.0, 431.6666666666667], [410.0, 457.5], [411.0, 436.5], [417.0, 465.6], [416.0, 439.66666666666663], [419.0, 252.37499999999997], [420.0, 402.04761904761904], [421.0, 446.75], [428.0, 440.0], [429.0, 342.0], [430.0, 415.0], [431.0, 319.5], [433.0, 335.0], [435.0, 399.2], [446.0, 478.0], [447.0, 324.0], [437.0, 372.0], [438.0, 467.0], [439.0, 405.4], [440.0, 337.0], [441.0, 330.0], [442.0, 446.0], [443.0, 441.5], [448.0, 450.2857142857143], [452.0, 411.0], [453.0, 452.14285714285717], [455.0, 165.8947368421053], [456.0, 456.0], [462.0, 338.8], [463.0, 323.0], [457.0, 447.79999999999995], [458.0, 537.0], [459.0, 411.2], [460.0, 339.06666666666666], [461.0, 328.0], [464.0, 334.77777777777777], [466.0, 340.5], [474.0, 353.0], [476.0, 371.0], [477.0, 365.0], [478.0, 352.5], [479.0, 393.0], [481.0, 329.0], [483.0, 327.5], [485.0, 335.0], [487.0, 339.0], [488.0, 345.1111111111111], [490.0, 106.79166666666666], [491.0, 336.0], [493.0, 342.0], [494.0, 328.6666666666667], [508.0, 318.1666666666667], [496.0, 327.0], [498.0, 331.3333333333333], [499.0, 314.19999999999993], [501.0, 352.0], [504.0, 306.25], [505.0, 310.0], [510.0, 326.0], [511.0, 317.4], [512.0, 317.0], [524.0, 339.0], [520.0, 34.80769230769231], [528.0, 339.6666666666667], [532.0, 343.0], [536.0, 354.33333333333337], [538.0, 353.3333333333333], [542.0, 58.27777777777776], [556.0, 362.0], [560.0, 365.0], [552.0, 361.5], [558.0, 364.0], [550.0, 48.0], [600.0, 415.0], [578.0, 383.3333333333333], [588.0, 151.3841463414634], [580.0, 385.6666666666667], [582.0, 386.0], [602.0, 409.0], [604.0, 404.0], [594.0, 273.1666666666667], [596.0, 400.5], [610.0, 402.3636363636364], [608.0, 416.5], [622.0, 242.99999999999997], [620.0, 416.9599999999999], [618.0, 400.5], [612.0, 399.0], [614.0, 409.0], [634.0, 410.0], [636.0, 409.6666666666667], [638.0, 276.90000000000003], [626.0, 398.0], [628.0, 401.5], [616.0, 399.0], [642.0, 408.0], [640.0, 329.5], [646.0, 359.0], [644.0, 246.8], [656.0, 277.6], [660.0, 243.0], [670.0, 358.3333333333333], [664.0, 332.5], [668.0, 248.5], [648.0, 391.875], [650.0, 412.5], [652.0, 411.0], [654.0, 244.0], [700.0, 261.5], [696.0, 332.5454545454545], [690.0, 422.25000000000006], [688.0, 251.0], [676.0, 328.8888888888889], [672.0, 257.0], [678.0, 244.0], [680.0, 420.45454545454544], [692.0, 370.6666666666667], [694.0, 432.0], [698.0, 248.5], [682.0, 249.0], [710.0, 437.5], [718.0, 432.77777777777777], [704.0, 294.6], [706.0, 432.1666666666667], [728.0, 423.1818181818182], [730.0, 260.0], [734.0, 366.6666666666667], [724.0, 428.5], [726.0, 427.5], [714.0, 423.0], [712.0, 255.0], [716.0, 311.0], [760.0, 436.0], [738.0, 426.0], [762.0, 347.0], [764.0, 441.0], [744.0, 430.0], [748.0, 433.0], [752.0, 314.0], [756.0, 437.0], [794.0, 394.25], [780.0, 453.6666666666667], [772.0, 356.0], [774.0, 449.5], [784.0, 450.5], [796.0, 265.0], [792.0, 449.75], [786.0, 406.8], [788.0, 446.0], [790.0, 449.0], [776.0, 447.0], [782.0, 449.0], [770.0, 267.0], [830.0, 428.0], [804.0, 327.3333333333333], [806.0, 268.0], [802.0, 412.5], [812.0, 441.0], [810.0, 269.5], [814.0, 437.0], [800.0, 264.0], [816.0, 439.0], [826.0, 427.8333333333333], [824.0, 350.0], [818.0, 438.6666666666667], [820.0, 433.25], [822.0, 430.0], [832.0, 309.5], [836.0, 427.0], [834.0, 267.0], [842.0, 431.0], [840.0, 271.0], [838.0, 429.12500000000006], [862.0, 417.1666666666667], [848.0, 272.0], [846.0, 398.0], [844.0, 352.75], [890.0, 314.75], [864.0, 357.0], [868.0, 376.8], [866.0, 271.0], [872.0, 446.6666666666667], [880.0, 450.85714285714283], [884.0, 448.0], [882.0, 272.5], [894.0, 443.0], [892.0, 438.0], [920.0, 430.0], [896.0, 434.0], [910.0, 430.0], [916.0, 428.0], [918.0, 273.0], [924.0, 437.5], [922.0, 407.3333333333333], [900.0, 432.5], [898.0, 429.5], [902.0, 433.0], [904.0, 432.0], [906.0, 270.0], [908.0, 269.5], [954.0, 384.6666666666667], [952.0, 437.0], [934.0, 273.6666666666667], [948.0, 439.5], [956.0, 441.0], [958.0, 441.0], [940.0, 328.0], [936.0, 275.0], [928.0, 440.0], [950.0, 436.91666666666663], [932.0, 433.0], [930.0, 353.0], [966.0, 445.5], [960.0, 440.6666666666667], [974.0, 390.6666666666667], [972.0, 445.5], [984.0, 366.25], [970.0, 446.1111111111111], [976.0, 361.66666666666663], [988.0, 409.125], [990.0, 470.75], [980.0, 391.6666666666667], [982.0, 451.0], [994.0, 469.6666666666667], [992.0, 460.3], [996.0, 489.0], [1008.0, 461.25], [998.0, 437.0], [1018.0, 469.5], [1002.0, 459.75], [1004.0, 462.0], [1000.0, 458.0], [1006.0, 460.0], [1036.0, 441.33333333333337], [1072.0, 399.0], [1024.0, 473.0], [1048.0, 413.6666666666667], [1028.0, 407.0], [1044.0, 380.0], [1076.0, 479.0], [1080.0, 380.5], [1056.0, 479.40000000000003], [1064.0, 480.5], [1068.0, 480.2], [1060.0, 479.0], [1052.0, 480.0], [1136.0, 505.0], [1088.0, 486.0], [1092.0, 490.0], [1100.0, 280.0], [1104.0, 496.0], [1112.0, 438.0], [1108.0, 439.75], [1140.0, 507.125], [1144.0, 443.25], [1148.0, 456.0], [1120.0, 376.0], [1124.0, 498.0], [1128.0, 500.0], [1200.0, 529.0], [1164.0, 485.99999999999994], [1152.0, 517.0], [1180.0, 529.0], [1184.0, 406.5], [1212.0, 524.0], [1208.0, 367.0], [1188.0, 524.0], [1196.0, 529.0], [1156.0, 517.0], [1172.0, 450.0], [1176.0, 524.0], [1264.0, 455.0], [1276.0, 540.0], [1224.0, 525.0], [1252.0, 368.6666666666667], [1268.0, 538.0], [1256.0, 533.0], [1216.0, 402.5], [1236.0, 406.0], [1240.0, 525.0], [1232.0, 528.0], [1288.0, 544.0], [1280.0, 543.0], [1308.0, 556.0], [1284.0, 545.25], [1292.0, 504.8], [1336.0, 354.75], [1328.0, 503.75], [1332.0, 374.7], [1320.0, 557.0], [1316.0, 289.0], [1324.0, 556.1666666666667], [1392.0, 572.0], [1372.0, 554.0], [1376.0, 557.0], [1396.0, 575.0], [1380.0, 561.3333333333334], [1384.0, 563.0], [1352.0, 378.0], [1356.0, 556.5], [1348.0, 552.0], [1360.0, 546.5], [1368.0, 290.0], [1408.0, 580.0], [1428.0, 565.0], [1416.0, 555.0], [1412.0, 231.0], [1456.0, 229.33333333333334], [1424.0, 563.25], [1436.0, 559.0], [1440.0, 397.0], [1444.0, 576.0], [1496.0, 600.0], [1472.0, 605.0], [1500.0, 614.0], [1520.0, 623.0], [1504.0, 225.0], [1516.0, 225.0], [1476.0, 226.0], [1592.0, 617.0], [1588.0, 613.4], [1568.0, 600.5], [1596.0, 624.0], [1580.0, 607.0], [1576.0, 526.2], [1556.0, 613.2], [1544.0, 610.0], [1564.0, 598.0], [1536.0, 223.0], [1604.0, 591.0], [1600.0, 629.5], [1612.0, 594.0], [1624.0, 602.5], [1628.0, 604.0], [1616.0, 596.0], [1656.0, 608.0], [1632.0, 608.0], [1648.0, 609.5], [1636.0, 609.0], [1672.0, 503.79999999999995], [1668.0, 604.0], [1676.0, 628.0], [1716.0, 208.0], [1684.0, 626.0], [1680.0, 208.0], [1708.0, 516.5], [1720.0, 628.0], [1696.0, 619.0], [1700.0, 208.0], [1740.0, 498.0], [1744.0, 632.6666666666666], [1776.0, 625.5], [1732.0, 352.3333333333333], [1748.0, 631.0], [1752.0, 489.66666666666663], [1784.0, 625.3333333333334], [1760.0, 627.0], [1788.0, 634.6666666666666], [1764.0, 626.0], [1768.0, 623.5], [1820.0, 637.0], [1792.0, 638.6666666666666], [1816.0, 646.5], [1840.0, 652.25], [1808.0, 648.0], [1824.0, 638.0], [1832.0, 645.0], [1812.0, 650.0], [1904.0, 678.0], [1864.0, 648.0], [1908.0, 681.8], [1856.0, 647.0], [1868.0, 641.1428571428571], [1872.0, 643.0], [1880.0, 657.0], [1892.0, 666.0], [1888.0, 666.0], [1968.0, 688.5], [1920.0, 675.0], [1924.0, 672.0], [1928.0, 673.0], [1972.0, 684.0], [1980.0, 682.0], [1976.0, 682.0], [1956.0, 688.0], [1944.0, 687.0], [1948.0, 689.3333333333334], [1964.0, 690.0], [2016.0, 690.5], [2056.0, 707.3333333333334], [2072.0, 691.0], [2160.0, 439.75], [2120.0, 711.0], [2136.0, 708.3333333333334], [2144.0, 168.0], [2192.0, 461.25], [2200.0, 756.0], [2184.0, 748.0], [2216.0, 757.25], [2224.0, 168.0], [2232.0, 758.0], [2256.0, 769.0], [2240.0, 764.5], [2280.0, 771.0], [2304.0, 785.0], [2312.0, 790.0], [2352.0, 786.0], [2320.0, 795.6666666666666], [2392.0, 800.5], [2384.0, 795.0], [2328.0, 787.0], [2344.0, 785.0], [2336.0, 792.0], [2464.0, 153.0], [2776.0, 1048.0], [2792.0, 688.2], [2808.0, 1034.0], [2704.0, 142.0], [2840.0, 1043.5], [2832.0, 1052.4], [2816.0, 1038.0], [2824.0, 1045.0], [2904.0, 932.75], [2880.0, 1038.0], [2920.0, 1042.0], [2936.0, 114.0], [2912.0, 1048.5], [2896.0, 1051.0], [2848.0, 1024.0], [2872.0, 1033.6666666666667], [2960.0, 1060.3333333333333], [2944.0, 1045.0], [2968.0, 1068.0], [3008.0, 1065.0], [3040.0, 1080.0], [3056.0, 602.0], [3016.0, 824.25], [2992.0, 1089.3333333333333], [3000.0, 1072.0], [3096.0, 890.4], [3104.0, 1088.0], [3176.0, 945.8333333333333], [3192.0, 1129.0], [3112.0, 603.5], [3120.0, 1101.0], [3152.0, 1116.0], [3160.0, 1101.0], [3128.0, 772.6666666666667], [3072.0, 116.0], [3224.0, 1143.5], [3200.0, 1128.0], [3248.0, 1141.0], [3256.0, 794.0], [3208.0, 1134.0], [3216.0, 105.0], [3304.0, 1179.0], [3312.0, 1189.4], [3288.0, 1165.6999999999998], [3264.0, 1147.0], [3232.0, 800.6666666666667], [3240.0, 1144.0], [3392.0, 1171.3333333333333], [3352.0, 1145.8333333333333], [3360.0, 1154.2], [3384.0, 1165.5], [3368.0, 1160.0], [3408.0, 1176.5], [3416.0, 939.5], [3400.0, 631.5], [3424.0, 1047.857142857143], [3432.0, 645.5], [3440.0, 1199.6], [3448.0, 1044.142857142857], [3472.0, 1224.0], [3456.0, 1208.0], [3464.0, 86.0], [3480.0, 1223.0], [3504.0, 1220.0], [3488.0, 1220.0], [3512.0, 1220.5], [3568.0, 1229.0], [3528.0, 1227.25], [3576.0, 1238.8333333333333], [3544.0, 1241.0], [3560.0, 1252.0], [3552.0, 1246.0], [3600.0, 679.0], [3584.0, 1239.5], [3608.0, 1270.0], [3624.0, 1277.0], [3648.0, 1284.5], [3656.0, 1287.0], [3672.0, 1293.0], [3696.0, 1300.0], [3592.0, 87.0], [3832.0, 1137.0], [3712.0, 1305.0], [3752.0, 1322.0], [3776.0, 1330.0], [3760.0, 1323.0], [3784.0, 1271.3333333333333], [3792.0, 414.66666666666663], [3800.0, 854.25], [3808.0, 596.0], [3824.0, 1129.0], [3936.0, 1192.0], [3848.0, 1163.0], [3840.0, 1150.0], [3856.0, 1144.6666666666665], [3912.0, 1204.6666666666667], [3896.0, 629.0], [3888.0, 74.0], [3872.0, 75.0], [3920.0, 1210.0], [3928.0, 1201.1], [3960.0, 1217.0], [3944.0, 1201.1666666666667], [3952.0, 1209.0], [3984.0, 1210.3333333333333], [3976.0, 1212.0], [4024.0, 948.25], [4016.0, 1243.0], [4032.0, 1226.25], [4040.0, 1238.0], [4056.0, 1258.75], [4088.0, 1287.0], [4288.0, 1258.0], [4096.0, 1287.5], [4128.0, 1212.2000000000003], [4160.0, 1246.0], [4192.0, 1279.0], [4208.0, 1272.0], [4256.0, 1295.5], [4272.0, 1278.0], [4304.0, 1278.0], [4336.0, 1295.0], [4240.0, 51.0], [4352.0, 1288.0], [4368.0, 1305.25], [4384.0, 1297.6875], [4400.0, 1313.5], [4480.0, 2369.0], [4512.0, 2400.0], [4560.0, 2389.2], [4544.0, 1384.0], [4720.0, 2492.0], [4672.0, 1436.3333333333333], [4688.0, 1441.5], [4736.0, 2500.0], [4768.0, 1482.6666666666667], [4784.0, 1487.0], [4800.0, 345.7504104426513], [4656.0, 12.0], [4129.0, 1295.6], [4161.0, 1253.625], [4209.0, 1271.0], [4257.0, 1291.3333333333333], [4305.0, 1277.0], [4321.0, 1294.0], [4369.0, 1307.3333333333333], [4353.0, 1289.0], [4385.0, 1296.3333333333333], [4417.0, 1322.0], [4465.0, 2359.0], [4561.0, 2397.5], [4545.0, 1386.0], [4577.0, 2400.0], [4593.0, 2428.0], [4609.0, 2237.0], [4625.0, 1411.0], [4689.0, 1432.5], [4753.0, 2508.3333333333335], [4769.0, 1481.8], [4785.0, 1486.0], [2065.0, 694.0], [2057.0, 689.0], [2153.0, 703.5], [2081.0, 689.0], [2089.0, 693.5], [2113.0, 706.0], [2129.0, 720.0], [2137.0, 707.5], [2105.0, 702.0], [2193.0, 753.0], [2209.0, 760.0], [2265.0, 768.6666666666666], [2241.0, 765.0], [2201.0, 171.0], [2249.0, 766.0], [2217.0, 367.3333333333333], [2225.0, 462.5], [2185.0, 170.0], [2329.0, 792.0], [2305.0, 785.0], [2369.0, 786.0], [2409.0, 165.0], [2401.0, 158.0], [2377.0, 794.0], [2385.0, 586.0], [2393.0, 801.0], [2353.0, 470.75], [2361.0, 159.0], [2465.0, 151.66666666666666], [2601.0, 133.0], [2769.0, 908.5238095238097], [2777.0, 1054.5], [2793.0, 877.6], [2801.0, 1030.0], [2809.0, 1035.0], [2761.0, 129.0], [2737.0, 128.5], [2697.0, 121.0], [2873.0, 1033.6666666666667], [2817.0, 1040.0], [2857.0, 1025.0], [2937.0, 578.0], [2929.0, 1036.0], [2921.0, 577.5], [2913.0, 1046.3333333333333], [2897.0, 1048.0], [2865.0, 1030.0], [2849.0, 1025.0], [2969.0, 1069.3333333333333], [2961.0, 1060.5], [3017.0, 348.5], [3009.0, 1059.0], [3041.0, 1083.0], [2985.0, 1082.0], [2977.0, 1075.0], [2993.0, 803.1428571428571], [3001.0, 1066.0], [3177.0, 1112.6], [3073.0, 1086.0], [3081.0, 601.0], [3193.0, 1127.25], [3169.0, 1121.0], [3145.0, 1121.0], [3153.0, 1118.0], [3161.0, 608.0], [3097.0, 1083.6666666666667], [3105.0, 1089.0], [3113.0, 1096.0], [3129.0, 1105.0], [3217.0, 1136.0], [3209.0, 1131.0], [3249.0, 1138.6666666666667], [3257.0, 1140.8333333333335], [3233.0, 1051.818181818182], [3289.0, 1164.75], [3265.0, 973.6666666666666], [3321.0, 1191.4], [3297.0, 638.0], [3305.0, 1176.0], [3225.0, 1142.0], [3241.0, 1143.0], [3425.0, 1047.4285714285713], [3361.0, 1154.0], [3377.0, 1160.75], [3369.0, 1154.0], [3393.0, 1173.0], [3417.0, 1212.2537313432829], [3409.0, 1174.0], [3433.0, 824.6666666666667], [3449.0, 1203.5], [3569.0, 1245.0], [3465.0, 1208.5], [3473.0, 1226.0], [3457.0, 1208.0], [3489.0, 1218.25], [3521.0, 1221.2], [3529.0, 1227.5], [3497.0, 1219.0], [3537.0, 1235.0], [3545.0, 1242.0], [3553.0, 1248.25], [3601.0, 1068.1666666666667], [3593.0, 1234.5], [3633.0, 883.6666666666667], [3617.0, 1275.0], [3641.0, 1285.0], [3649.0, 1287.0], [3665.0, 1289.0], [3697.0, 1298.0], [3761.0, 1321.0], [3777.0, 1329.0], [3793.0, 1108.0], [3817.0, 1134.0], [3833.0, 782.6666666666667], [3937.0, 1193.0], [3849.0, 1162.0], [3841.0, 1032.5555555555557], [3857.0, 698.75], [3873.0, 1148.0], [3889.0, 805.3333333333333], [3913.0, 1206.0], [3921.0, 1212.0], [3929.0, 1196.5], [3953.0, 1211.0], [3961.0, 1219.0], [3945.0, 1203.5], [4065.0, 1261.0], [3977.0, 1206.0], [3993.0, 1222.0], [4001.0, 1232.0], [4025.0, 1239.2307692307693], [4017.0, 1243.0], [4033.0, 1227.0], [4049.0, 1257.0], [4073.0, 1107.25], [4081.0, 1194.2], [4089.0, 1285.4], [4057.0, 1255.0], [4130.0, 1144.25], [4098.0, 1292.0], [4146.0, 889.0], [4162.0, 1245.0], [4178.0, 661.0], [4194.0, 1264.75], [4242.0, 1281.0], [4258.0, 1287.5], [4322.0, 1295.5], [4370.0, 1308.5], [4354.0, 1290.0], [4386.0, 1187.5000000000002], [4434.0, 2004.0], [4450.0, 2363.0], [4482.0, 2368.0], [4514.0, 2049.6666666666665], [4562.0, 1385.0], [4530.0, 28.0], [4610.0, 2424.0], [4690.0, 1444.0], [4722.0, 2497.0], [4738.0, 2510.0], [4754.0, 2516.5], [4786.0, 1486.5], [4131.0, 1301.9], [4099.0, 1292.0], [4147.0, 1302.5], [4323.0, 1297.375], [4339.0, 1296.0], [4163.0, 1247.0], [4179.0, 1266.0], [4195.0, 1281.5], [4211.0, 1273.2], [4227.0, 1264.4], [4243.0, 1282.0], [4259.0, 1285.0000000000002], [4371.0, 1307.0], [4355.0, 1290.6666666666667], [4387.0, 1294.0], [4419.0, 1326.1666666666665], [4403.0, 1318.3333333333333], [4435.0, 2342.0], [4451.0, 2362.0], [4467.0, 1601.25], [4515.0, 2390.0], [4563.0, 2389.5], [4579.0, 19.0], [4627.0, 1413.0], [4723.0, 2489.6666666666665], [4691.0, 2466.0], [4755.0, 2502.0], [4771.0, 1477.5], [4787.0, 2079.6666666666665], [1037.0, 474.5], [1033.0, 470.7142857142857], [1025.0, 407.0], [1053.0, 278.0], [1049.0, 281.0], [1029.0, 470.0], [1045.0, 478.0], [1041.0, 475.0], [1073.0, 414.3333333333333], [1085.0, 484.8], [1061.0, 480.6666666666667], [1069.0, 477.5], [1057.0, 478.5], [1137.0, 390.0], [1089.0, 485.5], [1117.0, 331.25], [1093.0, 488.5], [1101.0, 489.3333333333333], [1097.0, 280.0], [1109.0, 499.0], [1113.0, 497.0], [1141.0, 509.5], [1145.0, 510.0], [1121.0, 351.0], [1129.0, 389.0], [1133.0, 277.0], [1149.0, 514.0], [1165.0, 473.3333333333333], [1181.0, 527.1428571428571], [1201.0, 526.5], [1205.0, 523.2857142857143], [1209.0, 468.3333333333333], [1185.0, 291.0], [1189.0, 388.75], [1197.0, 527.0], [1161.0, 516.0], [1157.0, 520.0], [1173.0, 498.3333333333333], [1169.0, 327.0], [1225.0, 527.0], [1277.0, 542.0], [1249.0, 365.0], [1273.0, 539.0], [1269.0, 431.75], [1253.0, 542.0], [1257.0, 547.0], [1217.0, 398.0], [1229.0, 525.0], [1233.0, 525.5], [1237.0, 447.0], [1241.0, 525.3333333333334], [1289.0, 547.0], [1293.0, 548.0], [1329.0, 319.5], [1309.0, 556.0], [1281.0, 540.0], [1285.0, 288.0], [1297.0, 546.0], [1301.0, 550.0], [1305.0, 366.0], [1317.0, 560.5], [1313.0, 557.0], [1333.0, 556.0], [1341.0, 535.1], [1321.0, 559.0], [1325.0, 554.25], [1405.0, 580.0], [1345.0, 551.5], [1373.0, 555.0], [1393.0, 573.5], [1397.0, 234.5], [1377.0, 558.0], [1381.0, 561.0], [1389.0, 570.1428571428571], [1385.0, 566.0], [1349.0, 554.0], [1361.0, 455.6], [1365.0, 317.0], [1369.0, 551.3333333333334], [1417.0, 556.25], [1421.0, 513.0000000000001], [1425.0, 564.0], [1409.0, 579.5], [1413.0, 232.0], [1429.0, 446.6666666666667], [1433.0, 556.0], [1437.0, 231.5], [1461.0, 469.66666666666663], [1469.0, 601.8333333333333], [1441.0, 563.0], [1449.0, 567.0], [1493.0, 600.0], [1489.0, 605.0], [1509.0, 609.0], [1501.0, 623.0], [1517.0, 616.0], [1505.0, 604.0], [1497.0, 226.0], [1513.0, 225.0], [1593.0, 619.0], [1597.0, 424.0], [1573.0, 224.0], [1585.0, 611.5], [1545.0, 221.0], [1577.0, 605.0], [1581.0, 479.33333333333337], [1557.0, 609.0], [1541.0, 607.0], [1561.0, 602.5], [1565.0, 599.0], [1605.0, 593.0], [1613.0, 594.0], [1601.0, 608.5], [1621.0, 472.83333333333337], [1629.0, 475.33333333333337], [1617.0, 597.0], [1637.0, 607.0], [1661.0, 610.5], [1657.0, 609.0], [1649.0, 617.0], [1641.0, 610.3333333333334], [1609.0, 591.3333333333334], [1669.0, 610.0], [1673.0, 626.0], [1665.0, 609.0], [1689.0, 618.5], [1693.0, 619.0], [1677.0, 521.75], [1685.0, 621.5555555555555], [1681.0, 626.0], [1709.0, 483.33333333333337], [1725.0, 633.0], [1697.0, 621.0], [1721.0, 421.0], [1741.0, 636.5], [1745.0, 637.0], [1785.0, 628.8], [1789.0, 637.0], [1749.0, 420.0], [1753.0, 458.6], [1757.0, 626.6666666666666], [1773.0, 619.5], [1765.0, 621.0], [1761.0, 626.6666666666666], [1801.0, 646.5], [1797.0, 642.0], [1805.0, 652.5], [1845.0, 657.5], [1825.0, 636.0], [1853.0, 650.0], [1849.0, 658.4], [1809.0, 647.0], [1817.0, 643.0], [1821.0, 638.75], [1829.0, 641.5], [1833.0, 646.0], [1837.0, 648.2857142857142], [1869.0, 307.5], [1865.0, 644.375], [1861.0, 647.3333333333334], [1873.0, 644.3636363636364], [1897.0, 674.923076923077], [1889.0, 667.0], [1917.0, 676.0], [1913.0, 678.5], [1893.0, 667.0], [1877.0, 648.0], [1885.0, 661.0], [1925.0, 673.6], [1929.0, 676.5454545454545], [1921.0, 674.0], [1957.0, 689.0], [1953.0, 687.0], [1969.0, 687.0], [1965.0, 691.0], [1933.0, 678.0], [1949.0, 689.0], [1985.0, 683.6], [1989.0, 676.0], [2037.0, 177.33333333333334], [2001.0, 683.0], [2005.0, 685.0], [2017.0, 689.5], [2025.0, 699.0], [2029.0, 178.0], [2021.0, 629.625], [2074.0, 691.5], [2058.0, 688.5], [2162.0, 441.0], [2170.0, 738.0], [2122.0, 711.6666666666666], [2114.0, 171.0], [2130.0, 718.5], [2090.0, 694.0], [2082.0, 690.0], [2282.0, 772.3333333333334], [2210.0, 761.3333333333334], [2186.0, 748.0], [2202.0, 758.5], [2258.0, 770.0], [2242.0, 764.0], [2250.0, 466.0], [2290.0, 775.5], [2274.0, 767.5], [2218.0, 758.0], [2178.0, 166.0], [2322.0, 795.5], [2306.0, 785.5], [2330.0, 797.0], [2354.0, 783.5], [2386.0, 798.0], [2346.0, 159.0], [2466.0, 144.0], [2458.0, 151.0], [2450.0, 154.0], [2650.0, 129.0], [2634.0, 129.0], [2602.0, 133.0], [2770.0, 1059.9480519480517], [2802.0, 1030.8], [2810.0, 1035.0], [2794.0, 129.66666666666666], [2778.0, 130.0], [2738.0, 132.0], [2698.0, 126.0], [2762.0, 130.0], [2882.0, 1039.6666666666667], [2834.0, 1051.0], [2818.0, 1040.0], [2874.0, 1034.0], [2898.0, 814.5], [2906.0, 1048.0], [2890.0, 1045.0], [2930.0, 1040.3333333333333], [2914.0, 347.5], [2922.0, 1053.0], [2850.0, 1024.3333333333333], [2842.0, 1040.0], [3050.0, 1083.0], [2946.0, 1048.0], [2986.0, 1082.6666666666667], [2978.0, 112.0], [2962.0, 1061.0], [3058.0, 1087.5], [3042.0, 1078.0], [2970.0, 112.5], [3026.0, 1069.0], [3034.0, 122.0], [3010.0, 1062.0], [2994.0, 1076.0], [3002.0, 1066.5], [3170.0, 1120.5], [3082.0, 598.0], [3098.0, 108.0], [3178.0, 1112.0], [3114.0, 1097.6], [3106.0, 1090.0], [3138.0, 1114.0], [3146.0, 615.5], [3154.0, 1115.375], [3162.0, 1100.0], [3218.0, 519.2], [3210.0, 1132.0], [3314.0, 1196.0], [3282.0, 1176.6666666666667], [3290.0, 1166.0], [3274.0, 634.5], [3266.0, 1150.5], [3250.0, 1137.0], [3242.0, 1143.0], [3258.0, 1143.5], [3234.0, 1146.0], [3426.0, 1208.75], [3378.0, 1160.0], [3362.0, 1156.6], [3386.0, 1169.3333333333333], [3394.0, 1172.0], [3410.0, 1180.3333333333333], [3402.0, 1176.0], [3418.0, 1211.6666666666667], [3434.0, 1113.6923076923076], [3450.0, 1205.5], [3458.0, 1209.0], [3474.0, 654.5], [3498.0, 1220.0], [3506.0, 651.25], [3570.0, 1245.0], [3530.0, 1230.0], [3578.0, 1240.0], [3538.0, 1237.0], [3554.0, 1250.0], [3562.0, 1058.5], [3586.0, 1254.6666666666667], [3594.0, 819.0], [3610.0, 1271.0], [3618.0, 479.66666666666663], [3642.0, 1285.0], [3650.0, 1287.0], [3666.0, 1289.0], [3778.0, 699.5], [3786.0, 1144.0], [3794.0, 1109.0], [3802.0, 1116.0], [3834.0, 1140.3333333333333], [3818.0, 1135.0], [3826.0, 599.0], [3858.0, 1145.3333333333333], [3842.0, 616.0], [3850.0, 1158.8], [3882.0, 1163.25], [3914.0, 1207.4], [3962.0, 1023.0], [3922.0, 1207.125], [3890.0, 1175.6666666666667], [3930.0, 1194.0], [3938.0, 1194.0], [3946.0, 1204.0], [3954.0, 1212.0], [3978.0, 1216.0], [3970.0, 1213.8], [3994.0, 1223.4], [4074.0, 1253.6666666666667], [4090.0, 1291.0], [4082.0, 1278.0], [4002.0, 1234.25], [4010.0, 946.25], [4026.0, 1126.7272727272727], [4034.0, 935.5], [4042.0, 1240.25], [4058.0, 1258.75], [4132.0, 1304.0], [4116.0, 1296.6666666666667], [4148.0, 1302.0], [4308.0, 1281.0], [4324.0, 1301.2], [4164.0, 1248.6], [4180.0, 1266.5], [4196.0, 1267.0], [4212.0, 1270.0], [4244.0, 1283.0], [4260.0, 1284.5], [4372.0, 1310.0], [4388.0, 1295.0], [4404.0, 1319.0], [4468.0, 2360.0], [4596.0, 1405.0], [4612.0, 2187.75], [4660.0, 1429.0], [4724.0, 2496.0], [4692.0, 1948.5], [4708.0, 2472.0], [4676.0, 1439.0], [4740.0, 2501.5], [4756.0, 2516.6666666666665], [4772.0, 1475.0], [4788.0, 37.5], [4117.0, 1291.0], [4101.0, 1291.0000000000002], [4133.0, 1304.6666666666667], [4149.0, 57.0], [4309.0, 1280.0], [4325.0, 1298.6666666666667], [4341.0, 1296.0], [4165.0, 1250.0], [4181.0, 1267.7499999999998], [4197.0, 1264.0], [4213.0, 1268.0], [4229.0, 1265.0], [4245.0, 1282.0], [4261.0, 1277.6], [4373.0, 1306.5], [4357.0, 1291.4], [4389.0, 1296.75], [4421.0, 1324.0], [4437.0, 1407.0], [4469.0, 1779.0], [4485.0, 2370.0], [4565.0, 2395.0], [4533.0, 23.5], [4661.0, 1436.0666666666666], [4725.0, 2496.0], [4773.0, 1475.6666666666667], [4789.0, 1275.5], [2115.0, 707.5], [2051.0, 717.0], [2067.0, 710.5], [2131.0, 718.6363636363636], [2139.0, 711.5714285714287], [2083.0, 689.0], [2123.0, 714.0], [2163.0, 714.0], [2147.0, 705.5], [2091.0, 694.0], [2203.0, 758.0], [2211.0, 759.7857142857143], [2267.0, 768.0], [2275.0, 767.0], [2283.0, 163.0], [2299.0, 782.0], [2219.0, 639.2], [2227.0, 756.0], [2195.0, 167.0], [2179.0, 166.0], [2331.0, 475.5], [2347.0, 787.4999999999999], [2363.0, 783.0], [2355.0, 574.3333333333334], [2339.0, 790.5], [2387.0, 798.0], [2419.0, 153.0], [2323.0, 159.0], [2507.0, 142.0], [2483.0, 144.0], [2459.0, 152.0], [2651.0, 128.0], [2643.0, 129.0], [2779.0, 1054.4], [2787.0, 594.5], [2763.0, 130.0], [2747.0, 133.0], [2723.0, 129.0], [2843.0, 1042.0], [2835.0, 1050.2222222222224], [2819.0, 1039.0], [2867.0, 1030.0], [2875.0, 1034.0], [2915.0, 1047.0], [2923.0, 1046.75], [2931.0, 1044.0], [2899.0, 1047.5], [2907.0, 1048.0], [2859.0, 1026.0], [2851.0, 1023.0], [2971.0, 1071.0], [3003.0, 1065.5], [2987.0, 1083.8333333333333], [2979.0, 1075.0], [3059.0, 1087.0], [3067.0, 111.0], [3051.0, 1087.0], [3043.0, 1080.0], [3011.0, 899.8333333333333], [3035.0, 1077.5], [3019.0, 109.0], [2995.0, 1077.0], [3091.0, 844.0], [3099.0, 1086.0], [3075.0, 1085.0], [3123.0, 1104.0], [3147.0, 1123.0], [3179.0, 1112.2], [3195.0, 1128.0], [3171.0, 1114.0], [3163.0, 1107.3333333333335], [3115.0, 1098.0], [3307.0, 1183.8333333333333], [3203.0, 1127.8], [3259.0, 104.0], [3251.0, 104.0], [3211.0, 1133.0], [3227.0, 800.6666666666666], [3323.0, 1192.0], [3267.0, 626.25], [3283.0, 1173.7777777777778], [3291.0, 1168.3333333333333], [3219.0, 451.0], [3235.0, 1146.0], [3243.0, 1142.5], [3339.0, 1182.0666666666666], [3347.0, 1140.0], [3387.0, 898.75], [3395.0, 632.0], [3379.0, 1162.0], [3403.0, 451.0], [3451.0, 1206.0], [3427.0, 92.0], [3555.0, 1252.0], [3475.0, 1223.5], [3483.0, 937.25], [3515.0, 1219.0], [3491.0, 1220.0], [3547.0, 1243.0], [3579.0, 1251.5], [3571.0, 84.0], [3563.0, 82.0], [3587.0, 859.6666666666667], [3595.0, 1262.0], [3643.0, 1286.0], [3627.0, 681.0], [3667.0, 1298.0], [3675.0, 1291.0], [3683.0, 1294.0], [3635.0, 84.0], [3603.0, 85.0], [3747.0, 1319.0], [3779.0, 1331.0], [3787.0, 587.5], [3811.0, 1125.0], [3795.0, 415.33333333333337], [3803.0, 1117.0], [3835.0, 1142.1666666666667], [3827.0, 1129.5], [3851.0, 1154.5714285714284], [3843.0, 1156.0], [3883.0, 1164.0], [3915.0, 1206.0], [3923.0, 1205.0], [3891.0, 441.33333333333337], [3939.0, 1195.6666666666667], [3963.0, 1218.0], [3979.0, 1210.0], [3987.0, 1214.625], [4003.0, 1235.3333333333333], [3971.0, 1213.0], [3995.0, 1229.0], [4019.0, 1243.6666666666667], [4027.0, 1231.2], [4011.0, 1241.0], [4035.0, 1228.5], [4091.0, 1285.0], [4067.0, 1260.0], [4075.0, 1254.25], [4051.0, 1259.6666666666667], [4059.0, 1256.8333333333333], [4102.0, 1284.8], [4118.0, 1288.0], [4166.0, 1252.0], [4214.0, 1265.5714285714287], [4230.0, 1266.0], [4246.0, 1283.0], [4262.0, 1273.4285714285716], [4278.0, 1284.4], [4326.0, 1302.0], [4342.0, 1295.0], [4374.0, 1303.5], [4390.0, 1300.0], [4422.0, 1066.4], [4438.0, 1409.0], [4454.0, 2353.0], [4470.0, 2363.0], [4502.0, 2390.3333333333335], [4518.0, 1889.0], [4598.0, 18.0], [4614.0, 1412.0], [4662.0, 1436.0], [4710.0, 2485.0], [4678.0, 1441.0], [4742.0, 1992.0], [4774.0, 1476.0], [4758.0, 647.75], [4630.0, 15.0], [4790.0, 23.166666666666668], [4119.0, 1291.5], [4103.0, 1277.0], [4135.0, 1307.5], [4151.0, 1305.0], [4183.0, 1270.6666666666667], [4199.0, 1261.6], [4231.0, 1268.0], [4327.0, 1296.0], [4343.0, 1294.0], [4215.0, 1264.5], [4247.0, 1285.4285714285713], [4279.0, 1285.0], [4375.0, 1304.5], [4391.0, 1302.6666666666667], [4455.0, 2356.0], [4503.0, 2389.0], [4519.0, 2392.0], [4567.0, 2401.6666666666665], [4615.0, 1918.0], [4663.0, 1436.6666666666667], [4647.0, 1420.0], [4679.0, 1433.6666666666667], [4711.0, 2487.0], [4759.0, 2509.0], [4775.0, 1477.0], [4791.0, 1993.0], [537.0, 353.0], [527.0, 337.0], [523.0, 341.2], [525.0, 339.5], [529.0, 341.6666666666667], [539.0, 354.5], [541.0, 354.75], [543.0, 204.0], [547.0, 358.5], [559.0, 365.3333333333333], [549.0, 362.0], [551.0, 361.6666666666667], [561.0, 100.93023255813955], [553.0, 363.5], [555.0, 284.25], [557.0, 364.0], [579.0, 385.0], [577.0, 382.25], [601.0, 390.83333333333337], [603.0, 152.7551020408163], [605.0, 412.5], [607.0, 411.42857142857144], [585.0, 390.0], [587.0, 391.0], [589.0, 266.5], [595.0, 321.0], [593.0, 144.0], [597.0, 425.0], [599.0, 271.5], [613.0, 400.25], [609.0, 402.0], [619.0, 405.4137931034483], [611.0, 399.0], [633.0, 407.77777777777777], [635.0, 411.25], [639.0, 300.0], [637.0, 236.92307692307693], [625.0, 408.4285714285714], [627.0, 403.57142857142856], [629.0, 408.0], [631.0, 403.0], [617.0, 416.0], [669.0, 415.0], [641.0, 354.0], [651.0, 329.5], [671.0, 416.6666666666667], [665.0, 416.0], [647.0, 247.0], [657.0, 357.6666666666667], [663.0, 385.4], [661.0, 268.5], [649.0, 411.0], [653.0, 330.875], [679.0, 421.0], [677.0, 420.0], [675.0, 247.0], [699.0, 417.0], [697.0, 256.5], [701.0, 343.5], [683.0, 380.625], [673.0, 253.6], [691.0, 313.6666666666667], [693.0, 431.0], [695.0, 249.0], [705.0, 440.2], [723.0, 426.0], [725.0, 429.6666666666667], [727.0, 377.14285714285717], [713.0, 425.0], [719.0, 427.0], [729.0, 259.0], [721.0, 264.0], [763.0, 438.8], [739.0, 427.0], [741.0, 429.0], [761.0, 378.6666666666667], [749.0, 433.75], [745.0, 253.0], [751.0, 315.3333333333333], [753.0, 434.0], [755.0, 439.5], [757.0, 439.0], [759.0, 438.44444444444446], [795.0, 343.2], [775.0, 452.0], [773.0, 450.0], [781.0, 264.0], [769.0, 254.0], [793.0, 423.59999999999997], [785.0, 451.3333333333333], [797.0, 264.0], [787.0, 446.0], [791.0, 264.5], [777.0, 451.0], [779.0, 450.5], [829.0, 428.0], [825.0, 427.3333333333333], [805.0, 394.75], [803.0, 270.0], [807.0, 438.0], [811.0, 433.0], [813.0, 406.2], [831.0, 430.5], [827.0, 429.0], [817.0, 351.0], [819.0, 433.6666666666667], [821.0, 309.5], [823.0, 269.0], [837.0, 322.6666666666667], [833.0, 428.0], [835.0, 430.0], [847.0, 366.8], [843.0, 433.0], [861.0, 444.0], [851.0, 268.0], [853.0, 270.0], [839.0, 436.0], [845.0, 430.0], [871.0, 449.0], [867.0, 447.0], [869.0, 271.0], [889.0, 271.0], [891.0, 271.0], [873.0, 413.2], [887.0, 443.0], [879.0, 450.0], [875.0, 270.0], [893.0, 442.0], [895.0, 434.6666666666667], [903.0, 431.25], [909.0, 438.0], [897.0, 376.6666666666667], [907.0, 379.0], [913.0, 432.25], [917.0, 434.5], [927.0, 436.3333333333333], [921.0, 273.5], [905.0, 353.0], [951.0, 437.5], [949.0, 360.0], [939.0, 438.0], [929.0, 432.0], [935.0, 278.0], [957.0, 277.0], [943.0, 274.0], [967.0, 446.0], [963.0, 442.0], [973.0, 446.0], [961.0, 279.0], [965.0, 402.0], [985.0, 454.0], [969.0, 446.0], [971.0, 446.3333333333333], [989.0, 460.0], [977.0, 364.0], [979.0, 447.0], [983.0, 450.0], [981.0, 406.0], [987.0, 419.2], [995.0, 474.5], [993.0, 459.33333333333337], [997.0, 436.37499999999994], [1009.0, 368.5], [1015.0, 282.0], [1021.0, 283.0], [1019.0, 467.0], [1007.0, 324.0], [1005.0, 460.0], [1001.0, 277.0], [1074.0, 480.0], [1030.0, 470.0], [1026.0, 407.0], [1050.0, 280.0], [1038.0, 474.5], [1082.0, 482.0], [1078.0, 476.0], [1066.0, 481.5], [1062.0, 479.75], [1070.0, 477.5], [1058.0, 479.0], [1098.0, 493.0], [1102.0, 495.0], [1090.0, 486.0], [1094.0, 279.0], [1110.0, 491.0], [1114.0, 494.0], [1106.0, 436.5], [1142.0, 508.0], [1150.0, 513.0], [1122.0, 496.5], [1134.0, 391.5], [1210.0, 342.75], [1162.0, 518.6], [1182.0, 524.0], [1206.0, 445.0], [1214.0, 519.0], [1186.0, 533.0], [1202.0, 499.66666666666663], [1190.0, 524.8571428571429], [1194.0, 526.3333333333334], [1198.0, 530.0], [1170.0, 524.0], [1158.0, 515.0], [1266.0, 540.5], [1230.0, 486.5], [1250.0, 536.0], [1278.0, 540.0], [1274.0, 540.0], [1262.0, 540.0], [1226.0, 444.0], [1234.0, 525.0], [1242.0, 526.0], [1246.0, 363.0], [1218.0, 372.0], [1238.0, 471.6666666666667], [1334.0, 553.5], [1310.0, 557.0], [1290.0, 499.5], [1282.0, 286.0], [1302.0, 551.0], [1306.0, 422.75], [1342.0, 568.8032786885245], [1338.0, 318.0], [1314.0, 377.6666666666667], [1330.0, 426.90000000000003], [1326.0, 554.2], [1318.0, 288.0], [1346.0, 468.3333333333333], [1358.0, 556.0], [1374.0, 489.25], [1406.0, 582.0], [1398.0, 234.0], [1394.0, 574.0], [1382.0, 563.3333333333334], [1350.0, 554.5], [1362.0, 547.5], [1366.0, 549.0], [1370.0, 421.5], [1414.0, 575.0], [1430.0, 554.6], [1410.0, 581.3333333333334], [1426.0, 562.2], [1422.0, 561.6666666666666], [1434.0, 504.16666666666663], [1438.0, 576.5], [1458.0, 590.0], [1466.0, 594.0], [1462.0, 229.0], [1470.0, 593.0], [1446.0, 231.0], [1502.0, 605.75], [1510.0, 418.5], [1514.0, 608.0], [1506.0, 426.0], [1534.0, 226.0], [1498.0, 225.0], [1586.0, 350.3333333333333], [1590.0, 616.6666666666666], [1546.0, 611.6666666666666], [1598.0, 626.5], [1594.0, 621.5], [1582.0, 512.0], [1574.0, 220.0], [1554.0, 615.0], [1562.0, 603.0], [1558.0, 609.4], [1614.0, 595.0], [1610.0, 592.4], [1626.0, 603.5], [1630.0, 606.0], [1618.0, 597.5], [1658.0, 612.0], [1662.0, 607.0], [1634.0, 607.0], [1650.0, 611.0], [1654.0, 610.0], [1638.0, 610.0], [1646.0, 609.0], [1670.0, 621.2083333333335], [1666.0, 608.0], [1678.0, 626.0], [1690.0, 623.0], [1710.0, 622.0], [1702.0, 617.925925925926], [1714.0, 625.0], [1726.0, 206.0], [1742.0, 350.3333333333333], [1754.0, 627.0], [1746.0, 633.5], [1762.0, 624.0], [1790.0, 638.0], [1786.0, 630.0], [1766.0, 625.0], [1770.0, 620.0], [1758.0, 625.5], [1738.0, 208.0], [1806.0, 651.2857142857143], [1794.0, 639.6666666666666], [1842.0, 652.0], [1846.0, 655.0], [1854.0, 650.0], [1798.0, 644.3333333333334], [1802.0, 650.4], [1814.0, 652.0], [1834.0, 646.2], [1838.0, 650.6], [1826.0, 637.3333333333334], [1870.0, 641.0], [1918.0, 676.6666666666666], [1866.0, 644.4], [1898.0, 676.4000000000001], [1882.0, 656.0], [1926.0, 672.0], [1942.0, 683.75], [1982.0, 685.3333333333334], [1978.0, 685.0], [1954.0, 687.5], [1922.0, 674.6], [1946.0, 685.0], [1958.0, 690.0], [1986.0, 680.6666666666666], [1990.0, 677.75], [2002.0, 680.0], [2006.0, 683.5], [2018.0, 692.0], [2022.0, 697.0], [2030.0, 703.0], [2026.0, 700.0], [2034.0, 705.0], [2042.0, 181.0], [2148.0, 529.0], [2068.0, 688.0], [2164.0, 745.4], [2156.0, 168.0], [2084.0, 691.0], [2108.0, 703.0], [2092.0, 694.3333333333334], [2140.0, 696.0], [2132.0, 713.0], [2204.0, 760.0], [2212.0, 759.5], [2276.0, 768.0], [2220.0, 372.0], [2236.0, 759.0], [2268.0, 770.0], [2300.0, 783.0], [2284.0, 773.0], [2364.0, 783.0], [2356.0, 470.5], [2332.0, 795.6], [2380.0, 582.6666666666666], [2388.0, 799.0], [2372.0, 787.0], [2324.0, 796.0], [2340.0, 792.0], [2452.0, 152.0], [2652.0, 128.0], [2780.0, 438.33333333333337], [2788.0, 750.3333333333333], [2812.0, 1037.0], [2756.0, 124.0], [2700.0, 134.0], [2692.0, 128.25], [2924.0, 423.66666666666663], [2820.0, 1041.3333333333333], [2844.0, 1032.3333333333333], [2900.0, 1047.5], [2908.0, 1046.5], [2884.0, 1042.0], [2916.0, 1047.5], [2940.0, 1047.0], [2932.0, 115.0], [2852.0, 1022.5], [2868.0, 1031.0], [2876.0, 1035.5], [2964.0, 747.3333333333333], [2956.0, 742.0], [2972.0, 1072.0], [3052.0, 1087.9999999999998], [3060.0, 1086.0], [3028.0, 595.0], [3012.0, 110.0], [2988.0, 1084.0], [2996.0, 1077.0], [3004.0, 1076.0], [3180.0, 1112.0], [3124.0, 1103.0], [3092.0, 600.0], [3196.0, 1126.25], [3172.0, 1112.0], [3148.0, 1122.2], [3116.0, 1098.0], [3156.0, 1104.0], [3164.0, 1107.65], [3228.0, 1070.1538461538462], [3204.0, 1128.5], [3212.0, 1133.3333333333333], [3220.0, 1140.0], [3316.0, 1182.5], [3308.0, 1188.5], [3300.0, 1178.0], [3268.0, 1001.4285714285716], [3284.0, 961.4], [3276.0, 102.0], [3292.0, 1168.0], [3244.0, 1139.75], [3428.0, 923.0], [3340.0, 1132.0], [3364.0, 1156.5], [3388.0, 1169.0], [3404.0, 1177.0], [3420.0, 1211.6666666666667], [3436.0, 1194.0], [3444.0, 1199.0], [3452.0, 1207.0], [3396.0, 91.0], [3484.0, 1221.3333333333333], [3476.0, 1222.0], [3460.0, 1211.0], [3492.0, 1217.8], [3516.0, 1219.75], [3564.0, 1255.0], [3572.0, 84.33333333333333], [3548.0, 1245.0], [3580.0, 1261.0], [3532.0, 1232.0], [3524.0, 1224.0], [3588.0, 650.0], [3604.0, 1271.0], [3620.0, 1275.0], [3612.0, 1271.0], [3636.0, 1284.0], [3660.0, 83.0], [3628.0, 85.0], [3596.0, 84.0], [3820.0, 1137.0], [3764.0, 1323.2857142857142], [3756.0, 1322.0], [3812.0, 1125.5], [3796.0, 1111.0], [3836.0, 1144.1666666666667], [3828.0, 1131.0], [3804.0, 69.5], [3780.0, 70.0], [3868.0, 877.25], [3852.0, 1151.25], [3876.0, 1154.0], [3884.0, 1165.0], [3860.0, 609.0], [3892.0, 737.2], [3916.0, 1205.5], [3908.0, 1196.6666666666667], [3964.0, 1214.0], [3956.0, 1216.0], [3948.0, 1206.0], [3932.0, 1195.0], [3996.0, 1226.6666666666667], [3980.0, 1210.0], [3972.0, 1214.0], [4028.0, 61.0], [3988.0, 1223.5], [4004.0, 1235.4], [4020.0, 1239.0], [4036.0, 938.5], [4084.0, 1279.0], [4092.0, 672.5], [4068.0, 1262.0], [4076.0, 1263.1875], [4052.0, 660.0], [4060.0, 1255.0], [4120.0, 875.0], [4104.0, 1286.0], [4152.0, 1305.0], [4184.0, 1272.4], [4200.0, 1256.777777777778], [4216.0, 1265.5], [4232.0, 1269.0], [4264.0, 1275.0], [4296.0, 1273.5714285714284], [4360.0, 1294.0], [4376.0, 1312.6666666666667], [4392.0, 1303.0], [4440.0, 1332.0], [4472.0, 1351.0], [4536.0, 2206.7000000000003], [4552.0, 1382.0], [4568.0, 2412.5], [4616.0, 1815.8], [4632.0, 1413.0], [4744.0, 2508.0], [4760.0, 2304.6], [4776.0, 1477.6666666666667], [4121.0, 1286.5], [4105.0, 672.0], [4137.0, 1306.5], [4153.0, 1304.0], [4169.0, 1256.0], [4185.0, 1272.0], [4201.0, 1256.8333333333333], [4233.0, 1268.8], [4297.0, 1270.0], [4345.0, 1294.0], [4249.0, 1292.5], [4265.0, 1270.0], [4281.0, 1285.6666666666667], [4393.0, 1304.375], [4361.0, 1297.0], [4409.0, 1321.0], [4425.0, 1552.0], [4441.0, 1332.0], [4505.0, 2386.0], [4537.0, 2070.0], [4585.0, 2419.5], [4601.0, 2437.3333333333335], [4617.0, 1410.6666666666667], [4649.0, 1421.0], [4633.0, 1414.5], [4681.0, 1441.0], [4745.0, 2333.3333333333335], [4761.0, 2520.0], [4793.0, 2502.5], [2157.0, 709.0], [2149.0, 713.0], [2165.0, 727.75], [2173.0, 740.6666666666666], [2101.0, 699.0], [2109.0, 171.0], [2125.0, 715.0], [2133.0, 713.8], [2141.0, 696.0], [2277.0, 769.8749999999999], [2197.0, 754.5], [2189.0, 555.6666666666666], [2205.0, 759.0], [2293.0, 778.0], [2301.0, 784.0], [2253.0, 767.0], [2261.0, 773.0], [2269.0, 163.0], [2221.0, 757.0], [2229.0, 757.0], [2213.0, 611.5], [2365.0, 784.0], [2357.0, 474.0], [2317.0, 792.0], [2333.0, 791.0], [2373.0, 787.2], [2381.0, 794.0], [2389.0, 798.0], [2341.0, 790.5], [2325.0, 796.0], [2349.0, 785.0], [2469.0, 145.5], [2461.0, 156.0], [2669.0, 132.0], [2597.0, 132.0], [2773.0, 1047.0], [2789.0, 594.5], [2765.0, 130.0], [2757.0, 123.0], [2749.0, 127.0], [2733.0, 127.66666666666667], [2709.0, 141.0], [2693.0, 132.0], [2845.0, 1041.5], [2869.0, 1031.0], [2821.0, 1043.0], [2877.0, 1037.0], [2837.0, 1046.5], [2901.0, 1047.625], [2909.0, 117.0], [2885.0, 1043.0], [2933.0, 577.0], [2925.0, 1047.0], [2917.0, 811.75], [2853.0, 1025.0], [3053.0, 1089.0], [2997.0, 1076.0], [2957.0, 1058.3333333333333], [3013.0, 1058.0], [3029.0, 1070.5], [3021.0, 122.0], [3061.0, 1080.6666666666667], [3045.0, 1080.0], [2965.0, 1066.0], [3197.0, 1125.0], [3101.0, 1086.0], [3093.0, 109.0], [3141.0, 444.66666666666663], [3189.0, 1130.6666666666667], [3173.0, 1111.0], [3157.0, 940.3333333333334], [3165.0, 1135.2500000000002], [3149.0, 1121.5], [3077.0, 598.5], [3109.0, 895.8], [3117.0, 902.0], [3125.0, 112.0], [3221.0, 448.33333333333337], [3213.0, 1134.5], [3261.0, 1145.0], [3253.0, 1140.0], [3229.0, 1149.0], [3269.0, 1154.8], [3285.0, 1171.5], [3277.0, 1173.0], [3317.0, 1191.0], [3301.0, 100.0], [3237.0, 1144.0], [3245.0, 1011.375], [3429.0, 1203.8181818181818], [3341.0, 1134.0], [3333.0, 1193.0], [3349.0, 1141.0], [3365.0, 625.0], [3397.0, 1175.0], [3381.0, 1162.0], [3405.0, 1178.0], [3413.0, 1174.0], [3421.0, 1215.5], [3445.0, 977.0], [3437.0, 89.0], [3557.0, 667.5], [3477.0, 1223.0], [3485.0, 1222.0], [3517.0, 1219.0], [3469.0, 87.0], [3493.0, 1222.0], [3573.0, 1245.0], [3565.0, 82.0], [3581.0, 1011.0], [3549.0, 1245.0], [3533.0, 849.6666666666667], [3525.0, 1226.0], [3597.0, 866.3333333333333], [3613.0, 1277.0], [3653.0, 1290.0], [3701.0, 1300.0], [3669.0, 1292.0], [3717.0, 1306.0], [3741.0, 1317.5], [3797.0, 1112.0], [3821.0, 1130.3333333333335], [3837.0, 1147.0], [3829.0, 1132.0], [3805.0, 71.33333333333333], [3773.0, 71.0], [3861.0, 1148.0], [3853.0, 1150.1666666666667], [3845.0, 73.0], [3885.0, 1167.0], [3877.0, 614.75], [3869.0, 1146.0], [3925.0, 1206.0], [3941.0, 1196.75], [3949.0, 1206.0], [3965.0, 1214.0], [3973.0, 1212.2], [3997.0, 1226.0], [4021.0, 1242.0], [4029.0, 1225.5], [4037.0, 1233.2], [4061.0, 1257.5], [4077.0, 1267.0], [4085.0, 874.3333333333333], [4106.0, 1286.0], [4170.0, 1256.5], [4154.0, 1305.5], [4298.0, 1270.0], [4314.0, 1287.5], [4346.0, 1286.8], [4330.0, 42.0], [4186.0, 1273.8124999999998], [4202.0, 1259.5], [4234.0, 1270.2], [4218.0, 1263.6666666666667], [4250.0, 1293.0], [4266.0, 1271.3333333333335], [4282.0, 1287.5], [4362.0, 1298.0], [4378.0, 1303.0], [4426.0, 1515.589147286822], [4442.0, 2360.0], [4458.0, 1684.0], [4474.0, 2360.0], [4506.0, 2400.0], [4538.0, 1389.6666666666667], [4554.0, 1380.0], [4586.0, 2422.0], [4570.0, 2402.0], [4618.0, 1749.6666666666667], [4682.0, 1440.0], [4730.0, 2499.0], [4762.0, 2001.5], [4778.0, 1479.0], [4123.0, 1286.5], [4107.0, 1283.5], [4139.0, 1303.909090909091], [4315.0, 1289.0], [4331.0, 1300.0], [4347.0, 1283.8333333333335], [4171.0, 777.0], [4187.0, 1275.0], [4203.0, 1261.0], [4235.0, 1270.0], [4251.0, 1295.6666666666667], [4267.0, 1272.0], [4283.0, 1290.0], [4395.0, 1306.0], [4427.0, 1402.0], [4443.0, 2346.0], [4459.0, 1344.0], [4475.0, 2364.0], [4539.0, 705.0], [4587.0, 2421.5], [4603.0, 2423.0], [4619.0, 1407.7142857142856], [4731.0, 2504.0], [4763.0, 2522.0], [4779.0, 1479.0], [4795.0, 1493.0], [4699.0, 8.0], [1055.0, 441.2], [1027.0, 471.0], [1043.0, 479.5], [1087.0, 485.5], [1083.0, 381.5], [1075.0, 479.0], [1071.0, 485.0], [1063.0, 283.0], [1035.0, 471.25], [1143.0, 510.0], [1103.0, 495.5], [1139.0, 380.0], [1091.0, 488.0], [1119.0, 378.0], [1099.0, 494.5], [1107.0, 367.0], [1115.0, 494.0], [1131.0, 358.25], [1135.0, 506.0], [1123.0, 500.0], [1151.0, 513.6666666666666], [1147.0, 375.0], [1207.0, 522.6666666666666], [1179.0, 526.8333333333334], [1183.0, 528.3333333333334], [1203.0, 523.75], [1211.0, 520.0], [1191.0, 525.0], [1199.0, 494.28571428571433], [1195.0, 488.75], [1187.0, 523.0], [1163.0, 521.0], [1171.0, 486.0], [1275.0, 538.0], [1227.0, 523.0], [1279.0, 545.5], [1267.0, 539.0], [1231.0, 285.0], [1263.0, 544.0], [1259.0, 546.0], [1235.0, 498.6666666666667], [1247.0, 283.0], [1335.0, 557.0], [1287.0, 544.0], [1311.0, 557.6666666666666], [1303.0, 324.0], [1291.0, 546.4], [1295.0, 361.0], [1283.0, 542.0], [1315.0, 557.2], [1319.0, 557.0], [1339.0, 558.0], [1323.0, 501.8], [1327.0, 288.0], [1359.0, 553.5], [1375.0, 404.12500000000006], [1351.0, 290.0], [1355.0, 291.0], [1399.0, 465.0], [1403.0, 575.8], [1391.0, 574.0], [1387.0, 566.0], [1379.0, 325.7222222222221], [1363.0, 462.0], [1423.0, 562.3333333333334], [1415.0, 576.0], [1419.0, 494.0], [1435.0, 560.0], [1431.0, 566.0], [1459.0, 579.0], [1443.0, 458.66666666666663], [1447.0, 399.0], [1451.0, 569.0], [1455.0, 230.0], [1467.0, 589.3333333333334], [1475.0, 603.0], [1499.0, 608.0], [1495.0, 606.0], [1503.0, 604.0], [1483.0, 605.0], [1479.0, 620.0], [1487.0, 594.0], [1507.0, 227.0], [1523.0, 225.0], [1595.0, 521.25], [1539.0, 522.25], [1599.0, 628.5], [1575.0, 224.0], [1591.0, 616.5], [1547.0, 221.0], [1543.0, 223.0], [1583.0, 610.5], [1579.0, 607.0], [1555.0, 484.66666666666663], [1559.0, 449.6], [1567.0, 595.0], [1603.0, 589.6666666666666], [1611.0, 593.0], [1623.0, 601.0], [1631.0, 606.0], [1627.0, 604.0], [1619.0, 599.0], [1615.0, 596.0], [1651.0, 610.0], [1659.0, 411.0], [1663.0, 608.0], [1639.0, 609.0], [1643.0, 610.0], [1647.0, 210.0], [1607.0, 588.0], [1675.0, 626.8], [1695.0, 619.3333333333334], [1687.0, 620.5], [1671.0, 630.2857142857143], [1707.0, 618.0], [1703.0, 617.75], [1715.0, 626.6666666666666], [1723.0, 631.0], [1699.0, 621.0], [1739.0, 641.0], [1731.0, 421.0], [1747.0, 634.6666666666666], [1735.0, 635.0], [1791.0, 638.0], [1751.0, 630.0], [1759.0, 628.5], [1775.0, 620.0], [1763.0, 627.0], [1771.0, 622.5], [1847.0, 655.0], [1799.0, 644.0], [1823.0, 636.0], [1843.0, 655.0], [1851.0, 652.5], [1803.0, 650.0], [1815.0, 645.8], [1819.0, 643.1666666666666], [1831.0, 644.3333333333334], [1839.0, 651.0], [1827.0, 639.5], [1867.0, 643.5], [1887.0, 663.0], [1903.0, 678.3333333333334], [1899.0, 677.0], [1915.0, 676.75], [1911.0, 679.5], [1895.0, 670.0], [1875.0, 496.66666666666663], [1879.0, 651.0], [1923.0, 673.0], [1939.0, 682.0], [1931.0, 678.0], [1983.0, 684.0], [1971.0, 692.0], [1959.0, 689.6666666666666], [1967.0, 689.5], [1943.0, 686.0], [1947.0, 687.0], [2039.0, 710.0], [1987.0, 680.25], [2007.0, 683.0], [2003.0, 681.0], [2043.0, 711.0], [2047.0, 177.0], [2019.0, 691.0], [2023.0, 697.0], [2027.0, 701.0], [2150.0, 703.3333333333334], [2070.0, 696.75], [2158.0, 709.0], [2166.0, 756.566371681416], [2174.0, 741.0], [2094.0, 696.0], [2102.0, 700.0], [2134.0, 712.3333333333334], [2142.0, 300.75], [2110.0, 705.0], [2278.0, 772.0], [2198.0, 755.0], [2182.0, 745.0], [2206.0, 365.3333333333333], [2270.0, 770.0], [2262.0, 770.0], [2254.0, 770.0], [2294.0, 162.0], [2214.0, 756.5], [2222.0, 757.5], [2334.0, 790.0], [2318.0, 793.0], [2326.0, 797.0], [2366.0, 783.6666666666666], [2406.0, 157.0], [2494.0, 142.0], [2638.0, 128.0], [2606.0, 129.0], [2790.0, 1063.3333333333333], [2782.0, 686.4], [2798.0, 1050.3333333333333], [2758.0, 126.5], [2750.0, 127.33333333333333], [2710.0, 129.0], [2846.0, 1035.0], [2822.0, 1044.3333333333333], [2878.0, 1037.0], [2838.0, 1047.75], [2870.0, 1032.6666666666667], [2910.0, 348.25], [2902.0, 427.0], [2926.0, 857.6], [2918.0, 579.0], [2862.0, 1027.3333333333333], [3046.0, 1082.3333333333333], [2974.0, 1074.0], [2966.0, 110.0], [3062.0, 1082.5], [3014.0, 746.3333333333333], [3038.0, 1080.0], [2958.0, 1059.0], [2990.0, 1086.8], [2998.0, 1073.6666666666667], [3006.0, 824.0], [3102.0, 1088.0], [3078.0, 1088.0], [3190.0, 1131.0], [3174.0, 106.0], [3126.0, 1105.0], [3118.0, 1099.0], [3158.0, 1108.0], [3166.0, 1114.7], [3302.0, 1178.2], [3214.0, 1135.0], [3222.0, 882.5], [3230.0, 1149.0], [3310.0, 1190.0], [3326.0, 1189.0], [3270.0, 1169.7391304347825], [3286.0, 1165.6666666666665], [3294.0, 1171.1666666666667], [3278.0, 1172.0], [3254.0, 621.5], [3262.0, 103.0], [3342.0, 1137.0], [3334.0, 1193.5], [3358.0, 1152.5714285714284], [3446.0, 1201.6666666666667], [3438.0, 1193.0], [3374.0, 1158.0], [3390.0, 1171.0], [3382.0, 1163.0], [3414.0, 1177.5], [3422.0, 1213.0], [3398.0, 1176.3333333333333], [3406.0, 1180.0], [3462.0, 1211.25], [3478.0, 1222.6666666666667], [3486.0, 1220.25], [3518.0, 1221.0], [3574.0, 1220.0], [3566.0, 1251.5], [3534.0, 1233.5], [3582.0, 83.0], [3598.0, 673.5], [3590.0, 1232.0], [3606.0, 884.3333333333333], [3638.0, 1284.0], [3646.0, 1280.0], [3654.0, 1286.0], [3662.0, 1292.0], [3702.0, 1300.0], [3630.0, 81.0], [3774.0, 1329.0], [3766.0, 1325.0], [3782.0, 1333.0], [3814.0, 598.0], [3838.0, 1148.0], [3950.0, 1209.2], [3846.0, 795.6666666666667], [3854.0, 787.6666666666667], [3886.0, 1170.5714285714284], [3910.0, 1199.0], [3926.0, 1204.6666666666665], [3934.0, 1191.5], [3958.0, 1218.0], [3862.0, 72.0], [3982.0, 1207.0], [3974.0, 1213.0], [3998.0, 1229.5], [3990.0, 1224.0], [4006.0, 1238.0], [4014.0, 1240.5], [4030.0, 1227.0], [4046.0, 1252.6], [4054.0, 1261.0], [4062.0, 1258.0], [4038.0, 1235.0], [4070.0, 1263.875], [4086.0, 672.0], [4094.0, 1288.3333333333333], [4124.0, 1287.0], [4108.0, 1282.0], [4140.0, 1302.0], [4300.0, 1270.75], [4332.0, 1296.0], [4348.0, 1283.5], [4172.0, 1259.4], [4188.0, 1274.0], [4204.0, 1263.75], [4236.0, 1271.125], [4220.0, 1263.0], [4252.0, 1300.0], [4268.0, 1273.8], [4284.0, 1291.4], [4556.0, 1383.0], [4396.0, 1307.2], [4364.0, 1302.0], [4412.0, 1321.5], [4476.0, 2363.0], [4460.0, 1345.0], [4524.0, 2398.0], [4540.0, 1380.5], [4604.0, 2435.0], [4572.0, 20.0], [4636.0, 1417.0], [4700.0, 1965.0], [4732.0, 2500.75], [4748.0, 2510.5], [4764.0, 2524.0], [4796.0, 2503.0], [4109.0, 878.0], [4157.0, 1303.3333333333333], [4301.0, 1271.25], [4317.0, 1290.5], [4173.0, 1261.0], [4189.0, 1273.1666666666667], [4205.0, 1265.0], [4221.0, 1262.3333333333333], [4253.0, 1297.0], [4237.0, 1273.0], [4285.0, 1294.0], [4365.0, 1303.0], [4413.0, 1325.0], [4397.0, 1308.0], [4429.0, 1833.0], [4445.0, 1337.0], [4477.0, 2364.0], [4525.0, 2399.0], [4557.0, 1605.3333333333335], [4621.0, 1409.0], [4717.0, 2479.0], [4669.0, 1437.5], [4749.0, 2515.0], [4733.0, 2504.0], [4765.0, 2264.0], [4781.0, 1479.3333333333333], [4637.0, 14.0], [2071.0, 687.0], [2055.0, 718.0], [2127.0, 716.0], [2135.0, 714.75], [2151.0, 705.5], [2159.0, 440.0], [2103.0, 701.0], [2111.0, 704.6666666666666], [2199.0, 757.5], [2191.0, 750.0], [2207.0, 466.0], [2255.0, 771.0], [2287.0, 672.6666666666667], [2263.0, 466.5], [2215.0, 758.3333333333334], [2311.0, 788.0], [2343.0, 791.3333333333334], [2335.0, 794.0], [2319.0, 795.0], [2391.0, 800.0], [2375.0, 790.0], [2423.0, 155.0], [2463.0, 154.0], [2439.0, 152.0], [2663.0, 127.0], [2599.0, 130.75], [2799.0, 935.7777777777778], [2791.0, 1065.0], [2783.0, 1058.0], [2807.0, 732.0], [2743.0, 123.0], [2727.0, 137.0], [2703.0, 130.0], [2879.0, 1039.0], [2831.0, 1051.0], [2871.0, 1033.0], [2847.0, 1031.5], [2911.0, 581.0], [2895.0, 1047.6], [2927.0, 115.0], [2839.0, 1044.0], [2863.0, 1028.0], [3071.0, 1089.5], [2959.0, 1059.5], [2967.0, 111.0], [2975.0, 1076.0], [3055.0, 1089.5], [3015.0, 586.5], [3023.0, 1065.5], [3031.0, 1073.0], [3039.0, 1078.0], [2991.0, 1082.0], [2983.0, 112.0], [2999.0, 117.5], [3007.0, 1061.0], [3087.0, 1087.4], [3079.0, 1085.0], [3103.0, 1093.0], [3111.0, 848.75], [3175.0, 1113.25], [3167.0, 1119.0], [3191.0, 105.0], [3183.0, 107.0], [3119.0, 111.0], [3303.0, 639.0], [3223.0, 622.0], [3207.0, 1129.0], [3255.0, 1138.0], [3311.0, 1192.3333333333335], [3327.0, 1193.0], [3271.0, 1168.5], [3279.0, 1169.5], [3215.0, 1136.0], [3239.0, 1144.0], [3431.0, 919.5], [3391.0, 1171.0], [3343.0, 1138.3333333333333], [3367.0, 1153.5], [3375.0, 1161.0], [3399.0, 1176.0], [3407.0, 1176.0], [3415.0, 1224.0], [3423.0, 1209.75], [3439.0, 1038.4285714285713], [3447.0, 1203.0], [3455.0, 1208.5], [3487.0, 1219.0], [3479.0, 845.0], [3463.0, 1208.5], [3503.0, 463.66666666666663], [3519.0, 1219.0], [3567.0, 1237.3684210526312], [3559.0, 1250.0], [3551.0, 664.0], [3535.0, 1235.0], [3543.0, 1239.5], [3575.0, 649.0], [3583.0, 673.0], [3591.0, 1259.5], [3607.0, 1284.0], [3615.0, 1273.5], [3647.0, 1285.0], [3623.0, 1276.5], [3631.0, 1280.0], [3671.0, 1290.0], [3679.0, 1293.0], [3759.0, 1322.0], [3751.0, 1323.0], [3783.0, 1334.5], [3799.0, 1113.3333333333335], [3815.0, 1132.0], [3807.0, 858.75], [3839.0, 431.33333333333337], [3823.0, 1129.5], [3943.0, 1198.25], [3847.0, 1160.0], [3879.0, 1157.0], [3863.0, 1143.5], [3855.0, 71.0], [3911.0, 1202.0], [3895.0, 1182.0], [3903.0, 74.0], [3919.0, 1208.0], [3927.0, 1203.4], [3959.0, 834.6666666666667], [3967.0, 1216.5], [3951.0, 1210.0], [3983.0, 1209.0], [3975.0, 1209.3333333333333], [3991.0, 1220.0], [4007.0, 356.25], [3999.0, 1230.0], [4023.0, 1245.0], [4015.0, 1245.0], [4031.0, 1224.75], [4039.0, 844.0], [4087.0, 1283.0], [4095.0, 674.0], [4071.0, 1260.5], [4079.0, 1270.5], [4047.0, 1255.0], [4055.0, 460.66666666666663], [4063.0, 58.0], [4142.0, 1300.0], [4158.0, 1264.6666666666667], [4302.0, 1272.5], [4334.0, 1295.0], [4350.0, 1286.0], [4174.0, 1262.5], [4190.0, 1275.0], [4206.0, 1266.7142857142858], [4222.0, 1262.3333333333333], [4254.0, 1298.3333333333333], [4270.0, 1275.0], [4286.0, 1277.1666666666665], [4366.0, 1304.0], [4382.0, 1307.5], [4398.0, 1311.5], [4462.0, 2354.3333333333335], [4478.0, 2366.0], [4542.0, 1378.0], [4622.0, 1410.0], [4686.0, 1432.0], [4750.0, 2514.0], [4766.0, 2519.5], [4782.0, 1480.75], [4798.0, 2505.6666666666665], [4303.0, 1273.0], [4143.0, 676.5], [4159.0, 1283.6666666666667], [4191.0, 1276.0], [4207.0, 1269.5], [4239.0, 1274.0], [4271.0, 1276.5], [4287.0, 1276.4], [4319.0, 667.5], [4335.0, 1295.5], [4383.0, 1306.5], [4399.0, 1312.6666666666667], [4431.0, 2007.0], [4511.0, 2394.5], [4479.0, 2367.0], [4559.0, 2066.0], [4591.0, 1569.5], [4575.0, 20.0], [4623.0, 1410.0], [4687.0, 1442.0], [4671.0, 1434.0], [4751.0, 2502.0], [4735.0, 2506.0], [4767.0, 1481.0], [4783.0, 1482.5], [4799.0, 2497.0], [1.0, 1424.0]], "isOverall": false, "label": "AuthzUser", "isController": false}, {"data": [[4776.931984032687, 350.1175319742457]], "isOverall": false, "label": "AuthzUser-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 76234.65, "minX": 1.631709E12, "maxY": 8236640.05, "series": [{"data": [[1.63170912E12, 7924264.133333334], [1.63170978E12, 8051973.133333334], [1.63170948E12, 7927144.816666666], [1.63170918E12, 7583327.85], [1.63170984E12, 7390167.166666667], [1.63170954E12, 7820337.066666666], [1.63170924E12, 7926594.616666666], [1.6317099E12, 5387386.0], [1.6317096E12, 7918671.4], [1.6317093E12, 7921481.166666667], [1.631709E12, 3670000.6], [1.63170966E12, 7827595.25], [1.63170936E12, 7519881.083333333], [1.63170906E12, 7918057.0], [1.63170972E12, 7741760.383333334], [1.63170942E12, 8236640.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63170912E12, 165801.28333333333], [1.63170978E12, 168636.63333333333], [1.63170948E12, 166019.36666666667], [1.63170918E12, 158820.5], [1.63170984E12, 154770.1], [1.63170954E12, 163792.2], [1.63170924E12, 165986.16666666666], [1.6317099E12, 112813.6], [1.6317096E12, 165836.76666666666], [1.6317093E12, 165944.66666666666], [1.631709E12, 76234.65], [1.63170966E12, 163966.5], [1.63170936E12, 157498.03333333333], [1.63170906E12, 164876.25], [1.63170972E12, 162126.66666666666], [1.63170942E12, 172487.83333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6317099E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 40.2127709236414, "minX": 1.631709E12, "maxY": 897.6846429272105, "series": [{"data": [[1.63170912E12, 65.70205993133588], [1.63170978E12, 612.5579380834407], [1.63170948E12, 66.54316996350423], [1.63170918E12, 864.3785384548386], [1.63170984E12, 312.43174058382925], [1.63170954E12, 348.6305868044995], [1.63170924E12, 48.66050504208741], [1.6317099E12, 897.6846429272105], [1.6317096E12, 67.98745433009185], [1.6317093E12, 40.2127709236414], [1.631709E12, 459.5799776890194], [1.63170966E12, 320.72617902640604], [1.63170936E12, 463.6970681750291], [1.63170906E12, 53.5807522308397], [1.63170972E12, 629.8433788395894], [1.63170942E12, 600.9676156869006]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6317099E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 40.02092364121402, "minX": 1.631709E12, "maxY": 896.2095350205993, "series": [{"data": [[1.63170912E12, 65.5209659678013], [1.63170978E12, 612.2755565763786], [1.63170948E12, 66.28046727881906], [1.63170918E12, 862.2838428708271], [1.63170984E12, 312.1334977923169], [1.63170954E12, 348.3668288233519], [1.63170924E12, 48.34339528294045], [1.6317099E12, 896.2095350205993], [1.6317096E12, 67.71570377537941], [1.6317093E12, 40.02092364121402], [1.631709E12, 459.376407931197], [1.63170966E12, 319.25578334598794], [1.63170936E12, 463.4290407012467], [1.63170906E12, 53.399816529063145], [1.63170972E12, 629.4261092150174], [1.63170942E12, 600.6635496030077]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6317099E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.08860632926158683, "minX": 1.631709E12, "maxY": 0.9215876785778568, "series": [{"data": [[1.63170912E12, 0.1631945601813282], [1.63170978E12, 0.5246993585221419], [1.63170948E12, 0.08860632926158683], [1.63170918E12, 0.49608919083703823], [1.63170984E12, 0.12339786560840806], [1.63170954E12, 0.13472517820344068], [1.63170924E12, 0.11719309942495204], [1.6317099E12, 0.6445703354914712], [1.6317096E12, 0.12026826379272951], [1.6317093E12, 0.1468489496498828], [1.631709E12, 0.9215876785778568], [1.63170966E12, 0.13286087910233943], [1.63170936E12, 0.41467142129393736], [1.63170906E12, 0.16275539988324447], [1.63170972E12, 0.29189419795222266], [1.63170942E12, 0.19541262330579767]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6317099E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.631709E12, "maxY": 4931.0, "series": [{"data": [[1.63170912E12, 162.0], [1.63170978E12, 2337.0], [1.63170948E12, 161.0], [1.63170918E12, 4931.0], [1.63170984E12, 4181.0], [1.63170954E12, 3804.0], [1.63170924E12, 184.0], [1.6317099E12, 2162.0], [1.6317096E12, 181.0], [1.6317093E12, 291.0], [1.631709E12, 2695.0], [1.63170966E12, 3031.0], [1.63170936E12, 2696.0], [1.63170906E12, 204.0], [1.63170972E12, 2394.0], [1.63170942E12, 2449.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63170912E12, 89.0], [1.63170978E12, 1590.0], [1.63170948E12, 91.0], [1.63170918E12, 2598.0], [1.63170984E12, 1960.0], [1.63170954E12, 455.0], [1.63170924E12, 47.0], [1.6317099E12, 1738.0], [1.6317096E12, 91.0], [1.6317093E12, 46.0], [1.631709E12, 1212.0], [1.63170966E12, 1859.0], [1.63170936E12, 1813.0], [1.63170906E12, 92.0], [1.63170972E12, 1596.0], [1.63170942E12, 93.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63170912E12, 112.0], [1.63170978E12, 2033.0], [1.63170948E12, 113.0], [1.63170918E12, 4366.970000000005], [1.63170984E12, 3162.9900000000016], [1.63170954E12, 839.0], [1.63170924E12, 72.0], [1.6317099E12, 1927.0], [1.6317096E12, 112.0], [1.6317093E12, 64.0], [1.631709E12, 1583.0], [1.63170966E12, 2394.0], [1.63170936E12, 2222.0], [1.63170906E12, 117.0], [1.63170972E12, 1933.0], [1.63170942E12, 137.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63170912E12, 95.0], [1.63170978E12, 1818.0], [1.63170948E12, 97.0], [1.63170918E12, 3459.0], [1.63170984E12, 2646.0], [1.63170954E12, 673.0], [1.63170924E12, 53.0], [1.6317099E12, 1858.0], [1.6317096E12, 98.0], [1.6317093E12, 51.0], [1.631709E12, 1399.0], [1.63170966E12, 2122.0], [1.63170936E12, 2054.0], [1.63170906E12, 99.0], [1.63170972E12, 1679.0], [1.63170942E12, 105.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63170912E12, 6.0], [1.63170978E12, 13.0], [1.63170948E12, 14.0], [1.63170918E12, 7.0], [1.63170984E12, 16.0], [1.63170954E12, 8.0], [1.63170924E12, 5.0], [1.6317099E12, 7.0], [1.6317096E12, 18.0], [1.6317093E12, 6.0], [1.631709E12, 5.0], [1.63170966E12, 5.0], [1.63170936E12, 10.0], [1.63170906E12, 5.0], [1.63170972E12, 13.0], [1.63170942E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63170912E12, 63.0], [1.63170978E12, 70.0], [1.63170948E12, 64.0], [1.63170918E12, 750.5], [1.63170984E12, 108.0], [1.63170954E12, 69.0], [1.63170924E12, 35.0], [1.6317099E12, 892.0], [1.6317096E12, 65.0], [1.6317093E12, 34.0], [1.631709E12, 38.0], [1.63170966E12, 756.0], [1.63170936E12, 662.0], [1.63170906E12, 65.0], [1.63170972E12, 877.0], [1.63170942E12, 65.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6317099E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 16.0, "minX": 1.0, "maxY": 2892.0, "series": [{"data": [[2.0, 297.5], [4.0, 36.0], [14.0, 82.0], [16.0, 38.0], [19.0, 86.0], [25.0, 16.0], [29.0, 190.0], [39.0, 116.0], [44.0, 145.5], [50.0, 26.0], [67.0, 108.0], [70.0, 25.0], [68.0, 156.5], [79.0, 116.0], [83.0, 131.0], [93.0, 39.0], [99.0, 152.0], [105.0, 1392.0], [110.0, 54.5], [111.0, 68.0], [120.0, 54.0], [130.0, 63.0], [142.0, 42.5], [145.0, 64.0], [152.0, 2121.0], [165.0, 199.0], [205.0, 63.0], [220.0, 267.0], [238.0, 59.5], [232.0, 60.0], [318.0, 66.0], [350.0, 70.0], [467.0, 586.0], [509.0, 253.0], [518.0, 276.0], [569.0, 63.0], [615.0, 264.0], [610.0, 61.0], [646.0, 282.0], [668.0, 65.0], [707.0, 34.0], [719.0, 2599.0], [705.0, 61.0], [741.0, 253.0], [792.0, 39.0], [804.0, 347.5], [811.0, 60.0], [834.0, 33.0], [837.0, 233.0], [846.0, 62.0], [888.0, 63.0], [894.0, 284.0], [907.0, 62.0], [921.0, 37.0], [957.0, 67.0], [948.0, 61.0], [955.0, 66.0], [945.0, 69.0], [954.0, 67.0], [951.0, 62.0], [959.0, 30.0], [958.0, 67.0], [942.0, 62.0], [940.0, 66.0], [952.0, 60.0], [949.0, 66.0], [966.0, 58.0], [988.0, 53.0], [985.0, 54.0], [967.0, 63.0], [984.0, 68.0], [961.0, 60.0], [965.0, 66.0], [964.0, 68.5], [963.0, 65.0], [962.0, 61.0], [974.0, 58.0], [975.0, 62.0], [960.0, 47.0], [986.0, 62.0], [987.0, 62.0], [968.0, 52.0], [969.0, 61.0], [970.0, 58.0], [972.0, 66.0], [971.0, 56.0], [973.0, 50.0], [980.0, 63.0], [978.0, 64.0], [979.0, 59.0], [991.0, 61.0], [989.0, 63.0], [990.0, 64.0], [976.0, 62.5], [977.0, 65.0], [981.0, 58.0], [983.0, 62.0], [982.0, 40.0], [1017.0, 63.0], [995.0, 47.0], [1010.0, 49.0], [1011.0, 47.0], [1012.0, 60.0], [1013.0, 60.0], [1009.0, 58.0], [993.0, 62.0], [994.0, 64.0], [1014.0, 62.0], [1015.0, 61.0], [998.0, 60.0], [997.0, 62.0], [996.0, 64.0], [1016.0, 65.0], [999.0, 53.0], [1008.0, 45.0], [1023.0, 64.0], [1022.0, 65.0], [1021.0, 64.0], [1020.0, 61.0], [1019.0, 65.0], [1018.0, 62.0], [1003.0, 61.0], [1005.0, 63.0], [1004.0, 62.0], [1002.0, 47.0], [1001.0, 63.0], [1000.0, 62.0], [1006.0, 56.0], [992.0, 61.5], [1007.0, 57.0], [1025.0, 64.0], [1032.0, 51.0], [1074.0, 413.0], [1040.0, 57.0], [1026.0, 53.0], [1027.0, 66.0], [1031.0, 68.0], [1030.0, 65.0], [1029.0, 63.0], [1028.0, 65.0], [1033.0, 63.0], [1034.0, 65.0], [1041.0, 63.0], [1024.0, 63.0], [1049.0, 62.0], [1052.0, 67.0], [1053.0, 60.0], [1044.0, 61.0], [1043.0, 64.0], [1042.0, 62.0], [1048.0, 59.0], [1058.0, 66.0], [1065.0, 70.0], [1056.0, 66.0], [1076.0, 66.0], [1038.0, 62.0], [1039.0, 49.0], [1036.0, 59.0], [1103.0, 44.0], [1149.0, 42.0], [1130.0, 66.0], [1157.0, 776.0], [1160.0, 78.0], [1170.0, 171.0], [1255.0, 340.0], [1237.0, 70.0], [1313.0, 1898.0], [1289.0, 50.0], [1389.0, 484.0], [1396.0, 1055.0], [1463.0, 732.0], [1441.0, 1544.0], [1431.0, 108.0], [1534.0, 563.0], [1475.0, 1278.0], [1505.0, 199.0], [1496.0, 97.0], [1531.0, 73.0], [1595.0, 180.0], [1550.0, 187.5], [1553.0, 608.0], [1574.0, 842.0], [1557.0, 1377.0], [1541.0, 122.0], [1631.0, 89.0], [1603.0, 2149.0], [1630.0, 139.0], [1605.0, 1380.0], [1703.0, 302.0], [1740.0, 301.5], [1789.0, 1771.0], [1730.0, 700.0], [1797.0, 2021.0], [1837.0, 535.0], [1796.0, 919.5], [1807.0, 542.0], [1819.0, 1242.0], [1803.0, 1250.0], [1825.0, 657.0], [1800.0, 1005.0], [1817.0, 450.0], [1809.0, 1707.0], [1865.0, 1554.0], [1872.0, 720.0], [1874.0, 1401.5], [1904.0, 1210.0], [1870.0, 1651.0], [1937.0, 1335.0], [1947.0, 806.0], [1977.0, 1635.0], [1964.0, 721.0], [1955.0, 1616.0], [1967.0, 471.0], [1965.0, 2586.0], [2036.0, 1695.0], [2016.0, 1385.5], [2034.0, 1968.0], [2123.0, 1342.0], [2120.0, 1182.0], [2169.0, 1312.5], [2173.0, 2083.0], [2153.0, 694.0], [2089.0, 1676.0], [2281.0, 1578.0], [2194.0, 1012.0], [2219.0, 1825.0], [2215.0, 570.0], [2276.0, 1348.0], [2280.0, 528.5], [2294.0, 1252.0], [2290.0, 1409.0], [2243.0, 785.0], [2297.0, 821.0], [2242.0, 719.5], [2204.0, 897.0], [2201.0, 1557.0], [2218.0, 1526.5], [2406.0, 2046.5], [2320.0, 2288.0], [2371.0, 798.0], [2427.0, 1551.0], [2422.0, 1110.0], [2412.0, 793.5], [2419.0, 1754.0], [2414.0, 823.0], [2304.0, 1359.5], [2315.0, 1304.0], [2382.0, 1512.0], [2387.0, 1579.0], [2392.0, 1047.5], [2397.0, 741.0], [2334.0, 586.5], [2324.0, 1459.0], [2335.0, 1588.0], [2400.0, 705.0], [2344.0, 675.5], [2339.0, 692.0], [2531.0, 815.0], [2470.0, 979.5], [2505.0, 694.0], [2513.0, 1605.0], [2532.0, 604.0], [2475.0, 827.0], [2550.0, 1169.0], [2455.0, 1497.0], [2443.0, 1293.0], [2676.0, 1028.0], [2673.0, 1450.0], [2569.0, 1527.0], [2799.0, 913.0], [2783.0, 2892.0], [2729.0, 1170.0], [2717.0, 486.0], [1.0, 23.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2799.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 2890.0, "series": [{"data": [[2.0, 297.0], [4.0, 35.5], [14.0, 82.0], [16.0, 38.0], [19.0, 85.0], [25.0, 15.0], [29.0, 180.0], [39.0, 115.0], [44.0, 144.5], [50.0, 26.0], [67.0, 108.0], [70.0, 25.0], [68.0, 156.5], [79.0, 116.0], [83.0, 130.0], [93.0, 39.0], [99.0, 152.0], [105.0, 1392.0], [110.0, 54.5], [111.0, 68.0], [120.0, 53.5], [130.0, 62.0], [142.0, 42.0], [145.0, 64.0], [152.0, 2121.0], [165.0, 198.0], [205.0, 62.0], [220.0, 267.0], [238.0, 59.0], [232.0, 60.0], [318.0, 66.0], [350.0, 69.5], [467.0, 586.0], [509.0, 253.0], [518.0, 276.0], [569.0, 63.0], [615.0, 264.0], [610.0, 61.0], [646.0, 282.0], [668.0, 65.0], [707.0, 34.0], [719.0, 2599.0], [705.0, 61.0], [741.0, 253.0], [792.0, 38.0], [804.0, 347.0], [811.0, 60.0], [834.0, 32.0], [837.0, 233.0], [846.0, 61.5], [888.0, 63.0], [894.0, 284.0], [907.0, 62.0], [921.0, 37.0], [957.0, 67.0], [948.0, 60.0], [955.0, 66.0], [945.0, 68.0], [954.0, 67.0], [951.0, 61.0], [959.0, 30.0], [958.0, 66.0], [942.0, 61.0], [940.0, 65.0], [952.0, 60.0], [949.0, 66.0], [966.0, 58.0], [988.0, 53.0], [985.0, 54.0], [967.0, 62.0], [984.0, 67.0], [961.0, 60.0], [965.0, 65.0], [964.0, 68.0], [963.0, 65.0], [962.0, 61.0], [974.0, 57.0], [975.0, 62.0], [960.0, 47.0], [986.0, 62.0], [987.0, 62.0], [968.0, 52.0], [969.0, 61.0], [970.0, 58.0], [972.0, 65.5], [971.0, 56.0], [973.0, 50.0], [980.0, 62.0], [978.0, 64.0], [979.0, 59.0], [991.0, 61.0], [989.0, 63.0], [990.0, 64.0], [976.0, 62.0], [977.0, 64.0], [981.0, 58.0], [983.0, 61.0], [982.0, 40.0], [1017.0, 62.0], [995.0, 47.0], [1010.0, 49.0], [1011.0, 47.0], [1012.0, 59.0], [1013.0, 60.0], [1009.0, 58.0], [993.0, 61.0], [994.0, 64.0], [1014.0, 62.0], [1015.0, 61.0], [998.0, 60.0], [997.0, 62.0], [996.0, 64.0], [1016.0, 65.0], [999.0, 52.0], [1008.0, 44.0], [1023.0, 63.0], [1022.0, 65.0], [1021.0, 64.0], [1020.0, 61.0], [1019.0, 65.0], [1018.0, 62.0], [1003.0, 61.0], [1005.0, 62.0], [1004.0, 62.0], [1002.0, 47.0], [1001.0, 63.0], [1000.0, 61.0], [1006.0, 55.0], [992.0, 61.0], [1007.0, 57.0], [1025.0, 64.0], [1032.0, 51.0], [1074.0, 413.0], [1040.0, 57.0], [1026.0, 53.0], [1027.0, 65.0], [1031.0, 68.0], [1030.0, 65.0], [1029.0, 63.0], [1028.0, 65.0], [1033.0, 63.0], [1034.0, 64.0], [1041.0, 63.0], [1024.0, 63.0], [1049.0, 62.0], [1052.0, 66.0], [1053.0, 60.0], [1044.0, 60.0], [1043.0, 64.0], [1042.0, 62.0], [1048.0, 59.0], [1058.0, 66.0], [1065.0, 70.0], [1056.0, 65.5], [1076.0, 65.0], [1038.0, 61.0], [1039.0, 49.0], [1036.0, 59.0], [1103.0, 44.0], [1149.0, 42.0], [1130.0, 65.0], [1157.0, 776.0], [1160.0, 78.0], [1170.0, 171.0], [1255.0, 340.0], [1237.0, 69.0], [1313.0, 1894.0], [1289.0, 50.0], [1389.0, 484.0], [1396.0, 1055.0], [1463.0, 732.0], [1441.0, 1544.0], [1431.0, 108.0], [1534.0, 563.0], [1475.0, 1277.0], [1505.0, 198.0], [1496.0, 97.0], [1531.0, 73.0], [1595.0, 179.0], [1550.0, 187.0], [1553.0, 608.0], [1574.0, 842.0], [1557.0, 1377.0], [1541.0, 122.0], [1631.0, 89.0], [1603.0, 2149.0], [1630.0, 139.0], [1605.0, 1380.0], [1703.0, 302.0], [1740.0, 301.5], [1789.0, 1771.0], [1730.0, 700.0], [1797.0, 2021.0], [1837.0, 535.0], [1796.0, 919.0], [1807.0, 541.0], [1819.0, 1241.5], [1803.0, 1250.0], [1825.0, 656.5], [1800.0, 1005.0], [1817.0, 450.0], [1809.0, 1707.0], [1865.0, 1554.0], [1872.0, 720.0], [1874.0, 1401.0], [1904.0, 1209.5], [1870.0, 1651.0], [1937.0, 1335.0], [1947.0, 806.0], [1977.0, 1634.0], [1964.0, 721.0], [1955.0, 1616.0], [1967.0, 471.0], [1965.0, 2586.0], [2036.0, 1694.5], [2016.0, 1385.0], [2034.0, 1968.0], [2123.0, 1342.0], [2120.0, 1182.0], [2169.0, 1311.5], [2173.0, 2083.0], [2153.0, 694.0], [2089.0, 1676.0], [2281.0, 1578.0], [2194.0, 1012.0], [2219.0, 1825.0], [2215.0, 569.0], [2276.0, 1347.5], [2280.0, 528.5], [2294.0, 1251.0], [2290.0, 1409.0], [2243.0, 785.0], [2297.0, 820.0], [2242.0, 719.0], [2204.0, 897.0], [2201.0, 1557.0], [2218.0, 1526.0], [2406.0, 2045.5], [2320.0, 2288.0], [2371.0, 798.0], [2427.0, 1551.0], [2422.0, 1109.0], [2412.0, 793.0], [2419.0, 1753.0], [2414.0, 784.0], [2304.0, 1359.0], [2315.0, 1304.0], [2382.0, 1512.0], [2387.0, 1578.0], [2392.0, 1047.5], [2397.0, 741.0], [2334.0, 586.0], [2324.0, 1459.0], [2335.0, 1588.0], [2400.0, 705.0], [2344.0, 674.5], [2339.0, 692.0], [2531.0, 815.0], [2470.0, 979.0], [2505.0, 694.0], [2513.0, 1605.0], [2532.0, 603.0], [2475.0, 827.0], [2550.0, 1168.0], [2455.0, 1497.0], [2443.0, 1292.0], [2676.0, 1027.5], [2673.0, 1450.0], [2569.0, 1527.0], [2799.0, 913.0], [2783.0, 2890.0], [2729.0, 1170.0], [2717.0, 485.0], [1.0, 23.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2799.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 463.95, "minX": 1.631709E12, "maxY": 1000.0333333333333, "series": [{"data": [[1.63170912E12, 999.8166666666667], [1.63170978E12, 995.7666666666667], [1.63170948E12, 1000.0333333333333], [1.63170918E12, 957.3], [1.63170984E12, 931.55], [1.63170954E12, 986.5666666666667], [1.63170924E12, 999.5666666666667], [1.6317099E12, 679.6], [1.6317096E12, 999.3333333333334], [1.6317093E12, 999.4666666666667], [1.631709E12, 463.95], [1.63170966E12, 988.1666666666666], [1.63170936E12, 991.1333333333333], [1.63170906E12, 999.4666666666667], [1.63170972E12, 995.95], [1.63170942E12, 997.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6317099E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 463.15, "minX": 1.631709E12, "maxY": 1039.0833333333333, "series": [{"data": [[1.63170912E12, 1000.0333333333333], [1.63170978E12, 1015.8833333333333], [1.63170948E12, 1000.1166666666667], [1.63170918E12, 956.75], [1.63170984E12, 932.35], [1.63170954E12, 986.7], [1.63170924E12, 999.9166666666666], [1.6317099E12, 679.6], [1.6317096E12, 999.0166666666667], [1.6317093E12, 999.6666666666666], [1.631709E12, 463.15], [1.63170966E12, 987.75], [1.63170936E12, 948.7833333333333], [1.63170906E12, 999.25], [1.63170972E12, 976.6666666666666], [1.63170942E12, 1039.0833333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6317099E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 463.15, "minX": 1.631709E12, "maxY": 1039.0833333333333, "series": [{"data": [[1.63170912E12, 1000.0333333333333], [1.63170978E12, 1015.8833333333333], [1.63170948E12, 1000.1166666666667], [1.63170918E12, 956.75], [1.63170984E12, 932.35], [1.63170954E12, 986.7], [1.63170924E12, 999.9166666666666], [1.6317099E12, 679.6], [1.6317096E12, 999.0166666666667], [1.6317093E12, 999.6666666666666], [1.631709E12, 463.15], [1.63170966E12, 987.75], [1.63170936E12, 948.7833333333333], [1.63170906E12, 999.25], [1.63170972E12, 976.6666666666666], [1.63170942E12, 1039.0833333333333]], "isOverall": false, "label": "AuthzUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6317099E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 463.15, "minX": 1.631709E12, "maxY": 1039.0833333333333, "series": [{"data": [[1.63170912E12, 1000.0333333333333], [1.63170978E12, 1015.8833333333333], [1.63170948E12, 1000.1166666666667], [1.63170918E12, 956.75], [1.63170984E12, 932.35], [1.63170954E12, 986.7], [1.63170924E12, 999.9166666666666], [1.6317099E12, 679.6], [1.6317096E12, 999.0166666666667], [1.6317093E12, 999.6666666666666], [1.631709E12, 463.15], [1.63170966E12, 987.75], [1.63170936E12, 948.7833333333333], [1.63170906E12, 999.25], [1.63170972E12, 976.6666666666666], [1.63170942E12, 1039.0833333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6317099E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

