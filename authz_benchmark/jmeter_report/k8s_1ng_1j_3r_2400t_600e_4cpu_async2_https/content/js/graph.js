/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 9469.0, "series": [{"data": [[0.0, 4.0], [0.1, 7.0], [0.2, 7.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 9.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 9.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 11.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 12.0], [4.2, 12.0], [4.3, 12.0], [4.4, 12.0], [4.5, 12.0], [4.6, 12.0], [4.7, 12.0], [4.8, 12.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 14.0], [6.1, 14.0], [6.2, 14.0], [6.3, 14.0], [6.4, 14.0], [6.5, 14.0], [6.6, 14.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 15.0], [7.2, 15.0], [7.3, 15.0], [7.4, 15.0], [7.5, 15.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 15.0], [8.1, 15.0], [8.2, 16.0], [8.3, 16.0], [8.4, 16.0], [8.5, 16.0], [8.6, 16.0], [8.7, 16.0], [8.8, 16.0], [8.9, 16.0], [9.0, 16.0], [9.1, 16.0], [9.2, 16.0], [9.3, 16.0], [9.4, 17.0], [9.5, 17.0], [9.6, 17.0], [9.7, 17.0], [9.8, 17.0], [9.9, 17.0], [10.0, 17.0], [10.1, 17.0], [10.2, 17.0], [10.3, 17.0], [10.4, 17.0], [10.5, 17.0], [10.6, 18.0], [10.7, 18.0], [10.8, 18.0], [10.9, 18.0], [11.0, 18.0], [11.1, 18.0], [11.2, 18.0], [11.3, 18.0], [11.4, 18.0], [11.5, 18.0], [11.6, 18.0], [11.7, 18.0], [11.8, 19.0], [11.9, 19.0], [12.0, 19.0], [12.1, 19.0], [12.2, 19.0], [12.3, 19.0], [12.4, 19.0], [12.5, 19.0], [12.6, 19.0], [12.7, 19.0], [12.8, 19.0], [12.9, 19.0], [13.0, 19.0], [13.1, 20.0], [13.2, 20.0], [13.3, 20.0], [13.4, 20.0], [13.5, 20.0], [13.6, 20.0], [13.7, 20.0], [13.8, 20.0], [13.9, 20.0], [14.0, 20.0], [14.1, 20.0], [14.2, 20.0], [14.3, 20.0], [14.4, 21.0], [14.5, 21.0], [14.6, 21.0], [14.7, 21.0], [14.8, 21.0], [14.9, 21.0], [15.0, 21.0], [15.1, 21.0], [15.2, 21.0], [15.3, 21.0], [15.4, 21.0], [15.5, 21.0], [15.6, 21.0], [15.7, 22.0], [15.8, 22.0], [15.9, 22.0], [16.0, 22.0], [16.1, 22.0], [16.2, 22.0], [16.3, 22.0], [16.4, 22.0], [16.5, 22.0], [16.6, 22.0], [16.7, 22.0], [16.8, 22.0], [16.9, 22.0], [17.0, 23.0], [17.1, 23.0], [17.2, 23.0], [17.3, 23.0], [17.4, 23.0], [17.5, 23.0], [17.6, 23.0], [17.7, 23.0], [17.8, 23.0], [17.9, 23.0], [18.0, 23.0], [18.1, 23.0], [18.2, 23.0], [18.3, 23.0], [18.4, 24.0], [18.5, 24.0], [18.6, 24.0], [18.7, 24.0], [18.8, 24.0], [18.9, 24.0], [19.0, 24.0], [19.1, 24.0], [19.2, 24.0], [19.3, 24.0], [19.4, 24.0], [19.5, 24.0], [19.6, 24.0], [19.7, 24.0], [19.8, 25.0], [19.9, 25.0], [20.0, 25.0], [20.1, 25.0], [20.2, 25.0], [20.3, 25.0], [20.4, 25.0], [20.5, 25.0], [20.6, 25.0], [20.7, 25.0], [20.8, 25.0], [20.9, 25.0], [21.0, 25.0], [21.1, 25.0], [21.2, 26.0], [21.3, 26.0], [21.4, 26.0], [21.5, 26.0], [21.6, 26.0], [21.7, 26.0], [21.8, 26.0], [21.9, 26.0], [22.0, 26.0], [22.1, 26.0], [22.2, 26.0], [22.3, 26.0], [22.4, 26.0], [22.5, 26.0], [22.6, 26.0], [22.7, 27.0], [22.8, 27.0], [22.9, 27.0], [23.0, 27.0], [23.1, 27.0], [23.2, 27.0], [23.3, 27.0], [23.4, 27.0], [23.5, 27.0], [23.6, 27.0], [23.7, 27.0], [23.8, 27.0], [23.9, 27.0], [24.0, 27.0], [24.1, 28.0], [24.2, 28.0], [24.3, 28.0], [24.4, 28.0], [24.5, 28.0], [24.6, 28.0], [24.7, 28.0], [24.8, 28.0], [24.9, 28.0], [25.0, 28.0], [25.1, 28.0], [25.2, 28.0], [25.3, 28.0], [25.4, 28.0], [25.5, 28.0], [25.6, 29.0], [25.7, 29.0], [25.8, 29.0], [25.9, 29.0], [26.0, 29.0], [26.1, 29.0], [26.2, 29.0], [26.3, 29.0], [26.4, 29.0], [26.5, 29.0], [26.6, 29.0], [26.7, 29.0], [26.8, 29.0], [26.9, 29.0], [27.0, 30.0], [27.1, 30.0], [27.2, 30.0], [27.3, 30.0], [27.4, 30.0], [27.5, 30.0], [27.6, 30.0], [27.7, 30.0], [27.8, 30.0], [27.9, 30.0], [28.0, 30.0], [28.1, 30.0], [28.2, 30.0], [28.3, 30.0], [28.4, 31.0], [28.5, 31.0], [28.6, 31.0], [28.7, 31.0], [28.8, 31.0], [28.9, 31.0], [29.0, 31.0], [29.1, 31.0], [29.2, 31.0], [29.3, 31.0], [29.4, 31.0], [29.5, 31.0], [29.6, 32.0], [29.7, 32.0], [29.8, 32.0], [29.9, 32.0], [30.0, 32.0], [30.1, 32.0], [30.2, 32.0], [30.3, 32.0], [30.4, 32.0], [30.5, 32.0], [30.6, 32.0], [30.7, 32.0], [30.8, 33.0], [30.9, 33.0], [31.0, 33.0], [31.1, 33.0], [31.2, 33.0], [31.3, 33.0], [31.4, 33.0], [31.5, 33.0], [31.6, 33.0], [31.7, 33.0], [31.8, 34.0], [31.9, 34.0], [32.0, 34.0], [32.1, 34.0], [32.2, 34.0], [32.3, 34.0], [32.4, 34.0], [32.5, 34.0], [32.6, 34.0], [32.7, 35.0], [32.8, 35.0], [32.9, 35.0], [33.0, 35.0], [33.1, 35.0], [33.2, 35.0], [33.3, 35.0], [33.4, 36.0], [33.5, 36.0], [33.6, 36.0], [33.7, 36.0], [33.8, 36.0], [33.9, 36.0], [34.0, 37.0], [34.1, 37.0], [34.2, 37.0], [34.3, 37.0], [34.4, 37.0], [34.5, 38.0], [34.6, 38.0], [34.7, 38.0], [34.8, 38.0], [34.9, 39.0], [35.0, 39.0], [35.1, 39.0], [35.2, 40.0], [35.3, 40.0], [35.4, 40.0], [35.5, 41.0], [35.6, 41.0], [35.7, 42.0], [35.8, 42.0], [35.9, 43.0], [36.0, 44.0], [36.1, 45.0], [36.2, 46.0], [36.3, 46.0], [36.4, 48.0], [36.5, 49.0], [36.6, 50.0], [36.7, 51.0], [36.8, 53.0], [36.9, 54.0], [37.0, 55.0], [37.1, 57.0], [37.2, 58.0], [37.3, 59.0], [37.4, 61.0], [37.5, 62.0], [37.6, 64.0], [37.7, 65.0], [37.8, 67.0], [37.9, 68.0], [38.0, 70.0], [38.1, 71.0], [38.2, 73.0], [38.3, 74.0], [38.4, 76.0], [38.5, 77.0], [38.6, 78.0], [38.7, 80.0], [38.8, 81.0], [38.9, 83.0], [39.0, 84.0], [39.1, 86.0], [39.2, 87.0], [39.3, 88.0], [39.4, 90.0], [39.5, 91.0], [39.6, 93.0], [39.7, 94.0], [39.8, 96.0], [39.9, 97.0], [40.0, 99.0], [40.1, 100.0], [40.2, 102.0], [40.3, 104.0], [40.4, 105.0], [40.5, 107.0], [40.6, 108.0], [40.7, 110.0], [40.8, 111.0], [40.9, 113.0], [41.0, 114.0], [41.1, 116.0], [41.2, 117.0], [41.3, 118.0], [41.4, 120.0], [41.5, 121.0], [41.6, 122.0], [41.7, 124.0], [41.8, 125.0], [41.9, 126.0], [42.0, 127.0], [42.1, 129.0], [42.2, 130.0], [42.3, 131.0], [42.4, 132.0], [42.5, 133.0], [42.6, 134.0], [42.7, 136.0], [42.8, 137.0], [42.9, 138.0], [43.0, 139.0], [43.1, 140.0], [43.2, 142.0], [43.3, 143.0], [43.4, 144.0], [43.5, 145.0], [43.6, 146.0], [43.7, 148.0], [43.8, 149.0], [43.9, 150.0], [44.0, 151.0], [44.1, 153.0], [44.2, 154.0], [44.3, 155.0], [44.4, 156.0], [44.5, 158.0], [44.6, 159.0], [44.7, 160.0], [44.8, 161.0], [44.9, 162.0], [45.0, 164.0], [45.1, 165.0], [45.2, 166.0], [45.3, 167.0], [45.4, 168.0], [45.5, 169.0], [45.6, 170.0], [45.7, 172.0], [45.8, 173.0], [45.9, 174.0], [46.0, 175.0], [46.1, 176.0], [46.2, 177.0], [46.3, 178.0], [46.4, 180.0], [46.5, 181.0], [46.6, 182.0], [46.7, 183.0], [46.8, 184.0], [46.9, 185.0], [47.0, 186.0], [47.1, 187.0], [47.2, 188.0], [47.3, 189.0], [47.4, 190.0], [47.5, 192.0], [47.6, 193.0], [47.7, 194.0], [47.8, 195.0], [47.9, 196.0], [48.0, 198.0], [48.1, 199.0], [48.2, 200.0], [48.3, 202.0], [48.4, 203.0], [48.5, 204.0], [48.6, 205.0], [48.7, 206.0], [48.8, 207.0], [48.9, 208.0], [49.0, 210.0], [49.1, 211.0], [49.2, 212.0], [49.3, 213.0], [49.4, 214.0], [49.5, 215.0], [49.6, 216.0], [49.7, 217.0], [49.8, 218.0], [49.9, 219.0], [50.0, 220.0], [50.1, 221.0], [50.2, 223.0], [50.3, 224.0], [50.4, 225.0], [50.5, 226.0], [50.6, 227.0], [50.7, 228.0], [50.8, 229.0], [50.9, 230.0], [51.0, 232.0], [51.1, 233.0], [51.2, 234.0], [51.3, 235.0], [51.4, 236.0], [51.5, 237.0], [51.6, 238.0], [51.7, 240.0], [51.8, 241.0], [51.9, 242.0], [52.0, 244.0], [52.1, 245.0], [52.2, 246.0], [52.3, 247.0], [52.4, 248.0], [52.5, 249.0], [52.6, 251.0], [52.7, 252.0], [52.8, 253.0], [52.9, 254.0], [53.0, 255.0], [53.1, 256.0], [53.2, 257.0], [53.3, 258.0], [53.4, 259.0], [53.5, 260.0], [53.6, 262.0], [53.7, 263.0], [53.8, 264.0], [53.9, 265.0], [54.0, 266.0], [54.1, 267.0], [54.2, 268.0], [54.3, 269.0], [54.4, 270.0], [54.5, 272.0], [54.6, 273.0], [54.7, 274.0], [54.8, 275.0], [54.9, 276.0], [55.0, 277.0], [55.1, 279.0], [55.2, 280.0], [55.3, 281.0], [55.4, 282.0], [55.5, 283.0], [55.6, 284.0], [55.7, 285.0], [55.8, 286.0], [55.9, 287.0], [56.0, 288.0], [56.1, 289.0], [56.2, 291.0], [56.3, 292.0], [56.4, 293.0], [56.5, 294.0], [56.6, 295.0], [56.7, 296.0], [56.8, 297.0], [56.9, 298.0], [57.0, 299.0], [57.1, 300.0], [57.2, 301.0], [57.3, 302.0], [57.4, 304.0], [57.5, 305.0], [57.6, 306.0], [57.7, 307.0], [57.8, 308.0], [57.9, 309.0], [58.0, 311.0], [58.1, 312.0], [58.2, 313.0], [58.3, 314.0], [58.4, 315.0], [58.5, 317.0], [58.6, 318.0], [58.7, 319.0], [58.8, 320.0], [58.9, 321.0], [59.0, 323.0], [59.1, 324.0], [59.2, 325.0], [59.3, 326.0], [59.4, 327.0], [59.5, 328.0], [59.6, 329.0], [59.7, 330.0], [59.8, 331.0], [59.9, 333.0], [60.0, 334.0], [60.1, 335.0], [60.2, 336.0], [60.3, 337.0], [60.4, 338.0], [60.5, 339.0], [60.6, 340.0], [60.7, 342.0], [60.8, 343.0], [60.9, 344.0], [61.0, 345.0], [61.1, 346.0], [61.2, 347.0], [61.3, 349.0], [61.4, 350.0], [61.5, 351.0], [61.6, 352.0], [61.7, 353.0], [61.8, 355.0], [61.9, 356.0], [62.0, 357.0], [62.1, 358.0], [62.2, 359.0], [62.3, 360.0], [62.4, 361.0], [62.5, 363.0], [62.6, 364.0], [62.7, 365.0], [62.8, 366.0], [62.9, 367.0], [63.0, 368.0], [63.1, 369.0], [63.2, 370.0], [63.3, 372.0], [63.4, 373.0], [63.5, 374.0], [63.6, 375.0], [63.7, 376.0], [63.8, 377.0], [63.9, 378.0], [64.0, 380.0], [64.1, 381.0], [64.2, 382.0], [64.3, 383.0], [64.4, 385.0], [64.5, 386.0], [64.6, 387.0], [64.7, 389.0], [64.8, 390.0], [64.9, 392.0], [65.0, 393.0], [65.1, 394.0], [65.2, 395.0], [65.3, 397.0], [65.4, 398.0], [65.5, 399.0], [65.6, 400.0], [65.7, 401.0], [65.8, 403.0], [65.9, 404.0], [66.0, 405.0], [66.1, 406.0], [66.2, 408.0], [66.3, 409.0], [66.4, 410.0], [66.5, 411.0], [66.6, 413.0], [66.7, 414.0], [66.8, 415.0], [66.9, 416.0], [67.0, 418.0], [67.1, 419.0], [67.2, 420.0], [67.3, 421.0], [67.4, 423.0], [67.5, 424.0], [67.6, 425.0], [67.7, 427.0], [67.8, 428.0], [67.9, 429.0], [68.0, 430.0], [68.1, 432.0], [68.2, 433.0], [68.3, 434.0], [68.4, 435.0], [68.5, 437.0], [68.6, 438.0], [68.7, 439.0], [68.8, 441.0], [68.9, 442.0], [69.0, 443.0], [69.1, 445.0], [69.2, 446.0], [69.3, 447.0], [69.4, 448.0], [69.5, 450.0], [69.6, 451.0], [69.7, 452.0], [69.8, 453.0], [69.9, 455.0], [70.0, 456.0], [70.1, 457.0], [70.2, 459.0], [70.3, 460.0], [70.4, 461.0], [70.5, 463.0], [70.6, 464.0], [70.7, 466.0], [70.8, 467.0], [70.9, 468.0], [71.0, 469.0], [71.1, 471.0], [71.2, 472.0], [71.3, 473.0], [71.4, 474.0], [71.5, 475.0], [71.6, 476.0], [71.7, 477.0], [71.8, 479.0], [71.9, 480.0], [72.0, 481.0], [72.1, 482.0], [72.2, 483.0], [72.3, 485.0], [72.4, 486.0], [72.5, 487.0], [72.6, 489.0], [72.7, 490.0], [72.8, 491.0], [72.9, 493.0], [73.0, 494.0], [73.1, 495.0], [73.2, 497.0], [73.3, 498.0], [73.4, 500.0], [73.5, 501.0], [73.6, 502.0], [73.7, 503.0], [73.8, 505.0], [73.9, 506.0], [74.0, 507.0], [74.1, 508.0], [74.2, 509.0], [74.3, 510.0], [74.4, 512.0], [74.5, 513.0], [74.6, 514.0], [74.7, 515.0], [74.8, 516.0], [74.9, 517.0], [75.0, 518.0], [75.1, 519.0], [75.2, 520.0], [75.3, 521.0], [75.4, 523.0], [75.5, 524.0], [75.6, 525.0], [75.7, 526.0], [75.8, 527.0], [75.9, 528.0], [76.0, 529.0], [76.1, 530.0], [76.2, 531.0], [76.3, 532.0], [76.4, 534.0], [76.5, 535.0], [76.6, 536.0], [76.7, 537.0], [76.8, 539.0], [76.9, 540.0], [77.0, 541.0], [77.1, 543.0], [77.2, 544.0], [77.3, 545.0], [77.4, 546.0], [77.5, 548.0], [77.6, 549.0], [77.7, 550.0], [77.8, 551.0], [77.9, 552.0], [78.0, 554.0], [78.1, 555.0], [78.2, 556.0], [78.3, 557.0], [78.4, 558.0], [78.5, 559.0], [78.6, 561.0], [78.7, 562.0], [78.8, 563.0], [78.9, 565.0], [79.0, 566.0], [79.1, 567.0], [79.2, 568.0], [79.3, 570.0], [79.4, 571.0], [79.5, 572.0], [79.6, 574.0], [79.7, 575.0], [79.8, 576.0], [79.9, 578.0], [80.0, 579.0], [80.1, 581.0], [80.2, 582.0], [80.3, 584.0], [80.4, 585.0], [80.5, 586.0], [80.6, 588.0], [80.7, 589.0], [80.8, 590.0], [80.9, 592.0], [81.0, 593.0], [81.1, 594.0], [81.2, 596.0], [81.3, 597.0], [81.4, 598.0], [81.5, 599.0], [81.6, 601.0], [81.7, 602.0], [81.8, 603.0], [81.9, 604.0], [82.0, 606.0], [82.1, 607.0], [82.2, 608.0], [82.3, 610.0], [82.4, 611.0], [82.5, 612.0], [82.6, 613.0], [82.7, 615.0], [82.8, 616.0], [82.9, 617.0], [83.0, 618.0], [83.1, 619.0], [83.2, 621.0], [83.3, 622.0], [83.4, 623.0], [83.5, 625.0], [83.6, 626.0], [83.7, 628.0], [83.8, 629.0], [83.9, 631.0], [84.0, 632.0], [84.1, 633.0], [84.2, 635.0], [84.3, 636.0], [84.4, 637.0], [84.5, 639.0], [84.6, 640.0], [84.7, 641.0], [84.8, 643.0], [84.9, 644.0], [85.0, 645.0], [85.1, 647.0], [85.2, 648.0], [85.3, 650.0], [85.4, 651.0], [85.5, 652.0], [85.6, 654.0], [85.7, 655.0], [85.8, 656.0], [85.9, 658.0], [86.0, 659.0], [86.1, 661.0], [86.2, 662.0], [86.3, 664.0], [86.4, 666.0], [86.5, 667.0], [86.6, 668.0], [86.7, 670.0], [86.8, 671.0], [86.9, 672.0], [87.0, 674.0], [87.1, 675.0], [87.2, 676.0], [87.3, 678.0], [87.4, 679.0], [87.5, 680.0], [87.6, 682.0], [87.7, 683.0], [87.8, 685.0], [87.9, 686.0], [88.0, 688.0], [88.1, 689.0], [88.2, 691.0], [88.3, 692.0], [88.4, 694.0], [88.5, 695.0], [88.6, 697.0], [88.7, 698.0], [88.8, 700.0], [88.9, 701.0], [89.0, 703.0], [89.1, 704.0], [89.2, 706.0], [89.3, 707.0], [89.4, 708.0], [89.5, 710.0], [89.6, 711.0], [89.7, 713.0], [89.8, 714.0], [89.9, 716.0], [90.0, 717.0], [90.1, 719.0], [90.2, 721.0], [90.3, 723.0], [90.4, 724.0], [90.5, 726.0], [90.6, 727.0], [90.7, 729.0], [90.8, 731.0], [90.9, 732.0], [91.0, 734.0], [91.1, 736.0], [91.2, 737.0], [91.3, 739.0], [91.4, 741.0], [91.5, 742.0], [91.6, 744.0], [91.7, 746.0], [91.8, 747.0], [91.9, 749.0], [92.0, 750.0], [92.1, 752.0], [92.2, 753.0], [92.3, 755.0], [92.4, 757.0], [92.5, 758.0], [92.6, 760.0], [92.7, 761.0], [92.8, 763.0], [92.9, 764.0], [93.0, 766.0], [93.1, 768.0], [93.2, 769.0], [93.3, 771.0], [93.4, 773.0], [93.5, 774.0], [93.6, 776.0], [93.7, 778.0], [93.8, 779.0], [93.9, 781.0], [94.0, 783.0], [94.1, 784.0], [94.2, 786.0], [94.3, 788.0], [94.4, 790.0], [94.5, 792.0], [94.6, 793.0], [94.7, 795.0], [94.8, 797.0], [94.9, 799.0], [95.0, 801.0], [95.1, 803.0], [95.2, 805.0], [95.3, 808.0], [95.4, 810.0], [95.5, 812.0], [95.6, 814.0], [95.7, 817.0], [95.8, 819.0], [95.9, 821.0], [96.0, 824.0], [96.1, 827.0], [96.2, 829.0], [96.3, 831.0], [96.4, 834.0], [96.5, 836.0], [96.6, 839.0], [96.7, 841.0], [96.8, 844.0], [96.9, 847.0], [97.0, 850.0], [97.1, 853.0], [97.2, 855.0], [97.3, 859.0], [97.4, 862.0], [97.5, 865.0], [97.6, 868.0], [97.7, 872.0], [97.8, 876.0], [97.9, 880.0], [98.0, 884.0], [98.1, 889.0], [98.2, 894.0], [98.3, 899.0], [98.4, 904.0], [98.5, 910.0], [98.6, 916.0], [98.7, 922.0], [98.8, 929.0], [98.9, 939.0], [99.0, 949.0], [99.1, 959.0], [99.2, 973.0], [99.3, 987.0], [99.4, 1006.0], [99.5, 1030.0], [99.6, 1060.0], [99.7, 1090.0], [99.8, 1152.0], [99.9, 1458.0], [100.0, 9469.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 361112.0, "series": [{"data": [[0.0, 361112.0], [8200.0, 2.0], [8700.0, 1.0], [8400.0, 1.0], [9000.0, 17.0], [9200.0, 61.0], [9100.0, 58.0], [8800.0, 3.0], [8900.0, 1.0], [9300.0, 82.0], [9400.0, 98.0], [600.0, 65713.0], [700.0, 55273.0], [800.0, 30603.0], [900.0, 9506.0], [1000.0, 3181.0], [1100.0, 890.0], [1200.0, 340.0], [1300.0, 231.0], [1400.0, 165.0], [1500.0, 179.0], [100.0, 72988.0], [1600.0, 134.0], [1700.0, 63.0], [3000.0, 90.0], [3100.0, 41.0], [200.0, 80052.0], [3400.0, 1.0], [4800.0, 1.0], [300.0, 76694.0], [4900.0, 1.0], [5000.0, 1.0], [5400.0, 1.0], [5500.0, 3.0], [5600.0, 4.0], [6200.0, 2.0], [6400.0, 2.0], [6500.0, 1.0], [6600.0, 1.0], [400.0, 70929.0], [6700.0, 6.0], [7100.0, 5.0], [7400.0, 1.0], [7700.0, 1.0], [7900.0, 1.0], [7800.0, 1.0], [500.0, 73138.0]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 864.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 662461.0, "series": [{"data": [[0.0, 662461.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 238354.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 864.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1887.0638987998748, "minX": 1.63351302E12, "maxY": 2400.0, "series": [{"data": [[1.6335132E12, 2400.0], [1.63351356E12, 2400.0], [1.63351326E12, 2400.0], [1.63351392E12, 2305.020597383942], [1.63351344E12, 2400.0], [1.63351374E12, 2400.0], [1.63351314E12, 2400.0], [1.6335135E12, 2400.0], [1.63351368E12, 2400.0], [1.63351338E12, 2400.0], [1.6335138E12, 2400.0], [1.63351308E12, 2400.0], [1.63351362E12, 2400.0], [1.63351332E12, 2400.0], [1.63351386E12, 2400.0], [1.63351302E12, 1887.0638987998748]], "isOverall": false, "label": "app1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63351392E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.0, "minX": 440.0, "maxY": 9455.0, "series": [{"data": [[440.0, 7632.842105263158], [441.0, 5887.328358208957], [442.0, 6319.388888888889], [443.0, 7238.537313432837], [445.0, 5020.571428571429], [444.0, 9122.0], [446.0, 6975.229166666663], [447.0, 9286.0], [449.0, 8793.217391304343], [448.0, 9129.714285714286], [450.0, 6266.857142857143], [452.0, 5874.0], [451.0, 9455.0], [453.0, 6020.442622950819], [454.0, 79.125], [455.0, 79.0], [456.0, 79.53846153846153], [462.0, 99.5], [463.0, 105.7777777777778], [461.0, 90.0], [460.0, 96.5], [458.0, 92.44444444444444], [457.0, 81.0], [464.0, 99.5], [465.0, 109.5], [469.0, 114.0], [471.0, 101.57142857142857], [470.0, 103.0], [468.0, 101.0], [472.0, 102.8], [473.0, 110.76470588235294], [474.0, 121.0], [475.0, 118.5], [478.0, 123.0], [477.0, 118.5], [492.0, 107.33333333333333], [481.0, 132.0], [483.0, 126.625], [486.0, 112.44444444444446], [487.0, 103.0], [484.0, 116.81818181818183], [489.0, 107.0], [491.0, 100.0], [490.0, 108.55555555555556], [493.0, 91.9], [494.0, 86.0], [495.0, 82.59999999999997], [496.0, 67.42857142857144], [498.0, 58.5], [503.0, 62.0909090909091], [500.0, 84.0], [501.0, 56.199999999999996], [497.0, 59.1], [502.0, 55.0], [511.0, 63.33333333333333], [510.0, 57.666666666666664], [512.0, 70.0], [514.0, 70.66666666666667], [513.0, 79.0], [516.0, 50.75], [518.0, 54.111111111111114], [519.0, 55.0], [536.0, 25.0], [540.0, 11.285714285714286], [537.0, 22.0], [541.0, 14.0], [528.0, 21.0], [531.0, 26.42857142857143], [533.0, 42.0], [534.0, 51.46666666666667], [532.0, 29.28571428571428], [530.0, 24.333333333333332], [520.0, 56.833333333333336], [521.0, 54.549019607843135], [522.0, 56.4074074074074], [526.0, 35.18750000000001], [527.0, 19.333333333333332], [523.0, 59.5], [568.0, 18.5], [548.0, 28.75], [544.0, 17.0], [550.0, 33.1], [549.0, 30.0], [547.0, 26.333333333333332], [551.0, 40.0], [569.0, 18.333333333333332], [570.0, 26.71428571428571], [571.0, 23.666666666666668], [572.0, 27.25], [574.0, 57.87500000000001], [573.0, 32.75], [553.0, 33.1], [552.0, 42.5], [560.0, 23.54545454545455], [563.0, 32.5], [564.0, 42.333333333333336], [567.0, 17.272727272727273], [566.0, 42.0], [562.0, 29.0], [561.0, 28.0], [557.0, 15.000000000000002], [558.0, 18.0], [556.0, 10.0], [554.0, 28.0], [555.0, 8.0], [577.0, 13.333333333333332], [588.0, 22.333333333333332], [578.0, 17.333333333333332], [576.0, 23.0], [590.0, 28.199999999999996], [589.0, 27.0], [591.0, 32.0], [586.0, 30.75], [585.0, 49.55555555555556], [584.0, 33.54545454545455], [583.0, 27.71428571428571], [582.0, 27.0], [600.0, 34.09090909090909], [601.0, 66.75], [607.0, 22.120000000000005], [602.0, 63.57142857142857], [592.0, 34.857142857142854], [593.0, 64.27272727272728], [594.0, 34.4], [598.0, 29.529411764705884], [597.0, 22.0], [596.0, 20.6], [599.0, 32.16666666666667], [595.0, 15.75], [579.0, 22.416666666666668], [587.0, 15.454545454545455], [612.0, 55.666666666666664], [608.0, 31.333333333333336], [614.0, 56.5], [615.0, 11.4], [627.0, 23.56], [628.0, 30.250000000000004], [631.0, 37.333333333333336], [629.0, 44.333333333333336], [630.0, 49.333333333333336], [624.0, 51.0], [637.0, 33.909090909090914], [638.0, 38.0], [639.0, 39.8], [636.0, 27.444444444444443], [633.0, 13.666666666666666], [634.0, 22.0], [625.0, 35.0], [617.0, 21.272727272727273], [609.0, 35.0], [619.0, 37.121212121212125], [620.0, 65.5], [621.0, 56.333333333333336], [623.0, 56.0], [610.0, 58.8], [616.0, 15.0], [647.0, 27.0], [641.0, 40.333333333333336], [640.0, 50.199999999999996], [653.0, 19.357142857142858], [654.0, 22.75], [655.0, 31.92857142857143], [644.0, 14.923076923076922], [645.0, 20.25], [646.0, 22.333333333333332], [648.0, 34.07142857142857], [656.0, 35.0], [671.0, 29.5], [669.0, 53.42857142857142], [670.0, 58.0], [664.0, 31.25], [665.0, 32.5], [666.0, 34.714285714285715], [657.0, 48.047619047619044], [661.0, 15.666666666666666], [663.0, 24.999999999999996], [662.0, 18.0], [660.0, 26.0], [649.0, 39.0], [650.0, 46.44444444444444], [651.0, 50.0], [652.0, 52.375], [672.0, 17.416666666666668], [675.0, 25.5], [677.0, 28.0], [681.0, 39.55555555555556], [674.0, 23.75], [673.0, 22.0], [682.0, 53.333333333333336], [678.0, 29.25], [690.0, 72.5], [691.0, 114.0], [695.0, 58.5], [693.0, 87.0], [689.0, 31.333333333333332], [701.0, 17.0], [703.0, 20.0], [699.0, 19.0], [697.0, 22.0], [700.0, 34.5], [680.0, 33.66666666666667], [684.0, 20.833333333333336], [685.0, 20.333333333333332], [687.0, 90.35555555555557], [686.0, 22.666666666666668], [706.0, 18.666666666666668], [715.0, 23.0], [712.0, 10.428571428571429], [713.0, 11.0], [714.0, 18.142857142857142], [711.0, 22.0], [728.0, 42.75], [730.0, 49.0], [732.0, 50.8], [733.0, 54.33333333333333], [734.0, 60.875], [735.0, 62.81818181818182], [731.0, 47.8], [729.0, 45.4], [717.0, 25.0], [718.0, 38.0], [719.0, 28.0], [716.0, 24.25], [721.0, 30.1], [726.0, 43.76923076923076], [725.0, 37.333333333333336], [723.0, 39.0], [724.0, 65.4], [762.0, 38.25], [749.0, 52.375], [746.0, 54.83333333333333], [747.0, 46.5], [748.0, 47.25], [752.0, 59.57142857142857], [750.0, 55.625], [737.0, 65.0], [740.0, 72.0], [738.0, 71.125], [739.0, 72.0], [743.0, 79.7], [760.0, 34.0], [761.0, 37.0], [764.0, 44.29411764705883], [765.0, 49.333333333333336], [767.0, 53.0], [766.0, 51.0], [763.0, 40.0], [741.0, 75.55555555555554], [754.0, 66.85714285714286], [756.0, 63.0], [755.0, 78.0], [757.0, 51.77777777777778], [758.0, 36.0], [759.0, 34.66666666666667], [753.0, 61.0], [744.0, 75.57142857142857], [783.0, 67.2], [788.0, 38.333333333333336], [781.0, 81.5], [780.0, 72.0], [778.0, 5.5], [776.0, 5.0], [790.0, 43.333333333333336], [782.0, 76.25], [785.0, 54.333333333333336], [784.0, 60.0], [792.0, 54.714285714285715], [794.0, 64.0], [799.0, 75.0], [791.0, 41.5], [806.0, 90.25], [802.0, 85.0], [800.0, 79.0], [804.0, 88.3076923076923], [803.0, 83.0], [801.0, 80.0], [805.0, 86.0], [807.0, 87.66666666666667], [825.0, 39.75], [827.0, 40.8], [828.0, 46.333333333333336], [829.0, 51.0], [831.0, 52.0], [824.0, 37.5], [819.0, 71.34999999999997], [822.0, 57.0], [823.0, 52.0], [821.0, 48.863636363636374], [817.0, 67.0], [808.0, 78.12500000000001], [811.0, 57.888888888888886], [812.0, 60.0], [814.0, 60.666666666666664], [815.0, 63.625], [810.0, 61.0], [809.0, 62.5], [834.0, 47.0], [833.0, 55.99999999999999], [847.0, 46.0], [845.0, 35.5], [843.0, 32.5], [844.0, 34.0], [835.0, 30.28571428571429], [839.0, 22.0], [837.0, 20.333333333333332], [840.0, 23.5], [836.0, 17.0], [842.0, 30.25], [848.0, 41.55555555555556], [861.0, 25.333333333333336], [860.0, 10.285714285714286], [857.0, 20.75], [856.0, 21.5], [849.0, 45.666666666666664], [850.0, 48.18181818181818], [852.0, 34.0], [854.0, 35.2], [841.0, 25.666666666666668], [889.0, 47.0], [867.0, 36.75], [864.0, 28.6], [872.0, 43.6], [873.0, 45.0], [875.0, 47.0], [876.0, 54.0], [877.0, 49.0], [879.0, 49.0], [865.0, 46.0], [866.0, 32.5], [871.0, 41.0], [870.0, 42.0], [890.0, 40.0], [891.0, 36.111111111111114], [885.0, 54.0], [884.0, 52.5], [882.0, 49.0], [883.0, 58.0], [881.0, 61.0], [893.0, 29.0], [894.0, 36.5], [895.0, 17.782608695652176], [868.0, 38.85714285714286], [869.0, 41.0], [900.0, 54.125], [896.0, 38.083333333333336], [911.0, 35.0], [898.0, 44.4], [899.0, 49.26666666666667], [901.0, 62.33333333333334], [902.0, 62.0], [903.0, 63.0], [920.0, 52.0], [923.0, 60.50000000000001], [926.0, 40.666666666666664], [925.0, 42.5], [924.0, 55.0], [922.0, 72.125], [910.0, 38.33333333333333], [904.0, 59.2], [909.0, 64.0], [917.0, 49.67999999999999], [919.0, 53.333333333333336], [913.0, 37.25], [916.0, 41.666666666666664], [914.0, 39.0], [942.0, 50.0], [939.0, 40.666666666666664], [929.0, 28.0], [943.0, 44.0], [928.0, 7.699999999999999], [936.0, 35.25], [931.0, 31.333333333333332], [948.0, 53.99999999999999], [947.0, 46.0], [946.0, 52.5], [954.0, 32.142857142857146], [953.0, 44.25], [952.0, 44.0], [956.0, 25.0], [958.0, 26.0], [959.0, 27.0], [937.0, 39.0], [938.0, 38.0], [949.0, 60.4], [951.0, 52.75], [940.0, 40.0], [962.0, 32.0], [964.0, 33.0], [965.0, 35.333333333333336], [966.0, 12.0], [967.0, 38.777777777777786], [961.0, 29.5], [974.0, 59.0], [963.0, 33.0], [973.0, 50.16666666666667], [977.0, 36.0], [978.0, 35.0], [976.0, 42.23076923076923], [990.0, 39.5], [991.0, 43.0], [988.0, 36.142857142857146], [987.0, 33.42857142857142], [984.0, 40.0], [985.0, 30.2], [971.0, 42.5], [970.0, 51.0], [996.0, 17.142857142857142], [994.0, 48.333333333333336], [993.0, 45.83333333333333], [992.0, 42.666666666666664], [995.0, 48.666666666666664], [998.0, 61.8], [999.0, 61.0], [1017.0, 116.0], [1022.0, 130.83333333333334], [1020.0, 16.68], [1010.0, 98.53191489361704], [1009.0, 51.0], [997.0, 69.0], [1005.0, 41.2], [1006.0, 42.0], [1004.0, 51.333333333333336], [1002.0, 57.0], [1003.0, 52.0], [1024.0, 111.33333333333333], [1026.0, 72.5], [1054.0, 40.7], [1050.0, 91.6], [1052.0, 36.0], [1048.0, 48.0], [1028.0, 88.0], [1030.0, 21.0], [1032.0, 66.33333333333333], [1034.0, 154.0], [1036.0, 14.0], [1056.0, 51.333333333333336], [1080.0, 30.0], [1072.0, 30.714285714285715], [1074.0, 37.25], [1060.0, 45.42857142857142], [1062.0, 42.5], [1070.0, 15.391304347826088], [1066.0, 42.0], [1044.0, 16.208333333333332], [1042.0, 21.5], [1146.0, 90.0], [1102.0, 153.77777777777777], [1100.0, 20.125000000000004], [1120.0, 83.66666666666667], [1140.0, 152.57142857142856], [1138.0, 134.66666666666666], [1136.0, 111.16666666666666], [1132.0, 99.0], [1134.0, 85.75], [1128.0, 91.5], [1126.0, 13.200000000000003], [1124.0, 86.0], [1122.0, 81.5], [1092.0, 45.0], [1098.0, 55.333333333333336], [1116.0, 70.0], [1118.0, 72.0], [1108.0, 61.0], [1156.0, 95.5], [1152.0, 84.5], [1154.0, 12.352941176470587], [1162.0, 84.2], [1174.0, 106.0], [1178.0, 117.6], [1176.0, 110.75], [1180.0, 117.0], [1182.0, 120.6], [1188.0, 142.26666666666665], [1194.0, 144.0], [1192.0, 146.0], [1196.0, 126.0], [1186.0, 126.0], [1200.0, 135.66666666666669], [1210.0, 140.66666666666669], [1214.0, 35.722222222222214], [1202.0, 170.2], [1184.0, 124.5], [1224.0, 134.83333333333334], [1220.0, 130.5], [1216.0, 125.0], [1240.0, 239.0], [1242.0, 170.0], [1246.0, 167.0], [1238.0, 196.71428571428572], [1236.0, 157.5], [1234.0, 157.66666666666666], [1232.0, 28.722222222222214], [1226.0, 138.0], [1228.0, 144.0], [1264.0, 168.0], [1268.0, 172.66666666666666], [1274.0, 182.66666666666666], [1278.0, 179.33333333333334], [1272.0, 178.0], [1266.0, 176.25], [1248.0, 167.0], [1250.0, 173.41666666666666], [1256.0, 151.0], [1260.0, 54.625000000000014], [1262.0, 173.0], [1218.0, 126.0], [1292.0, 183.0], [1310.0, 216.0], [1288.0, 196.0], [1290.0, 182.0], [1342.0, 214.0], [1314.0, 204.25], [1316.0, 179.47058823529414], [1320.0, 181.0], [1312.0, 211.0], [1296.0, 187.88888888888889], [1298.0, 192.0], [1302.0, 196.5], [1304.0, 203.0], [1308.0, 209.0], [1348.0, 225.0], [1362.0, 204.0], [1350.0, 232.33333333333334], [1344.0, 217.0], [1370.0, 227.0], [1368.0, 222.3], [1366.0, 219.0], [1392.0, 256.0], [1394.0, 256.0], [1398.0, 255.0], [1402.0, 271.3333333333333], [1406.0, 275.6666666666667], [1400.0, 264.24999999999994], [1386.0, 275.5], [1388.0, 274.0], [1384.0, 265.5], [1380.0, 15.159999999999998], [1354.0, 228.33333333333331], [1358.0, 223.0], [1356.0, 13.541666666666668], [1352.0, 228.0], [1364.0, 206.5], [1346.0, 225.0], [1456.0, 290.09999999999997], [1408.0, 282.0], [1438.0, 273.0], [1434.0, 281.0], [1436.0, 268.5], [1460.0, 306.29411764705884], [1458.0, 297.4], [1464.0, 269.45454545454544], [1462.0, 302.0], [1468.0, 287.8], [1466.0, 277.0], [1440.0, 280.93333333333334], [1442.0, 280.0], [1452.0, 295.99999999999994], [1454.0, 283.0], [1446.0, 279.2222222222222], [1450.0, 10.578947368421055], [1444.0, 283.8], [1422.0, 310.0], [1426.0, 285.6666666666667], [1424.0, 35.0], [1428.0, 304.85714285714283], [1430.0, 298.33333333333337], [1510.0, 262.07142857142856], [1524.0, 255.6], [1526.0, 17.952380952380953], [1504.0, 13.384615384615385], [1516.0, 232.25000000000003], [1514.0, 266.8888888888889], [1518.0, 236.75], [1522.0, 250.0], [1520.0, 243.0], [1486.0, 298.5], [1484.0, 280.0], [1482.0, 271.0], [1478.0, 302.2727272727272], [1476.0, 309.0], [1502.0, 286.3333333333333], [1488.0, 268.95238095238096], [1492.0, 262.6666666666667], [1494.0, 267.0], [1512.0, 269.0], [1508.0, 259.0], [1506.0, 254.0], [1584.0, 223.0], [1596.0, 185.33333333333334], [1588.0, 184.8], [1598.0, 210.0], [1570.0, 199.42857142857142], [1568.0, 224.0], [1572.0, 187.54545454545453], [1574.0, 190.5], [1594.0, 182.875], [1580.0, 203.5], [1566.0, 225.33333333333334], [1538.0, 250.08333333333334], [1542.0, 256.0], [1540.0, 257.0], [1550.0, 209.0], [1546.0, 281.0], [1564.0, 217.25], [1558.0, 205.77777777777777], [1554.0, 218.0], [1552.0, 212.75], [1556.0, 221.0], [1582.0, 209.75], [1586.0, 205.5], [1578.0, 197.5], [1576.0, 25.333333333333325], [1656.0, 167.0], [1662.0, 141.33333333333334], [1660.0, 146.99999999999997], [1658.0, 156.0], [1652.0, 237.33333333333334], [1654.0, 271.0], [1650.0, 171.0], [1614.0, 119.0], [1612.0, 117.66666666666667], [1610.0, 114.5], [1608.0, 109.5], [1606.0, 110.0], [1600.0, 198.33333333333334], [1604.0, 11.153846153846155], [1602.0, 15.0], [1642.0, 164.5625], [1636.0, 152.5], [1618.0, 131.5], [1616.0, 127.0], [1624.0, 135.0], [1724.0, 162.0], [1722.0, 157.8], [1726.0, 164.0], [1696.0, 162.625], [1698.0, 166.5], [1720.0, 153.39999999999998], [1718.0, 150.66666666666666], [1716.0, 20.666666666666664], [1714.0, 150.25], [1688.0, 144.5], [1664.0, 143.0], [1670.0, 162.72727272727275], [1666.0, 152.07692307692307], [1676.0, 167.25], [1674.0, 170.0], [1686.0, 138.0], [1682.0, 137.0], [1680.0, 131.5], [1684.0, 137.5], [1708.0, 166.33333333333334], [1710.0, 19.883720930232556], [1704.0, 181.5], [1702.0, 185.0], [1700.0, 167.0], [1788.0, 152.4], [1762.0, 174.2], [1784.0, 165.4], [1782.0, 168.125], [1736.0, 147.0], [1734.0, 140.5], [1728.0, 172.0], [1730.0, 177.5], [1756.0, 176.28571428571428], [1746.0, 159.25], [1750.0, 163.0], [1770.0, 148.14285714285714], [1768.0, 140.5], [1766.0, 31.486486486486484], [1764.0, 172.0], [1760.0, 181.66666666666666], [1780.0, 159.0], [1740.0, 16.03030303030303], [1820.0, 144.0], [1842.0, 130.75], [1830.0, 116.63636363636363], [1840.0, 134.67857142857144], [1818.0, 141.33333333333334], [1816.0, 140.0], [1810.0, 131.33333333333334], [1812.0, 132.0], [1808.0, 151.25], [1814.0, 133.0], [1792.0, 139.125], [1794.0, 36.80952380952381], [1798.0, 154.0], [1806.0, 163.66666666666666], [1826.0, 138.25], [1828.0, 134.33333333333334], [1834.0, 121.0], [1838.0, 123.0], [1864.0, 126.14285714285715], [1878.0, 110.0], [1880.0, 45.985714285714295], [1856.0, 19.951219512195124], [1868.0, 33.78723404255321], [1862.0, 29.78260869565218], [1860.0, 121.66666666666667], [1870.0, 140.15384615384616], [1914.0, 14.5], [1892.0, 48.61538461538461], [1902.0, 23.780487804878053], [1904.0, 11.0], [1912.0, 16.0], [1874.0, 26.863636363636363], [1876.0, 124.0], [1934.0, 27.666666666666668], [1940.0, 53.2], [1938.0, 28.0], [1944.0, 20.847826086956527], [1948.0, 25.847826086956516], [1920.0, 17.1], [1932.0, 20.6046511627907], [1950.0, 26.456521739130434], [1956.0, 24.674418604651162], [1952.0, 19.75555555555555], [1982.0, 21.17777777777778], [1980.0, 21.282608695652172], [1976.0, 21.090909090909083], [1960.0, 45.0], [1962.0, 25.66666666666666], [1966.0, 30.0], [1964.0, 31.5], [2040.0, 19.404255319148934], [2046.0, 22.163763066202108], [2018.0, 21.71739130434782], [2016.0, 20.096774193548406], [2022.0, 21.852631578947364], [2020.0, 18.999999999999996], [2026.0, 22.87368421052632], [2024.0, 19.87234042553192], [2044.0, 23.787234042553198], [2042.0, 23.92361111111112], [2038.0, 23.40625], [2036.0, 24.446808510638295], [2034.0, 20.050000000000008], [2032.0, 24.042553191489358], [2010.0, 23.893617021276597], [2006.0, 19.391304347826093], [2004.0, 24.897959183673475], [2000.0, 28.77777777777778], [2008.0, 26.652173913043473], [1996.0, 26.957446808510635], [1994.0, 23.21276595744681], [2030.0, 23.495833333333326], [2028.0, 26.687500000000004], [2072.0, 21.95454545454545], [2160.0, 148.0], [2148.0, 77.0], [2084.0, 19.785714285714285], [2048.0, 24.914893617021278], [2076.0, 23.906976744186036], [2068.0, 25.659574468085104], [2064.0, 19.40425531914893], [2056.0, 23.619718309859156], [2052.0, 22.923076923076923], [2240.0, 185.44444444444446], [2236.0, 175.0], [2232.0, 17.22222222222222], [2244.0, 184.14285714285717], [2256.0, 25.428571428571427], [2260.0, 192.0], [2252.0, 189.0], [2272.0, 237.0], [2292.0, 221.0], [2284.0, 19.488372093023255], [2368.0, 543.5], [2348.0, 532.8333333333333], [2336.0, 21.047619047619047], [2352.0, 531.2], [2356.0, 537.0], [2312.0, 21.13513513513514], [2376.0, 209.33333333333334], [2372.0, 95.21428571428572], [2388.0, 52.0], [2400.0, 298.22443699013525], [2328.0, 18.625000000000004], [2392.0, 140.83333333333334], [2396.0, 20.702127659574465], [2069.0, 27.826086956521742], [2165.0, 24.51162790697675], [2149.0, 19.820512820512825], [2133.0, 18.166666666666664], [2081.0, 19.68888888888889], [2065.0, 21.92631578947368], [2061.0, 24.45454545454546], [2053.0, 26.35416666666666], [2049.0, 20.770833333333332], [2277.0, 201.14285714285717], [2229.0, 174.0], [2213.0, 173.0], [2225.0, 18.292682926829272], [2217.0, 17.7], [2233.0, 174.0], [2197.0, 21.813953488372093], [2181.0, 23.232558139534884], [2245.0, 24.069767441860467], [2249.0, 186.0], [2253.0, 188.5], [2269.0, 26.72340425531914], [2281.0, 210.0], [2289.0, 42.413043478260875], [2369.0, 273.2], [2313.0, 231.4375], [2317.0, 583.1151178918178], [2345.0, 48.36956521739131], [2341.0, 27.81818181818182], [2349.0, 31.326086956521742], [2353.0, 73.35593220338981], [2357.0, 49.0], [2373.0, 387.6], [2377.0, 41.0], [2385.0, 356.0], [2397.0, 56.4], [2393.0, 8.0], [1029.0, 59.0], [1055.0, 46.5], [1051.0, 34.5], [1049.0, 60.8], [1033.0, 64.0], [1035.0, 45.5], [1039.0, 16.5], [1083.0, 33.0], [1077.0, 40.0], [1069.0, 46.0], [1065.0, 42.0], [1063.0, 39.5], [1059.0, 39.333333333333336], [1037.0, 14.0], [1045.0, 30.833333333333332], [1043.0, 24.166666666666668], [1041.0, 20.0], [1149.0, 85.6], [1091.0, 230.5], [1151.0, 86.33333333333333], [1147.0, 189.66666666666666], [1145.0, 89.16666666666666], [1143.0, 94.66666666666667], [1137.0, 121.0], [1129.0, 96.0], [1131.0, 97.0], [1133.0, 96.0], [1125.0, 86.0], [1127.0, 87.0], [1123.0, 87.16666666666666], [1121.0, 80.44444444444444], [1099.0, 51.666666666666664], [1093.0, 46.0], [1115.0, 69.0], [1111.0, 86.09090909090908], [1107.0, 61.0], [1113.0, 68.0], [1119.0, 74.8], [1157.0, 90.0], [1155.0, 89.5], [1159.0, 88.0], [1173.0, 104.5], [1175.0, 107.0], [1181.0, 117.5], [1183.0, 122.0], [1161.0, 87.0], [1191.0, 136.0], [1185.0, 13.263157894736844], [1193.0, 139.0], [1199.0, 134.5], [1195.0, 144.0], [1163.0, 86.0], [1211.0, 228.5], [1209.0, 143.5], [1207.0, 141.16666666666666], [1205.0, 141.0], [1203.0, 143.5], [1223.0, 133.5], [1247.0, 22.277777777777775], [1239.0, 173.5], [1241.0, 185.39999999999998], [1245.0, 223.0], [1237.0, 365.0], [1219.0, 127.0], [1217.0, 127.0], [1225.0, 139.0], [1221.0, 133.5], [1227.0, 138.5], [1265.0, 168.0], [1267.0, 172.0], [1269.0, 42.21212121212121], [1271.0, 180.0], [1251.0, 149.33333333333334], [1253.0, 179.3076923076923], [1257.0, 152.5], [1263.0, 181.0], [1259.0, 161.5], [1249.0, 165.0], [1289.0, 52.8974358974359], [1287.0, 183.0], [1285.0, 184.55555555555554], [1309.0, 214.66666666666666], [1291.0, 182.66666666666666], [1341.0, 214.11111111111111], [1343.0, 26.055555555555554], [1313.0, 10.0], [1315.0, 169.16666666666666], [1321.0, 184.33333333333334], [1317.0, 10.0], [1325.0, 16.93333333333334], [1299.0, 193.0], [1297.0, 189.5], [1303.0, 200.6], [1305.0, 204.0], [1307.0, 31.035714285714285], [1301.0, 194.25], [1373.0, 238.25], [1345.0, 217.25], [1371.0, 229.0], [1369.0, 226.0], [1367.0, 222.75], [1365.0, 211.25], [1361.0, 220.28571428571428], [1353.0, 233.625], [1359.0, 211.0], [1393.0, 246.0], [1399.0, 257.6666666666667], [1397.0, 252.0], [1401.0, 266.5], [1407.0, 279.0], [1403.0, 22.000000000000007], [1385.0, 271.0], [1387.0, 270.5], [1389.0, 267.6666666666667], [1391.0, 257.2], [1351.0, 227.0], [1363.0, 216.66666666666666], [1347.0, 218.0], [1413.0, 299.3529411764706], [1409.0, 284.0], [1439.0, 284.0], [1435.0, 265.59999999999997], [1431.0, 287.8181818181818], [1433.0, 267.2727272727273], [1423.0, 280.79999999999995], [1467.0, 285.5], [1465.0, 275.625], [1463.0, 276.5714285714286], [1461.0, 295.5], [1459.0, 301.42857142857144], [1457.0, 293.0], [1441.0, 275.6666666666667], [1443.0, 284.0], [1445.0, 280.0], [1453.0, 289.6666666666667], [1455.0, 285.58333333333337], [1415.0, 292.5], [1425.0, 280.0], [1427.0, 293.0], [1429.0, 307.0], [1525.0, 262.3333333333333], [1513.0, 283.6], [1515.0, 235.33333333333334], [1523.0, 254.8], [1521.0, 244.83333333333334], [1503.0, 274.00000000000006], [1479.0, 195.55555555555566], [1483.0, 276.06666666666666], [1481.0, 283.2], [1485.0, 286.52631578947364], [1487.0, 300.4], [1501.0, 291.5238095238095], [1491.0, 259.8888888888889], [1495.0, 267.0], [1519.0, 240.1], [1517.0, 235.0], [1511.0, 269.5], [1507.0, 256.0769230769231], [1505.0, 252.0], [1509.0, 259.5], [1585.0, 215.0], [1593.0, 180.28571428571428], [1589.0, 179.4], [1597.0, 187.125], [1599.0, 86.91304347826087], [1571.0, 193.375], [1569.0, 220.66666666666666], [1577.0, 195.0], [1573.0, 189.0], [1595.0, 184.0], [1591.0, 178.0], [1587.0, 197.66666666666666], [1567.0, 226.0], [1537.0, 276.0], [1543.0, 265.3529411764706], [1539.0, 252.57142857142858], [1551.0, 209.25], [1547.0, 229.0666666666667], [1545.0, 273.57142857142856], [1565.0, 219.2], [1563.0, 211.2], [1557.0, 261.32183908045977], [1555.0, 220.0], [1553.0, 21.538461538461537], [1583.0, 213.0], [1579.0, 198.0], [1661.0, 149.33333333333334], [1663.0, 142.5], [1639.0, 152.33333333333334], [1637.0, 152.0], [1657.0, 164.0], [1659.0, 24.487179487179493], [1651.0, 254.4], [1615.0, 123.08333333333333], [1609.0, 111.69999999999999], [1601.0, 136.33333333333331], [1627.0, 17.968750000000007], [1607.0, 109.0], [1613.0, 118.66666666666667], [1643.0, 30.028571428571425], [1621.0, 133.33333333333334], [1617.0, 42.374999999999986], [1647.0, 170.0], [1645.0, 171.0], [1715.0, 143.0], [1723.0, 160.4], [1721.0, 156.5], [1725.0, 30.257142857142856], [1727.0, 164.5], [1719.0, 150.0], [1717.0, 145.5], [1713.0, 154.0], [1677.0, 153.2857142857143], [1673.0, 172.0], [1669.0, 41.60465116279069], [1665.0, 145.0], [1671.0, 171.16666666666669], [1691.0, 155.0], [1695.0, 157.0], [1687.0, 34.21951219512195], [1681.0, 30.56521739130436], [1685.0, 138.0], [1683.0, 137.0], [1707.0, 170.42857142857142], [1711.0, 163.75], [1705.0, 171.0], [1703.0, 177.33333333333334], [1701.0, 173.00000000000003], [1697.0, 164.0], [1699.0, 20.027027027027028], [1777.0, 160.4], [1787.0, 162.33333333333334], [1789.0, 144.0], [1783.0, 175.0], [1781.0, 19.714285714285715], [1759.0, 173.5], [1731.0, 168.35714285714283], [1729.0, 169.5], [1735.0, 143.25], [1737.0, 148.0], [1733.0, 136.66666666666669], [1753.0, 166.0], [1751.0, 165.25], [1749.0, 161.0], [1757.0, 183.25], [1755.0, 17.27777777777778], [1773.0, 152.55555555555554], [1771.0, 151.5], [1769.0, 149.375], [1763.0, 157.5], [1765.0, 150.0], [1761.0, 180.0], [1775.0, 155.33333333333334], [1823.0, 19.842105263157894], [1819.0, 151.33333333333334], [1817.0, 140.66666666666666], [1815.0, 134.66666666666666], [1813.0, 132.0], [1809.0, 129.6], [1793.0, 146.0], [1795.0, 147.8181818181818], [1797.0, 158.5], [1803.0, 166.89473684210526], [1805.0, 173.0], [1807.0, 14.65625], [1821.0, 141.0], [1843.0, 130.45454545454547], [1847.0, 17.53846153846154], [1841.0, 142.66666666666666], [1835.0, 28.75675675675676], [1829.0, 123.38461538461537], [1833.0, 120.5], [1831.0, 124.0], [1839.0, 123.5], [1859.0, 119.22222222222223], [1873.0, 131.75], [1879.0, 108.8], [1885.0, 101.6069868995633], [1881.0, 51.0], [1867.0, 132.81250000000003], [1857.0, 132.5], [1875.0, 123.0], [1877.0, 112.0], [1871.0, 140.0], [1899.0, 9.333333333333334], [1907.0, 14.0], [1917.0, 15.0], [1913.0, 19.268292682926834], [1895.0, 27.615384615384617], [1909.0, 18.177777777777774], [1901.0, 10.0], [1903.0, 11.0], [1933.0, 25.0], [1949.0, 69.0], [1935.0, 35.23684210526315], [1937.0, 20.20454545454545], [1945.0, 70.0], [1971.0, 22.29787234042553], [1965.0, 22.46511627906977], [1973.0, 20.021739130434785], [1969.0, 32.0], [1947.0, 52.0], [1931.0, 25.0], [1921.0, 17.0], [2041.0, 23.23295454545456], [2033.0, 23.421052631578956], [2015.0, 26.56643356643357], [1985.0, 23.14285714285714], [1997.0, 21.577777777777776], [1991.0, 20.64444444444444], [2013.0, 19.304347826086964], [2011.0, 22.56842105263158], [2047.0, 22.999999999999996], [2023.0, 21.553191489361694], [2027.0, 17.170212765957448], [2025.0, 30.18881118881117], [2045.0, 24.750000000000007], [2043.0, 26.499999999999996], [2039.0, 21.416666666666668], [2037.0, 21.526132404181187], [2035.0, 19.82105263157895], [2031.0, 22.934718100890226], [2029.0, 36.33333333333333], [2070.0, 28.488636363636374], [2162.0, 147.0], [2158.0, 19.731707317073166], [2130.0, 21.15555555555556], [2122.0, 19.257142857142856], [2114.0, 20.575000000000003], [2066.0, 23.423611111111107], [2062.0, 20.629370629370623], [2058.0, 20.273684210526312], [2054.0, 24.6083916083916], [2050.0, 22.680555555555546], [2242.0, 202.0], [2238.0, 176.33333333333334], [2210.0, 169.43137254901964], [2206.0, 155.0], [2202.0, 22.452380952380953], [2186.0, 21.302325581395348], [2178.0, 23.000000000000004], [2222.0, 173.0], [2246.0, 185.0], [2250.0, 188.0], [2254.0, 188.5], [2262.0, 191.0], [2270.0, 23.23255813953488], [2258.0, 191.0], [2274.0, 212.75], [2278.0, 220.66666666666666], [2290.0, 217.0], [2294.0, 223.0], [2310.0, 226.0], [2314.0, 238.94999999999996], [2346.0, 530.0], [2354.0, 397.5714285714285], [2358.0, 49.0], [2350.0, 547.75], [2366.0, 550.0], [2362.0, 47.621621621621614], [2378.0, 59.0], [2398.0, 25.375000000000004], [2394.0, 20.568181818181813], [2159.0, 117.0], [2175.0, 24.799999999999997], [2143.0, 77.0], [2171.0, 19.249999999999996], [2139.0, 16.42105263157895], [2123.0, 9.2], [2103.0, 16.783783783783786], [2055.0, 23.02105263157895], [2051.0, 23.631578947368425], [2063.0, 20.729166666666668], [2059.0, 20.260869565217394], [2071.0, 46.357142857142854], [2067.0, 25.361702127659576], [2095.0, 17.3], [2091.0, 20.431818181818173], [2291.0, 219.5], [2211.0, 183.33333333333334], [2239.0, 176.66666666666666], [2243.0, 183.0], [2251.0, 24.883720930232563], [2259.0, 191.5], [2263.0, 26.90697674418605], [2279.0, 228.33333333333334], [2275.0, 17.94871794871795], [2207.0, 20.394736842105264], [2203.0, 9.0], [2191.0, 23.261904761904763], [2295.0, 27.933333333333334], [2299.0, 21.225], [2315.0, 273.56521739130443], [2351.0, 530.0], [2347.0, 534.7777777777777], [2367.0, 367.66666666666663], [2307.0, 20.13953488372093], [2371.0, 549.0], [2323.0, 22.627906976744182], [2355.0, 243.6], [2359.0, 293.0], [2375.0, 23.5], [2391.0, 54.0], [2395.0, 329.0], [2399.0, 32.56164383561646]], "isOverall": false, "label": "AuthzUser", "isController": false}, {"data": [[2385.948087955895, 297.1963836354014]], "isOverall": false, "label": "AuthzUser-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 42976.9, "minX": 1.63351302E12, "maxY": 8278559.333333333, "series": [{"data": [[1.6335132E12, 8278559.333333333], [1.63351356E12, 8039704.966666667], [1.63351326E12, 7973287.333333333], [1.63351392E12, 6676965.3], [1.63351344E12, 7781639.383333334], [1.63351374E12, 8106853.566666666], [1.63351314E12, 7667915.516666667], [1.6335135E12, 8073031.3], [1.63351368E12, 7668396.616666666], [1.63351338E12, 7951963.8], [1.6335138E12, 8007568.016666667], [1.63351308E12, 7964952.4], [1.63351362E12, 7929919.733333333], [1.63351332E12, 7941979.9], [1.63351386E12, 7930509.333333333], [1.63351302E12, 2052257.95]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6335132E12, 175145.96666666667], [1.63351356E12, 170092.86666666667], [1.63351326E12, 168687.35], [1.63351392E12, 141261.46666666667], [1.63351344E12, 164631.35], [1.63351374E12, 171509.65], [1.63351314E12, 161813.28333333333], [1.6335135E12, 170797.03333333333], [1.63351368E12, 162234.36666666667], [1.63351338E12, 168233.86666666667], [1.6335138E12, 169408.41666666666], [1.63351308E12, 167512.8], [1.63351362E12, 167769.11666666667], [1.63351332E12, 168022.61666666667], [1.63351386E12, 167780.38333333333], [1.63351302E12, 42976.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63351392E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 95.705575051842, "minX": 1.63351302E12, "maxY": 480.39850794680603, "series": [{"data": [[1.6335132E12, 303.87001061400446], [1.63351356E12, 313.93172484599603], [1.63351326E12, 335.6523902553077], [1.63351392E12, 95.705575051842], [1.63351344E12, 302.14811202929104], [1.63351374E12, 313.8722142845414], [1.63351314E12, 345.7406024828555], [1.6335135E12, 312.45057554668676], [1.63351368E12, 351.4213687975329], [1.63351338E12, 262.7564626305911], [1.6335138E12, 310.04933078394026], [1.63351308E12, 284.509477484708], [1.63351362E12, 259.44796266138826], [1.63351332E12, 318.9054867315972], [1.63351386E12, 270.3332046267275], [1.63351302E12, 480.39850794680603]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63351392E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 95.55555112458079, "minX": 1.63351302E12, "maxY": 477.06052546221576, "series": [{"data": [[1.6335132E12, 303.698996494163], [1.63351356E12, 313.7344505530895], [1.63351326E12, 335.49060762410494], [1.63351392E12, 95.55555112458079], [1.63351344E12, 301.97729644647535], [1.63351374E12, 313.7075594094323], [1.63351314E12, 345.556732355239], [1.6335135E12, 312.11783040337957], [1.63351368E12, 351.2346956491559], [1.63351338E12, 262.6191401017938], [1.6335138E12, 309.8698146146783], [1.63351308E12, 284.345284658844], [1.63351362E12, 259.25727381092855], [1.63351332E12, 318.75285400566446], [1.63351386E12, 270.1760202796868], [1.63351302E12, 477.06052546221576]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63351392E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.3400058170370745, "minX": 1.63351302E12, "maxY": 217.14433992864122, "series": [{"data": [[1.6335132E12, 0.5132996687144217], [1.63351356E12, 3.0931807643902904], [1.63351326E12, 0.5952178196329858], [1.63351392E12, 0.5693292391130923], [1.63351344E12, 0.3400058170370745], [1.63351374E12, 0.6669294312788316], [1.63351314E12, 0.5553780710131072], [1.6335135E12, 10.992644876150257], [1.63351368E12, 1.0243758463835604], [1.63351338E12, 0.4638862844896869], [1.6335138E12, 0.5506692160611886], [1.63351308E12, 0.38790826730852573], [1.63351362E12, 4.217114651713282], [1.63351332E12, 0.3524717952156636], [1.63351386E12, 0.7715177866939791], [1.63351302E12, 217.14433992864122]], "isOverall": false, "label": "AuthzUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63351392E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.63351302E12, "maxY": 9469.0, "series": [{"data": [[1.6335132E12, 1086.0], [1.63351356E12, 1228.0], [1.63351326E12, 1161.0], [1.63351392E12, 794.0], [1.63351344E12, 1178.0], [1.63351374E12, 1103.0], [1.63351314E12, 980.0], [1.6335135E12, 1180.0], [1.63351368E12, 1203.0], [1.63351338E12, 1000.0], [1.6335138E12, 1061.0], [1.63351308E12, 3119.0], [1.63351362E12, 1761.0], [1.63351332E12, 1139.0], [1.63351386E12, 987.0], [1.63351302E12, 9469.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6335132E12, 852.9900000000016], [1.63351356E12, 919.9900000000016], [1.63351326E12, 903.0], [1.63351392E12, 53.0], [1.63351344E12, 793.0], [1.63351374E12, 1065.0], [1.63351314E12, 932.0], [1.6335135E12, 837.0], [1.63351368E12, 1020.0], [1.63351338E12, 798.0], [1.6335138E12, 834.0], [1.63351308E12, 551.9900000000016], [1.63351362E12, 890.0], [1.63351332E12, 799.0], [1.63351386E12, 769.0], [1.63351302E12, 9341.36]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6335132E12, 915.9989454650859], [1.63351356E12, 1067.0], [1.63351326E12, 957.9994727325429], [1.63351392E12, 135.99947273254293], [1.63351344E12, 1088.999472732543], [1.63351374E12, 1101.999472732543], [1.63351314E12, 978.9984181976288], [1.6335135E12, 867.9984181976288], [1.63351368E12, 1072.0], [1.63351338E12, 844.9994727325429], [1.6335138E12, 873.0], [1.63351308E12, 578.0], [1.63351362E12, 924.9994727325429], [1.63351332E12, 941.9984181976288], [1.63351386E12, 803.9994727325429], [1.63351302E12, 9466.832282714844]], "isOverall": false, "label": "99.99th percentile", "isController": false}, {"data": [[1.6335132E12, 904.0], [1.63351356E12, 1036.0], [1.63351326E12, 949.0], [1.63351392E12, 133.0], [1.63351344E12, 1047.0], [1.63351374E12, 1093.0], [1.63351314E12, 968.0], [1.6335135E12, 858.0], [1.63351368E12, 1065.0], [1.63351338E12, 836.0], [1.6335138E12, 867.0], [1.63351308E12, 573.0], [1.63351362E12, 920.0], [1.63351332E12, 928.0], [1.63351386E12, 799.9993051910387], [1.63351302E12, 9442.584235229491]], "isOverall": false, "label": "99.9th percentile", "isController": false}, {"data": [[1.6335132E12, 5.0], [1.63351356E12, 4.0], [1.63351326E12, 5.0], [1.63351392E12, 5.0], [1.63351344E12, 4.0], [1.63351374E12, 5.0], [1.63351314E12, 4.0], [1.6335135E12, 4.0], [1.63351368E12, 5.0], [1.63351338E12, 5.0], [1.6335138E12, 5.0], [1.63351308E12, 5.0], [1.63351362E12, 4.0], [1.63351332E12, 5.0], [1.63351386E12, 5.0], [1.63351302E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6335132E12, 89.0], [1.63351356E12, 328.0], [1.63351326E12, 179.0], [1.63351392E12, 23.0], [1.63351344E12, 253.0], [1.63351374E12, 381.0], [1.63351314E12, 378.0], [1.6335135E12, 311.0], [1.63351368E12, 274.5], [1.63351338E12, 250.0], [1.6335138E12, 284.0], [1.63351308E12, 114.0], [1.63351362E12, 185.5], [1.63351332E12, 228.0], [1.63351386E12, 137.0], [1.63351302E12, 216.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63351392E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 6.0, "maxY": 9155.0, "series": [{"data": [[6.0, 10.0], [7.0, 7.0], [9.0, 24.0], [13.0, 11.0], [16.0, 14.0], [17.0, 29.0], [18.0, 30.5], [26.0, 13.0], [29.0, 15.0], [34.0, 13.0], [44.0, 23.5], [46.0, 20.0], [51.0, 28.0], [54.0, 32.0], [63.0, 19.0], [69.0, 16.0], [77.0, 22.0], [82.0, 19.0], [84.0, 20.0], [91.0, 20.0], [94.0, 21.0], [96.0, 21.0], [98.0, 19.5], [106.0, 20.0], [110.0, 25.0], [115.0, 33.0], [113.0, 22.0], [121.0, 26.0], [123.0, 18.0], [124.0, 23.5], [131.0, 3092.0], [128.0, 19.5], [139.0, 24.0], [142.0, 21.0], [151.0, 25.0], [147.0, 25.0], [149.0, 81.0], [144.0, 21.0], [156.0, 68.0], [154.0, 64.0], [162.0, 28.0], [174.0, 67.0], [171.0, 23.0], [188.0, 188.0], [191.0, 24.0], [197.0, 25.0], [195.0, 33.0], [194.0, 25.0], [193.0, 26.0], [206.0, 23.0], [202.0, 39.0], [205.0, 75.0], [215.0, 23.0], [217.0, 59.0], [230.0, 25.0], [226.0, 21.0], [227.0, 23.0], [233.0, 23.0], [238.0, 20.0], [234.0, 24.0], [242.0, 23.0], [271.0, 23.5], [270.0, 23.0], [262.0, 90.5], [258.0, 359.0], [281.0, 26.0], [294.0, 25.0], [288.0, 25.0], [335.0, 169.0], [321.0, 25.0], [323.0, 23.0], [337.0, 22.0], [338.0, 23.0], [366.0, 23.0], [363.0, 23.0], [361.0, 24.0], [354.0, 32.0], [367.0, 24.0], [376.0, 24.0], [372.0, 25.0], [379.0, 32.0], [373.0, 27.0], [368.0, 173.0], [380.0, 21.0], [370.0, 26.0], [387.0, 22.0], [396.0, 168.0], [386.0, 23.0], [393.0, 61.0], [394.0, 21.0], [390.0, 21.0], [413.0, 156.0], [412.0, 22.0], [402.0, 23.0], [405.0, 167.0], [415.0, 165.0], [429.0, 98.0], [423.0, 21.0], [458.0, 185.0], [478.0, 24.0], [470.0, 26.0], [474.0, 24.0], [494.0, 23.0], [484.0, 24.0], [485.0, 26.0], [488.0, 23.0], [497.0, 22.0], [507.0, 183.0], [531.0, 9155.0], [533.0, 22.0], [530.0, 22.0], [534.0, 179.0], [517.0, 20.0], [518.0, 223.5], [515.0, 160.0], [601.0, 171.0], [578.0, 157.0], [588.0, 24.0], [577.0, 24.0], [622.0, 234.5], [620.0, 195.0], [616.0, 228.0], [615.0, 24.0], [621.0, 24.0], [614.0, 22.0], [632.0, 24.0], [635.0, 26.0], [623.0, 21.0], [610.0, 16.0], [657.0, 165.0], [648.0, 175.0], [670.0, 24.0], [660.0, 181.0], [647.0, 185.0], [696.0, 22.0], [675.0, 29.0], [678.0, 22.0], [731.0, 199.0], [734.0, 207.0], [706.0, 24.0], [705.0, 24.0], [721.0, 22.0], [708.0, 23.0], [711.0, 23.0], [710.0, 23.0], [732.0, 24.0], [740.0, 22.5], [751.0, 23.0], [757.0, 226.0], [739.0, 24.0], [750.0, 22.0], [764.0, 24.0], [765.0, 24.0], [761.0, 24.0], [762.0, 199.0], [736.0, 21.0], [738.0, 24.0], [781.0, 23.0], [797.0, 23.0], [768.0, 29.0], [792.0, 24.0], [777.0, 181.0], [786.0, 25.0], [788.0, 22.0], [815.0, 23.0], [805.0, 23.0], [819.0, 25.0], [820.0, 189.0], [828.0, 22.0], [817.0, 23.0], [813.0, 24.0], [818.0, 24.0], [848.0, 23.0], [855.0, 22.0], [862.0, 24.0], [844.0, 23.0], [859.0, 23.0], [849.0, 26.0], [838.0, 24.0], [834.0, 25.0], [861.0, 24.0], [885.0, 175.0], [864.0, 23.0], [893.0, 22.0], [889.0, 25.0], [891.0, 253.0], [868.0, 21.0], [865.0, 20.0], [908.0, 215.0], [921.0, 24.0], [923.0, 315.0], [916.0, 23.0], [925.0, 24.0], [926.0, 23.0], [896.0, 34.5], [946.0, 165.0], [945.0, 25.0], [931.0, 23.0], [948.0, 292.0], [957.0, 25.0], [989.0, 24.0], [976.0, 22.0], [964.0, 24.0], [982.0, 24.0], [981.0, 23.0], [980.0, 22.0], [983.0, 22.0], [963.0, 25.0], [962.0, 33.0], [961.0, 24.0], [970.0, 89.0], [960.0, 125.5], [988.0, 25.0], [987.0, 23.0], [984.0, 23.0], [986.0, 22.0], [990.0, 24.0], [991.0, 25.0], [998.0, 24.0], [1003.0, 26.0], [1014.0, 23.5], [1015.0, 26.0], [1013.0, 25.0], [1002.0, 24.0], [1001.0, 24.0], [1000.0, 25.0], [1006.0, 23.0], [1005.0, 24.0], [1004.0, 24.0], [1007.0, 24.0], [992.0, 23.0], [993.0, 26.0], [994.0, 23.0], [995.0, 24.0], [996.0, 23.0], [997.0, 25.0], [1011.0, 24.0], [1010.0, 24.0], [1008.0, 24.0], [1009.0, 23.0], [999.0, 23.0], [1016.0, 27.0], [1017.0, 23.0], [1019.0, 23.0], [1020.0, 256.0], [1012.0, 25.0], [1055.0, 22.0], [1064.0, 37.0], [1066.0, 251.0], [1046.0, 232.0], [1031.0, 227.0], [1028.0, 22.0], [1047.0, 267.0], [1085.0, 264.0], [1143.0, 26.0], [1088.0, 24.0], [1145.0, 24.0], [1093.0, 27.0], [1121.0, 24.0], [1098.0, 24.0], [1091.0, 25.0], [1215.0, 23.0], [1198.0, 196.0], [1214.0, 30.0], [1193.0, 27.0], [1192.0, 27.0], [1187.0, 32.0], [1183.0, 279.0], [1153.0, 21.0], [1201.0, 242.0], [1227.0, 297.0], [1260.0, 284.5], [1224.0, 278.0], [1245.0, 27.0], [1276.0, 30.0], [1340.0, 36.0], [1288.0, 48.0], [1296.0, 254.0], [1329.0, 28.0], [1282.0, 31.0], [1312.0, 59.0], [1300.0, 261.0], [1374.0, 277.0], [1357.0, 31.0], [1352.0, 172.0], [1368.0, 33.0], [1398.0, 33.0], [1386.0, 223.0], [1365.0, 176.0], [1427.0, 152.0], [1443.0, 33.0], [1415.0, 37.0], [1450.0, 301.0], [1446.0, 83.5], [1421.0, 393.0], [1471.0, 397.0], [1470.0, 317.0], [1475.0, 61.0], [1494.0, 234.0], [1528.0, 100.0], [1512.0, 31.0], [1483.0, 292.0], [1491.0, 37.0], [1488.0, 221.0], [1527.0, 281.0], [1482.0, 312.0], [1504.0, 47.0], [1543.0, 299.0], [1546.0, 40.0], [1597.0, 35.0], [1596.0, 68.0], [1654.0, 86.5], [1610.0, 299.0], [1644.0, 212.0], [1602.0, 265.0], [1617.0, 188.0], [1640.0, 342.0], [1646.0, 429.0], [1628.0, 85.5], [1643.0, 304.0], [1715.0, 178.0], [1695.0, 264.0], [1670.0, 137.5], [1690.0, 158.0], [1727.0, 174.0], [1708.0, 229.0], [1721.0, 168.0], [1723.0, 435.0], [1683.0, 380.0], [1681.0, 105.0], [1712.0, 145.0], [1777.0, 447.0], [1775.0, 467.0], [1757.0, 155.0], [1770.0, 293.0], [1778.0, 205.0], [1762.0, 173.0], [1753.0, 382.0], [1767.0, 217.0], [1743.0, 140.0], [1730.0, 192.0], [1842.0, 353.0], [1853.0, 280.0], [1845.0, 364.0], [1847.0, 230.0], [1854.0, 373.0], [1809.0, 334.0], [1834.0, 410.5], [1825.0, 247.0], [1859.0, 346.0], [1889.0, 298.0], [1856.0, 236.0], [1858.0, 221.0], [1865.0, 234.0], [1864.0, 213.0], [1861.0, 191.0], [1886.0, 322.0], [1880.0, 334.0], [1879.0, 299.0], [1939.0, 355.0], [1951.0, 318.0], [1957.0, 325.0], [1952.0, 325.0], [1964.0, 397.0], [1946.0, 515.0], [1956.0, 376.0], [1989.0, 433.0], [2015.0, 509.0], [2007.0, 369.0], [2003.0, 502.0], [2006.0, 252.0], [1987.0, 428.0], [2025.0, 282.0], [2026.0, 563.0], [2031.0, 422.0], [2045.0, 385.0], [2014.0, 372.0], [1996.0, 388.0], [1993.0, 373.0], [1997.0, 343.0], [2032.0, 494.0], [2044.0, 264.0], [2166.0, 360.0], [2076.0, 416.0], [2108.0, 429.0], [2114.0, 504.0], [2138.0, 368.0], [2092.0, 417.0], [2146.0, 475.5], [2142.0, 470.0], [2200.0, 372.0], [2238.0, 731.0], [2250.0, 528.0], [2274.0, 563.0], [2196.0, 489.5], [2222.0, 558.5], [2220.0, 487.0], [2198.0, 565.5], [2288.0, 380.0], [2332.0, 462.0], [2384.0, 728.0], [2394.0, 693.0], [2360.0, 626.5], [2344.0, 486.0], [2336.0, 453.0], [2368.0, 469.5], [2306.0, 472.0], [2322.0, 904.5], [2324.0, 729.0], [2316.0, 638.5], [2448.0, 430.0], [2552.0, 461.0], [2550.0, 617.0], [2526.0, 522.5], [2524.0, 500.0], [2516.0, 229.0], [2514.0, 365.5], [2472.0, 233.0], [2488.0, 121.0], [2480.0, 463.0], [2490.0, 627.0], [2444.0, 569.0], [2440.0, 673.0], [2572.0, 459.0], [2606.0, 419.0], [2650.0, 622.0], [2568.0, 521.0], [2570.0, 540.0], [2642.0, 468.5], [2718.0, 578.5], [2726.0, 644.0], [2720.0, 594.0], [2768.0, 603.0], [2698.0, 504.0], [2714.0, 682.0], [2804.0, 452.5], [2788.0, 480.0], [2800.0, 567.0], [2772.0, 414.0], [2774.0, 595.0], [2938.0, 614.0], [2886.0, 568.0], [2900.0, 294.0], [2858.0, 498.5], [2826.0, 589.0], [2820.0, 569.0], [2844.0, 403.0], [2872.0, 587.0], [3006.0, 478.5], [3108.0, 618.5], [2103.0, 424.0], [2157.0, 381.0], [2087.0, 432.0], [2081.0, 459.0], [2135.0, 456.5], [2117.0, 461.0], [2153.0, 391.0], [2077.0, 91.0], [2055.0, 404.0], [2091.0, 232.0], [2095.0, 159.0], [2295.0, 558.0], [2177.0, 491.0], [2259.0, 772.0], [2297.0, 460.0], [2303.0, 563.0], [2221.0, 858.0], [2237.0, 557.0], [2193.0, 477.0], [2181.0, 470.0], [2199.0, 477.0], [2375.0, 609.0], [2425.0, 471.0], [2395.0, 420.0], [2305.0, 402.0], [2363.0, 582.0], [2341.0, 674.0], [2359.0, 368.0], [2407.0, 488.0], [2427.0, 165.0], [2539.0, 590.0], [2553.0, 365.0], [2451.0, 602.0], [2535.0, 660.0], [2435.0, 537.0], [2517.0, 442.0], [2555.0, 651.0], [2513.0, 410.0], [2507.0, 509.0], [2503.0, 616.0], [2487.0, 356.0], [2489.0, 613.0], [2675.0, 600.0], [2585.0, 636.0], [2581.0, 708.0], [2591.0, 678.0], [2685.0, 777.0], [2649.0, 480.0], [2679.0, 556.0], [2575.0, 545.0], [2677.0, 524.0], [2785.0, 404.0], [2793.0, 563.0], [2765.0, 558.0], [2767.0, 490.0], [2789.0, 430.0], [2731.0, 799.0], [2835.0, 571.0], [2827.0, 266.0], [2921.0, 412.0], [2915.0, 500.0], [2933.0, 546.0], [2859.0, 541.0], [2825.0, 515.0], [2865.0, 552.0], [2861.0, 574.0], [2977.0, 532.0], [2961.0, 477.0], [2993.0, 526.0], [3003.0, 623.0], [3039.0, 540.0], [3089.0, 487.0], [3085.0, 551.0], [3107.0, 584.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3108.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 6.0, "maxY": 9004.0, "series": [{"data": [[6.0, 9.5], [7.0, 7.0], [9.0, 24.0], [13.0, 11.0], [16.0, 14.0], [17.0, 28.0], [18.0, 30.5], [26.0, 13.0], [29.0, 15.0], [34.0, 13.0], [44.0, 23.0], [46.0, 19.5], [51.0, 28.0], [54.0, 31.0], [63.0, 19.0], [69.0, 16.0], [77.0, 22.0], [82.0, 18.0], [84.0, 19.5], [91.0, 20.0], [94.0, 20.0], [96.0, 21.0], [98.0, 19.5], [106.0, 20.0], [110.0, 24.5], [115.0, 33.0], [113.0, 22.0], [121.0, 26.0], [123.0, 18.0], [124.0, 23.0], [131.0, 3092.0], [128.0, 19.5], [139.0, 24.0], [142.0, 21.0], [151.0, 25.0], [147.0, 25.0], [149.0, 81.0], [144.0, 21.0], [156.0, 68.0], [154.0, 63.5], [162.0, 28.0], [174.0, 67.0], [171.0, 23.0], [188.0, 187.5], [191.0, 24.0], [197.0, 25.0], [195.0, 33.0], [194.0, 25.0], [193.0, 26.0], [206.0, 22.5], [202.0, 38.0], [205.0, 75.0], [215.0, 23.0], [217.0, 59.0], [230.0, 25.0], [226.0, 21.0], [227.0, 23.0], [233.0, 23.0], [238.0, 20.0], [234.0, 23.0], [242.0, 23.0], [271.0, 23.0], [270.0, 23.0], [262.0, 90.0], [258.0, 358.0], [281.0, 26.0], [294.0, 25.0], [288.0, 25.0], [335.0, 168.0], [321.0, 24.0], [323.0, 23.0], [337.0, 22.0], [338.0, 23.0], [366.0, 23.0], [363.0, 22.0], [361.0, 24.0], [354.0, 32.0], [367.0, 24.0], [376.0, 24.0], [372.0, 25.0], [379.0, 32.0], [373.0, 27.0], [368.0, 173.0], [380.0, 21.0], [370.0, 25.5], [387.0, 22.0], [396.0, 168.0], [386.0, 23.0], [393.0, 61.0], [394.0, 21.0], [390.0, 21.0], [413.0, 156.0], [412.0, 22.0], [402.0, 23.0], [405.0, 167.0], [415.0, 165.0], [429.0, 98.0], [423.0, 21.0], [458.0, 184.0], [478.0, 24.0], [470.0, 26.0], [474.0, 24.0], [494.0, 23.0], [484.0, 24.0], [485.0, 26.0], [488.0, 23.0], [497.0, 22.0], [507.0, 183.0], [531.0, 9004.0], [533.0, 22.0], [530.0, 22.0], [534.0, 179.0], [517.0, 20.0], [518.0, 223.0], [515.0, 160.0], [601.0, 170.0], [578.0, 157.0], [588.0, 24.0], [577.0, 24.0], [622.0, 234.5], [620.0, 195.0], [616.0, 228.0], [615.0, 24.0], [621.0, 24.0], [614.0, 22.0], [632.0, 24.0], [635.0, 26.0], [623.0, 21.0], [610.0, 16.0], [657.0, 165.0], [648.0, 175.0], [670.0, 24.0], [660.0, 181.0], [647.0, 185.0], [696.0, 22.0], [675.0, 29.0], [678.0, 22.0], [731.0, 199.0], [734.0, 207.0], [706.0, 24.0], [705.0, 23.5], [721.0, 22.0], [708.0, 23.0], [711.0, 22.0], [710.0, 23.0], [732.0, 24.0], [740.0, 22.0], [751.0, 23.0], [757.0, 226.0], [739.0, 24.0], [750.0, 22.0], [764.0, 24.0], [765.0, 24.0], [761.0, 24.0], [762.0, 199.0], [736.0, 21.0], [738.0, 24.0], [781.0, 23.0], [797.0, 23.0], [768.0, 28.0], [792.0, 23.0], [777.0, 181.0], [786.0, 25.0], [788.0, 22.0], [815.0, 23.0], [805.0, 23.0], [819.0, 24.0], [820.0, 189.0], [828.0, 22.0], [817.0, 23.0], [813.0, 24.0], [818.0, 24.0], [848.0, 23.0], [855.0, 22.0], [862.0, 24.0], [844.0, 23.0], [859.0, 23.0], [849.0, 26.0], [838.0, 24.0], [834.0, 25.0], [861.0, 24.0], [885.0, 175.0], [864.0, 23.0], [893.0, 22.0], [889.0, 25.0], [891.0, 253.0], [868.0, 21.0], [865.0, 20.0], [908.0, 215.0], [921.0, 24.0], [923.0, 315.0], [916.0, 23.0], [925.0, 24.0], [926.0, 23.0], [896.0, 34.5], [946.0, 165.0], [945.0, 25.0], [931.0, 23.0], [948.0, 292.0], [957.0, 25.0], [989.0, 23.0], [976.0, 22.0], [964.0, 24.0], [982.0, 24.0], [981.0, 23.0], [980.0, 22.0], [983.0, 22.0], [963.0, 25.0], [962.0, 33.0], [961.0, 24.0], [970.0, 88.0], [960.0, 125.5], [988.0, 25.0], [987.0, 23.0], [984.0, 23.0], [986.0, 21.0], [990.0, 24.0], [991.0, 25.0], [998.0, 24.0], [1003.0, 26.0], [1014.0, 23.0], [1015.0, 26.0], [1013.0, 25.0], [1002.0, 24.0], [1001.0, 23.0], [1000.0, 25.0], [1006.0, 23.0], [1005.0, 24.0], [1004.0, 23.0], [1007.0, 23.0], [992.0, 23.0], [993.0, 26.0], [994.0, 23.0], [995.0, 23.0], [996.0, 23.0], [997.0, 25.0], [1011.0, 24.0], [1010.0, 23.0], [1008.0, 24.0], [1009.0, 23.0], [999.0, 23.0], [1016.0, 27.0], [1017.0, 23.0], [1019.0, 23.0], [1020.0, 256.0], [1012.0, 25.0], [1055.0, 22.0], [1064.0, 37.0], [1066.0, 251.0], [1046.0, 232.0], [1031.0, 227.0], [1028.0, 22.0], [1047.0, 267.0], [1085.0, 264.0], [1143.0, 26.0], [1088.0, 24.0], [1145.0, 24.0], [1093.0, 26.0], [1121.0, 24.0], [1098.0, 24.0], [1091.0, 25.0], [1215.0, 23.0], [1198.0, 196.0], [1214.0, 30.0], [1193.0, 27.0], [1192.0, 27.0], [1187.0, 32.0], [1183.0, 279.0], [1153.0, 21.0], [1201.0, 242.0], [1227.0, 297.0], [1260.0, 284.0], [1224.0, 278.0], [1245.0, 27.0], [1276.0, 29.0], [1340.0, 36.0], [1288.0, 48.0], [1296.0, 254.0], [1329.0, 28.0], [1282.0, 31.0], [1312.0, 59.0], [1300.0, 261.0], [1374.0, 277.0], [1357.0, 30.0], [1352.0, 172.0], [1368.0, 33.0], [1398.0, 33.0], [1386.0, 223.0], [1365.0, 176.0], [1427.0, 152.0], [1443.0, 33.0], [1415.0, 36.0], [1450.0, 301.0], [1446.0, 83.5], [1421.0, 393.0], [1471.0, 397.0], [1470.0, 316.5], [1475.0, 60.0], [1494.0, 234.0], [1528.0, 100.0], [1512.0, 31.0], [1483.0, 292.0], [1491.0, 37.0], [1488.0, 221.0], [1527.0, 281.0], [1482.0, 312.0], [1504.0, 46.5], [1543.0, 299.0], [1546.0, 40.0], [1597.0, 35.0], [1596.0, 68.0], [1654.0, 86.0], [1610.0, 299.0], [1644.0, 211.0], [1602.0, 265.0], [1617.0, 188.0], [1640.0, 342.0], [1646.0, 429.0], [1628.0, 85.0], [1643.0, 304.0], [1715.0, 178.0], [1695.0, 264.0], [1670.0, 137.5], [1690.0, 158.0], [1727.0, 174.0], [1708.0, 228.5], [1721.0, 167.0], [1723.0, 435.0], [1683.0, 380.0], [1681.0, 105.0], [1712.0, 145.0], [1777.0, 447.0], [1775.0, 467.0], [1757.0, 155.0], [1770.0, 293.0], [1778.0, 204.5], [1762.0, 172.5], [1753.0, 382.0], [1767.0, 217.0], [1743.0, 140.0], [1730.0, 192.0], [1842.0, 353.0], [1853.0, 280.0], [1845.0, 362.0], [1847.0, 230.0], [1854.0, 373.0], [1809.0, 334.0], [1834.0, 410.5], [1825.0, 247.0], [1859.0, 346.0], [1889.0, 298.0], [1856.0, 236.0], [1858.0, 220.5], [1865.0, 234.0], [1864.0, 213.0], [1861.0, 191.0], [1886.0, 322.0], [1880.0, 334.0], [1879.0, 299.0], [1939.0, 354.0], [1951.0, 318.0], [1957.0, 325.0], [1952.0, 325.0], [1964.0, 397.0], [1946.0, 515.0], [1956.0, 376.0], [1989.0, 433.0], [2015.0, 508.0], [2007.0, 368.0], [2003.0, 502.0], [2006.0, 251.5], [1987.0, 428.0], [2025.0, 282.0], [2026.0, 563.0], [2031.0, 422.0], [2045.0, 384.0], [2014.0, 372.0], [1996.0, 387.5], [1993.0, 373.0], [1997.0, 343.0], [2032.0, 494.0], [2044.0, 263.0], [2166.0, 360.0], [2076.0, 416.0], [2108.0, 429.0], [2114.0, 504.0], [2138.0, 368.0], [2092.0, 417.0], [2146.0, 475.0], [2142.0, 469.5], [2200.0, 372.0], [2238.0, 731.0], [2250.0, 528.0], [2274.0, 563.0], [2196.0, 489.0], [2222.0, 558.5], [2220.0, 487.0], [2198.0, 565.0], [2288.0, 380.0], [2332.0, 462.0], [2384.0, 727.5], [2394.0, 693.0], [2360.0, 626.5], [2344.0, 486.0], [2336.0, 453.0], [2368.0, 469.0], [2306.0, 472.0], [2322.0, 903.5], [2324.0, 729.0], [2316.0, 638.5], [2448.0, 430.0], [2552.0, 461.0], [2550.0, 617.0], [2526.0, 522.0], [2524.0, 500.0], [2516.0, 229.0], [2514.0, 365.0], [2472.0, 233.0], [2488.0, 121.0], [2480.0, 463.0], [2490.0, 626.0], [2444.0, 568.5], [2440.0, 673.0], [2572.0, 459.0], [2606.0, 419.0], [2650.0, 622.0], [2568.0, 521.0], [2570.0, 540.0], [2642.0, 468.5], [2718.0, 578.0], [2726.0, 643.0], [2720.0, 594.0], [2768.0, 602.5], [2698.0, 504.0], [2714.0, 682.0], [2804.0, 452.5], [2788.0, 479.5], [2800.0, 566.5], [2772.0, 414.0], [2774.0, 595.0], [2938.0, 614.0], [2886.0, 568.0], [2900.0, 293.5], [2858.0, 498.5], [2826.0, 589.0], [2820.0, 569.0], [2844.0, 403.0], [2872.0, 587.0], [3006.0, 478.0], [3108.0, 618.5], [2103.0, 424.0], [2157.0, 381.0], [2087.0, 432.0], [2081.0, 459.0], [2135.0, 456.0], [2117.0, 461.0], [2153.0, 391.0], [2077.0, 90.0], [2055.0, 404.0], [2091.0, 232.0], [2095.0, 159.0], [2295.0, 558.0], [2177.0, 491.0], [2259.0, 772.0], [2297.0, 460.0], [2303.0, 563.0], [2221.0, 857.0], [2237.0, 557.0], [2193.0, 477.0], [2181.0, 470.0], [2199.0, 476.5], [2375.0, 609.0], [2425.0, 471.0], [2395.0, 420.0], [2305.0, 402.0], [2363.0, 582.0], [2341.0, 674.0], [2359.0, 368.0], [2407.0, 488.0], [2427.0, 165.0], [2539.0, 590.0], [2553.0, 365.0], [2451.0, 602.0], [2535.0, 660.0], [2435.0, 537.0], [2517.0, 442.0], [2555.0, 651.0], [2513.0, 410.0], [2507.0, 509.0], [2503.0, 615.0], [2487.0, 356.0], [2489.0, 612.0], [2675.0, 600.0], [2585.0, 636.0], [2581.0, 708.0], [2591.0, 678.0], [2685.0, 776.0], [2649.0, 480.0], [2679.0, 556.0], [2575.0, 545.0], [2677.0, 524.0], [2785.0, 404.0], [2793.0, 563.0], [2765.0, 558.0], [2767.0, 490.0], [2789.0, 430.0], [2731.0, 799.0], [2835.0, 571.0], [2827.0, 266.0], [2921.0, 412.0], [2915.0, 500.0], [2933.0, 546.0], [2859.0, 541.0], [2825.0, 514.0], [2865.0, 552.0], [2861.0, 574.0], [2977.0, 532.0], [2961.0, 476.0], [2993.0, 526.0], [3003.0, 623.0], [3039.0, 539.0], [3089.0, 487.0], [3085.0, 551.0], [3107.0, 584.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3108.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 259.1, "minX": 1.63351302E12, "maxY": 1037.05, "series": [{"data": [[1.6335132E12, 1037.05], [1.63351356E12, 992.8], [1.63351326E12, 997.4666666666667], [1.63351392E12, 835.8666666666667], [1.63351344E12, 968.9166666666666], [1.63351374E12, 1033.8666666666666], [1.63351314E12, 959.8], [1.6335135E12, 1025.0833333333333], [1.63351368E12, 959.1666666666666], [1.63351338E12, 1000.7], [1.6335138E12, 995.7333333333333], [1.63351308E12, 995.0333333333333], [1.63351362E12, 992.7333333333333], [1.63351332E12, 994.2166666666667], [1.63351386E12, 980.45], [1.63351302E12, 259.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63351392E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 256.9166666666667, "minX": 1.63351302E12, "maxY": 1036.3666666666666, "series": [{"data": [[1.6335132E12, 1036.3666666666666], [1.63351356E12, 1006.4666666666667], [1.63351326E12, 998.15], [1.63351392E12, 835.8666666666667], [1.63351344E12, 974.15], [1.63351374E12, 1014.85], [1.63351314E12, 959.9166666666666], [1.6335135E12, 1010.6333333333333], [1.63351368E12, 959.9666666666667], [1.63351338E12, 995.4666666666667], [1.6335138E12, 1002.4166666666666], [1.63351308E12, 997.1], [1.63351362E12, 992.7166666666667], [1.63351332E12, 994.2166666666667], [1.63351386E12, 992.7833333333333], [1.63351302E12, 256.9166666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63351392E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 256.9166666666667, "minX": 1.63351302E12, "maxY": 1036.3666666666666, "series": [{"data": [[1.6335132E12, 1036.3666666666666], [1.63351356E12, 1006.4666666666667], [1.63351326E12, 998.15], [1.63351392E12, 835.8666666666667], [1.63351344E12, 974.15], [1.63351374E12, 1014.85], [1.63351314E12, 959.9166666666666], [1.6335135E12, 1010.6333333333333], [1.63351368E12, 959.9666666666667], [1.63351338E12, 995.4666666666667], [1.6335138E12, 1002.4166666666666], [1.63351308E12, 997.1], [1.63351362E12, 992.7166666666667], [1.63351332E12, 994.2166666666667], [1.63351386E12, 992.7833333333333], [1.63351302E12, 256.9166666666667]], "isOverall": false, "label": "AuthzUser-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63351392E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 256.9166666666667, "minX": 1.63351302E12, "maxY": 1036.3666666666666, "series": [{"data": [[1.6335132E12, 1036.3666666666666], [1.63351356E12, 1006.4666666666667], [1.63351326E12, 998.15], [1.63351392E12, 835.8666666666667], [1.63351344E12, 974.15], [1.63351374E12, 1014.85], [1.63351314E12, 959.9166666666666], [1.6335135E12, 1010.6333333333333], [1.63351368E12, 959.9666666666667], [1.63351338E12, 995.4666666666667], [1.6335138E12, 1002.4166666666666], [1.63351308E12, 997.1], [1.63351362E12, 992.7166666666667], [1.63351332E12, 994.2166666666667], [1.63351386E12, 992.7833333333333], [1.63351302E12, 256.9166666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63351392E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

